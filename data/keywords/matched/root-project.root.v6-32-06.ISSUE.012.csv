id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/2867:10672,energy efficiency,Load,Loading,10672, ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10812,energy efficiency,Load,Loading,10812,.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodule,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10945,energy efficiency,Load,Loading,10945,0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11084,energy efficiency,Load,Loading,11084, 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11219,energy efficiency,Load,Loading,11219,.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11360,energy efficiency,Load,Loading,11360,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11494,energy efficiency,Load,Loading,11494,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11628,energy efficiency,Load,Loading,11628,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11762,energy efficiency,Load,Loading,11762,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11901,energy efficiency,Load,Loading,11901,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:12039,energy efficiency,Load,Loading,12039,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:12179,energy efficiency,Load,Loading,12179,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4669,interoperability,XML,XMLIO,4669,ime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11826,interoperability,XML,XMLParser,11826,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:112,modifiability,variab,variable,112,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:812,modifiability,modul,modules,812,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:182,performance,time,time,182,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:347,performance,Time,Time,347,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:367,performance,Cpu,Cpu,367,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:371,performance,Time,Time,371,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:510,performance,time,time,510,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:610,performance,Execution Time,Execution Time,610,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:670,performance,Time,Time,670,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:687,performance,Time,Time,687,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:718,performance,Time,Time,718,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:885,performance,Load,Loading,885,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1020,performance,Load,Loading,1020,ble timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1153,performance,Load,Loading,1153,formation about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1296,performance,Load,Loading,1296,ocessing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1432,performance,Load,Loading,1432,-----------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1565,performance,Load,Loading,1565,------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1708,performance,Load,Loading,1708,-Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmod,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1841,performance,Load,Loading,1841, 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:1980,performance,Load,Loading,1980,9.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2121,performance,Load,Loading,2121,0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2258,performance,Load,Loading,2258,0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2392,performance,Load,Loading,2392,4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/ru,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2525,performance,Load,Loading,2525,0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2661,performance,Load,Loading,2661,0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2799,performance,Load,Loading,2799,( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:2938,performance,Load,Loading,2938,( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm. 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspac,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:3079,performance,Load,Loading,3079,( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm. 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:3217,performance,Load,Loading,3217, 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm. 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:3357,performance,Load,Loading,3357, 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm. 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:3497,performance,Load,Loading,3497, ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm. 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:3631,performance,Load,Loading,3631,29 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm. 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspac,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:3765,performance,Load,Loading,3765,0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm. 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:3912,performance,Load,Loading,3912, 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm. 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4049,performance,Load,Loading,4049,24 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm. 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/ru,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4190,performance,Load,Loading,4190,( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtim,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4325,performance,Load,Loading,4325,0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4465,performance,Load,Loading,4465,0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4605,performance,Load,Loading,4605, 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4740,performance,Load,Loading,4740,0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:4878,performance,Load,Loading,4878,0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm. 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5014,performance,Load,Loading,5014, 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm. 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5151,performance,Load,Loading,5151,.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5292,performance,Load,Loading,5292,.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5428,performance,Load,Loading,5428,%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm. 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5562,performance,Load,Loading,5562, ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm. 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5695,performance,Load,Loading,5695,00 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5836,performance,Load,Loading,5836,( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/run,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:5973,performance,Load,Loading,5973, 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm. 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6110,performance,Load,Loading,6110, 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagra,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6248,performance,Load,Loading,6248,0 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm. 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /hom,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6386,performance,Load,Loading,6386,( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6522,performance,Load,Loading,6522,0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vag,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6665,performance,Load,Loading,6665,06 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6800,performance,Load,Loading,6800,) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6959,performance,Load,Loading,6959,7 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:7095,performance,Load,Loading,7095,07 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:7240,performance,Load,Loading,7240,0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:7376,performance,Load,Loading,7376,0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmod,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:7509,performance,Load,Loading,7509, ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtim,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:7649,performance,Load,Loading,7649,006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:7783,performance,Load,Loading,7783,0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:7918,performance,Load,Loading,7918, 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/worksp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:8058,performance,Load,Loading,8058,%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:8192,performance,Load,Loading,8192,.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspac,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:8329,performance,Load,Loading,8329,0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:8470,performance,Load,Loading,8470,.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/work,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:8604,performance,Load,Loading,8604,00 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/wor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:8737,performance,Load,Loading,8737,000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/work,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:8894,performance,Load,Loading,8894,.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm. 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:9030,performance,Load,Loading,9030, ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm. 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:9166,performance,Load,Loading,9166, 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:9299,performance,Load,Loading,9299,00 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm. 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:9448,performance,Load,Loading,9448,%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmod,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:9583,performance,Load,Loading,9583,) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:9715,performance,Load,Loading,9715,%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:9851,performance,Load,Loading,9851, ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtim,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10000,performance,Load,Loading,10000,00 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10134,performance,Load,Loading,10134,0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodule,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10267,performance,Load,Loading,10267,0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10401,performance,Load,Loading,10401,0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm. 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10535,performance,Load,Loading,10535,.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10672,performance,Load,Loading,10672, ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10812,performance,Load,Loading,10812,.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodule,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:10945,performance,Load,Loading,10945,0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11084,performance,Load,Loading,11084, 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11219,performance,Load,Loading,11219,.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11360,performance,Load,Loading,11360,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11494,performance,Load,Loading,11494,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11628,performance,Load,Loading,11628,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11762,performance,Load,Loading,11762,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:11901,performance,Load,Loading,11901,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:12039,performance,Load,Loading,12039,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:12179,performance,Load,Loading,12179,/lib/Gpad.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm. 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:812,safety,modul,modules,812,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:6586,security,Session,SessionViewer,6586,/root/runtime_cxxmodules_obj/lib/MLP.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm. 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm. 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm. 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm. 0.00,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:665,usability,User,User,665,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2867:696,usability,User,User,696,[cxxmodules] [cling] Enable timing counters in clang's frontend.; This feature can be enabled by setting an env variable ROOT_CLING_TIMING. It prints some information about how much time different parts of clang. take. Example use:. ```. ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C... hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds. (TFile *) 0x37430c0. ===-------------------------------------------------------------------------===. Clang front-end time report. ===-------------------------------------------------------------------------===. Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---. 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules. 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm. 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm. 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm. 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm. 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm. 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm. 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm. 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm. 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2867
https://github.com/root-project/root/pull/2868:40,energy efficiency,reduc,reduce,40,[DF] Improve RDisplay documentation and reduce size of its public interface;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2868
https://github.com/root-project/root/pull/2868:59,integrability,pub,public,59,[DF] Improve RDisplay documentation and reduce size of its public interface;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2868
https://github.com/root-project/root/pull/2868:66,integrability,interfac,interface,66,[DF] Improve RDisplay documentation and reduce size of its public interface;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2868
https://github.com/root-project/root/pull/2868:66,interoperability,interfac,interface,66,[DF] Improve RDisplay documentation and reduce size of its public interface;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2868
https://github.com/root-project/root/pull/2868:66,modifiability,interfac,interface,66,[DF] Improve RDisplay documentation and reduce size of its public interface;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2868
https://github.com/root-project/root/pull/2868:22,usability,document,documentation,22,[DF] Improve RDisplay documentation and reduce size of its public interface;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2868
https://github.com/root-project/root/pull/2869:16,availability,error,error,16,Fix compilation error on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2869
https://github.com/root-project/root/pull/2869:16,performance,error,error,16,Fix compilation error on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2869
https://github.com/root-project/root/pull/2869:16,safety,error,error,16,Fix compilation error on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2869
https://github.com/root-project/root/pull/2869:16,usability,error,error,16,Fix compilation error on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2869
https://github.com/root-project/root/pull/2871:209,safety,detect,detected,209,webgui: correctly check if browser executable was found; For Chrome and Firefox browsers full executable path should exists. It is required to correctly start it with the fork. . If browser executable was not detected - no need to try it,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2871
https://github.com/root-project/root/pull/2871:209,security,detect,detected,209,webgui: correctly check if browser executable was found; For Chrome and Firefox browsers full executable path should exists. It is required to correctly start it with the fork. . If browser executable was not detected - no need to try it,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2871
https://github.com/root-project/root/pull/2872:43,usability,custom,custom,43,[DF][ROOT-9754] Allow definition of jitted custom columns with same name ; This fixes ROOT-9754.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2872
https://github.com/root-project/root/pull/2873:86,deployability,build,build,86,"Eve7: try avoid conflicts with normal GL/glu.h include; Probably, solves some nightly build problems with clang 6.2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2873:16,interoperability,conflict,conflicts,16,"Eve7: try avoid conflicts with normal GL/glu.h include; Probably, solves some nightly build problems with clang 6.2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2873:10,safety,avoid,avoid,10,"Eve7: try avoid conflicts with normal GL/glu.h include; Probably, solves some nightly build problems with clang 6.2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2873
https://github.com/root-project/root/pull/2875:57,deployability,infrastructur,infrastructure,57,THIS IS TEST PR.; This PR is here to test CmsBot testing infrastructure. DO NOT MERGE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2875
https://github.com/root-project/root/pull/2875:8,safety,TEST,TEST,8,THIS IS TEST PR.; This PR is here to test CmsBot testing infrastructure. DO NOT MERGE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2875
https://github.com/root-project/root/pull/2875:37,safety,test,test,37,THIS IS TEST PR.; This PR is here to test CmsBot testing infrastructure. DO NOT MERGE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2875
https://github.com/root-project/root/pull/2875:49,safety,test,testing,49,THIS IS TEST PR.; This PR is here to test CmsBot testing infrastructure. DO NOT MERGE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2875
https://github.com/root-project/root/pull/2875:8,testability,TEST,TEST,8,THIS IS TEST PR.; This PR is here to test CmsBot testing infrastructure. DO NOT MERGE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2875
https://github.com/root-project/root/pull/2875:37,testability,test,test,37,THIS IS TEST PR.; This PR is here to test CmsBot testing infrastructure. DO NOT MERGE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2875
https://github.com/root-project/root/pull/2875:49,testability,test,testing,49,THIS IS TEST PR.; This PR is here to test CmsBot testing infrastructure. DO NOT MERGE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2875
https://github.com/root-project/root/pull/2876:18,deployability,Upgrad,Upgrade,18,[Core][ROOT-9756] Upgrade the version of TBB used as built in to 2019_U1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2876
https://github.com/root-project/root/pull/2876:30,deployability,version,version,30,[Core][ROOT-9756] Upgrade the version of TBB used as built in to 2019_U1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2876
https://github.com/root-project/root/pull/2876:1,energy efficiency,Core,Core,1,[Core][ROOT-9756] Upgrade the version of TBB used as built in to 2019_U1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2876
https://github.com/root-project/root/pull/2876:30,integrability,version,version,30,[Core][ROOT-9756] Upgrade the version of TBB used as built in to 2019_U1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2876
https://github.com/root-project/root/pull/2876:18,modifiability,Upgrad,Upgrade,18,[Core][ROOT-9756] Upgrade the version of TBB used as built in to 2019_U1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2876
https://github.com/root-project/root/pull/2876:30,modifiability,version,version,30,[Core][ROOT-9756] Upgrade the version of TBB used as built in to 2019_U1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2876
https://github.com/root-project/root/pull/2877:108,usability,clear,clearing,108,"Fix gcc8 warnings in GUI; Fix this kind of warnings with gcc8:. Warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct GCValues_t'; use assignment or value-initialization instead",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2877
https://github.com/root-project/root/pull/2878:27,energy efficiency,model,models,27,"WebEve - fix problem in 3D models creation, small cleanup;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2878
https://github.com/root-project/root/pull/2878:27,security,model,models,27,"WebEve - fix problem in 3D models creation, small cleanup;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2878
https://github.com/root-project/root/pull/2879:50,availability,avail,available,50,"[TreeReader] [ROOT-9743] Always set dictionary if available in CreateProxy; ...and always set leaf information too, if needed. This fixes ROOT-9743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2879
https://github.com/root-project/root/pull/2879:50,reliability,availab,available,50,"[TreeReader] [ROOT-9743] Always set dictionary if available in CreateProxy; ...and always set leaf information too, if needed. This fixes ROOT-9743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2879
https://github.com/root-project/root/pull/2879:50,safety,avail,available,50,"[TreeReader] [ROOT-9743] Always set dictionary if available in CreateProxy; ...and always set leaf information too, if needed. This fixes ROOT-9743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2879
https://github.com/root-project/root/pull/2879:50,security,availab,available,50,"[TreeReader] [ROOT-9743] Always set dictionary if available in CreateProxy; ...and always set leaf information too, if needed. This fixes ROOT-9743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2879
https://github.com/root-project/root/pull/2881:55,deployability,patch,patch,55,[cxxmodules] Enumerate all headers in GenVector.; This patch reduces the duplicate content in the GenVector.pcm thus reducing. the amount of decl merging.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2881
https://github.com/root-project/root/pull/2881:61,energy efficiency,reduc,reduces,61,[cxxmodules] Enumerate all headers in GenVector.; This patch reduces the duplicate content in the GenVector.pcm thus reducing. the amount of decl merging.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2881
https://github.com/root-project/root/pull/2881:117,energy efficiency,reduc,reducing,117,[cxxmodules] Enumerate all headers in GenVector.; This patch reduces the duplicate content in the GenVector.pcm thus reducing. the amount of decl merging.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2881
https://github.com/root-project/root/pull/2881:83,performance,content,content,83,[cxxmodules] Enumerate all headers in GenVector.; This patch reduces the duplicate content in the GenVector.pcm thus reducing. the amount of decl merging.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2881
https://github.com/root-project/root/pull/2881:55,safety,patch,patch,55,[cxxmodules] Enumerate all headers in GenVector.; This patch reduces the duplicate content in the GenVector.pcm thus reducing. the amount of decl merging.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2881
https://github.com/root-project/root/pull/2881:55,security,patch,patch,55,[cxxmodules] Enumerate all headers in GenVector.; This patch reduces the duplicate content in the GenVector.pcm thus reducing. the amount of decl merging.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2881
https://github.com/root-project/root/pull/2882:13,availability,error,error,13,[rint] spell error fix in comments;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2882
https://github.com/root-project/root/pull/2882:13,performance,error,error,13,[rint] spell error fix in comments;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2882
https://github.com/root-project/root/pull/2882:13,safety,error,error,13,[rint] spell error fix in comments;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2882
https://github.com/root-project/root/pull/2882:13,usability,error,error,13,[rint] spell error fix in comments;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2882
https://github.com/root-project/root/pull/2883:34,deployability,modul,modulemap,34,[cxxmodules] Add allocator in the modulemap.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2883
https://github.com/root-project/root/pull/2883:17,energy efficiency,alloc,allocator,17,[cxxmodules] Add allocator in the modulemap.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2883
https://github.com/root-project/root/pull/2883:34,modifiability,modul,modulemap,34,[cxxmodules] Add allocator in the modulemap.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2883
https://github.com/root-project/root/pull/2883:34,safety,modul,modulemap,34,[cxxmodules] Add allocator in the modulemap.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2883
https://github.com/root-project/root/pull/2884:95,interoperability,standard,standard,95,WebGui - enable eve7 with Qt5 and CEF ; These are local displays and have tiny difference with standard HTTP communication. Also Openui require very strict URL formatting. Also qt5 web display performance increased. Now one can use local display for eve7 and all other custom applications with complex HTML layout.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2884
https://github.com/root-project/root/pull/2884:160,interoperability,format,formatting,160,WebGui - enable eve7 with Qt5 and CEF ; These are local displays and have tiny difference with standard HTTP communication. Also Openui require very strict URL formatting. Also qt5 web display performance increased. Now one can use local display for eve7 and all other custom applications with complex HTML layout.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2884
https://github.com/root-project/root/pull/2884:193,performance,perform,performance,193,WebGui - enable eve7 with Qt5 and CEF ; These are local displays and have tiny difference with standard HTTP communication. Also Openui require very strict URL formatting. Also qt5 web display performance increased. Now one can use local display for eve7 and all other custom applications with complex HTML layout.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2884
https://github.com/root-project/root/pull/2884:294,safety,compl,complex,294,WebGui - enable eve7 with Qt5 and CEF ; These are local displays and have tiny difference with standard HTTP communication. Also Openui require very strict URL formatting. Also qt5 web display performance increased. Now one can use local display for eve7 and all other custom applications with complex HTML layout.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2884
https://github.com/root-project/root/pull/2884:294,security,compl,complex,294,WebGui - enable eve7 with Qt5 and CEF ; These are local displays and have tiny difference with standard HTTP communication. Also Openui require very strict URL formatting. Also qt5 web display performance increased. Now one can use local display for eve7 and all other custom applications with complex HTML layout.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2884
https://github.com/root-project/root/pull/2884:193,usability,perform,performance,193,WebGui - enable eve7 with Qt5 and CEF ; These are local displays and have tiny difference with standard HTTP communication. Also Openui require very strict URL formatting. Also qt5 web display performance increased. Now one can use local display for eve7 and all other custom applications with complex HTML layout.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2884
https://github.com/root-project/root/pull/2884:269,usability,custom,custom,269,WebGui - enable eve7 with Qt5 and CEF ; These are local displays and have tiny difference with standard HTTP communication. Also Openui require very strict URL formatting. Also qt5 web display performance increased. Now one can use local display for eve7 and all other custom applications with complex HTML layout.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2884
https://github.com/root-project/root/pull/2885:68,availability,failur,failures,68,[Tutorial] Veto df103 if xrootd not enabled; Fixes some of the test failures of the nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2885
https://github.com/root-project/root/pull/2885:68,deployability,fail,failures,68,[Tutorial] Veto df103 if xrootd not enabled; Fixes some of the test failures of the nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2885
https://github.com/root-project/root/pull/2885:68,performance,failur,failures,68,[Tutorial] Veto df103 if xrootd not enabled; Fixes some of the test failures of the nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2885
https://github.com/root-project/root/pull/2885:68,reliability,fail,failures,68,[Tutorial] Veto df103 if xrootd not enabled; Fixes some of the test failures of the nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2885
https://github.com/root-project/root/pull/2885:63,safety,test,test,63,[Tutorial] Veto df103 if xrootd not enabled; Fixes some of the test failures of the nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2885
https://github.com/root-project/root/pull/2885:63,testability,test,test,63,[Tutorial] Veto df103 if xrootd not enabled; Fixes some of the test failures of the nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2885
https://github.com/root-project/root/pull/2886:6,deployability,Updat,Update,6,[DOC] Update release notes for RDF+TTreeProcessorMT; Should we mention @stwunsch 's nanoaod tutorials? Are we missing anything else?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2886
https://github.com/root-project/root/pull/2886:13,deployability,releas,release,13,[DOC] Update release notes for RDF+TTreeProcessorMT; Should we mention @stwunsch 's nanoaod tutorials? Are we missing anything else?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2886
https://github.com/root-project/root/pull/2886:6,safety,Updat,Update,6,[DOC] Update release notes for RDF+TTreeProcessorMT; Should we mention @stwunsch 's nanoaod tutorials? Are we missing anything else?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2886
https://github.com/root-project/root/pull/2886:6,security,Updat,Update,6,[DOC] Update release notes for RDF+TTreeProcessorMT; Should we mention @stwunsch 's nanoaod tutorials? Are we missing anything else?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2886
https://github.com/root-project/root/pull/2889:115,deployability,patch,patches,115,[ZLIB ] Back 2 zlib as a default compression algorithm; It is a synchronization of revert commits with branch 6.14 patches. Next PR will generalize a switch between compression algorithms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:64,performance,synch,synchronization,64,[ZLIB ] Back 2 zlib as a default compression algorithm; It is a synchronization of revert commits with branch 6.14 patches. Next PR will generalize a switch between compression algorithms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:115,safety,patch,patches,115,[ZLIB ] Back 2 zlib as a default compression algorithm; It is a synchronization of revert commits with branch 6.14 patches. Next PR will generalize a switch between compression algorithms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2889:115,security,patch,patches,115,[ZLIB ] Back 2 zlib as a default compression algorithm; It is a synchronization of revert commits with branch 6.14 patches. Next PR will generalize a switch between compression algorithms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2889
https://github.com/root-project/root/pull/2890:29,deployability,version,version,29,Mac1014warnings v6 14; v6.14 version of #2770,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2890
https://github.com/root-project/root/pull/2890:29,integrability,version,version,29,Mac1014warnings v6 14; v6.14 version of #2770,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2890
https://github.com/root-project/root/pull/2890:29,modifiability,version,version,29,Mac1014warnings v6 14; v6.14 version of #2770,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2890
https://github.com/root-project/root/pull/2892:155,availability,failur,failure,155,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:52,deployability,modul,modules,52,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:155,deployability,fail,failure,155,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:228,deployability,modul,modules,228,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:52,modifiability,modul,modules,52,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:228,modifiability,modul,modules,228,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:126,performance,time,time,126,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:155,performance,failur,failure,155,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:155,reliability,fail,failure,155,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:52,safety,modul,modules,52,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:166,safety,test,tests,166,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:228,safety,modul,modules,228,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:247,safety,Test,Testing,247,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:166,testability,test,tests,166,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:247,testability,Test,Testing,247,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2892:187,usability,custom,custom,187,"[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom. dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2892
https://github.com/root-project/root/pull/2893:38,availability,failur,failure,38,v6 14 Fix runtime_modules compilation failure; VecOps was renamed to ROOTVecOps at some point. The failure can be seen in https://github.com/root-project/root/pull/2890#issuecomment-434707107 for example,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2893
https://github.com/root-project/root/pull/2893:99,availability,failur,failure,99,v6 14 Fix runtime_modules compilation failure; VecOps was renamed to ROOTVecOps at some point. The failure can be seen in https://github.com/root-project/root/pull/2890#issuecomment-434707107 for example,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2893
https://github.com/root-project/root/pull/2893:38,deployability,fail,failure,38,v6 14 Fix runtime_modules compilation failure; VecOps was renamed to ROOTVecOps at some point. The failure can be seen in https://github.com/root-project/root/pull/2890#issuecomment-434707107 for example,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2893
https://github.com/root-project/root/pull/2893:99,deployability,fail,failure,99,v6 14 Fix runtime_modules compilation failure; VecOps was renamed to ROOTVecOps at some point. The failure can be seen in https://github.com/root-project/root/pull/2890#issuecomment-434707107 for example,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2893
https://github.com/root-project/root/pull/2893:38,performance,failur,failure,38,v6 14 Fix runtime_modules compilation failure; VecOps was renamed to ROOTVecOps at some point. The failure can be seen in https://github.com/root-project/root/pull/2890#issuecomment-434707107 for example,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2893
https://github.com/root-project/root/pull/2893:99,performance,failur,failure,99,v6 14 Fix runtime_modules compilation failure; VecOps was renamed to ROOTVecOps at some point. The failure can be seen in https://github.com/root-project/root/pull/2890#issuecomment-434707107 for example,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2893
https://github.com/root-project/root/pull/2893:38,reliability,fail,failure,38,v6 14 Fix runtime_modules compilation failure; VecOps was renamed to ROOTVecOps at some point. The failure can be seen in https://github.com/root-project/root/pull/2890#issuecomment-434707107 for example,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2893
https://github.com/root-project/root/pull/2893:99,reliability,fail,failure,99,v6 14 Fix runtime_modules compilation failure; VecOps was renamed to ROOTVecOps at some point. The failure can be seen in https://github.com/root-project/root/pull/2890#issuecomment-434707107 for example,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2893
https://github.com/root-project/root/pull/2894:801,energy efficiency,current,current,801,"[Exp PyROOT] Add pythonization for TTree::Branch; This PR modifies the behaviour of `TTree::Branch` in Python so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:. ```python. v = ROOT.std.vector('int')(). t.SetBranchAddress(""my_vector_branch"", v). ```. Tests for the aforementioned pythonization are also included in this PR. There is one test missing, which covers the case when the new branch to be created is a field of a struct, for example:. ```python. ROOT.gInterpreter.Declare("""""". struct MyStruct {. int myint1;. int myint2;. };. """"""). ms = ROOT.MyStruct(). ms.myint1 = some_value. t.Branch('myint1b', addressof(ms, 'myint1'), 'myint1balias/I'). ```. In the current PyROOT, in order to get the address of the struct field, one would use the `AddressOf` function. The equivalent in modern Cppyy seems to be `addressof`, but it has a bug when using it as specified above. [A PR](https://bitbucket.org/wlav/cpycppyy/pull-requests/10/addressof-fix-retrieval-of-address-of-an) has been submitted to Cppyy to fix the issue. Moreover, this PR includes an additional fix and test for `TTree::SetBranchAddress`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2894
https://github.com/root-project/root/pull/2894:1124,integrability,sub,submitted,1124,"[Exp PyROOT] Add pythonization for TTree::Branch; This PR modifies the behaviour of `TTree::Branch` in Python so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:. ```python. v = ROOT.std.vector('int')(). t.SetBranchAddress(""my_vector_branch"", v). ```. Tests for the aforementioned pythonization are also included in this PR. There is one test missing, which covers the case when the new branch to be created is a field of a struct, for example:. ```python. ROOT.gInterpreter.Declare("""""". struct MyStruct {. int myint1;. int myint2;. };. """"""). ms = ROOT.MyStruct(). ms.myint1 = some_value. t.Branch('myint1b', addressof(ms, 'myint1'), 'myint1balias/I'). ```. In the current PyROOT, in order to get the address of the struct field, one would use the `AddressOf` function. The equivalent in modern Cppyy seems to be `addressof`, but it has a bug when using it as specified above. [A PR](https://bitbucket.org/wlav/cpycppyy/pull-requests/10/addressof-fix-retrieval-of-address-of-an) has been submitted to Cppyy to fix the issue. Moreover, this PR includes an additional fix and test for `TTree::SetBranchAddress`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2894
https://github.com/root-project/root/pull/2894:118,interoperability,prox,proxy,118,"[Exp PyROOT] Add pythonization for TTree::Branch; This PR modifies the behaviour of `TTree::Branch` in Python so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:. ```python. v = ROOT.std.vector('int')(). t.SetBranchAddress(""my_vector_branch"", v). ```. Tests for the aforementioned pythonization are also included in this PR. There is one test missing, which covers the case when the new branch to be created is a field of a struct, for example:. ```python. ROOT.gInterpreter.Declare("""""". struct MyStruct {. int myint1;. int myint2;. };. """"""). ms = ROOT.MyStruct(). ms.myint1 = some_value. t.Branch('myint1b', addressof(ms, 'myint1'), 'myint1balias/I'). ```. In the current PyROOT, in order to get the address of the struct field, one would use the `AddressOf` function. The equivalent in modern Cppyy seems to be `addressof`, but it has a bug when using it as specified above. [A PR](https://bitbucket.org/wlav/cpycppyy/pull-requests/10/addressof-fix-retrieval-of-address-of-an) has been submitted to Cppyy to fix the issue. Moreover, this PR includes an additional fix and test for `TTree::SetBranchAddress`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2894
https://github.com/root-project/root/pull/2894:996,interoperability,specif,specified,996,"[Exp PyROOT] Add pythonization for TTree::Branch; This PR modifies the behaviour of `TTree::Branch` in Python so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:. ```python. v = ROOT.std.vector('int')(). t.SetBranchAddress(""my_vector_branch"", v). ```. Tests for the aforementioned pythonization are also included in this PR. There is one test missing, which covers the case when the new branch to be created is a field of a struct, for example:. ```python. ROOT.gInterpreter.Declare("""""". struct MyStruct {. int myint1;. int myint2;. };. """"""). ms = ROOT.MyStruct(). ms.myint1 = some_value. t.Branch('myint1b', addressof(ms, 'myint1'), 'myint1balias/I'). ```. In the current PyROOT, in order to get the address of the struct field, one would use the `AddressOf` function. The equivalent in modern Cppyy seems to be `addressof`, but it has a bug when using it as specified above. [A PR](https://bitbucket.org/wlav/cpycppyy/pull-requests/10/addressof-fix-retrieval-of-address-of-an) has been submitted to Cppyy to fix the issue. Moreover, this PR includes an additional fix and test for `TTree::SetBranchAddress`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2894
https://github.com/root-project/root/pull/2894:388,safety,Test,Tests,388,"[Exp PyROOT] Add pythonization for TTree::Branch; This PR modifies the behaviour of `TTree::Branch` in Python so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:. ```python. v = ROOT.std.vector('int')(). t.SetBranchAddress(""my_vector_branch"", v). ```. Tests for the aforementioned pythonization are also included in this PR. There is one test missing, which covers the case when the new branch to be created is a field of a struct, for example:. ```python. ROOT.gInterpreter.Declare("""""". struct MyStruct {. int myint1;. int myint2;. };. """"""). ms = ROOT.MyStruct(). ms.myint1 = some_value. t.Branch('myint1b', addressof(ms, 'myint1'), 'myint1balias/I'). ```. In the current PyROOT, in order to get the address of the struct field, one would use the `AddressOf` function. The equivalent in modern Cppyy seems to be `addressof`, but it has a bug when using it as specified above. [A PR](https://bitbucket.org/wlav/cpycppyy/pull-requests/10/addressof-fix-retrieval-of-address-of-an) has been submitted to Cppyy to fix the issue. Moreover, this PR includes an additional fix and test for `TTree::SetBranchAddress`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2894
https://github.com/root-project/root/pull/2894:474,safety,test,test,474,"[Exp PyROOT] Add pythonization for TTree::Branch; This PR modifies the behaviour of `TTree::Branch` in Python so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:. ```python. v = ROOT.std.vector('int')(). t.SetBranchAddress(""my_vector_branch"", v). ```. Tests for the aforementioned pythonization are also included in this PR. There is one test missing, which covers the case when the new branch to be created is a field of a struct, for example:. ```python. ROOT.gInterpreter.Declare("""""". struct MyStruct {. int myint1;. int myint2;. };. """"""). ms = ROOT.MyStruct(). ms.myint1 = some_value. t.Branch('myint1b', addressof(ms, 'myint1'), 'myint1balias/I'). ```. In the current PyROOT, in order to get the address of the struct field, one would use the `AddressOf` function. The equivalent in modern Cppyy seems to be `addressof`, but it has a bug when using it as specified above. [A PR](https://bitbucket.org/wlav/cpycppyy/pull-requests/10/addressof-fix-retrieval-of-address-of-an) has been submitted to Cppyy to fix the issue. Moreover, this PR includes an additional fix and test for `TTree::SetBranchAddress`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2894
https://github.com/root-project/root/pull/2894:1210,safety,test,test,1210,"[Exp PyROOT] Add pythonization for TTree::Branch; This PR modifies the behaviour of `TTree::Branch` in Python so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:. ```python. v = ROOT.std.vector('int')(). t.SetBranchAddress(""my_vector_branch"", v). ```. Tests for the aforementioned pythonization are also included in this PR. There is one test missing, which covers the case when the new branch to be created is a field of a struct, for example:. ```python. ROOT.gInterpreter.Declare("""""". struct MyStruct {. int myint1;. int myint2;. };. """"""). ms = ROOT.MyStruct(). ms.myint1 = some_value. t.Branch('myint1b', addressof(ms, 'myint1'), 'myint1balias/I'). ```. In the current PyROOT, in order to get the address of the struct field, one would use the `AddressOf` function. The equivalent in modern Cppyy seems to be `addressof`, but it has a bug when using it as specified above. [A PR](https://bitbucket.org/wlav/cpycppyy/pull-requests/10/addressof-fix-retrieval-of-address-of-an) has been submitted to Cppyy to fix the issue. Moreover, this PR includes an additional fix and test for `TTree::SetBranchAddress`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2894
https://github.com/root-project/root/pull/2894:58,security,modif,modifies,58,"[Exp PyROOT] Add pythonization for TTree::Branch; This PR modifies the behaviour of `TTree::Branch` in Python so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:. ```python. v = ROOT.std.vector('int')(). t.SetBranchAddress(""my_vector_branch"", v). ```. Tests for the aforementioned pythonization are also included in this PR. There is one test missing, which covers the case when the new branch to be created is a field of a struct, for example:. ```python. ROOT.gInterpreter.Declare("""""". struct MyStruct {. int myint1;. int myint2;. };. """"""). ms = ROOT.MyStruct(). ms.myint1 = some_value. t.Branch('myint1b', addressof(ms, 'myint1'), 'myint1balias/I'). ```. In the current PyROOT, in order to get the address of the struct field, one would use the `AddressOf` function. The equivalent in modern Cppyy seems to be `addressof`, but it has a bug when using it as specified above. [A PR](https://bitbucket.org/wlav/cpycppyy/pull-requests/10/addressof-fix-retrieval-of-address-of-an) has been submitted to Cppyy to fix the issue. Moreover, this PR includes an additional fix and test for `TTree::SetBranchAddress`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2894
https://github.com/root-project/root/pull/2894:388,testability,Test,Tests,388,"[Exp PyROOT] Add pythonization for TTree::Branch; This PR modifies the behaviour of `TTree::Branch` in Python so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:. ```python. v = ROOT.std.vector('int')(). t.SetBranchAddress(""my_vector_branch"", v). ```. Tests for the aforementioned pythonization are also included in this PR. There is one test missing, which covers the case when the new branch to be created is a field of a struct, for example:. ```python. ROOT.gInterpreter.Declare("""""". struct MyStruct {. int myint1;. int myint2;. };. """"""). ms = ROOT.MyStruct(). ms.myint1 = some_value. t.Branch('myint1b', addressof(ms, 'myint1'), 'myint1balias/I'). ```. In the current PyROOT, in order to get the address of the struct field, one would use the `AddressOf` function. The equivalent in modern Cppyy seems to be `addressof`, but it has a bug when using it as specified above. [A PR](https://bitbucket.org/wlav/cpycppyy/pull-requests/10/addressof-fix-retrieval-of-address-of-an) has been submitted to Cppyy to fix the issue. Moreover, this PR includes an additional fix and test for `TTree::SetBranchAddress`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2894
https://github.com/root-project/root/pull/2894:474,testability,test,test,474,"[Exp PyROOT] Add pythonization for TTree::Branch; This PR modifies the behaviour of `TTree::Branch` in Python so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:. ```python. v = ROOT.std.vector('int')(). t.SetBranchAddress(""my_vector_branch"", v). ```. Tests for the aforementioned pythonization are also included in this PR. There is one test missing, which covers the case when the new branch to be created is a field of a struct, for example:. ```python. ROOT.gInterpreter.Declare("""""". struct MyStruct {. int myint1;. int myint2;. };. """"""). ms = ROOT.MyStruct(). ms.myint1 = some_value. t.Branch('myint1b', addressof(ms, 'myint1'), 'myint1balias/I'). ```. In the current PyROOT, in order to get the address of the struct field, one would use the `AddressOf` function. The equivalent in modern Cppyy seems to be `addressof`, but it has a bug when using it as specified above. [A PR](https://bitbucket.org/wlav/cpycppyy/pull-requests/10/addressof-fix-retrieval-of-address-of-an) has been submitted to Cppyy to fix the issue. Moreover, this PR includes an additional fix and test for `TTree::SetBranchAddress`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2894
https://github.com/root-project/root/pull/2894:1210,testability,test,test,1210,"[Exp PyROOT] Add pythonization for TTree::Branch; This PR modifies the behaviour of `TTree::Branch` in Python so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:. ```python. v = ROOT.std.vector('int')(). t.SetBranchAddress(""my_vector_branch"", v). ```. Tests for the aforementioned pythonization are also included in this PR. There is one test missing, which covers the case when the new branch to be created is a field of a struct, for example:. ```python. ROOT.gInterpreter.Declare("""""". struct MyStruct {. int myint1;. int myint2;. };. """"""). ms = ROOT.MyStruct(). ms.myint1 = some_value. t.Branch('myint1b', addressof(ms, 'myint1'), 'myint1balias/I'). ```. In the current PyROOT, in order to get the address of the struct field, one would use the `AddressOf` function. The equivalent in modern Cppyy seems to be `addressof`, but it has a bug when using it as specified above. [A PR](https://bitbucket.org/wlav/cpycppyy/pull-requests/10/addressof-fix-retrieval-of-address-of-an) has been submitted to Cppyy to fix the issue. Moreover, this PR includes an additional fix and test for `TTree::SetBranchAddress`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2894
https://github.com/root-project/root/pull/2894:71,usability,behavi,behaviour,71,"[Exp PyROOT] Add pythonization for TTree::Branch; This PR modifies the behaviour of `TTree::Branch` in Python so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:. ```python. v = ROOT.std.vector('int')(). t.SetBranchAddress(""my_vector_branch"", v). ```. Tests for the aforementioned pythonization are also included in this PR. There is one test missing, which covers the case when the new branch to be created is a field of a struct, for example:. ```python. ROOT.gInterpreter.Declare("""""". struct MyStruct {. int myint1;. int myint2;. };. """"""). ms = ROOT.MyStruct(). ms.myint1 = some_value. t.Branch('myint1b', addressof(ms, 'myint1'), 'myint1balias/I'). ```. In the current PyROOT, in order to get the address of the struct field, one would use the `AddressOf` function. The equivalent in modern Cppyy seems to be `addressof`, but it has a bug when using it as specified above. [A PR](https://bitbucket.org/wlav/cpycppyy/pull-requests/10/addressof-fix-retrieval-of-address-of-an) has been submitted to Cppyy to fix the issue. Moreover, this PR includes an additional fix and test for `TTree::SetBranchAddress`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2894
https://github.com/root-project/root/pull/2895:1,deployability,modul,modules,1,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:17,deployability,build,builds,17,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:36,deployability,modul,modules,36,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:109,deployability,toolchain,toolchain,109,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:125,deployability,patch,patch,125,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:177,deployability,build,builds,177,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:209,deployability,patch,patch,209,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:82,integrability,sub,submodule-visibility,82,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:194,interoperability,platform,platform,194,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:1,modifiability,modul,modules,1,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:36,modifiability,modul,modules,36,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:1,safety,modul,modules,1,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:36,safety,modul,modules,36,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:125,safety,patch,patch,125,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:209,safety,patch,patch,209,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:125,security,patch,patch,125,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:209,security,patch,patch,209,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2895:109,usability,tool,toolchain,109,[modules] Enable builds on OSX with modules.; XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this. platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2895
https://github.com/root-project/root/pull/2897:124,deployability,infrastructur,infrastructure,124,"[cxxmodules] Yank the last bit of ROOT_MODULES env variable.; Relying on env vars causes more headaches than it solves. Our infrastructure. is prepared to work well without that, we need to just pass -cxxmodule to. rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2897
https://github.com/root-project/root/pull/2897:51,modifiability,variab,variable,51,"[cxxmodules] Yank the last bit of ROOT_MODULES env variable.; Relying on env vars causes more headaches than it solves. Our infrastructure. is prepared to work well without that, we need to just pass -cxxmodule to. rootcling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2897
https://github.com/root-project/root/pull/2898:51,usability,support,supported,51,"Keep __attribute__ for Cling; __attribute__ is not supported on Windows, but it is internally needed by Cling for autoloading and Clad rely on __attribute__((annotate(""D"")))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2898
https://github.com/root-project/root/pull/2899:333,modifiability,variab,variable,333,"[ROOT-9685] Launch the Jupyter ROOT C++ kernel with ROOT's Python; This addresses the issue reported by [ROOT-9685](https://sft.its.cern.ch/jira/browse/ROOT-9685). We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python that ROOT was built with. Since this cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file with a full path to the right Python binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2899
https://github.com/root-project/root/pull/2899:364,modifiability,variab,variable,364,"[ROOT-9685] Launch the Jupyter ROOT C++ kernel with ROOT's Python; This addresses the issue reported by [ROOT-9685](https://sft.its.cern.ch/jira/browse/ROOT-9685). We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python that ROOT was built with. Since this cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file with a full path to the right Python binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2899
https://github.com/root-project/root/pull/2899:305,usability,user,user,305,"[ROOT-9685] Launch the Jupyter ROOT C++ kernel with ROOT's Python; This addresses the issue reported by [ROOT-9685](https://sft.its.cern.ch/jira/browse/ROOT-9685). We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python that ROOT was built with. Since this cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file with a full path to the right Python binary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2899
https://github.com/root-project/root/pull/2900:383,deployability,Updat,Update,383,"TWebCanvas - store into JSON, improve web painting; Now TWebCanvas provides method to store JSON files, which are send to the clients. These files can be used for offline debugging of the JavaScript code. Plus one could use them for HTML documentation generation, which includes online graphics. Improve data format inside TWebPainting - use much more compact and simple structures. Update JSROOT, including major three.js upgrade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2900
https://github.com/root-project/root/pull/2900:423,deployability,upgrad,upgrade,423,"TWebCanvas - store into JSON, improve web painting; Now TWebCanvas provides method to store JSON files, which are send to the clients. These files can be used for offline debugging of the JavaScript code. Plus one could use them for HTML documentation generation, which includes online graphics. Improve data format inside TWebPainting - use much more compact and simple structures. Update JSROOT, including major three.js upgrade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2900
https://github.com/root-project/root/pull/2900:309,interoperability,format,format,309,"TWebCanvas - store into JSON, improve web painting; Now TWebCanvas provides method to store JSON files, which are send to the clients. These files can be used for offline debugging of the JavaScript code. Plus one could use them for HTML documentation generation, which includes online graphics. Improve data format inside TWebPainting - use much more compact and simple structures. Update JSROOT, including major three.js upgrade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2900
https://github.com/root-project/root/pull/2900:423,modifiability,upgrad,upgrade,423,"TWebCanvas - store into JSON, improve web painting; Now TWebCanvas provides method to store JSON files, which are send to the clients. These files can be used for offline debugging of the JavaScript code. Plus one could use them for HTML documentation generation, which includes online graphics. Improve data format inside TWebPainting - use much more compact and simple structures. Update JSROOT, including major three.js upgrade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2900
https://github.com/root-project/root/pull/2900:383,safety,Updat,Update,383,"TWebCanvas - store into JSON, improve web painting; Now TWebCanvas provides method to store JSON files, which are send to the clients. These files can be used for offline debugging of the JavaScript code. Plus one could use them for HTML documentation generation, which includes online graphics. Improve data format inside TWebPainting - use much more compact and simple structures. Update JSROOT, including major three.js upgrade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2900
https://github.com/root-project/root/pull/2900:383,security,Updat,Update,383,"TWebCanvas - store into JSON, improve web painting; Now TWebCanvas provides method to store JSON files, which are send to the clients. These files can be used for offline debugging of the JavaScript code. Plus one could use them for HTML documentation generation, which includes online graphics. Improve data format inside TWebPainting - use much more compact and simple structures. Update JSROOT, including major three.js upgrade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2900
https://github.com/root-project/root/pull/2900:364,testability,simpl,simple,364,"TWebCanvas - store into JSON, improve web painting; Now TWebCanvas provides method to store JSON files, which are send to the clients. These files can be used for offline debugging of the JavaScript code. Plus one could use them for HTML documentation generation, which includes online graphics. Improve data format inside TWebPainting - use much more compact and simple structures. Update JSROOT, including major three.js upgrade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2900
https://github.com/root-project/root/pull/2900:238,usability,document,documentation,238,"TWebCanvas - store into JSON, improve web painting; Now TWebCanvas provides method to store JSON files, which are send to the clients. These files can be used for offline debugging of the JavaScript code. Plus one could use them for HTML documentation generation, which includes online graphics. Improve data format inside TWebPainting - use much more compact and simple structures. Update JSROOT, including major three.js upgrade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2900
https://github.com/root-project/root/pull/2900:364,usability,simpl,simple,364,"TWebCanvas - store into JSON, improve web painting; Now TWebCanvas provides method to store JSON files, which are send to the clients. These files can be used for offline debugging of the JavaScript code. Plus one could use them for HTML documentation generation, which includes online graphics. Improve data format inside TWebPainting - use much more compact and simple structures. Update JSROOT, including major three.js upgrade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2900
https://github.com/root-project/root/pull/2901:165,safety,test,test,165,Add regression support for MethodDL (new PR replacing #2278); This PR replaces #2278 from the GSOC student Sidharta and provides the regression support (including a test) for MethodDL. . The test has been improved to check the obtained deviations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2901
https://github.com/root-project/root/pull/2901:191,safety,test,test,191,Add regression support for MethodDL (new PR replacing #2278); This PR replaces #2278 from the GSOC student Sidharta and provides the regression support (including a test) for MethodDL. . The test has been improved to check the obtained deviations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2901
https://github.com/root-project/root/pull/2901:4,testability,regress,regression,4,Add regression support for MethodDL (new PR replacing #2278); This PR replaces #2278 from the GSOC student Sidharta and provides the regression support (including a test) for MethodDL. . The test has been improved to check the obtained deviations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2901
https://github.com/root-project/root/pull/2901:133,testability,regress,regression,133,Add regression support for MethodDL (new PR replacing #2278); This PR replaces #2278 from the GSOC student Sidharta and provides the regression support (including a test) for MethodDL. . The test has been improved to check the obtained deviations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2901
https://github.com/root-project/root/pull/2901:165,testability,test,test,165,Add regression support for MethodDL (new PR replacing #2278); This PR replaces #2278 from the GSOC student Sidharta and provides the regression support (including a test) for MethodDL. . The test has been improved to check the obtained deviations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2901
https://github.com/root-project/root/pull/2901:191,testability,test,test,191,Add regression support for MethodDL (new PR replacing #2278); This PR replaces #2278 from the GSOC student Sidharta and provides the regression support (including a test) for MethodDL. . The test has been improved to check the obtained deviations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2901
https://github.com/root-project/root/pull/2901:15,usability,support,support,15,Add regression support for MethodDL (new PR replacing #2278); This PR replaces #2278 from the GSOC student Sidharta and provides the regression support (including a test) for MethodDL. . The test has been improved to check the obtained deviations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2901
https://github.com/root-project/root/pull/2901:144,usability,support,support,144,Add regression support for MethodDL (new PR replacing #2278); This PR replaces #2278 from the GSOC student Sidharta and provides the regression support (including a test) for MethodDL. . The test has been improved to check the obtained deviations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2901
https://github.com/root-project/root/pull/2902:142,deployability,manag,managed,142,"Moving ROOT to use generic compression algorithm/level/settings; It is a first step to move to generic settings for compression algorithms. I managed to clean all places where was not properly used ""magic numbers"". Next step will be to introduce a new class CompressionSetting that will provide more general switch for compression algorithms. ( preview concept https://github.com/bbockelm/root/commit/4c856f9408d9184cfaf4dc4727b7e32e5e4e3433 ). In this PR we already using ZLIB as default (for test correctness we need to land https://github.com/root-project/root/pull/2889 and https://github.com/root-project/roottest/pull/247 before this pr). ```. $ root hsimple.root . --------------------------------------------------------------------. | Welcome to ROOT 6.15/01 https://root.cern |. | (c) 1995-2018, The ROOT Team |. | Built for linuxx8664gcc on Nov 01 2018, 17:35:38 |. | From heads/default-compression-switcher@v6-13-04-1973-gb4ccd4f330 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. --------------------------------------------------------------------. root [0] . Attaching file hsimple.root as _file0... (TFile *) 0x55f79b0e6360. root [1] _file0->GetCompressionAlgorithm(). (int) 1. root [2] _file0->GetCompressionLevel(). (int) 1. root [3] _file0->GetCompressionSettings(). (int) 101. root [4]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2902
https://github.com/root-project/root/pull/2902:142,energy efficiency,manag,managed,142,"Moving ROOT to use generic compression algorithm/level/settings; It is a first step to move to generic settings for compression algorithms. I managed to clean all places where was not properly used ""magic numbers"". Next step will be to introduce a new class CompressionSetting that will provide more general switch for compression algorithms. ( preview concept https://github.com/bbockelm/root/commit/4c856f9408d9184cfaf4dc4727b7e32e5e4e3433 ). In this PR we already using ZLIB as default (for test correctness we need to land https://github.com/root-project/root/pull/2889 and https://github.com/root-project/roottest/pull/247 before this pr). ```. $ root hsimple.root . --------------------------------------------------------------------. | Welcome to ROOT 6.15/01 https://root.cern |. | (c) 1995-2018, The ROOT Team |. | Built for linuxx8664gcc on Nov 01 2018, 17:35:38 |. | From heads/default-compression-switcher@v6-13-04-1973-gb4ccd4f330 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. --------------------------------------------------------------------. root [0] . Attaching file hsimple.root as _file0... (TFile *) 0x55f79b0e6360. root [1] _file0->GetCompressionAlgorithm(). (int) 1. root [2] _file0->GetCompressionLevel(). (int) 1. root [3] _file0->GetCompressionSettings(). (int) 101. root [4]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2902
https://github.com/root-project/root/pull/2902:142,safety,manag,managed,142,"Moving ROOT to use generic compression algorithm/level/settings; It is a first step to move to generic settings for compression algorithms. I managed to clean all places where was not properly used ""magic numbers"". Next step will be to introduce a new class CompressionSetting that will provide more general switch for compression algorithms. ( preview concept https://github.com/bbockelm/root/commit/4c856f9408d9184cfaf4dc4727b7e32e5e4e3433 ). In this PR we already using ZLIB as default (for test correctness we need to land https://github.com/root-project/root/pull/2889 and https://github.com/root-project/roottest/pull/247 before this pr). ```. $ root hsimple.root . --------------------------------------------------------------------. | Welcome to ROOT 6.15/01 https://root.cern |. | (c) 1995-2018, The ROOT Team |. | Built for linuxx8664gcc on Nov 01 2018, 17:35:38 |. | From heads/default-compression-switcher@v6-13-04-1973-gb4ccd4f330 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. --------------------------------------------------------------------. root [0] . Attaching file hsimple.root as _file0... (TFile *) 0x55f79b0e6360. root [1] _file0->GetCompressionAlgorithm(). (int) 1. root [2] _file0->GetCompressionLevel(). (int) 1. root [3] _file0->GetCompressionSettings(). (int) 101. root [4]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2902
https://github.com/root-project/root/pull/2902:494,safety,test,test,494,"Moving ROOT to use generic compression algorithm/level/settings; It is a first step to move to generic settings for compression algorithms. I managed to clean all places where was not properly used ""magic numbers"". Next step will be to introduce a new class CompressionSetting that will provide more general switch for compression algorithms. ( preview concept https://github.com/bbockelm/root/commit/4c856f9408d9184cfaf4dc4727b7e32e5e4e3433 ). In this PR we already using ZLIB as default (for test correctness we need to land https://github.com/root-project/root/pull/2889 and https://github.com/root-project/roottest/pull/247 before this pr). ```. $ root hsimple.root . --------------------------------------------------------------------. | Welcome to ROOT 6.15/01 https://root.cern |. | (c) 1995-2018, The ROOT Team |. | Built for linuxx8664gcc on Nov 01 2018, 17:35:38 |. | From heads/default-compression-switcher@v6-13-04-1973-gb4ccd4f330 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. --------------------------------------------------------------------. root [0] . Attaching file hsimple.root as _file0... (TFile *) 0x55f79b0e6360. root [1] _file0->GetCompressionAlgorithm(). (int) 1. root [2] _file0->GetCompressionLevel(). (int) 1. root [3] _file0->GetCompressionSettings(). (int) 101. root [4]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2902
https://github.com/root-project/root/pull/2902:815,security,Team,Team,815,"Moving ROOT to use generic compression algorithm/level/settings; It is a first step to move to generic settings for compression algorithms. I managed to clean all places where was not properly used ""magic numbers"". Next step will be to introduce a new class CompressionSetting that will provide more general switch for compression algorithms. ( preview concept https://github.com/bbockelm/root/commit/4c856f9408d9184cfaf4dc4727b7e32e5e4e3433 ). In this PR we already using ZLIB as default (for test correctness we need to land https://github.com/root-project/root/pull/2889 and https://github.com/root-project/roottest/pull/247 before this pr). ```. $ root hsimple.root . --------------------------------------------------------------------. | Welcome to ROOT 6.15/01 https://root.cern |. | (c) 1995-2018, The ROOT Team |. | Built for linuxx8664gcc on Nov 01 2018, 17:35:38 |. | From heads/default-compression-switcher@v6-13-04-1973-gb4ccd4f330 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. --------------------------------------------------------------------. root [0] . Attaching file hsimple.root as _file0... (TFile *) 0x55f79b0e6360. root [1] _file0->GetCompressionAlgorithm(). (int) 1. root [2] _file0->GetCompressionLevel(). (int) 1. root [3] _file0->GetCompressionSettings(). (int) 101. root [4]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2902
https://github.com/root-project/root/pull/2902:494,testability,test,test,494,"Moving ROOT to use generic compression algorithm/level/settings; It is a first step to move to generic settings for compression algorithms. I managed to clean all places where was not properly used ""magic numbers"". Next step will be to introduce a new class CompressionSetting that will provide more general switch for compression algorithms. ( preview concept https://github.com/bbockelm/root/commit/4c856f9408d9184cfaf4dc4727b7e32e5e4e3433 ). In this PR we already using ZLIB as default (for test correctness we need to land https://github.com/root-project/root/pull/2889 and https://github.com/root-project/roottest/pull/247 before this pr). ```. $ root hsimple.root . --------------------------------------------------------------------. | Welcome to ROOT 6.15/01 https://root.cern |. | (c) 1995-2018, The ROOT Team |. | Built for linuxx8664gcc on Nov 01 2018, 17:35:38 |. | From heads/default-compression-switcher@v6-13-04-1973-gb4ccd4f330 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. --------------------------------------------------------------------. root [0] . Attaching file hsimple.root as _file0... (TFile *) 0x55f79b0e6360. root [1] _file0->GetCompressionAlgorithm(). (int) 1. root [2] _file0->GetCompressionLevel(). (int) 1. root [3] _file0->GetCompressionSettings(). (int) 101. root [4]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2902
https://github.com/root-project/root/pull/2902:956,usability,help,help,956,"Moving ROOT to use generic compression algorithm/level/settings; It is a first step to move to generic settings for compression algorithms. I managed to clean all places where was not properly used ""magic numbers"". Next step will be to introduce a new class CompressionSetting that will provide more general switch for compression algorithms. ( preview concept https://github.com/bbockelm/root/commit/4c856f9408d9184cfaf4dc4727b7e32e5e4e3433 ). In this PR we already using ZLIB as default (for test correctness we need to land https://github.com/root-project/root/pull/2889 and https://github.com/root-project/roottest/pull/247 before this pr). ```. $ root hsimple.root . --------------------------------------------------------------------. | Welcome to ROOT 6.15/01 https://root.cern |. | (c) 1995-2018, The ROOT Team |. | Built for linuxx8664gcc on Nov 01 2018, 17:35:38 |. | From heads/default-compression-switcher@v6-13-04-1973-gb4ccd4f330 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. --------------------------------------------------------------------. root [0] . Attaching file hsimple.root as _file0... (TFile *) 0x55f79b0e6360. root [1] _file0->GetCompressionAlgorithm(). (int) 1. root [2] _file0->GetCompressionLevel(). (int) 1. root [3] _file0->GetCompressionSettings(). (int) 101. root [4]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2902
https://github.com/root-project/root/pull/2903:102,deployability,patch,patch,102,[D54097]Optimize clang::ASTReader by using DenseMap instead of vector; Testing before submitting this patch to clang upstream! This gives 20 MB memory improvement :D :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2903
https://github.com/root-project/root/pull/2903:8,energy efficiency,Optim,Optimize,8,[D54097]Optimize clang::ASTReader by using DenseMap instead of vector; Testing before submitting this patch to clang upstream! This gives 20 MB memory improvement :D :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2903
https://github.com/root-project/root/pull/2903:86,integrability,sub,submitting,86,[D54097]Optimize clang::ASTReader by using DenseMap instead of vector; Testing before submitting this patch to clang upstream! This gives 20 MB memory improvement :D :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2903
https://github.com/root-project/root/pull/2903:8,performance,Optimiz,Optimize,8,[D54097]Optimize clang::ASTReader by using DenseMap instead of vector; Testing before submitting this patch to clang upstream! This gives 20 MB memory improvement :D :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2903
https://github.com/root-project/root/pull/2903:144,performance,memor,memory,144,[D54097]Optimize clang::ASTReader by using DenseMap instead of vector; Testing before submitting this patch to clang upstream! This gives 20 MB memory improvement :D :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2903
https://github.com/root-project/root/pull/2903:71,safety,Test,Testing,71,[D54097]Optimize clang::ASTReader by using DenseMap instead of vector; Testing before submitting this patch to clang upstream! This gives 20 MB memory improvement :D :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2903
https://github.com/root-project/root/pull/2903:102,safety,patch,patch,102,[D54097]Optimize clang::ASTReader by using DenseMap instead of vector; Testing before submitting this patch to clang upstream! This gives 20 MB memory improvement :D :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2903
https://github.com/root-project/root/pull/2903:102,security,patch,patch,102,[D54097]Optimize clang::ASTReader by using DenseMap instead of vector; Testing before submitting this patch to clang upstream! This gives 20 MB memory improvement :D :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2903
https://github.com/root-project/root/pull/2903:71,testability,Test,Testing,71,[D54097]Optimize clang::ASTReader by using DenseMap instead of vector; Testing before submitting this patch to clang upstream! This gives 20 MB memory improvement :D :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2903
https://github.com/root-project/root/pull/2903:144,usability,memor,memory,144,[D54097]Optimize clang::ASTReader by using DenseMap instead of vector; Testing before submitting this patch to clang upstream! This gives 20 MB memory improvement :D :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2903
https://github.com/root-project/root/pull/2904:163,modifiability,variab,variable,163,"[cmake] Silence Clang8 shadow warnings::; We are flooded by warnings of shadowing enum constants, e.g. include/TDictionary.h:189:7: warning: declaration shadows a variable in the global namespace [-Wshadow]. kNone = ROOT::kNotSTL,. ^. include/GuiTypes.h:87:16: note: previous declaration is here. const Handle_t kNone = 0;. ^. We will need to address them, but to keep the warning / email volume reasonable, disable for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2904
https://github.com/root-project/root/pull/2905:70,deployability,contain,contains,70,"Eve7: try to avoid TVirtualx.h and GL_glu.h in same file; TVirtualX.h contains not correct definition ""class GLUtesselator"", which is conflicts with real ""struct GLUtesselator"". . For now just avoid use of both includes in one place. In principle, one should remove GLUtesselator for TVirtualX at all",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2905
https://github.com/root-project/root/pull/2905:134,interoperability,conflict,conflicts,134,"Eve7: try to avoid TVirtualx.h and GL_glu.h in same file; TVirtualX.h contains not correct definition ""class GLUtesselator"", which is conflicts with real ""struct GLUtesselator"". . For now just avoid use of both includes in one place. In principle, one should remove GLUtesselator for TVirtualX at all",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2905
https://github.com/root-project/root/pull/2905:13,safety,avoid,avoid,13,"Eve7: try to avoid TVirtualx.h and GL_glu.h in same file; TVirtualX.h contains not correct definition ""class GLUtesselator"", which is conflicts with real ""struct GLUtesselator"". . For now just avoid use of both includes in one place. In principle, one should remove GLUtesselator for TVirtualX at all",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2905
https://github.com/root-project/root/pull/2905:193,safety,avoid,avoid,193,"Eve7: try to avoid TVirtualx.h and GL_glu.h in same file; TVirtualX.h contains not correct definition ""class GLUtesselator"", which is conflicts with real ""struct GLUtesselator"". . For now just avoid use of both includes in one place. In principle, one should remove GLUtesselator for TVirtualX at all",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2905
https://github.com/root-project/root/pull/2906:63,deployability,version,version,63,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:176,deployability,version,version,176,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:260,deployability,instal,installation,260,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:690,deployability,version,version,690,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:792,deployability,version,version,792,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:63,integrability,version,version,63,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:176,integrability,version,version,176,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:690,integrability,version,version,690,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:792,integrability,version,version,792,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:779,interoperability,incompatib,incompatible,779,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:63,modifiability,version,version,63,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:176,modifiability,version,version,176,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:327,modifiability,variab,variable,327,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:358,modifiability,variab,variable,358,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:690,modifiability,version,version,690,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:792,modifiability,version,version,792,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2906:299,usability,user,user,299,"[ROOT-9685] Run the Jupyter ROOT C++ kernel with ROOT's Python version; This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs. The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2906
https://github.com/root-project/root/pull/2908:98,integrability,interfac,interfaces,98,virtualx: remove GLUtesselator forward declarations from TVirtualX.h; It is not used in TVirtualX interfaces. It is re-declared in TGLUtil.h include. Was introduced 14 years ago with the commit:. https://github.com/root-project/root/commit/fc7ab2b. In my mind - it is wrong place,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2908
https://github.com/root-project/root/pull/2908:98,interoperability,interfac,interfaces,98,virtualx: remove GLUtesselator forward declarations from TVirtualX.h; It is not used in TVirtualX interfaces. It is re-declared in TGLUtil.h include. Was introduced 14 years ago with the commit:. https://github.com/root-project/root/commit/fc7ab2b. In my mind - it is wrong place,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2908
https://github.com/root-project/root/pull/2908:98,modifiability,interfac,interfaces,98,virtualx: remove GLUtesselator forward declarations from TVirtualX.h; It is not used in TVirtualX interfaces. It is re-declared in TGLUtil.h include. Was introduced 14 years ago with the commit:. https://github.com/root-project/root/commit/fc7ab2b. In my mind - it is wrong place,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2908
https://github.com/root-project/root/pull/2909:0,deployability,Updat,Updating,0,Updating CMake typo in tree test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2909
https://github.com/root-project/root/pull/2909:0,safety,Updat,Updating,0,Updating CMake typo in tree test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2909
https://github.com/root-project/root/pull/2909:28,safety,test,test,28,Updating CMake typo in tree test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2909
https://github.com/root-project/root/pull/2909:0,security,Updat,Updating,0,Updating CMake typo in tree test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2909
https://github.com/root-project/root/pull/2909:28,testability,test,test,28,Updating CMake typo in tree test;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2909
https://github.com/root-project/root/pull/2910:7,availability,error,error,7,"Fix an error when generating the Unuran dictionary on Windows; This fixes the following (potentially erroneous) error:. Error in <CloseStreamerInfoROOTFile>: Unique pointer unique_ptr<TUnuranBaseDist,default_delete<TUnuranBaseDist > > has zero data members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:112,availability,error,error,112,"Fix an error when generating the Unuran dictionary on Windows; This fixes the following (potentially erroneous) error:. Error in <CloseStreamerInfoROOTFile>: Unique pointer unique_ptr<TUnuranBaseDist,default_delete<TUnuranBaseDist > > has zero data members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:120,availability,Error,Error,120,"Fix an error when generating the Unuran dictionary on Windows; This fixes the following (potentially erroneous) error:. Error in <CloseStreamerInfoROOTFile>: Unique pointer unique_ptr<TUnuranBaseDist,default_delete<TUnuranBaseDist > > has zero data members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:7,performance,error,error,7,"Fix an error when generating the Unuran dictionary on Windows; This fixes the following (potentially erroneous) error:. Error in <CloseStreamerInfoROOTFile>: Unique pointer unique_ptr<TUnuranBaseDist,default_delete<TUnuranBaseDist > > has zero data members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:112,performance,error,error,112,"Fix an error when generating the Unuran dictionary on Windows; This fixes the following (potentially erroneous) error:. Error in <CloseStreamerInfoROOTFile>: Unique pointer unique_ptr<TUnuranBaseDist,default_delete<TUnuranBaseDist > > has zero data members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:120,performance,Error,Error,120,"Fix an error when generating the Unuran dictionary on Windows; This fixes the following (potentially erroneous) error:. Error in <CloseStreamerInfoROOTFile>: Unique pointer unique_ptr<TUnuranBaseDist,default_delete<TUnuranBaseDist > > has zero data members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:7,safety,error,error,7,"Fix an error when generating the Unuran dictionary on Windows; This fixes the following (potentially erroneous) error:. Error in <CloseStreamerInfoROOTFile>: Unique pointer unique_ptr<TUnuranBaseDist,default_delete<TUnuranBaseDist > > has zero data members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:112,safety,error,error,112,"Fix an error when generating the Unuran dictionary on Windows; This fixes the following (potentially erroneous) error:. Error in <CloseStreamerInfoROOTFile>: Unique pointer unique_ptr<TUnuranBaseDist,default_delete<TUnuranBaseDist > > has zero data members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:120,safety,Error,Error,120,"Fix an error when generating the Unuran dictionary on Windows; This fixes the following (potentially erroneous) error:. Error in <CloseStreamerInfoROOTFile>: Unique pointer unique_ptr<TUnuranBaseDist,default_delete<TUnuranBaseDist > > has zero data members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:7,usability,error,error,7,"Fix an error when generating the Unuran dictionary on Windows; This fixes the following (potentially erroneous) error:. Error in <CloseStreamerInfoROOTFile>: Unique pointer unique_ptr<TUnuranBaseDist,default_delete<TUnuranBaseDist > > has zero data members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:112,usability,error,error,112,"Fix an error when generating the Unuran dictionary on Windows; This fixes the following (potentially erroneous) error:. Error in <CloseStreamerInfoROOTFile>: Unique pointer unique_ptr<TUnuranBaseDist,default_delete<TUnuranBaseDist > > has zero data members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:120,usability,Error,Error,120,"Fix an error when generating the Unuran dictionary on Windows; This fixes the following (potentially erroneous) error:. Error in <CloseStreamerInfoROOTFile>: Unique pointer unique_ptr<TUnuranBaseDist,default_delete<TUnuranBaseDist > > has zero data members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2910:130,usability,Close,CloseStreamerInfoROOTFile,130,"Fix an error when generating the Unuran dictionary on Windows; This fixes the following (potentially erroneous) error:. Error in <CloseStreamerInfoROOTFile>: Unique pointer unique_ptr<TUnuranBaseDist,default_delete<TUnuranBaseDist > > has zero data members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2910
https://github.com/root-project/root/pull/2911:125,energy efficiency,Cpu,CpuTime,125,"Multi builtin package zlib-CF & zlib; ```. Zlib-CF. ===. 200 events and 55491936 bytes processed. RealTime=0.691160 seconds, CpuTime=0.650000 seconds. compression settings=101, split=1, arg4=1. You write 80.288122 Mbytes/Realtime seconds. You write 85.372209 Mbytes/Cputime seconds. event:0, rtime=0.042453 s. Master. ===. 200 events and 55491936 bytes processed. RealTime=1.384166 seconds, CpuTime=1.080000 seconds. compression settings=101, split=1, arg4=1. You write 40.090521 Mbytes/Realtime seconds. You write 51.381422 Mbytes/Cputime seconds. event:0, rtime=0.104979 s. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:266,energy efficiency,Cpu,Cputime,266,"Multi builtin package zlib-CF & zlib; ```. Zlib-CF. ===. 200 events and 55491936 bytes processed. RealTime=0.691160 seconds, CpuTime=0.650000 seconds. compression settings=101, split=1, arg4=1. You write 80.288122 Mbytes/Realtime seconds. You write 85.372209 Mbytes/Cputime seconds. event:0, rtime=0.042453 s. Master. ===. 200 events and 55491936 bytes processed. RealTime=1.384166 seconds, CpuTime=1.080000 seconds. compression settings=101, split=1, arg4=1. You write 40.090521 Mbytes/Realtime seconds. You write 51.381422 Mbytes/Cputime seconds. event:0, rtime=0.104979 s. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:391,energy efficiency,Cpu,CpuTime,391,"Multi builtin package zlib-CF & zlib; ```. Zlib-CF. ===. 200 events and 55491936 bytes processed. RealTime=0.691160 seconds, CpuTime=0.650000 seconds. compression settings=101, split=1, arg4=1. You write 80.288122 Mbytes/Realtime seconds. You write 85.372209 Mbytes/Cputime seconds. event:0, rtime=0.042453 s. Master. ===. 200 events and 55491936 bytes processed. RealTime=1.384166 seconds, CpuTime=1.080000 seconds. compression settings=101, split=1, arg4=1. You write 40.090521 Mbytes/Realtime seconds. You write 51.381422 Mbytes/Cputime seconds. event:0, rtime=0.104979 s. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:532,energy efficiency,Cpu,Cputime,532,"Multi builtin package zlib-CF & zlib; ```. Zlib-CF. ===. 200 events and 55491936 bytes processed. RealTime=0.691160 seconds, CpuTime=0.650000 seconds. compression settings=101, split=1, arg4=1. You write 80.288122 Mbytes/Realtime seconds. You write 85.372209 Mbytes/Cputime seconds. event:0, rtime=0.042453 s. Master. ===. 200 events and 55491936 bytes processed. RealTime=1.384166 seconds, CpuTime=1.080000 seconds. compression settings=101, split=1, arg4=1. You write 40.090521 Mbytes/Realtime seconds. You write 51.381422 Mbytes/Cputime seconds. event:0, rtime=0.104979 s. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:61,integrability,event,events,61,"Multi builtin package zlib-CF & zlib; ```. Zlib-CF. ===. 200 events and 55491936 bytes processed. RealTime=0.691160 seconds, CpuTime=0.650000 seconds. compression settings=101, split=1, arg4=1. You write 80.288122 Mbytes/Realtime seconds. You write 85.372209 Mbytes/Cputime seconds. event:0, rtime=0.042453 s. Master. ===. 200 events and 55491936 bytes processed. RealTime=1.384166 seconds, CpuTime=1.080000 seconds. compression settings=101, split=1, arg4=1. You write 40.090521 Mbytes/Realtime seconds. You write 51.381422 Mbytes/Cputime seconds. event:0, rtime=0.104979 s. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:283,integrability,event,event,283,"Multi builtin package zlib-CF & zlib; ```. Zlib-CF. ===. 200 events and 55491936 bytes processed. RealTime=0.691160 seconds, CpuTime=0.650000 seconds. compression settings=101, split=1, arg4=1. You write 80.288122 Mbytes/Realtime seconds. You write 85.372209 Mbytes/Cputime seconds. event:0, rtime=0.042453 s. Master. ===. 200 events and 55491936 bytes processed. RealTime=1.384166 seconds, CpuTime=1.080000 seconds. compression settings=101, split=1, arg4=1. You write 40.090521 Mbytes/Realtime seconds. You write 51.381422 Mbytes/Cputime seconds. event:0, rtime=0.104979 s. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:327,integrability,event,events,327,"Multi builtin package zlib-CF & zlib; ```. Zlib-CF. ===. 200 events and 55491936 bytes processed. RealTime=0.691160 seconds, CpuTime=0.650000 seconds. compression settings=101, split=1, arg4=1. You write 80.288122 Mbytes/Realtime seconds. You write 85.372209 Mbytes/Cputime seconds. event:0, rtime=0.042453 s. Master. ===. 200 events and 55491936 bytes processed. RealTime=1.384166 seconds, CpuTime=1.080000 seconds. compression settings=101, split=1, arg4=1. You write 40.090521 Mbytes/Realtime seconds. You write 51.381422 Mbytes/Cputime seconds. event:0, rtime=0.104979 s. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:549,integrability,event,event,549,"Multi builtin package zlib-CF & zlib; ```. Zlib-CF. ===. 200 events and 55491936 bytes processed. RealTime=0.691160 seconds, CpuTime=0.650000 seconds. compression settings=101, split=1, arg4=1. You write 80.288122 Mbytes/Realtime seconds. You write 85.372209 Mbytes/Cputime seconds. event:0, rtime=0.042453 s. Master. ===. 200 events and 55491936 bytes processed. RealTime=1.384166 seconds, CpuTime=1.080000 seconds. compression settings=101, split=1, arg4=1. You write 40.090521 Mbytes/Realtime seconds. You write 51.381422 Mbytes/Cputime seconds. event:0, rtime=0.104979 s. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:14,modifiability,pac,package,14,"Multi builtin package zlib-CF & zlib; ```. Zlib-CF. ===. 200 events and 55491936 bytes processed. RealTime=0.691160 seconds, CpuTime=0.650000 seconds. compression settings=101, split=1, arg4=1. You write 80.288122 Mbytes/Realtime seconds. You write 85.372209 Mbytes/Cputime seconds. event:0, rtime=0.042453 s. Master. ===. 200 events and 55491936 bytes processed. RealTime=1.384166 seconds, CpuTime=1.080000 seconds. compression settings=101, split=1, arg4=1. You write 40.090521 Mbytes/Realtime seconds. You write 51.381422 Mbytes/Cputime seconds. event:0, rtime=0.104979 s. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:125,performance,Cpu,CpuTime,125,"Multi builtin package zlib-CF & zlib; ```. Zlib-CF. ===. 200 events and 55491936 bytes processed. RealTime=0.691160 seconds, CpuTime=0.650000 seconds. compression settings=101, split=1, arg4=1. You write 80.288122 Mbytes/Realtime seconds. You write 85.372209 Mbytes/Cputime seconds. event:0, rtime=0.042453 s. Master. ===. 200 events and 55491936 bytes processed. RealTime=1.384166 seconds, CpuTime=1.080000 seconds. compression settings=101, split=1, arg4=1. You write 40.090521 Mbytes/Realtime seconds. You write 51.381422 Mbytes/Cputime seconds. event:0, rtime=0.104979 s. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:266,performance,Cpu,Cputime,266,"Multi builtin package zlib-CF & zlib; ```. Zlib-CF. ===. 200 events and 55491936 bytes processed. RealTime=0.691160 seconds, CpuTime=0.650000 seconds. compression settings=101, split=1, arg4=1. You write 80.288122 Mbytes/Realtime seconds. You write 85.372209 Mbytes/Cputime seconds. event:0, rtime=0.042453 s. Master. ===. 200 events and 55491936 bytes processed. RealTime=1.384166 seconds, CpuTime=1.080000 seconds. compression settings=101, split=1, arg4=1. You write 40.090521 Mbytes/Realtime seconds. You write 51.381422 Mbytes/Cputime seconds. event:0, rtime=0.104979 s. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:391,performance,Cpu,CpuTime,391,"Multi builtin package zlib-CF & zlib; ```. Zlib-CF. ===. 200 events and 55491936 bytes processed. RealTime=0.691160 seconds, CpuTime=0.650000 seconds. compression settings=101, split=1, arg4=1. You write 80.288122 Mbytes/Realtime seconds. You write 85.372209 Mbytes/Cputime seconds. event:0, rtime=0.042453 s. Master. ===. 200 events and 55491936 bytes processed. RealTime=1.384166 seconds, CpuTime=1.080000 seconds. compression settings=101, split=1, arg4=1. You write 40.090521 Mbytes/Realtime seconds. You write 51.381422 Mbytes/Cputime seconds. event:0, rtime=0.104979 s. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2911:532,performance,Cpu,Cputime,532,"Multi builtin package zlib-CF & zlib; ```. Zlib-CF. ===. 200 events and 55491936 bytes processed. RealTime=0.691160 seconds, CpuTime=0.650000 seconds. compression settings=101, split=1, arg4=1. You write 80.288122 Mbytes/Realtime seconds. You write 85.372209 Mbytes/Cputime seconds. event:0, rtime=0.042453 s. Master. ===. 200 events and 55491936 bytes processed. RealTime=1.384166 seconds, CpuTime=1.080000 seconds. compression settings=101, split=1, arg4=1. You write 40.090521 Mbytes/Realtime seconds. You write 51.381422 Mbytes/Cputime seconds. event:0, rtime=0.104979 s. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2911
https://github.com/root-project/root/pull/2912:321,availability,error,errors,321,"[cxxmodules] Don't load rdict for cxxmodules; Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:. ```. if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {. gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());. }. ```. but doing that caused many errors in dictionary generation. So. apparently we can't do that. Instead, we can stop loading them at. runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2912
https://github.com/root-project/root/pull/2912:19,energy efficiency,load,load,19,"[cxxmodules] Don't load rdict for cxxmodules; Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:. ```. if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {. gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());. }. ```. but doing that caused many errors in dictionary generation. So. apparently we can't do that. Instead, we can stop loading them at. runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2912
https://github.com/root-project/root/pull/2912:408,energy efficiency,load,loading,408,"[cxxmodules] Don't load rdict for cxxmodules; Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:. ```. if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {. gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());. }. ```. but doing that caused many errors in dictionary generation. So. apparently we can't do that. Instead, we can stop loading them at. runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2912
https://github.com/root-project/root/pull/2912:19,performance,load,load,19,"[cxxmodules] Don't load rdict for cxxmodules; Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:. ```. if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {. gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());. }. ```. but doing that caused many errors in dictionary generation. So. apparently we can't do that. Instead, we can stop loading them at. runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2912
https://github.com/root-project/root/pull/2912:321,performance,error,errors,321,"[cxxmodules] Don't load rdict for cxxmodules; Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:. ```. if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {. gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());. }. ```. but doing that caused many errors in dictionary generation. So. apparently we can't do that. Instead, we can stop loading them at. runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2912
https://github.com/root-project/root/pull/2912:408,performance,load,loading,408,"[cxxmodules] Don't load rdict for cxxmodules; Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:. ```. if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {. gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());. }. ```. but doing that caused many errors in dictionary generation. So. apparently we can't do that. Instead, we can stop loading them at. runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2912
https://github.com/root-project/root/pull/2912:474,performance,memor,memory,474,"[cxxmodules] Don't load rdict for cxxmodules; Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:. ```. if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {. gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());. }. ```. but doing that caused many errors in dictionary generation. So. apparently we can't do that. Instead, we can stop loading them at. runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2912
https://github.com/root-project/root/pull/2912:321,safety,error,errors,321,"[cxxmodules] Don't load rdict for cxxmodules; Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:. ```. if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {. gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());. }. ```. but doing that caused many errors in dictionary generation. So. apparently we can't do that. Instead, we can stop loading them at. runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2912
https://github.com/root-project/root/pull/2912:63,usability,stop,stop,63,"[cxxmodules] Don't load rdict for cxxmodules; Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:. ```. if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {. gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());. }. ```. but doing that caused many errors in dictionary generation. So. apparently we can't do that. Instead, we can stop loading them at. runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2912
https://github.com/root-project/root/pull/2912:321,usability,error,errors,321,"[cxxmodules] Don't load rdict for cxxmodules; Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:. ```. if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {. gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());. }. ```. but doing that caused many errors in dictionary generation. So. apparently we can't do that. Instead, we can stop loading them at. runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2912
https://github.com/root-project/root/pull/2912:403,usability,stop,stop,403,"[cxxmodules] Don't load rdict for cxxmodules; Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:. ```. if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {. gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());. }. ```. but doing that caused many errors in dictionary generation. So. apparently we can't do that. Instead, we can stop loading them at. runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2912
https://github.com/root-project/root/pull/2912:474,usability,memor,memory,474,"[cxxmodules] Don't load rdict for cxxmodules; Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:. ```. if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {. gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());. }. ```. but doing that caused many errors in dictionary generation. So. apparently we can't do that. Instead, we can stop loading them at. runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2912
https://github.com/root-project/root/pull/2913:97,deployability,integr,integrates,97,[TMVA] CV Avg ROC; Adds drawing possibilities for average ROC curves with cross validation. This integrates the work of @mohammaduzair9. Superseeds PR #2454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2913
https://github.com/root-project/root/pull/2913:24,energy efficiency,draw,drawing,24,[TMVA] CV Avg ROC; Adds drawing possibilities for average ROC curves with cross validation. This integrates the work of @mohammaduzair9. Superseeds PR #2454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2913
https://github.com/root-project/root/pull/2913:97,integrability,integr,integrates,97,[TMVA] CV Avg ROC; Adds drawing possibilities for average ROC curves with cross validation. This integrates the work of @mohammaduzair9. Superseeds PR #2454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2913
https://github.com/root-project/root/pull/2913:97,interoperability,integr,integrates,97,[TMVA] CV Avg ROC; Adds drawing possibilities for average ROC curves with cross validation. This integrates the work of @mohammaduzair9. Superseeds PR #2454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2913
https://github.com/root-project/root/pull/2913:97,modifiability,integr,integrates,97,[TMVA] CV Avg ROC; Adds drawing possibilities for average ROC curves with cross validation. This integrates the work of @mohammaduzair9. Superseeds PR #2454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2913
https://github.com/root-project/root/pull/2913:97,reliability,integr,integrates,97,[TMVA] CV Avg ROC; Adds drawing possibilities for average ROC curves with cross validation. This integrates the work of @mohammaduzair9. Superseeds PR #2454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2913
https://github.com/root-project/root/pull/2913:80,safety,valid,validation,80,[TMVA] CV Avg ROC; Adds drawing possibilities for average ROC curves with cross validation. This integrates the work of @mohammaduzair9. Superseeds PR #2454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2913
https://github.com/root-project/root/pull/2913:80,security,validat,validation,80,[TMVA] CV Avg ROC; Adds drawing possibilities for average ROC curves with cross validation. This integrates the work of @mohammaduzair9. Superseeds PR #2454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2913
https://github.com/root-project/root/pull/2913:97,security,integr,integrates,97,[TMVA] CV Avg ROC; Adds drawing possibilities for average ROC curves with cross validation. This integrates the work of @mohammaduzair9. Superseeds PR #2454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2913
https://github.com/root-project/root/pull/2913:97,testability,integr,integrates,97,[TMVA] CV Avg ROC; Adds drawing possibilities for average ROC curves with cross validation. This integrates the work of @mohammaduzair9. Superseeds PR #2454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2913
https://github.com/root-project/root/pull/2914:37,deployability,integr,integrates,37,[TMVA] CV Stratified splitting; This integrates the work of @mohammaduzair9 on stratified splitting for cross validation. Superseeds PR #2557.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2914
https://github.com/root-project/root/pull/2914:37,integrability,integr,integrates,37,[TMVA] CV Stratified splitting; This integrates the work of @mohammaduzair9 on stratified splitting for cross validation. Superseeds PR #2557.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2914
https://github.com/root-project/root/pull/2914:37,interoperability,integr,integrates,37,[TMVA] CV Stratified splitting; This integrates the work of @mohammaduzair9 on stratified splitting for cross validation. Superseeds PR #2557.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2914
https://github.com/root-project/root/pull/2914:37,modifiability,integr,integrates,37,[TMVA] CV Stratified splitting; This integrates the work of @mohammaduzair9 on stratified splitting for cross validation. Superseeds PR #2557.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2914
https://github.com/root-project/root/pull/2914:37,reliability,integr,integrates,37,[TMVA] CV Stratified splitting; This integrates the work of @mohammaduzair9 on stratified splitting for cross validation. Superseeds PR #2557.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2914
https://github.com/root-project/root/pull/2914:110,safety,valid,validation,110,[TMVA] CV Stratified splitting; This integrates the work of @mohammaduzair9 on stratified splitting for cross validation. Superseeds PR #2557.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2914
https://github.com/root-project/root/pull/2914:37,security,integr,integrates,37,[TMVA] CV Stratified splitting; This integrates the work of @mohammaduzair9 on stratified splitting for cross validation. Superseeds PR #2557.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2914
https://github.com/root-project/root/pull/2914:110,security,validat,validation,110,[TMVA] CV Stratified splitting; This integrates the work of @mohammaduzair9 on stratified splitting for cross validation. Superseeds PR #2557.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2914
https://github.com/root-project/root/pull/2914:37,testability,integr,integrates,37,[TMVA] CV Stratified splitting; This integrates the work of @mohammaduzair9 on stratified splitting for cross validation. Superseeds PR #2557.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2914
https://github.com/root-project/root/pull/2915:58,integrability,interfac,interface,58,"[cxxmodules] Add HasPCMForLibrary to gInterpreter; Add an interface to gInterpreter, which can be used like:. ```. root [1] gInterpreter->HasPCMForLibrary(""libCore.so""). (bool) true. ```. With this, you can check if there is a pcm for a certain library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2915
https://github.com/root-project/root/pull/2915:58,interoperability,interfac,interface,58,"[cxxmodules] Add HasPCMForLibrary to gInterpreter; Add an interface to gInterpreter, which can be used like:. ```. root [1] gInterpreter->HasPCMForLibrary(""libCore.so""). (bool) true. ```. With this, you can check if there is a pcm for a certain library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2915
https://github.com/root-project/root/pull/2915:58,modifiability,interfac,interface,58,"[cxxmodules] Add HasPCMForLibrary to gInterpreter; Add an interface to gInterpreter, which can be used like:. ```. root [1] gInterpreter->HasPCMForLibrary(""libCore.so""). (bool) true. ```. With this, you can check if there is a pcm for a certain library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2915
https://github.com/root-project/root/pull/2917:27,safety,test,testing,27,Spurrious change to enable testing jenkins;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2917:27,testability,test,testing,27,Spurrious change to enable testing jenkins;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2917
https://github.com/root-project/root/pull/2918:17,deployability,version,version,17,"[clad] Bump clad version to v0.4.; The new release includes some improvements in both Forward and. Reverse mode:. * Support `x += y`, `x -= y`, `x *= y`, `x /= y`, `x++`, `x--`, `++x`, `--x`. in forward mode. * Reduce emission of unused expressions. * Add a special `#pragma clad ON/OFF/DEFAULT` to annotate regions which. contain derivatives. * Various small optimizations. See more at: https://github.com/vgvassilev/clad/blob/v0.4/docs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2918
https://github.com/root-project/root/pull/2918:43,deployability,releas,release,43,"[clad] Bump clad version to v0.4.; The new release includes some improvements in both Forward and. Reverse mode:. * Support `x += y`, `x -= y`, `x *= y`, `x /= y`, `x++`, `x--`, `++x`, `--x`. in forward mode. * Reduce emission of unused expressions. * Add a special `#pragma clad ON/OFF/DEFAULT` to annotate regions which. contain derivatives. * Various small optimizations. See more at: https://github.com/vgvassilev/clad/blob/v0.4/docs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2918
https://github.com/root-project/root/pull/2918:323,deployability,contain,contain,323,"[clad] Bump clad version to v0.4.; The new release includes some improvements in both Forward and. Reverse mode:. * Support `x += y`, `x -= y`, `x *= y`, `x /= y`, `x++`, `x--`, `++x`, `--x`. in forward mode. * Reduce emission of unused expressions. * Add a special `#pragma clad ON/OFF/DEFAULT` to annotate regions which. contain derivatives. * Various small optimizations. See more at: https://github.com/vgvassilev/clad/blob/v0.4/docs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2918
https://github.com/root-project/root/pull/2918:438,deployability,Releas,ReleaseNotes,438,"[clad] Bump clad version to v0.4.; The new release includes some improvements in both Forward and. Reverse mode:. * Support `x += y`, `x -= y`, `x *= y`, `x /= y`, `x++`, `x--`, `++x`, `--x`. in forward mode. * Reduce emission of unused expressions. * Add a special `#pragma clad ON/OFF/DEFAULT` to annotate regions which. contain derivatives. * Various small optimizations. See more at: https://github.com/vgvassilev/clad/blob/v0.4/docs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2918
https://github.com/root-project/root/pull/2918:211,energy efficiency,Reduc,Reduce,211,"[clad] Bump clad version to v0.4.; The new release includes some improvements in both Forward and. Reverse mode:. * Support `x += y`, `x -= y`, `x *= y`, `x /= y`, `x++`, `x--`, `++x`, `--x`. in forward mode. * Reduce emission of unused expressions. * Add a special `#pragma clad ON/OFF/DEFAULT` to annotate regions which. contain derivatives. * Various small optimizations. See more at: https://github.com/vgvassilev/clad/blob/v0.4/docs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2918
https://github.com/root-project/root/pull/2918:360,energy efficiency,optim,optimizations,360,"[clad] Bump clad version to v0.4.; The new release includes some improvements in both Forward and. Reverse mode:. * Support `x += y`, `x -= y`, `x *= y`, `x /= y`, `x++`, `x--`, `++x`, `--x`. in forward mode. * Reduce emission of unused expressions. * Add a special `#pragma clad ON/OFF/DEFAULT` to annotate regions which. contain derivatives. * Various small optimizations. See more at: https://github.com/vgvassilev/clad/blob/v0.4/docs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2918
https://github.com/root-project/root/pull/2918:17,integrability,version,version,17,"[clad] Bump clad version to v0.4.; The new release includes some improvements in both Forward and. Reverse mode:. * Support `x += y`, `x -= y`, `x *= y`, `x /= y`, `x++`, `x--`, `++x`, `--x`. in forward mode. * Reduce emission of unused expressions. * Add a special `#pragma clad ON/OFF/DEFAULT` to annotate regions which. contain derivatives. * Various small optimizations. See more at: https://github.com/vgvassilev/clad/blob/v0.4/docs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2918
https://github.com/root-project/root/pull/2918:17,modifiability,version,version,17,"[clad] Bump clad version to v0.4.; The new release includes some improvements in both Forward and. Reverse mode:. * Support `x += y`, `x -= y`, `x *= y`, `x /= y`, `x++`, `x--`, `++x`, `--x`. in forward mode. * Reduce emission of unused expressions. * Add a special `#pragma clad ON/OFF/DEFAULT` to annotate regions which. contain derivatives. * Various small optimizations. See more at: https://github.com/vgvassilev/clad/blob/v0.4/docs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2918
https://github.com/root-project/root/pull/2918:360,performance,optimiz,optimizations,360,"[clad] Bump clad version to v0.4.; The new release includes some improvements in both Forward and. Reverse mode:. * Support `x += y`, `x -= y`, `x *= y`, `x /= y`, `x++`, `x--`, `++x`, `--x`. in forward mode. * Reduce emission of unused expressions. * Add a special `#pragma clad ON/OFF/DEFAULT` to annotate regions which. contain derivatives. * Various small optimizations. See more at: https://github.com/vgvassilev/clad/blob/v0.4/docs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2918
https://github.com/root-project/root/pull/2918:268,reliability,pra,pragma,268,"[clad] Bump clad version to v0.4.; The new release includes some improvements in both Forward and. Reverse mode:. * Support `x += y`, `x -= y`, `x *= y`, `x /= y`, `x++`, `x--`, `++x`, `--x`. in forward mode. * Reduce emission of unused expressions. * Add a special `#pragma clad ON/OFF/DEFAULT` to annotate regions which. contain derivatives. * Various small optimizations. See more at: https://github.com/vgvassilev/clad/blob/v0.4/docs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2918
https://github.com/root-project/root/pull/2918:116,usability,Support,Support,116,"[clad] Bump clad version to v0.4.; The new release includes some improvements in both Forward and. Reverse mode:. * Support `x += y`, `x -= y`, `x *= y`, `x /= y`, `x++`, `x--`, `++x`, `--x`. in forward mode. * Reduce emission of unused expressions. * Add a special `#pragma clad ON/OFF/DEFAULT` to annotate regions which. contain derivatives. * Various small optimizations. See more at: https://github.com/vgvassilev/clad/blob/v0.4/docs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2918
https://github.com/root-project/root/pull/2919:55,energy efficiency,model,models,55,[DF] Set axes titles of histos and graphs obtained w/o models; and test the feature.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2919
https://github.com/root-project/root/pull/2919:67,safety,test,test,67,[DF] Set axes titles of histos and graphs obtained w/o models; and test the feature.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2919
https://github.com/root-project/root/pull/2919:55,security,model,models,55,[DF] Set axes titles of histos and graphs obtained w/o models; and test the feature.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2919
https://github.com/root-project/root/pull/2919:67,testability,test,test,67,[DF] Set axes titles of histos and graphs obtained w/o models; and test the feature.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2919
https://github.com/root-project/root/pull/2921:71,deployability,contain,contains,71,"[TTreeReader][ROOT-9757] Return the correct branch; - When a leaf name contains the name of its parent branch on it and a. branch with the desired name has already been found, the priority. given by SearchBranchWithCompositeName should not be considered. - Test added in [#250](https://github.com/root-project/roottest/pull/250)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2921
https://github.com/root-project/root/pull/2921:257,safety,Test,Test,257,"[TTreeReader][ROOT-9757] Return the correct branch; - When a leaf name contains the name of its parent branch on it and a. branch with the desired name has already been found, the priority. given by SearchBranchWithCompositeName should not be considered. - Test added in [#250](https://github.com/root-project/roottest/pull/250)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2921
https://github.com/root-project/root/pull/2921:257,testability,Test,Test,257,"[TTreeReader][ROOT-9757] Return the correct branch; - When a leaf name contains the name of its parent branch on it and a. branch with the desired name has already been found, the priority. given by SearchBranchWithCompositeName should not be considered. - Test added in [#250](https://github.com/root-project/roottest/pull/250)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2921
https://github.com/root-project/root/pull/2922:166,integrability,Configur,Configure,166,TWebCanvas: several fixes for custom object painters; Create TView3D only when not exists in the pad. Scan and create custom colors list after objects painting done. Configure webwindow geometry before showing canvas. Few small fixes on JSROOT side,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2922
https://github.com/root-project/root/pull/2922:166,modifiability,Configur,Configure,166,TWebCanvas: several fixes for custom object painters; Create TView3D only when not exists in the pad. Scan and create custom colors list after objects painting done. Configure webwindow geometry before showing canvas. Few small fixes on JSROOT side,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2922
https://github.com/root-project/root/pull/2922:166,security,Configur,Configure,166,TWebCanvas: several fixes for custom object painters; Create TView3D only when not exists in the pad. Scan and create custom colors list after objects painting done. Configure webwindow geometry before showing canvas. Few small fixes on JSROOT side,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2922
https://github.com/root-project/root/pull/2922:30,usability,custom,custom,30,TWebCanvas: several fixes for custom object painters; Create TView3D only when not exists in the pad. Scan and create custom colors list after objects painting done. Configure webwindow geometry before showing canvas. Few small fixes on JSROOT side,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2922
https://github.com/root-project/root/pull/2922:118,usability,custom,custom,118,TWebCanvas: several fixes for custom object painters; Create TView3D only when not exists in the pad. Scan and create custom colors list after objects painting done. Configure webwindow geometry before showing canvas. Few small fixes on JSROOT side,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2922
https://github.com/root-project/root/pull/2923:54,usability,help,helpers,54,[VecOps] Fix ROOT-9771 and add example snippet to all helpers doc;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2923
https://github.com/root-project/root/pull/2924:38,availability,error,error,38,"Eve7: fix compiler warning, fix in JS error checks;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2924
https://github.com/root-project/root/pull/2924:38,performance,error,error,38,"Eve7: fix compiler warning, fix in JS error checks;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2924
https://github.com/root-project/root/pull/2924:38,safety,error,error,38,"Eve7: fix compiler warning, fix in JS error checks;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2924
https://github.com/root-project/root/pull/2924:38,usability,error,error,38,"Eve7: fix compiler warning, fix in JS error checks;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2924
https://github.com/root-project/root/pull/2925:13,safety,Test,Test,13,"[Exp PyROOT] Test char array branches are properly read as Python str; This PR adds a test to check the right behaviour when reading character arrays into Python strings, as reported in [ROOT-9768](https://sft.its.cern.ch/jira/browse/ROOT-9768). In modern Cppyy (and therefore in experimental PyROOT), character arrays are treated differently than numeric arrays: they are converted into Python strings taking into account the '\0' character that marks end of string in C.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2925
https://github.com/root-project/root/pull/2925:86,safety,test,test,86,"[Exp PyROOT] Test char array branches are properly read as Python str; This PR adds a test to check the right behaviour when reading character arrays into Python strings, as reported in [ROOT-9768](https://sft.its.cern.ch/jira/browse/ROOT-9768). In modern Cppyy (and therefore in experimental PyROOT), character arrays are treated differently than numeric arrays: they are converted into Python strings taking into account the '\0' character that marks end of string in C.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2925
https://github.com/root-project/root/pull/2925:13,testability,Test,Test,13,"[Exp PyROOT] Test char array branches are properly read as Python str; This PR adds a test to check the right behaviour when reading character arrays into Python strings, as reported in [ROOT-9768](https://sft.its.cern.ch/jira/browse/ROOT-9768). In modern Cppyy (and therefore in experimental PyROOT), character arrays are treated differently than numeric arrays: they are converted into Python strings taking into account the '\0' character that marks end of string in C.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2925
https://github.com/root-project/root/pull/2925:86,testability,test,test,86,"[Exp PyROOT] Test char array branches are properly read as Python str; This PR adds a test to check the right behaviour when reading character arrays into Python strings, as reported in [ROOT-9768](https://sft.its.cern.ch/jira/browse/ROOT-9768). In modern Cppyy (and therefore in experimental PyROOT), character arrays are treated differently than numeric arrays: they are converted into Python strings taking into account the '\0' character that marks end of string in C.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2925
https://github.com/root-project/root/pull/2925:110,usability,behavi,behaviour,110,"[Exp PyROOT] Test char array branches are properly read as Python str; This PR adds a test to check the right behaviour when reading character arrays into Python strings, as reported in [ROOT-9768](https://sft.its.cern.ch/jira/browse/ROOT-9768). In modern Cppyy (and therefore in experimental PyROOT), character arrays are treated differently than numeric arrays: they are converted into Python strings taking into account the '\0' character that marks end of string in C.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2925
https://github.com/root-project/root/pull/2926:41,deployability,stack,stack,41,[DF][ROOT-9770] Snapshot helper mt files stack;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2926
https://github.com/root-project/root/pull/2926:25,usability,help,helper,25,[DF][ROOT-9770] Snapshot helper mt files stack;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2926
https://github.com/root-project/root/pull/2927:64,integrability,configur,configure,64,TWebCanvas: support gStyle and multiple color palette; Also let configure some attributes via environment variables.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2927
https://github.com/root-project/root/pull/2927:64,modifiability,configur,configure,64,TWebCanvas: support gStyle and multiple color palette; Also let configure some attributes via environment variables.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2927
https://github.com/root-project/root/pull/2927:106,modifiability,variab,variables,106,TWebCanvas: support gStyle and multiple color palette; Also let configure some attributes via environment variables.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2927
https://github.com/root-project/root/pull/2927:64,security,configur,configure,64,TWebCanvas: support gStyle and multiple color palette; Also let configure some attributes via environment variables.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2927
https://github.com/root-project/root/pull/2927:12,usability,support,support,12,TWebCanvas: support gStyle and multiple color palette; Also let configure some attributes via environment variables.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2927
https://github.com/root-project/root/pull/2928:8,integrability,schema,schema,8,Fix for schema evolution; Includes fix for ROOT-9762.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2928
https://github.com/root-project/root/pull/2929:26,deployability,patch,patches,26,fix root 9762 on v6-14-00-patches;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2929
https://github.com/root-project/root/pull/2929:26,safety,patch,patches,26,fix root 9762 on v6-14-00-patches;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2929
https://github.com/root-project/root/pull/2929:26,security,patch,patches,26,fix root 9762 on v6-14-00-patches;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2929
https://github.com/root-project/root/pull/2931:5,energy efficiency,Optim,Optimise,5,[DF] Optimise runtime of RSlotStack by removing useless duplicated map lookup; This PR shall be backported to the 6.14 branch too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2931
https://github.com/root-project/root/pull/2932:35,performance,parallel,parallelization,35,[WIP] Improve documentation of RDF parallelization;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2932
https://github.com/root-project/root/pull/2932:14,usability,document,documentation,14,[WIP] Improve documentation of RDF parallelization;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2932
https://github.com/root-project/root/pull/2933:102,availability,error,errors,102,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:420,availability,error,error,420,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:464,availability,error,error,464,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:517,availability,error,error,517,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:561,availability,error,error,561,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:655,availability,error,errors,655,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:920,availability,error,error,920,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:973,availability,error,error,973,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1017,availability,error,error,1017,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1070,availability,error,error,1070,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1114,availability,Error,Error,1114,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1210,availability,error,errors,1210,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:142,deployability,log,log,142,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:288,deployability,build,builddir,288,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:297,deployability,build,build,297,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:303,deployability,BUILD,BUILD,303,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:368,deployability,build,builddir,368,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:377,deployability,build,build,377,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:383,deployability,BUILD,BUILD,383,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:402,deployability,build,builddir,402,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:677,deployability,fail,fails,677,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:788,deployability,build,builddir,788,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:797,deployability,build,build,797,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:803,deployability,BUILD,BUILD,803,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:868,deployability,build,builddir,868,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:877,deployability,build,build,877,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:883,deployability,BUILD,BUILD,883,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:902,deployability,build,builddir,902,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:102,performance,error,errors,102,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:420,performance,error,error,420,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:464,performance,error,error,464,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:517,performance,error,error,517,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:561,performance,error,error,561,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:655,performance,error,errors,655,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:920,performance,error,error,920,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:973,performance,error,error,973,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1017,performance,error,error,1017,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1070,performance,error,error,1070,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1114,performance,Error,Error,1114,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1210,performance,error,errors,1210,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:677,reliability,fail,fails,677,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:102,safety,error,errors,102,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:142,safety,log,log,142,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:420,safety,error,error,420,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:464,safety,error,error,464,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:517,safety,error,error,517,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:561,safety,error,error,561,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:655,safety,error,errors,655,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:920,safety,error,error,920,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:973,safety,error,error,973,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1017,safety,error,error,1017,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1070,safety,error,error,1070,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1114,safety,Error,Error,1114,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1210,safety,error,errors,1210,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:142,security,log,log,142,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:142,testability,log,log,142,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:102,usability,error,errors,102,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:420,usability,error,error,420,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:464,usability,error,error,464,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:517,usability,error,error,517,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:561,usability,error,error,561,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:655,usability,error,errors,655,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:920,usability,error,error,920,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:973,usability,error,error,973,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1017,usability,error,error,1017,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1070,usability,error,error,1070,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1114,usability,Error,Error,1114,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2933:1210,usability,error,errors,1210,"Let clang ignore some gcc options it hasn't implemented; root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. ```. root 6.14.06 no longer ignores such errors and makepch.py fails:. ```. [ 98%] Generating etc/allDict.cxx.pch. /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. error: unknown argument: '-fstack-clash-protection'. error: unknown argument: '-fcf-protection'. Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h. ```. This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2933
https://github.com/root-project/root/pull/2934:6,safety,Prevent,Prevent,6,[IMT] Prevent work stealing from tasks generated by ROOT;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2934
https://github.com/root-project/root/pull/2934:6,security,Preven,Prevent,6,[IMT] Prevent work stealing from tasks generated by ROOT;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2934
https://github.com/root-project/root/pull/2936:77,deployability,version,versions,77,"[RooFit] Fix race condition when running tutorial tests.; The python and c++ versions of the roofit tutorials compile the same file,. which sometimes breaks one of the two when they run in parallel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2936
https://github.com/root-project/root/pull/2936:77,integrability,version,versions,77,"[RooFit] Fix race condition when running tutorial tests.; The python and c++ versions of the roofit tutorials compile the same file,. which sometimes breaks one of the two when they run in parallel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2936
https://github.com/root-project/root/pull/2936:77,modifiability,version,versions,77,"[RooFit] Fix race condition when running tutorial tests.; The python and c++ versions of the roofit tutorials compile the same file,. which sometimes breaks one of the two when they run in parallel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2936
https://github.com/root-project/root/pull/2936:189,performance,parallel,parallel,189,"[RooFit] Fix race condition when running tutorial tests.; The python and c++ versions of the roofit tutorials compile the same file,. which sometimes breaks one of the two when they run in parallel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2936
https://github.com/root-project/root/pull/2936:50,safety,test,tests,50,"[RooFit] Fix race condition when running tutorial tests.; The python and c++ versions of the roofit tutorials compile the same file,. which sometimes breaks one of the two when they run in parallel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2936
https://github.com/root-project/root/pull/2936:50,testability,test,tests,50,"[RooFit] Fix race condition when running tutorial tests.; The python and c++ versions of the roofit tutorials compile the same file,. which sometimes breaks one of the two when they run in parallel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2936
https://github.com/root-project/root/pull/2938:121,availability,failur,failure,121,"Updating size of the file for stress test ; We need changes because of a new format for compression settings. We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED. last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2938
https://github.com/root-project/root/pull/2938:0,deployability,Updat,Updating,0,"Updating size of the file for stress test ; We need changes because of a new format for compression settings. We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED. last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2938
https://github.com/root-project/root/pull/2938:121,deployability,fail,failure,121,"Updating size of the file for stress test ; We need changes because of a new format for compression settings. We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED. last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2938
https://github.com/root-project/root/pull/2938:205,deployability,FAIL,FAILED,205,"Updating size of the file for stress test ; We need changes because of a new format for compression settings. We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED. last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2938
https://github.com/root-project/root/pull/2938:77,interoperability,format,format,77,"Updating size of the file for stress test ; We need changes because of a new format for compression settings. We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED. last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2938
https://github.com/root-project/root/pull/2938:121,performance,failur,failure,121,"Updating size of the file for stress test ; We need changes because of a new format for compression settings. We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED. last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2938
https://github.com/root-project/root/pull/2938:121,reliability,fail,failure,121,"Updating size of the file for stress test ; We need changes because of a new format for compression settings. We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED. last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2938
https://github.com/root-project/root/pull/2938:205,reliability,FAIL,FAILED,205,"Updating size of the file for stress test ; We need changes because of a new format for compression settings. We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED. last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2938
https://github.com/root-project/root/pull/2938:0,safety,Updat,Updating,0,"Updating size of the file for stress test ; We need changes because of a new format for compression settings. We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED. last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2938
https://github.com/root-project/root/pull/2938:37,safety,test,test,37,"Updating size of the file for stress test ; We need changes because of a new format for compression settings. We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED. last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2938
https://github.com/root-project/root/pull/2938:141,safety,Test,Test,141,"Updating size of the file for stress test ; We need changes because of a new format for compression settings. We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED. last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2938
https://github.com/root-project/root/pull/2938:0,security,Updat,Updating,0,"Updating size of the file for stress test ; We need changes because of a new format for compression settings. We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED. last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2938
https://github.com/root-project/root/pull/2938:37,testability,test,test,37,"Updating size of the file for stress test ; We need changes because of a new format for compression settings. We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED. last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2938
https://github.com/root-project/root/pull/2938:141,testability,Test,Test,141,"Updating size of the file for stress test ; We need changes because of a new format for compression settings. We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED. last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2938
https://github.com/root-project/root/pull/2940:27,availability,error,error,27,"Fixed demos.C redefinition error of dirName; Fixed Issue #9764. **Before:**. <img width=""640"" alt=""redifinition-1"" src=""https://user-images.githubusercontent.com/25840461/48144391-9a079d80-e2d2-11e8-8d6e-96be0d04792e.png"">. **After:**. <img width=""637"" alt=""screenshot 2018-11-07 at 9 12 28 pm"" src=""https://user-images.githubusercontent.com/25840461/48144412-a55ac900-e2d2-11e8-9c4f-155f70e43c4d.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2940
https://github.com/root-project/root/pull/2940:27,performance,error,error,27,"Fixed demos.C redefinition error of dirName; Fixed Issue #9764. **Before:**. <img width=""640"" alt=""redifinition-1"" src=""https://user-images.githubusercontent.com/25840461/48144391-9a079d80-e2d2-11e8-8d6e-96be0d04792e.png"">. **After:**. <img width=""637"" alt=""screenshot 2018-11-07 at 9 12 28 pm"" src=""https://user-images.githubusercontent.com/25840461/48144412-a55ac900-e2d2-11e8-9c4f-155f70e43c4d.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2940
https://github.com/root-project/root/pull/2940:27,safety,error,error,27,"Fixed demos.C redefinition error of dirName; Fixed Issue #9764. **Before:**. <img width=""640"" alt=""redifinition-1"" src=""https://user-images.githubusercontent.com/25840461/48144391-9a079d80-e2d2-11e8-8d6e-96be0d04792e.png"">. **After:**. <img width=""637"" alt=""screenshot 2018-11-07 at 9 12 28 pm"" src=""https://user-images.githubusercontent.com/25840461/48144412-a55ac900-e2d2-11e8-9c4f-155f70e43c4d.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2940
https://github.com/root-project/root/pull/2940:27,usability,error,error,27,"Fixed demos.C redefinition error of dirName; Fixed Issue #9764. **Before:**. <img width=""640"" alt=""redifinition-1"" src=""https://user-images.githubusercontent.com/25840461/48144391-9a079d80-e2d2-11e8-8d6e-96be0d04792e.png"">. **After:**. <img width=""637"" alt=""screenshot 2018-11-07 at 9 12 28 pm"" src=""https://user-images.githubusercontent.com/25840461/48144412-a55ac900-e2d2-11e8-9c4f-155f70e43c4d.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2940
https://github.com/root-project/root/pull/2940:128,usability,user,user-images,128,"Fixed demos.C redefinition error of dirName; Fixed Issue #9764. **Before:**. <img width=""640"" alt=""redifinition-1"" src=""https://user-images.githubusercontent.com/25840461/48144391-9a079d80-e2d2-11e8-8d6e-96be0d04792e.png"">. **After:**. <img width=""637"" alt=""screenshot 2018-11-07 at 9 12 28 pm"" src=""https://user-images.githubusercontent.com/25840461/48144412-a55ac900-e2d2-11e8-9c4f-155f70e43c4d.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2940
https://github.com/root-project/root/pull/2940:308,usability,user,user-images,308,"Fixed demos.C redefinition error of dirName; Fixed Issue #9764. **Before:**. <img width=""640"" alt=""redifinition-1"" src=""https://user-images.githubusercontent.com/25840461/48144391-9a079d80-e2d2-11e8-8d6e-96be0d04792e.png"">. **After:**. <img width=""637"" alt=""screenshot 2018-11-07 at 9 12 28 pm"" src=""https://user-images.githubusercontent.com/25840461/48144412-a55ac900-e2d2-11e8-9c4f-155f70e43c4d.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2940
https://github.com/root-project/root/pull/2942:33,availability,error,error,33,"Work around to silent a compiler error on Windows; This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2942:92,availability,error,error,92,"Work around to silent a compiler error on Windows; This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2942:291,availability,error,error-,291,"Work around to silent a compiler error on Windows; This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2942:33,performance,error,error,33,"Work around to silent a compiler error on Windows; This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2942:92,performance,error,error,92,"Work around to silent a compiler error on Windows; This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2942:262,performance,content,content,262,"Work around to silent a compiler error on Windows; This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2942:291,performance,error,error-,291,"Work around to silent a compiler error on Windows; This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2942:33,safety,error,error,33,"Work around to silent a compiler error on Windows; This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2942:92,safety,error,error,92,"Work around to silent a compiler error on Windows; This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2942:291,safety,error,error-,291,"Work around to silent a compiler error on Windows; This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2942:33,usability,error,error,33,"Work around to silent a compiler error on Windows; This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2942:92,usability,error,error,92,"Work around to silent a compiler error on Windows; This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2942:245,usability,visual,visualstudio,245,"Work around to silent a compiler error on Windows; This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2942:291,usability,error,error-,291,"Work around to silent a compiler error on Windows; This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2942
https://github.com/root-project/root/pull/2944:31,deployability,build,building,31,Add VDT include directory when building with external vdt; Compilation of TMVA fails now when using an external VDT. This PR fixes this issue,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:79,deployability,fail,fails,79,Add VDT include directory when building with external vdt; Compilation of TMVA fails now when using an external VDT. This PR fixes this issue,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2944:79,reliability,fail,fails,79,Add VDT include directory when building with external vdt; Compilation of TMVA fails now when using an external VDT. This PR fixes this issue,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2944
https://github.com/root-project/root/pull/2945:184,energy efficiency,draw,drawings,184,jsroot: several fixes from dev; Provide methods to check if sending via websocket is possible. Fix - correctly handle negative parameter values in TF1/TF2. Fix - clear range flag when drawings are cleared. Fix - do not forget reset pads cache when changing TWebCanvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2945
https://github.com/root-project/root/pull/2945:127,modifiability,paramet,parameter,127,jsroot: several fixes from dev; Provide methods to check if sending via websocket is possible. Fix - correctly handle negative parameter values in TF1/TF2. Fix - clear range flag when drawings are cleared. Fix - do not forget reset pads cache when changing TWebCanvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2945
https://github.com/root-project/root/pull/2945:237,performance,cach,cache,237,jsroot: several fixes from dev; Provide methods to check if sending via websocket is possible. Fix - correctly handle negative parameter values in TF1/TF2. Fix - clear range flag when drawings are cleared. Fix - do not forget reset pads cache when changing TWebCanvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2945
https://github.com/root-project/root/pull/2945:162,usability,clear,clear,162,jsroot: several fixes from dev; Provide methods to check if sending via websocket is possible. Fix - correctly handle negative parameter values in TF1/TF2. Fix - clear range flag when drawings are cleared. Fix - do not forget reset pads cache when changing TWebCanvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2945
https://github.com/root-project/root/pull/2945:197,usability,clear,cleared,197,jsroot: several fixes from dev; Provide methods to check if sending via websocket is possible. Fix - correctly handle negative parameter values in TF1/TF2. Fix - clear range flag when drawings are cleared. Fix - do not forget reset pads cache when changing TWebCanvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2945
https://github.com/root-project/root/pull/2946:1,deployability,Build,BuildSystem,1,[BuildSystem] Fetch xrootd tarball from lcg web site rather than xrootd's;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2946
https://github.com/root-project/root/pull/2947:39,availability,Error,Error,39,Use in Mathcore macros defined in Math/Error.h for reporting error; This fixes a compilation problem observed on mac 10.14,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2947
https://github.com/root-project/root/pull/2947:61,availability,error,error,61,Use in Mathcore macros defined in Math/Error.h for reporting error; This fixes a compilation problem observed on mac 10.14,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2947
https://github.com/root-project/root/pull/2947:101,deployability,observ,observed,101,Use in Mathcore macros defined in Math/Error.h for reporting error; This fixes a compilation problem observed on mac 10.14,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2947
https://github.com/root-project/root/pull/2947:39,performance,Error,Error,39,Use in Mathcore macros defined in Math/Error.h for reporting error; This fixes a compilation problem observed on mac 10.14,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2947
https://github.com/root-project/root/pull/2947:61,performance,error,error,61,Use in Mathcore macros defined in Math/Error.h for reporting error; This fixes a compilation problem observed on mac 10.14,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2947
https://github.com/root-project/root/pull/2947:39,safety,Error,Error,39,Use in Mathcore macros defined in Math/Error.h for reporting error; This fixes a compilation problem observed on mac 10.14,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2947
https://github.com/root-project/root/pull/2947:61,safety,error,error,61,Use in Mathcore macros defined in Math/Error.h for reporting error; This fixes a compilation problem observed on mac 10.14,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2947
https://github.com/root-project/root/pull/2947:101,testability,observ,observed,101,Use in Mathcore macros defined in Math/Error.h for reporting error; This fixes a compilation problem observed on mac 10.14,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2947
https://github.com/root-project/root/pull/2947:39,usability,Error,Error,39,Use in Mathcore macros defined in Math/Error.h for reporting error; This fixes a compilation problem observed on mac 10.14,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2947
https://github.com/root-project/root/pull/2947:61,usability,error,error,61,Use in Mathcore macros defined in Math/Error.h for reporting error; This fixes a compilation problem observed on mac 10.14,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2947
https://github.com/root-project/root/pull/2948:1,deployability,Build,BuildSystem,1,[BuildSystem] Require TBB 2018 if not built-in;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2948
https://github.com/root-project/root/pull/2949:7,deployability,Updat,Update,7,"[DOCS] Update RDF release notes; - remove note on TIterationHelper renaming (it's internal). - small clarification about support of `rdfentry_`, `rdfslot_`. - add mention that parallel execution is now saner",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2949
https://github.com/root-project/root/pull/2949:18,deployability,releas,release,18,"[DOCS] Update RDF release notes; - remove note on TIterationHelper renaming (it's internal). - small clarification about support of `rdfentry_`, `rdfslot_`. - add mention that parallel execution is now saner",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2949
https://github.com/root-project/root/pull/2949:176,performance,parallel,parallel,176,"[DOCS] Update RDF release notes; - remove note on TIterationHelper renaming (it's internal). - small clarification about support of `rdfentry_`, `rdfslot_`. - add mention that parallel execution is now saner",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2949
https://github.com/root-project/root/pull/2949:7,safety,Updat,Update,7,"[DOCS] Update RDF release notes; - remove note on TIterationHelper renaming (it's internal). - small clarification about support of `rdfentry_`, `rdfslot_`. - add mention that parallel execution is now saner",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2949
https://github.com/root-project/root/pull/2949:7,security,Updat,Update,7,"[DOCS] Update RDF release notes; - remove note on TIterationHelper renaming (it's internal). - small clarification about support of `rdfentry_`, `rdfslot_`. - add mention that parallel execution is now saner",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2949
https://github.com/root-project/root/pull/2949:121,usability,support,support,121,"[DOCS] Update RDF release notes; - remove note on TIterationHelper renaming (it's internal). - small clarification about support of `rdfentry_`, `rdfslot_`. - add mention that parallel execution is now saner",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2949
https://github.com/root-project/root/pull/2950:46,deployability,depend,dependency,46,"[ROOT-9665] Fix processing in RooCmdArg; If a dependency is added multiple times, but proven to be satisfied only once, RooCmdArg rejects the command.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2950
https://github.com/root-project/root/pull/2950:46,integrability,depend,dependency,46,"[ROOT-9665] Fix processing in RooCmdArg; If a dependency is added multiple times, but proven to be satisfied only once, RooCmdArg rejects the command.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2950
https://github.com/root-project/root/pull/2950:46,modifiability,depend,dependency,46,"[ROOT-9665] Fix processing in RooCmdArg; If a dependency is added multiple times, but proven to be satisfied only once, RooCmdArg rejects the command.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2950
https://github.com/root-project/root/pull/2950:75,performance,time,times,75,"[ROOT-9665] Fix processing in RooCmdArg; If a dependency is added multiple times, but proven to be satisfied only once, RooCmdArg rejects the command.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2950
https://github.com/root-project/root/pull/2950:46,safety,depend,dependency,46,"[ROOT-9665] Fix processing in RooCmdArg; If a dependency is added multiple times, but proven to be satisfied only once, RooCmdArg rejects the command.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2950
https://github.com/root-project/root/pull/2950:46,testability,depend,dependency,46,"[ROOT-9665] Fix processing in RooCmdArg; If a dependency is added multiple times, but proven to be satisfied only once, RooCmdArg rejects the command.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2950
https://github.com/root-project/root/pull/2950:142,usability,command,command,142,"[ROOT-9665] Fix processing in RooCmdArg; If a dependency is added multiple times, but proven to be satisfied only once, RooCmdArg rejects the command.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2950
https://github.com/root-project/root/pull/2951:1,deployability,Build,BuildSystem,1,[BuildSystem] Remove warning: exclude TTreeProcessorMT selection in noimt builds;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2951
https://github.com/root-project/root/pull/2951:74,deployability,build,builds,74,[BuildSystem] Remove warning: exclude TTreeProcessorMT selection in noimt builds;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2951
https://github.com/root-project/root/pull/2952:16,deployability,instal,installation,16,"[ROOT-9685] Fix installation of generated kernel.json file; #2906 introduced the generation of the `kernel.json` file of the ROOT C++ kernel at build time, so that it contained the python version that ROOT was built with. This PR adds the installation of such file, which was missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2952
https://github.com/root-project/root/pull/2952:144,deployability,build,build,144,"[ROOT-9685] Fix installation of generated kernel.json file; #2906 introduced the generation of the `kernel.json` file of the ROOT C++ kernel at build time, so that it contained the python version that ROOT was built with. This PR adds the installation of such file, which was missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2952
https://github.com/root-project/root/pull/2952:167,deployability,contain,contained,167,"[ROOT-9685] Fix installation of generated kernel.json file; #2906 introduced the generation of the `kernel.json` file of the ROOT C++ kernel at build time, so that it contained the python version that ROOT was built with. This PR adds the installation of such file, which was missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2952
https://github.com/root-project/root/pull/2952:188,deployability,version,version,188,"[ROOT-9685] Fix installation of generated kernel.json file; #2906 introduced the generation of the `kernel.json` file of the ROOT C++ kernel at build time, so that it contained the python version that ROOT was built with. This PR adds the installation of such file, which was missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2952
https://github.com/root-project/root/pull/2952:239,deployability,instal,installation,239,"[ROOT-9685] Fix installation of generated kernel.json file; #2906 introduced the generation of the `kernel.json` file of the ROOT C++ kernel at build time, so that it contained the python version that ROOT was built with. This PR adds the installation of such file, which was missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2952
https://github.com/root-project/root/pull/2952:188,integrability,version,version,188,"[ROOT-9685] Fix installation of generated kernel.json file; #2906 introduced the generation of the `kernel.json` file of the ROOT C++ kernel at build time, so that it contained the python version that ROOT was built with. This PR adds the installation of such file, which was missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2952
https://github.com/root-project/root/pull/2952:188,modifiability,version,version,188,"[ROOT-9685] Fix installation of generated kernel.json file; #2906 introduced the generation of the `kernel.json` file of the ROOT C++ kernel at build time, so that it contained the python version that ROOT was built with. This PR adds the installation of such file, which was missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2952
https://github.com/root-project/root/pull/2952:150,performance,time,time,150,"[ROOT-9685] Fix installation of generated kernel.json file; #2906 introduced the generation of the `kernel.json` file of the ROOT C++ kernel at build time, so that it contained the python version that ROOT was built with. This PR adds the installation of such file, which was missing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2952
https://github.com/root-project/root/pull/2953:300,deployability,modul,module,300,[Exp PyROOT] Document the types of helpers in PyROOT; There are two types of helper functions in PyROOT: those that are used from the pythonizors in Python and those that are used from the C++ implementation of the pythonizations. Only the former are exposed in the interface of the PyROOT extension module. This PR adds the necessary documentation to explain this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2953
https://github.com/root-project/root/pull/2953:266,integrability,interfac,interface,266,[Exp PyROOT] Document the types of helpers in PyROOT; There are two types of helper functions in PyROOT: those that are used from the pythonizors in Python and those that are used from the C++ implementation of the pythonizations. Only the former are exposed in the interface of the PyROOT extension module. This PR adds the necessary documentation to explain this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2953
https://github.com/root-project/root/pull/2953:266,interoperability,interfac,interface,266,[Exp PyROOT] Document the types of helpers in PyROOT; There are two types of helper functions in PyROOT: those that are used from the pythonizors in Python and those that are used from the C++ implementation of the pythonizations. Only the former are exposed in the interface of the PyROOT extension module. This PR adds the necessary documentation to explain this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2953
https://github.com/root-project/root/pull/2953:266,modifiability,interfac,interface,266,[Exp PyROOT] Document the types of helpers in PyROOT; There are two types of helper functions in PyROOT: those that are used from the pythonizors in Python and those that are used from the C++ implementation of the pythonizations. Only the former are exposed in the interface of the PyROOT extension module. This PR adds the necessary documentation to explain this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2953
https://github.com/root-project/root/pull/2953:290,modifiability,extens,extension,290,[Exp PyROOT] Document the types of helpers in PyROOT; There are two types of helper functions in PyROOT: those that are used from the pythonizors in Python and those that are used from the C++ implementation of the pythonizations. Only the former are exposed in the interface of the PyROOT extension module. This PR adds the necessary documentation to explain this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2953
https://github.com/root-project/root/pull/2953:300,modifiability,modul,module,300,[Exp PyROOT] Document the types of helpers in PyROOT; There are two types of helper functions in PyROOT: those that are used from the pythonizors in Python and those that are used from the C++ implementation of the pythonizations. Only the former are exposed in the interface of the PyROOT extension module. This PR adds the necessary documentation to explain this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2953
https://github.com/root-project/root/pull/2953:300,safety,modul,module,300,[Exp PyROOT] Document the types of helpers in PyROOT; There are two types of helper functions in PyROOT: those that are used from the pythonizors in Python and those that are used from the C++ implementation of the pythonizations. Only the former are exposed in the interface of the PyROOT extension module. This PR adds the necessary documentation to explain this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2953
https://github.com/root-project/root/pull/2953:251,security,expos,exposed,251,[Exp PyROOT] Document the types of helpers in PyROOT; There are two types of helper functions in PyROOT: those that are used from the pythonizors in Python and those that are used from the C++ implementation of the pythonizations. Only the former are exposed in the interface of the PyROOT extension module. This PR adds the necessary documentation to explain this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2953
https://github.com/root-project/root/pull/2953:13,usability,Document,Document,13,[Exp PyROOT] Document the types of helpers in PyROOT; There are two types of helper functions in PyROOT: those that are used from the pythonizors in Python and those that are used from the C++ implementation of the pythonizations. Only the former are exposed in the interface of the PyROOT extension module. This PR adds the necessary documentation to explain this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2953
https://github.com/root-project/root/pull/2953:35,usability,help,helpers,35,[Exp PyROOT] Document the types of helpers in PyROOT; There are two types of helper functions in PyROOT: those that are used from the pythonizors in Python and those that are used from the C++ implementation of the pythonizations. Only the former are exposed in the interface of the PyROOT extension module. This PR adds the necessary documentation to explain this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2953
https://github.com/root-project/root/pull/2953:77,usability,help,helper,77,[Exp PyROOT] Document the types of helpers in PyROOT; There are two types of helper functions in PyROOT: those that are used from the pythonizors in Python and those that are used from the C++ implementation of the pythonizations. Only the former are exposed in the interface of the PyROOT extension module. This PR adds the necessary documentation to explain this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2953
https://github.com/root-project/root/pull/2953:335,usability,document,documentation,335,[Exp PyROOT] Document the types of helpers in PyROOT; There are two types of helper functions in PyROOT: those that are used from the pythonizors in Python and those that are used from the C++ implementation of the pythonizations. Only the former are exposed in the interface of the PyROOT extension module. This PR adds the necessary documentation to explain this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2953
https://github.com/root-project/root/pull/2954:11,usability,Command,Command,11,"Fixed "".?"" Command for showing help; Fixed .? command and made it equivalent to .help.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2954
https://github.com/root-project/root/pull/2954:31,usability,help,help,31,"Fixed "".?"" Command for showing help; Fixed .? command and made it equivalent to .help.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2954
https://github.com/root-project/root/pull/2954:46,usability,command,command,46,"Fixed "".?"" Command for showing help; Fixed .? command and made it equivalent to .help.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2954
https://github.com/root-project/root/pull/2954:81,usability,help,help,81,"Fixed "".?"" Command for showing help; Fixed .? command and made it equivalent to .help.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2954
https://github.com/root-project/root/pull/2955:22,deployability,Upgrad,Upgrade,22,Remove reentrancy ; - Upgrade builtin tbb to 2019 and require at least 2018. - Isolate work in TThreadedExecutor. - Add test for concurrency in RDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2955
https://github.com/root-project/root/pull/2955:22,modifiability,Upgrad,Upgrade,22,Remove reentrancy ; - Upgrade builtin tbb to 2019 and require at least 2018. - Isolate work in TThreadedExecutor. - Add test for concurrency in RDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2955
https://github.com/root-project/root/pull/2955:129,performance,concurren,concurrency,129,Remove reentrancy ; - Upgrade builtin tbb to 2019 and require at least 2018. - Isolate work in TThreadedExecutor. - Add test for concurrency in RDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2955
https://github.com/root-project/root/pull/2955:79,safety,Isol,Isolate,79,Remove reentrancy ; - Upgrade builtin tbb to 2019 and require at least 2018. - Isolate work in TThreadedExecutor. - Add test for concurrency in RDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2955
https://github.com/root-project/root/pull/2955:120,safety,test,test,120,Remove reentrancy ; - Upgrade builtin tbb to 2019 and require at least 2018. - Isolate work in TThreadedExecutor. - Add test for concurrency in RDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2955
https://github.com/root-project/root/pull/2955:79,security,Iso,Isolate,79,Remove reentrancy ; - Upgrade builtin tbb to 2019 and require at least 2018. - Isolate work in TThreadedExecutor. - Add test for concurrency in RDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2955
https://github.com/root-project/root/pull/2955:79,testability,Isol,Isolate,79,Remove reentrancy ; - Upgrade builtin tbb to 2019 and require at least 2018. - Isolate work in TThreadedExecutor. - Add test for concurrency in RDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2955
https://github.com/root-project/root/pull/2955:120,testability,test,test,120,Remove reentrancy ; - Upgrade builtin tbb to 2019 and require at least 2018. - Isolate work in TThreadedExecutor. - Add test for concurrency in RDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2955
https://github.com/root-project/root/pull/2956:166,availability,slo,slot,166,"[DF] Fix rare race condition: TTreeReader and its values deleted concurrently; In a nutshell, the condition was:. - Thread #1) a task ends and pushes back processing slot. - Thread #2) a task starts and overwrites thread-local TTreeReaderValues. - Thread #1) first task deletes TTreeReader. See https://github.com/root-project/root/commit/26e8ace6e47de6794ac9ec770c3bbff9b7f2e945. No performance penalty could be measured.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:413,energy efficiency,measur,measured,413,"[DF] Fix rare race condition: TTreeReader and its values deleted concurrently; In a nutshell, the condition was:. - Thread #1) a task ends and pushes back processing slot. - Thread #2) a task starts and overwrites thread-local TTreeReaderValues. - Thread #1) first task deletes TTreeReader. See https://github.com/root-project/root/commit/26e8ace6e47de6794ac9ec770c3bbff9b7f2e945. No performance penalty could be measured.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:65,performance,concurren,concurrently,65,"[DF] Fix rare race condition: TTreeReader and its values deleted concurrently; In a nutshell, the condition was:. - Thread #1) a task ends and pushes back processing slot. - Thread #2) a task starts and overwrites thread-local TTreeReaderValues. - Thread #1) first task deletes TTreeReader. See https://github.com/root-project/root/commit/26e8ace6e47de6794ac9ec770c3bbff9b7f2e945. No performance penalty could be measured.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:384,performance,perform,performance,384,"[DF] Fix rare race condition: TTreeReader and its values deleted concurrently; In a nutshell, the condition was:. - Thread #1) a task ends and pushes back processing slot. - Thread #2) a task starts and overwrites thread-local TTreeReaderValues. - Thread #1) first task deletes TTreeReader. See https://github.com/root-project/root/commit/26e8ace6e47de6794ac9ec770c3bbff9b7f2e945. No performance penalty could be measured.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:166,reliability,slo,slot,166,"[DF] Fix rare race condition: TTreeReader and its values deleted concurrently; In a nutshell, the condition was:. - Thread #1) a task ends and pushes back processing slot. - Thread #2) a task starts and overwrites thread-local TTreeReaderValues. - Thread #1) first task deletes TTreeReader. See https://github.com/root-project/root/commit/26e8ace6e47de6794ac9ec770c3bbff9b7f2e945. No performance penalty could be measured.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2956:384,usability,perform,performance,384,"[DF] Fix rare race condition: TTreeReader and its values deleted concurrently; In a nutshell, the condition was:. - Thread #1) a task ends and pushes back processing slot. - Thread #2) a task starts and overwrites thread-local TTreeReaderValues. - Thread #1) first task deletes TTreeReader. See https://github.com/root-project/root/commit/26e8ace6e47de6794ac9ec770c3bbff9b7f2e945. No performance penalty could be measured.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2956
https://github.com/root-project/root/pull/2960:205,availability,error,error,205,"In BuildOld, don't make all unique_ptr as having -> in comment.; unique_ptr can be nullptr too sometimes *and* anyway TStreamerInfo::Build does not make the same restriction. The mismatch lead to baffling error message like:. Warning in <TStreamerInfo::BuildOld>: Cannot convert A::h from type: B to type: B, skip element. This solves one of the problems seen in https://sft.its.cern.ch/jira/browse/ROOT-9702.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:3,deployability,Build,BuildOld,3,"In BuildOld, don't make all unique_ptr as having -> in comment.; unique_ptr can be nullptr too sometimes *and* anyway TStreamerInfo::Build does not make the same restriction. The mismatch lead to baffling error message like:. Warning in <TStreamerInfo::BuildOld>: Cannot convert A::h from type: B to type: B, skip element. This solves one of the problems seen in https://sft.its.cern.ch/jira/browse/ROOT-9702.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:133,deployability,Build,Build,133,"In BuildOld, don't make all unique_ptr as having -> in comment.; unique_ptr can be nullptr too sometimes *and* anyway TStreamerInfo::Build does not make the same restriction. The mismatch lead to baffling error message like:. Warning in <TStreamerInfo::BuildOld>: Cannot convert A::h from type: B to type: B, skip element. This solves one of the problems seen in https://sft.its.cern.ch/jira/browse/ROOT-9702.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:253,deployability,Build,BuildOld,253,"In BuildOld, don't make all unique_ptr as having -> in comment.; unique_ptr can be nullptr too sometimes *and* anyway TStreamerInfo::Build does not make the same restriction. The mismatch lead to baffling error message like:. Warning in <TStreamerInfo::BuildOld>: Cannot convert A::h from type: B to type: B, skip element. This solves one of the problems seen in https://sft.its.cern.ch/jira/browse/ROOT-9702.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:211,integrability,messag,message,211,"In BuildOld, don't make all unique_ptr as having -> in comment.; unique_ptr can be nullptr too sometimes *and* anyway TStreamerInfo::Build does not make the same restriction. The mismatch lead to baffling error message like:. Warning in <TStreamerInfo::BuildOld>: Cannot convert A::h from type: B to type: B, skip element. This solves one of the problems seen in https://sft.its.cern.ch/jira/browse/ROOT-9702.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:179,interoperability,mismatch,mismatch,179,"In BuildOld, don't make all unique_ptr as having -> in comment.; unique_ptr can be nullptr too sometimes *and* anyway TStreamerInfo::Build does not make the same restriction. The mismatch lead to baffling error message like:. Warning in <TStreamerInfo::BuildOld>: Cannot convert A::h from type: B to type: B, skip element. This solves one of the problems seen in https://sft.its.cern.ch/jira/browse/ROOT-9702.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:211,interoperability,messag,message,211,"In BuildOld, don't make all unique_ptr as having -> in comment.; unique_ptr can be nullptr too sometimes *and* anyway TStreamerInfo::Build does not make the same restriction. The mismatch lead to baffling error message like:. Warning in <TStreamerInfo::BuildOld>: Cannot convert A::h from type: B to type: B, skip element. This solves one of the problems seen in https://sft.its.cern.ch/jira/browse/ROOT-9702.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:205,performance,error,error,205,"In BuildOld, don't make all unique_ptr as having -> in comment.; unique_ptr can be nullptr too sometimes *and* anyway TStreamerInfo::Build does not make the same restriction. The mismatch lead to baffling error message like:. Warning in <TStreamerInfo::BuildOld>: Cannot convert A::h from type: B to type: B, skip element. This solves one of the problems seen in https://sft.its.cern.ch/jira/browse/ROOT-9702.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:139,reliability,doe,does,139,"In BuildOld, don't make all unique_ptr as having -> in comment.; unique_ptr can be nullptr too sometimes *and* anyway TStreamerInfo::Build does not make the same restriction. The mismatch lead to baffling error message like:. Warning in <TStreamerInfo::BuildOld>: Cannot convert A::h from type: B to type: B, skip element. This solves one of the problems seen in https://sft.its.cern.ch/jira/browse/ROOT-9702.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:205,safety,error,error,205,"In BuildOld, don't make all unique_ptr as having -> in comment.; unique_ptr can be nullptr too sometimes *and* anyway TStreamerInfo::Build does not make the same restriction. The mismatch lead to baffling error message like:. Warning in <TStreamerInfo::BuildOld>: Cannot convert A::h from type: B to type: B, skip element. This solves one of the problems seen in https://sft.its.cern.ch/jira/browse/ROOT-9702.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2960:205,usability,error,error,205,"In BuildOld, don't make all unique_ptr as having -> in comment.; unique_ptr can be nullptr too sometimes *and* anyway TStreamerInfo::Build does not make the same restriction. The mismatch lead to baffling error message like:. Warning in <TStreamerInfo::BuildOld>: Cannot convert A::h from type: B to type: B, skip element. This solves one of the problems seen in https://sft.its.cern.ch/jira/browse/ROOT-9702.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2960
https://github.com/root-project/root/pull/2962:122,availability,failur,failure,122,"Fix TFormula::Print with verbose option; This PR fixes the initialisation of the gradient function pointer which caused a failure in TFormula::Print(""V""). The PR introduces also a test for TFormula::Print",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2962
https://github.com/root-project/root/pull/2962:122,deployability,fail,failure,122,"Fix TFormula::Print with verbose option; This PR fixes the initialisation of the gradient function pointer which caused a failure in TFormula::Print(""V""). The PR introduces also a test for TFormula::Print",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2962
https://github.com/root-project/root/pull/2962:122,performance,failur,failure,122,"Fix TFormula::Print with verbose option; This PR fixes the initialisation of the gradient function pointer which caused a failure in TFormula::Print(""V""). The PR introduces also a test for TFormula::Print",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2962
https://github.com/root-project/root/pull/2962:122,reliability,fail,failure,122,"Fix TFormula::Print with verbose option; This PR fixes the initialisation of the gradient function pointer which caused a failure in TFormula::Print(""V""). The PR introduces also a test for TFormula::Print",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2962
https://github.com/root-project/root/pull/2962:180,safety,test,test,180,"Fix TFormula::Print with verbose option; This PR fixes the initialisation of the gradient function pointer which caused a failure in TFormula::Print(""V""). The PR introduces also a test for TFormula::Print",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2962
https://github.com/root-project/root/pull/2962:180,testability,test,test,180,"Fix TFormula::Print with verbose option; This PR fixes the initialisation of the gradient function pointer which caused a failure in TFormula::Print(""V""). The PR introduces also a test for TFormula::Print",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2962
https://github.com/root-project/root/pull/2963:34,deployability,contain,contained,34,"[DF] Devirtualise the RDataSource contained in the RInterface; therewith dealing with the concrete type of the source rather than its. virtual interface. This change has no impact for the user, both in C++ and Python, since. a templated constructor has been added to RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2963
https://github.com/root-project/root/pull/2963:143,integrability,interfac,interface,143,"[DF] Devirtualise the RDataSource contained in the RInterface; therewith dealing with the concrete type of the source rather than its. virtual interface. This change has no impact for the user, both in C++ and Python, since. a templated constructor has been added to RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2963
https://github.com/root-project/root/pull/2963:143,interoperability,interfac,interface,143,"[DF] Devirtualise the RDataSource contained in the RInterface; therewith dealing with the concrete type of the source rather than its. virtual interface. This change has no impact for the user, both in C++ and Python, since. a templated constructor has been added to RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2963
https://github.com/root-project/root/pull/2963:143,modifiability,interfac,interface,143,"[DF] Devirtualise the RDataSource contained in the RInterface; therewith dealing with the concrete type of the source rather than its. virtual interface. This change has no impact for the user, both in C++ and Python, since. a templated constructor has been added to RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2963
https://github.com/root-project/root/pull/2963:188,usability,user,user,188,"[DF] Devirtualise the RDataSource contained in the RInterface; therewith dealing with the concrete type of the source rather than its. virtual interface. This change has no impact for the user, both in C++ and Python, since. a templated constructor has been added to RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2963
https://github.com/root-project/root/pull/2964:114,deployability,patch,patches,114,jsroot: for ROOT 6.16; Dedicated branch now created in JSROOT repository. Same code will be submitted in v6-16-00-patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2964
https://github.com/root-project/root/pull/2964:62,integrability,repositor,repository,62,jsroot: for ROOT 6.16; Dedicated branch now created in JSROOT repository. Same code will be submitted in v6-16-00-patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2964
https://github.com/root-project/root/pull/2964:92,integrability,sub,submitted,92,jsroot: for ROOT 6.16; Dedicated branch now created in JSROOT repository. Same code will be submitted in v6-16-00-patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2964
https://github.com/root-project/root/pull/2964:62,interoperability,repositor,repository,62,jsroot: for ROOT 6.16; Dedicated branch now created in JSROOT repository. Same code will be submitted in v6-16-00-patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2964
https://github.com/root-project/root/pull/2964:114,safety,patch,patches,114,jsroot: for ROOT 6.16; Dedicated branch now created in JSROOT repository. Same code will be submitted in v6-16-00-patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2964
https://github.com/root-project/root/pull/2964:114,security,patch,patches,114,jsroot: for ROOT 6.16; Dedicated branch now created in JSROOT repository. Same code will be submitted in v6-16-00-patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2964
https://github.com/root-project/root/pull/2965:62,integrability,repositor,repository,62,jsroot: for ROOT 6.16; Dedicated branch now created in JSROOT repository,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2965
https://github.com/root-project/root/pull/2965:62,interoperability,repositor,repository,62,jsroot: for ROOT 6.16; Dedicated branch now created in JSROOT repository,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2965
https://github.com/root-project/root/pull/2966:19,deployability,Upgrad,Upgrade,19,[CMake][ROOT-9739] Upgrade VDT built-in version from 0.4.1 to 0.4.2; this new VDT version does not assume that the Python interpreter is called. python but rather relies on CMake to invoke the right executable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2966
https://github.com/root-project/root/pull/2966:40,deployability,version,version,40,[CMake][ROOT-9739] Upgrade VDT built-in version from 0.4.1 to 0.4.2; this new VDT version does not assume that the Python interpreter is called. python but rather relies on CMake to invoke the right executable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2966
https://github.com/root-project/root/pull/2966:82,deployability,version,version,82,[CMake][ROOT-9739] Upgrade VDT built-in version from 0.4.1 to 0.4.2; this new VDT version does not assume that the Python interpreter is called. python but rather relies on CMake to invoke the right executable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2966
https://github.com/root-project/root/pull/2966:40,integrability,version,version,40,[CMake][ROOT-9739] Upgrade VDT built-in version from 0.4.1 to 0.4.2; this new VDT version does not assume that the Python interpreter is called. python but rather relies on CMake to invoke the right executable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2966
https://github.com/root-project/root/pull/2966:82,integrability,version,version,82,[CMake][ROOT-9739] Upgrade VDT built-in version from 0.4.1 to 0.4.2; this new VDT version does not assume that the Python interpreter is called. python but rather relies on CMake to invoke the right executable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2966
https://github.com/root-project/root/pull/2966:19,modifiability,Upgrad,Upgrade,19,[CMake][ROOT-9739] Upgrade VDT built-in version from 0.4.1 to 0.4.2; this new VDT version does not assume that the Python interpreter is called. python but rather relies on CMake to invoke the right executable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2966
https://github.com/root-project/root/pull/2966:40,modifiability,version,version,40,[CMake][ROOT-9739] Upgrade VDT built-in version from 0.4.1 to 0.4.2; this new VDT version does not assume that the Python interpreter is called. python but rather relies on CMake to invoke the right executable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2966
https://github.com/root-project/root/pull/2966:82,modifiability,version,version,82,[CMake][ROOT-9739] Upgrade VDT built-in version from 0.4.1 to 0.4.2; this new VDT version does not assume that the Python interpreter is called. python but rather relies on CMake to invoke the right executable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2966
https://github.com/root-project/root/pull/2966:90,reliability,doe,does,90,[CMake][ROOT-9739] Upgrade VDT built-in version from 0.4.1 to 0.4.2; this new VDT version does not assume that the Python interpreter is called. python but rather relies on CMake to invoke the right executable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2966
https://github.com/root-project/root/pull/2967:29,deployability,version,version,29,"Fix FindOracle.cmake to find version 18.x; Just add the new library name so that it can be found. This can probably even skip CI, as I tested locally and it won't be tested by our builds against a new enough Oracle client.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2967
https://github.com/root-project/root/pull/2967:180,deployability,build,builds,180,"Fix FindOracle.cmake to find version 18.x; Just add the new library name so that it can be found. This can probably even skip CI, as I tested locally and it won't be tested by our builds against a new enough Oracle client.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2967
https://github.com/root-project/root/pull/2967:29,integrability,version,version,29,"Fix FindOracle.cmake to find version 18.x; Just add the new library name so that it can be found. This can probably even skip CI, as I tested locally and it won't be tested by our builds against a new enough Oracle client.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2967
https://github.com/root-project/root/pull/2967:29,modifiability,version,version,29,"Fix FindOracle.cmake to find version 18.x; Just add the new library name so that it can be found. This can probably even skip CI, as I tested locally and it won't be tested by our builds against a new enough Oracle client.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2967
https://github.com/root-project/root/pull/2967:135,safety,test,tested,135,"Fix FindOracle.cmake to find version 18.x; Just add the new library name so that it can be found. This can probably even skip CI, as I tested locally and it won't be tested by our builds against a new enough Oracle client.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2967
https://github.com/root-project/root/pull/2967:166,safety,test,tested,166,"Fix FindOracle.cmake to find version 18.x; Just add the new library name so that it can be found. This can probably even skip CI, as I tested locally and it won't be tested by our builds against a new enough Oracle client.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2967
https://github.com/root-project/root/pull/2967:135,testability,test,tested,135,"Fix FindOracle.cmake to find version 18.x; Just add the new library name so that it can be found. This can probably even skip CI, as I tested locally and it won't be tested by our builds against a new enough Oracle client.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2967
https://github.com/root-project/root/pull/2967:166,testability,test,tested,166,"Fix FindOracle.cmake to find version 18.x; Just add the new library name so that it can be found. This can probably even skip CI, as I tested locally and it won't be tested by our builds against a new enough Oracle client.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2967
https://github.com/root-project/root/pull/2968:174,integrability,sub,sub-classes,174,http: remove depricated methods; Since ~8 months methods were not used inside ROOT . I expect very few users who really used them - this is only for custom applications with sub-classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2968
https://github.com/root-project/root/pull/2968:103,usability,user,users,103,http: remove depricated methods; Since ~8 months methods were not used inside ROOT . I expect very few users who really used them - this is only for custom applications with sub-classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2968
https://github.com/root-project/root/pull/2968:149,usability,custom,custom,149,http: remove depricated methods; Since ~8 months methods were not used inside ROOT . I expect very few users who really used them - this is only for custom applications with sub-classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2968
https://github.com/root-project/root/pull/2969:16,deployability,instal,installation,16,[ROOT-9685] Fix installation of generated kernel.json file (6.14 patches); Backport of the fix to make the ROOT C++ kernel pick the right Python version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2969
https://github.com/root-project/root/pull/2969:65,deployability,patch,patches,65,[ROOT-9685] Fix installation of generated kernel.json file (6.14 patches); Backport of the fix to make the ROOT C++ kernel pick the right Python version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2969
https://github.com/root-project/root/pull/2969:145,deployability,version,version,145,[ROOT-9685] Fix installation of generated kernel.json file (6.14 patches); Backport of the fix to make the ROOT C++ kernel pick the right Python version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2969
https://github.com/root-project/root/pull/2969:145,integrability,version,version,145,[ROOT-9685] Fix installation of generated kernel.json file (6.14 patches); Backport of the fix to make the ROOT C++ kernel pick the right Python version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2969
https://github.com/root-project/root/pull/2969:145,modifiability,version,version,145,[ROOT-9685] Fix installation of generated kernel.json file (6.14 patches); Backport of the fix to make the ROOT C++ kernel pick the right Python version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2969
https://github.com/root-project/root/pull/2969:65,safety,patch,patches,65,[ROOT-9685] Fix installation of generated kernel.json file (6.14 patches); Backport of the fix to make the ROOT C++ kernel pick the right Python version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2969
https://github.com/root-project/root/pull/2969:65,security,patch,patches,65,[ROOT-9685] Fix installation of generated kernel.json file (6.14 patches); Backport of the fix to make the ROOT C++ kernel pick the right Python version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2969
https://github.com/root-project/root/pull/2970:16,deployability,instal,installation,16,[ROOT-9685] Fix installation of generated kernel.json file (6.16 patches); Backport of the fix to make the ROOT C++ kernel pick the right Python version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2970
https://github.com/root-project/root/pull/2970:65,deployability,patch,patches,65,[ROOT-9685] Fix installation of generated kernel.json file (6.16 patches); Backport of the fix to make the ROOT C++ kernel pick the right Python version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2970
https://github.com/root-project/root/pull/2970:145,deployability,version,version,145,[ROOT-9685] Fix installation of generated kernel.json file (6.16 patches); Backport of the fix to make the ROOT C++ kernel pick the right Python version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2970
https://github.com/root-project/root/pull/2970:145,integrability,version,version,145,[ROOT-9685] Fix installation of generated kernel.json file (6.16 patches); Backport of the fix to make the ROOT C++ kernel pick the right Python version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2970
https://github.com/root-project/root/pull/2970:145,modifiability,version,version,145,[ROOT-9685] Fix installation of generated kernel.json file (6.16 patches); Backport of the fix to make the ROOT C++ kernel pick the right Python version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2970
https://github.com/root-project/root/pull/2970:65,safety,patch,patches,65,[ROOT-9685] Fix installation of generated kernel.json file (6.16 patches); Backport of the fix to make the ROOT C++ kernel pick the right Python version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2970
https://github.com/root-project/root/pull/2970:65,security,patch,patches,65,[ROOT-9685] Fix installation of generated kernel.json file (6.16 patches); Backport of the fix to make the ROOT C++ kernel pick the right Python version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2970
https://github.com/root-project/root/pull/2971:52,energy efficiency,Current,Currently,52,"[TMVA] CV - Add workaround for large event numbers; Currently TMVA considers all internal variables floats, if large event numbers are then input as part of ""cv-in-app"" these can overflow the float resulting in erroneous fold assignments. A workaround is to reduce the input range when reading the input from the TTree as TTreeFormula retains awareness of the input type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2971
https://github.com/root-project/root/pull/2971:258,energy efficiency,reduc,reduce,258,"[TMVA] CV - Add workaround for large event numbers; Currently TMVA considers all internal variables floats, if large event numbers are then input as part of ""cv-in-app"" these can overflow the float resulting in erroneous fold assignments. A workaround is to reduce the input range when reading the input from the TTree as TTreeFormula retains awareness of the input type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2971
https://github.com/root-project/root/pull/2971:37,integrability,event,event,37,"[TMVA] CV - Add workaround for large event numbers; Currently TMVA considers all internal variables floats, if large event numbers are then input as part of ""cv-in-app"" these can overflow the float resulting in erroneous fold assignments. A workaround is to reduce the input range when reading the input from the TTree as TTreeFormula retains awareness of the input type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2971
https://github.com/root-project/root/pull/2971:117,integrability,event,event,117,"[TMVA] CV - Add workaround for large event numbers; Currently TMVA considers all internal variables floats, if large event numbers are then input as part of ""cv-in-app"" these can overflow the float resulting in erroneous fold assignments. A workaround is to reduce the input range when reading the input from the TTree as TTreeFormula retains awareness of the input type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2971
https://github.com/root-project/root/pull/2971:90,modifiability,variab,variables,90,"[TMVA] CV - Add workaround for large event numbers; Currently TMVA considers all internal variables floats, if large event numbers are then input as part of ""cv-in-app"" these can overflow the float resulting in erroneous fold assignments. A workaround is to reduce the input range when reading the input from the TTree as TTreeFormula retains awareness of the input type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2971
https://github.com/root-project/root/pull/2971:140,safety,input,input,140,"[TMVA] CV - Add workaround for large event numbers; Currently TMVA considers all internal variables floats, if large event numbers are then input as part of ""cv-in-app"" these can overflow the float resulting in erroneous fold assignments. A workaround is to reduce the input range when reading the input from the TTree as TTreeFormula retains awareness of the input type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2971
https://github.com/root-project/root/pull/2971:269,safety,input,input,269,"[TMVA] CV - Add workaround for large event numbers; Currently TMVA considers all internal variables floats, if large event numbers are then input as part of ""cv-in-app"" these can overflow the float resulting in erroneous fold assignments. A workaround is to reduce the input range when reading the input from the TTree as TTreeFormula retains awareness of the input type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2971
https://github.com/root-project/root/pull/2971:298,safety,input,input,298,"[TMVA] CV - Add workaround for large event numbers; Currently TMVA considers all internal variables floats, if large event numbers are then input as part of ""cv-in-app"" these can overflow the float resulting in erroneous fold assignments. A workaround is to reduce the input range when reading the input from the TTree as TTreeFormula retains awareness of the input type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2971
https://github.com/root-project/root/pull/2971:360,safety,input,input,360,"[TMVA] CV - Add workaround for large event numbers; Currently TMVA considers all internal variables floats, if large event numbers are then input as part of ""cv-in-app"" these can overflow the float resulting in erroneous fold assignments. A workaround is to reduce the input range when reading the input from the TTree as TTreeFormula retains awareness of the input type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2971
https://github.com/root-project/root/pull/2971:140,usability,input,input,140,"[TMVA] CV - Add workaround for large event numbers; Currently TMVA considers all internal variables floats, if large event numbers are then input as part of ""cv-in-app"" these can overflow the float resulting in erroneous fold assignments. A workaround is to reduce the input range when reading the input from the TTree as TTreeFormula retains awareness of the input type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2971
https://github.com/root-project/root/pull/2971:269,usability,input,input,269,"[TMVA] CV - Add workaround for large event numbers; Currently TMVA considers all internal variables floats, if large event numbers are then input as part of ""cv-in-app"" these can overflow the float resulting in erroneous fold assignments. A workaround is to reduce the input range when reading the input from the TTree as TTreeFormula retains awareness of the input type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2971
https://github.com/root-project/root/pull/2971:298,usability,input,input,298,"[TMVA] CV - Add workaround for large event numbers; Currently TMVA considers all internal variables floats, if large event numbers are then input as part of ""cv-in-app"" these can overflow the float resulting in erroneous fold assignments. A workaround is to reduce the input range when reading the input from the TTree as TTreeFormula retains awareness of the input type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2971
https://github.com/root-project/root/pull/2971:360,usability,input,input,360,"[TMVA] CV - Add workaround for large event numbers; Currently TMVA considers all internal variables floats, if large event numbers are then input as part of ""cv-in-app"" these can overflow the float resulting in erroneous fold assignments. A workaround is to reduce the input range when reading the input from the TTree as TTreeFormula retains awareness of the input type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2971
https://github.com/root-project/root/pull/2972:913,availability,Error,Error,913,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:17,deployability,build,build,17,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:60,deployability,automat,automatically,60,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:94,deployability,depend,depending,94,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:132,deployability,configurat,configuration,132,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:178,deployability,fail,fail-on-missing,178,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:215,deployability,patch,patch,215,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:254,deployability,configurat,configuration,254,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:331,deployability,build,building,331,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:928,deployability,modul,modules,928,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:94,integrability,depend,depending,94,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:132,integrability,configur,configuration,132,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:254,integrability,configur,configuration,254,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:971,integrability,messag,message,971,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:1034,integrability,compon,component,1034,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:1409,integrability,configur,configures,1409,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:633,interoperability,share,share,633,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:971,interoperability,messag,message,971,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:1034,interoperability,compon,component,1034,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:1098,interoperability,share,share,1098,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:94,modifiability,depend,depending,94,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:132,modifiability,configur,configuration,132,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:165,modifiability,pac,package,165,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:254,modifiability,configur,configuration,254,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:564,modifiability,pac,package,564,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:897,modifiability,pac,package,897,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:928,modifiability,modul,modules,928,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:1001,modifiability,pac,package,1001,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:1034,modifiability,compon,component,1034,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:1409,modifiability,configur,configures,1409,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:913,performance,Error,Error,913,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:178,reliability,fail,fail-on-missing,178,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:94,safety,depend,depending,94,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:215,safety,patch,patch,215,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:661,safety,test,test-,661,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:913,safety,Error,Error,913,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:928,safety,modul,modules,928,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:1126,safety,test,test-,1126,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:132,security,configur,configuration,132,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:215,security,patch,patch,215,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:254,security,configur,configuration,254,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:1409,security,configur,configures,1409,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:60,testability,automat,automatically,60,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:94,testability,depend,depending,94,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:661,testability,test,test-,661,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:1126,testability,test,test-,1126,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:611,usability,User,Users,611,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:913,usability,Error,Error,913,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2972:1076,usability,User,Users,1076,ROOT-9794 -- Add build option for pymva; Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:. ```. -- Looking for python. -- Looking for numpy (python package). -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option. ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:. ```. -- Looking for python. -- Looking for numpy (python package). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):. TMVA: numpy python package not found and tmva-pymva component required. (python executable:. /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python). ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:. ```. ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2972
https://github.com/root-project/root/pull/2974:18,interoperability,convers,conversion,18,[DF][NFC] Mention conversion to RNode in user guide;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2974
https://github.com/root-project/root/pull/2974:41,usability,user,user,41,[DF][NFC] Mention conversion to RNode in user guide;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2974
https://github.com/root-project/root/pull/2974:46,usability,guid,guide,46,[DF][NFC] Mention conversion to RNode in user guide;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2974
https://github.com/root-project/root/pull/2976:0,deployability,Updat,Update,0,Update builtin versions of VecCore (0.5.2) and Vc (1.4.0); Please refer to the release notes of each project for more information. - Vc 1.4.0 — https://github.com/VcDevel/Vc/releases/tag/1.4.0. - VecCore 0.5.2 — https://github.com/root-project/veccore/releases/tag/v0.5.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2976
https://github.com/root-project/root/pull/2976:15,deployability,version,versions,15,Update builtin versions of VecCore (0.5.2) and Vc (1.4.0); Please refer to the release notes of each project for more information. - Vc 1.4.0 — https://github.com/VcDevel/Vc/releases/tag/1.4.0. - VecCore 0.5.2 — https://github.com/root-project/veccore/releases/tag/v0.5.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2976
https://github.com/root-project/root/pull/2976:79,deployability,releas,release,79,Update builtin versions of VecCore (0.5.2) and Vc (1.4.0); Please refer to the release notes of each project for more information. - Vc 1.4.0 — https://github.com/VcDevel/Vc/releases/tag/1.4.0. - VecCore 0.5.2 — https://github.com/root-project/veccore/releases/tag/v0.5.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2976
https://github.com/root-project/root/pull/2976:174,deployability,releas,releases,174,Update builtin versions of VecCore (0.5.2) and Vc (1.4.0); Please refer to the release notes of each project for more information. - Vc 1.4.0 — https://github.com/VcDevel/Vc/releases/tag/1.4.0. - VecCore 0.5.2 — https://github.com/root-project/veccore/releases/tag/v0.5.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2976
https://github.com/root-project/root/pull/2976:252,deployability,releas,releases,252,Update builtin versions of VecCore (0.5.2) and Vc (1.4.0); Please refer to the release notes of each project for more information. - Vc 1.4.0 — https://github.com/VcDevel/Vc/releases/tag/1.4.0. - VecCore 0.5.2 — https://github.com/root-project/veccore/releases/tag/v0.5.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2976
https://github.com/root-project/root/pull/2976:15,integrability,version,versions,15,Update builtin versions of VecCore (0.5.2) and Vc (1.4.0); Please refer to the release notes of each project for more information. - Vc 1.4.0 — https://github.com/VcDevel/Vc/releases/tag/1.4.0. - VecCore 0.5.2 — https://github.com/root-project/veccore/releases/tag/v0.5.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2976
https://github.com/root-project/root/pull/2976:15,modifiability,version,versions,15,Update builtin versions of VecCore (0.5.2) and Vc (1.4.0); Please refer to the release notes of each project for more information. - Vc 1.4.0 — https://github.com/VcDevel/Vc/releases/tag/1.4.0. - VecCore 0.5.2 — https://github.com/root-project/veccore/releases/tag/v0.5.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2976
https://github.com/root-project/root/pull/2976:0,safety,Updat,Update,0,Update builtin versions of VecCore (0.5.2) and Vc (1.4.0); Please refer to the release notes of each project for more information. - Vc 1.4.0 — https://github.com/VcDevel/Vc/releases/tag/1.4.0. - VecCore 0.5.2 — https://github.com/root-project/veccore/releases/tag/v0.5.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2976
https://github.com/root-project/root/pull/2976:0,security,Updat,Update,0,Update builtin versions of VecCore (0.5.2) and Vc (1.4.0); Please refer to the release notes of each project for more information. - Vc 1.4.0 — https://github.com/VcDevel/Vc/releases/tag/1.4.0. - VecCore 0.5.2 — https://github.com/root-project/veccore/releases/tag/v0.5.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2976
https://github.com/root-project/root/pull/2977:114,availability,failur,failures,114,[cxxmodules] Add a RAII because we can trigger deserialization.; This patch fixes a few recent runtime_cxxmodules failures. Fixes ROOT-9709.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:70,deployability,patch,patch,70,[cxxmodules] Add a RAII because we can trigger deserialization.; This patch fixes a few recent runtime_cxxmodules failures. Fixes ROOT-9709.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:114,deployability,fail,failures,114,[cxxmodules] Add a RAII because we can trigger deserialization.; This patch fixes a few recent runtime_cxxmodules failures. Fixes ROOT-9709.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:114,performance,failur,failures,114,[cxxmodules] Add a RAII because we can trigger deserialization.; This patch fixes a few recent runtime_cxxmodules failures. Fixes ROOT-9709.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:114,reliability,fail,failures,114,[cxxmodules] Add a RAII because we can trigger deserialization.; This patch fixes a few recent runtime_cxxmodules failures. Fixes ROOT-9709.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:70,safety,patch,patch,70,[cxxmodules] Add a RAII because we can trigger deserialization.; This patch fixes a few recent runtime_cxxmodules failures. Fixes ROOT-9709.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2977:70,security,patch,patch,70,[cxxmodules] Add a RAII because we can trigger deserialization.; This patch fixes a few recent runtime_cxxmodules failures. Fixes ROOT-9709.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2977
https://github.com/root-project/root/pull/2979:31,integrability,filter,filter,31,[Dictgen] ROOT-9635 ROOT-9615: filter out unwanted rootcling args.; (cherry picked from commit 26f54569b46d3d2daae838cf55195d436be7ac80),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2979
https://github.com/root-project/root/pull/2981:85,energy efficiency,green,greener,85,[backport][cmake] Silence Clang8 shadow warnings::; @axel it will help to make CDash greener. I can try to fix them a bit later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2981
https://github.com/root-project/root/pull/2981:66,usability,help,help,66,[backport][cmake] Silence Clang8 shadow warnings::; @axel it will help to make CDash greener. I can try to fix them a bit later.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2981
https://github.com/root-project/root/pull/2982:71,deployability,fail,fails,71,Add explicit cast to (char*) for python 3.7 compatibility; Compilation fails because of an implicit cast from `const char*` to `char*`. This fixes compilation of the root 5 legacy branch with python 3.7. (Don't ask why we still use root 5 :D),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2982
https://github.com/root-project/root/pull/2982:44,interoperability,compatib,compatibility,44,Add explicit cast to (char*) for python 3.7 compatibility; Compilation fails because of an implicit cast from `const char*` to `char*`. This fixes compilation of the root 5 legacy branch with python 3.7. (Don't ask why we still use root 5 :D),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2982
https://github.com/root-project/root/pull/2982:71,reliability,fail,fails,71,Add explicit cast to (char*) for python 3.7 compatibility; Compilation fails because of an implicit cast from `const char*` to `char*`. This fixes compilation of the root 5 legacy branch with python 3.7. (Don't ask why we still use root 5 :D),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2982
https://github.com/root-project/root/pull/2984:0,deployability,Updat,Update,0,Update release notes; @Teemperor fyi.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2984
https://github.com/root-project/root/pull/2984:7,deployability,releas,release,7,Update release notes; @Teemperor fyi.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2984
https://github.com/root-project/root/pull/2984:0,safety,Updat,Update,0,Update release notes; @Teemperor fyi.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2984
https://github.com/root-project/root/pull/2984:0,security,Updat,Update,0,Update release notes; @Teemperor fyi.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2984
https://github.com/root-project/root/pull/2985:270,performance,Memor,Memory,270,"Support new Hexagon type in TEveBoxSet + 2 bufixes; 1. Add support for hexagont box-type (BHex_t) in TEveBoxSet. See. tutorials/eve/boxset.C, new function boxset_hex(). 2. Bugfix in TEveBoxSet -- box set did not work with TEnv setting of. `OpenGL.UseDisplayLists 0`. 3. Memory leak fix in TEveGeoShapeProjected -- TBuffer3D member fBuff was. not freed in destructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2985
https://github.com/root-project/root/pull/2985:0,usability,Support,Support,0,"Support new Hexagon type in TEveBoxSet + 2 bufixes; 1. Add support for hexagont box-type (BHex_t) in TEveBoxSet. See. tutorials/eve/boxset.C, new function boxset_hex(). 2. Bugfix in TEveBoxSet -- box set did not work with TEnv setting of. `OpenGL.UseDisplayLists 0`. 3. Memory leak fix in TEveGeoShapeProjected -- TBuffer3D member fBuff was. not freed in destructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2985
https://github.com/root-project/root/pull/2985:59,usability,support,support,59,"Support new Hexagon type in TEveBoxSet + 2 bufixes; 1. Add support for hexagont box-type (BHex_t) in TEveBoxSet. See. tutorials/eve/boxset.C, new function boxset_hex(). 2. Bugfix in TEveBoxSet -- box set did not work with TEnv setting of. `OpenGL.UseDisplayLists 0`. 3. Memory leak fix in TEveGeoShapeProjected -- TBuffer3D member fBuff was. not freed in destructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2985
https://github.com/root-project/root/pull/2985:270,usability,Memor,Memory,270,"Support new Hexagon type in TEveBoxSet + 2 bufixes; 1. Add support for hexagont box-type (BHex_t) in TEveBoxSet. See. tutorials/eve/boxset.C, new function boxset_hex(). 2. Bugfix in TEveBoxSet -- box set did not work with TEnv setting of. `OpenGL.UseDisplayLists 0`. 3. Memory leak fix in TEveGeoShapeProjected -- TBuffer3D member fBuff was. not freed in destructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2985
https://github.com/root-project/root/pull/2987:1,deployability,Build,BuildSystem,1,[BuildSystem] Change version of built-in VDT to v0.4.2;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2987
https://github.com/root-project/root/pull/2987:21,deployability,version,version,21,[BuildSystem] Change version of built-in VDT to v0.4.2;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2987
https://github.com/root-project/root/pull/2987:21,integrability,version,version,21,[BuildSystem] Change version of built-in VDT to v0.4.2;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2987
https://github.com/root-project/root/pull/2987:21,modifiability,version,version,21,[BuildSystem] Change version of built-in VDT to v0.4.2;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2987
https://github.com/root-project/root/pull/2988:43,modifiability,variab,variable,43,"Revert ""[TTreeProcMT] Fix COV-98763: large variable passed by value""; We get races if all threads access the same TEntryList reference. This reverts commit f0556c0b49c4229b8c690dbc39ff5deda44be1e5,. and adds a comment so we remember in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2988
https://github.com/root-project/root/pull/2988:224,safety,reme,remember,224,"Revert ""[TTreeProcMT] Fix COV-98763: large variable passed by value""; We get races if all threads access the same TEntryList reference. This reverts commit f0556c0b49c4229b8c690dbc39ff5deda44be1e5,. and adds a comment so we remember in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2988
https://github.com/root-project/root/pull/2988:98,security,access,access,98,"Revert ""[TTreeProcMT] Fix COV-98763: large variable passed by value""; We get races if all threads access the same TEntryList reference. This reverts commit f0556c0b49c4229b8c690dbc39ff5deda44be1e5,. and adds a comment so we remember in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2988
https://github.com/root-project/root/pull/2989:55,performance,parallel,parallelised,55,[TTree][ROOT-9668] Allow to add a branch after a first parallelised FlushBaskets call; without crashing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2989
https://github.com/root-project/root/pull/2991:4,deployability,build,building,4,Fix building clad for conda builds;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2991
https://github.com/root-project/root/pull/2991:28,deployability,build,builds,28,Fix building clad for conda builds;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2991
https://github.com/root-project/root/pull/2992:353,deployability,patch,patch,353,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:369,deployability,fail,failing,369,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:210,energy efficiency,Current,Currently,210,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:232,energy efficiency,current,current,232,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:309,energy efficiency,load,loading,309,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:31,interoperability,plug,plugin,31,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:53,interoperability,share,shared,53,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:100,interoperability,plug,plugins,100,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:321,interoperability,plug,plugins,321,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:332,interoperability,share,shared,332,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:309,performance,load,loading,309,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:201,reliability,pra,pragmas,201,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:369,reliability,fail,failing,369,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:353,safety,patch,patch,353,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:383,safety,test,test,383,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:353,security,patch,patch,353,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2992:383,testability,test,test,383,"[cling] Handle the case if the plugin is passed as a shared object.; When cling is embedded and the plugins are linked statically we can rely. on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely. on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2992
https://github.com/root-project/root/pull/2995:4,deployability,build,building,4,Fix building googletest for conda; Pass through CMAKE_AR when building googletest like in #2991.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2995
https://github.com/root-project/root/pull/2995:62,deployability,build,building,62,Fix building googletest for conda; Pass through CMAKE_AR when building googletest like in #2991.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2995
https://github.com/root-project/root/pull/2996:241,integrability,messag,message,241,"[ROOT-9797] Properly apply exclusion of branches and cut; Fix for a bug in rooteventselector when applying both a cut and the exclusion of branches, reported by:. https://sft.its.cern.ch/jira/browse/ROOT-9797. More information in the commit message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2996
https://github.com/root-project/root/pull/2996:241,interoperability,messag,message,241,"[ROOT-9797] Properly apply exclusion of branches and cut; Fix for a bug in rooteventselector when applying both a cut and the exclusion of branches, reported by:. https://sft.its.cern.ch/jira/browse/ROOT-9797. More information in the commit message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2996
https://github.com/root-project/root/pull/2998:145,availability,redund,redundant,145,[cling] Further delay the lazy initialization of dynamic lookup.; This optimizes the ROOT startup for C++ Modules by avoiding deserialization of redundant declarations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2998
https://github.com/root-project/root/pull/2998:106,deployability,Modul,Modules,106,[cling] Further delay the lazy initialization of dynamic lookup.; This optimizes the ROOT startup for C++ Modules by avoiding deserialization of redundant declarations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2998
https://github.com/root-project/root/pull/2998:145,deployability,redundan,redundant,145,[cling] Further delay the lazy initialization of dynamic lookup.; This optimizes the ROOT startup for C++ Modules by avoiding deserialization of redundant declarations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2998
https://github.com/root-project/root/pull/2998:71,energy efficiency,optim,optimizes,71,[cling] Further delay the lazy initialization of dynamic lookup.; This optimizes the ROOT startup for C++ Modules by avoiding deserialization of redundant declarations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2998
https://github.com/root-project/root/pull/2998:106,modifiability,Modul,Modules,106,[cling] Further delay the lazy initialization of dynamic lookup.; This optimizes the ROOT startup for C++ Modules by avoiding deserialization of redundant declarations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2998
https://github.com/root-project/root/pull/2998:71,performance,optimiz,optimizes,71,[cling] Further delay the lazy initialization of dynamic lookup.; This optimizes the ROOT startup for C++ Modules by avoiding deserialization of redundant declarations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2998
https://github.com/root-project/root/pull/2998:145,reliability,redundan,redundant,145,[cling] Further delay the lazy initialization of dynamic lookup.; This optimizes the ROOT startup for C++ Modules by avoiding deserialization of redundant declarations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2998
https://github.com/root-project/root/pull/2998:106,safety,Modul,Modules,106,[cling] Further delay the lazy initialization of dynamic lookup.; This optimizes the ROOT startup for C++ Modules by avoiding deserialization of redundant declarations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2998
https://github.com/root-project/root/pull/2998:117,safety,avoid,avoiding,117,[cling] Further delay the lazy initialization of dynamic lookup.; This optimizes the ROOT startup for C++ Modules by avoiding deserialization of redundant declarations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2998
https://github.com/root-project/root/pull/2998:145,safety,redund,redundant,145,[cling] Further delay the lazy initialization of dynamic lookup.; This optimizes the ROOT startup for C++ Modules by avoiding deserialization of redundant declarations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2998
https://github.com/root-project/root/pull/2999:70,deployability,Depend,Depends,70,[cxxmodules] Fix layering violations in root7.; This fixes ROOT-9409. Depends on: #4268,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2999
https://github.com/root-project/root/pull/2999:70,integrability,Depend,Depends,70,[cxxmodules] Fix layering violations in root7.; This fixes ROOT-9409. Depends on: #4268,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2999
https://github.com/root-project/root/pull/2999:17,modifiability,layer,layering,17,[cxxmodules] Fix layering violations in root7.; This fixes ROOT-9409. Depends on: #4268,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2999
https://github.com/root-project/root/pull/2999:70,modifiability,Depend,Depends,70,[cxxmodules] Fix layering violations in root7.; This fixes ROOT-9409. Depends on: #4268,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2999
https://github.com/root-project/root/pull/2999:70,safety,Depend,Depends,70,[cxxmodules] Fix layering violations in root7.; This fixes ROOT-9409. Depends on: #4268,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2999
https://github.com/root-project/root/pull/2999:70,testability,Depend,Depends,70,[cxxmodules] Fix layering violations in root7.; This fixes ROOT-9409. Depends on: #4268,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/2999
https://github.com/root-project/root/pull/3000:65,deployability,depend,dependencies,65,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3000:97,deployability,build,build,97,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3000:138,deployability,DEPEND,DEPENDENCIES,138,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3000:224,deployability,patch,patch,224,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3000:251,deployability,build,build,251,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3000:65,integrability,depend,dependencies,65,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3000:138,integrability,DEPEND,DEPENDENCIES,138,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3000:65,modifiability,depend,dependencies,65,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3000:138,modifiability,DEPEND,DEPENDENCIES,138,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3000:65,safety,depend,dependencies,65,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3000:138,safety,DEPEND,DEPENDENCIES,138,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3000:224,safety,patch,patch,224,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3000:224,security,patch,patch,224,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3000:65,testability,depend,dependencies,65,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3000:138,testability,DEPEND,DEPENDENCIES,138,"[cmake] LIBRARIES means a prebuilt external library.; If we have dependencies which we expect to build (like in this case). we should use DEPENDENCIES. LIBRARIES is a terrible misnomer and we probably should. fix that. This patch teaches rootcling to build the pcms in order and. particularly, ROOTWebDisplay.pcm before the WebGui6.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3000
https://github.com/root-project/root/pull/3001:55,availability,state,state,55,"[DF] Use LoadTree(0), not GetEntry(0), to reset TChain state ; The latter performs extra reading that we do not need. With many thanks to @JavierCVilla !",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3001
https://github.com/root-project/root/pull/3001:9,energy efficiency,Load,LoadTree,9,"[DF] Use LoadTree(0), not GetEntry(0), to reset TChain state ; The latter performs extra reading that we do not need. With many thanks to @JavierCVilla !",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3001
https://github.com/root-project/root/pull/3001:55,integrability,state,state,55,"[DF] Use LoadTree(0), not GetEntry(0), to reset TChain state ; The latter performs extra reading that we do not need. With many thanks to @JavierCVilla !",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3001
https://github.com/root-project/root/pull/3001:9,performance,Load,LoadTree,9,"[DF] Use LoadTree(0), not GetEntry(0), to reset TChain state ; The latter performs extra reading that we do not need. With many thanks to @JavierCVilla !",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3001
https://github.com/root-project/root/pull/3001:74,performance,perform,performs,74,"[DF] Use LoadTree(0), not GetEntry(0), to reset TChain state ; The latter performs extra reading that we do not need. With many thanks to @JavierCVilla !",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3001
https://github.com/root-project/root/pull/3001:74,usability,perform,performs,74,"[DF] Use LoadTree(0), not GetEntry(0), to reset TChain state ; The latter performs extra reading that we do not need. With many thanks to @JavierCVilla !",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3001
https://github.com/root-project/root/pull/3002:0,usability,Support,Support,0,"Support systems with no `manpath` nor `man` in thisroot.sh; Admittedly a corner case, but running `source thisroot.sh` returned exit code 127 in a pretty bare docker image where no `manpath` nor `man` executables were present. Works on my computer™",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3002
https://github.com/root-project/root/pull/3003:148,safety,test,test,148,"Fix Copy constructor in TFormula (ROOT-9801); Fix ROOT-9801, by correctly copying the members for lazy initialization in TFormula::Copy. Add also a test for reproducing ROOT-9801",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3003
https://github.com/root-project/root/pull/3003:148,testability,test,test,148,"Fix Copy constructor in TFormula (ROOT-9801); Fix ROOT-9801, by correctly copying the members for lazy initialization in TFormula::Copy. Add also a test for reproducing ROOT-9801",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3003
https://github.com/root-project/root/pull/3004:0,deployability,Updat,Update,0,Update builtin version of Vc to 1.4.1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3004
https://github.com/root-project/root/pull/3004:15,deployability,version,version,15,Update builtin version of Vc to 1.4.1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3004
https://github.com/root-project/root/pull/3004:15,integrability,version,version,15,Update builtin version of Vc to 1.4.1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3004
https://github.com/root-project/root/pull/3004:15,modifiability,version,version,15,Update builtin version of Vc to 1.4.1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3004
https://github.com/root-project/root/pull/3004:0,safety,Updat,Update,0,Update builtin version of Vc to 1.4.1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3004
https://github.com/root-project/root/pull/3004:0,security,Updat,Update,0,Update builtin version of Vc to 1.4.1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3004
https://github.com/root-project/root/pull/3006:13,energy efficiency,Reduc,Reduce,13,[cxxmodules] Reduce duplications in SMatrix.pcm;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3006
https://github.com/root-project/root/pull/3007:415,integrability,interfac,interface,415,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3007
https://github.com/root-project/root/pull/3007:58,interoperability,Specif,Specifically,58,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3007
https://github.com/root-project/root/pull/3007:198,interoperability,plug,plugin,198,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3007
https://github.com/root-project/root/pull/3007:415,interoperability,interfac,interface,415,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3007
https://github.com/root-project/root/pull/3007:415,modifiability,interfac,interface,415,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3007
https://github.com/root-project/root/pull/3007:507,safety,avoid,avoid,507,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3007
https://github.com/root-project/root/pull/3007:32,usability,learn,learning,32,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3007
https://github.com/root-project/root/pull/3007:315,usability,close,close,315,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3007
https://github.com/root-project/root/pull/3007:325,usability,learn,learning,325,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3007
https://github.com/root-project/root/pull/3007:356,usability,learn,learning,356,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3007
https://github.com/root-project/root/pull/3007:486,usability,learn,learning,486,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3007
https://github.com/root-project/root/pull/3007:517,usability,Learn,LearningPrefill,517,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3007
https://github.com/root-project/root/pull/3009:124,availability,slo,slope,124,"Generalization of RooArgusBG pdf ; This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making . the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3009
https://github.com/root-project/root/pull/3009:94,deployability,integr,integration,94,"Generalization of RooArgusBG pdf ; This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making . the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3009
https://github.com/root-project/root/pull/3009:94,integrability,integr,integration,94,"Generalization of RooArgusBG pdf ; This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making . the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3009
https://github.com/root-project/root/pull/3009:94,interoperability,integr,integration,94,"Generalization of RooArgusBG pdf ; This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making . the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3009
https://github.com/root-project/root/pull/3009:94,modifiability,integr,integration,94,"Generalization of RooArgusBG pdf ; This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making . the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3009
https://github.com/root-project/root/pull/3009:111,modifiability,paramet,parameter,111,"Generalization of RooArgusBG pdf ; This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making . the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3009
https://github.com/root-project/root/pull/3009:130,modifiability,paramet,parameter,130,"Generalization of RooArgusBG pdf ; This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making . the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3009
https://github.com/root-project/root/pull/3009:280,modifiability,paramet,parameter,280,"Generalization of RooArgusBG pdf ; This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making . the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3009
https://github.com/root-project/root/pull/3009:94,reliability,integr,integration,94,"Generalization of RooArgusBG pdf ; This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making . the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3009
https://github.com/root-project/root/pull/3009:124,reliability,slo,slope,124,"Generalization of RooArgusBG pdf ; This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making . the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3009
https://github.com/root-project/root/pull/3009:94,security,integr,integration,94,"Generalization of RooArgusBG pdf ; This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making . the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3009
https://github.com/root-project/root/pull/3009:94,testability,integr,integration,94,"Generalization of RooArgusBG pdf ; This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making . the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3009
https://github.com/root-project/root/pull/3010:6,energy efficiency,reduc,reduce,6,Cling reduce the link libs;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3010
https://github.com/root-project/root/pull/3012:865,availability,avail,available,865,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1993,availability,failur,failures,1993,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:54,deployability,modul,module,54,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:526,deployability,observ,observable,526,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1993,deployability,fail,failures,1993,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2009,deployability,modul,modules,2009,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2082,energy efficiency,Core,Core,2082,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2099,energy efficiency,CPU,CPU,2099,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2119,energy efficiency,core,core,2119,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2220,energy efficiency,reduc,reduce,2220,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2055,interoperability,specif,specification,2055,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:54,modifiability,modul,module,54,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2009,modifiability,modul,modules,2009,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:600,performance,Perform,Performance,600,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:641,performance,time,times,641,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1181,performance,time,time,1181,"tentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1468,performance,time,time,1468,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1993,performance,failur,failures,1993,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2099,performance,CPU,CPU,2099,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2231,performance,memor,memory,2231,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2292,performance,memor,memory,2292,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:865,reliability,availab,available,865,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1993,reliability,fail,failures,1993,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:54,safety,modul,module,54,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:171,safety,avoid,avoid,171,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:651,safety,test,tests,651,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:865,safety,avail,available,865,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1300,safety,Test,Tests,1300,"hird-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory foot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1356,safety,test,test,1356,"call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1391,safety,Test,Tests,1391,"uire parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1447,safety,test,test,1447,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1489,safety,Test,Tests,1489,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1560,safety,Test,Tests,1560,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1626,safety,Test,Tests,1626,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1692,safety,Test,Tests,1692,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1835,safety,test,test,1835,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1988,safety,test,test,1988,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2009,safety,modul,modules,2009,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2372,safety,test,test,2372,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:470,security,control,control,470,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:865,security,availab,available,865,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:470,testability,control,control,470,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:526,testability,observ,observable,526,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:651,testability,test,tests,651,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1300,testability,Test,Tests,1300,"hird-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory foot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1356,testability,test,test,1356,"call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1391,testability,Test,Tests,1391,"uire parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1447,testability,test,test,1447,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1489,testability,Test,Tests,1489,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1560,testability,Test,Tests,1560,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1626,testability,Test,Tests,1626,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1692,testability,Test,Tests,1692,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1835,testability,test,test,1835,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:1988,testability,test,test,1988,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2372,testability,test,test,2372,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:600,usability,Perform,Performance,600,"[cxxmodules] Do not generate rdict files if we have a module.; ## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2231,usability,memor,memory,2231,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3012:2292,usability,memor,memory,2292,"it as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:. * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine. * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time. * (no)dict2 -- Tests are run once again after running (no)dict1-cold;. * (no)dict3 -- Tests are run once again after running (no)dict2;. * (no)dict4 -- Tests are run once again after running (no)dict3;. * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3012
https://github.com/root-project/root/pull/3013:575,deployability,version,version,575,"Do not generate an rdict file for multidicts.; In several cases we have to store information in more than one dictionary. There are two cases: (a) when dictionary becomes too big (windows) and. more importantly (b) when we want to have double vs Double32_t specializations. This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option. is specified. For example, `libGenVector_rdict.pcm` and. `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of. `TCling::LoadPCM` it seems impossible to load the second version of the. dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3013
https://github.com/root-project/root/pull/3013:608,deployability,patch,patch,608,"Do not generate an rdict file for multidicts.; In several cases we have to store information in more than one dictionary. There are two cases: (a) when dictionary becomes too big (windows) and. more importantly (b) when we want to have double vs Double32_t specializations. This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option. is specified. For example, `libGenVector_rdict.pcm` and. `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of. `TCling::LoadPCM` it seems impossible to load the second version of the. dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3013
https://github.com/root-project/root/pull/3013:320,energy efficiency,current,current,320,"Do not generate an rdict file for multidicts.; In several cases we have to store information in more than one dictionary. There are two cases: (a) when dictionary becomes too big (windows) and. more importantly (b) when we want to have double vs Double32_t specializations. This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option. is specified. For example, `libGenVector_rdict.pcm` and. `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of. `TCling::LoadPCM` it seems impossible to load the second version of the. dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3013
https://github.com/root-project/root/pull/3013:527,energy efficiency,Load,LoadPCM,527,"Do not generate an rdict file for multidicts.; In several cases we have to store information in more than one dictionary. There are two cases: (a) when dictionary becomes too big (windows) and. more importantly (b) when we want to have double vs Double32_t specializations. This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option. is specified. For example, `libGenVector_rdict.pcm` and. `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of. `TCling::LoadPCM` it seems impossible to load the second version of the. dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3013
https://github.com/root-project/root/pull/3013:559,energy efficiency,load,load,559,"Do not generate an rdict file for multidicts.; In several cases we have to store information in more than one dictionary. There are two cases: (a) when dictionary becomes too big (windows) and. more importantly (b) when we want to have double vs Double32_t specializations. This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option. is specified. For example, `libGenVector_rdict.pcm` and. `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of. `TCling::LoadPCM` it seems impossible to load the second version of the. dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3013
https://github.com/root-project/root/pull/3013:575,integrability,version,version,575,"Do not generate an rdict file for multidicts.; In several cases we have to store information in more than one dictionary. There are two cases: (a) when dictionary becomes too big (windows) and. more importantly (b) when we want to have double vs Double32_t specializations. This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option. is specified. For example, `libGenVector_rdict.pcm` and. `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of. `TCling::LoadPCM` it seems impossible to load the second version of the. dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3013
https://github.com/root-project/root/pull/3013:394,interoperability,specif,specified,394,"Do not generate an rdict file for multidicts.; In several cases we have to store information in more than one dictionary. There are two cases: (a) when dictionary becomes too big (windows) and. more importantly (b) when we want to have double vs Double32_t specializations. This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option. is specified. For example, `libGenVector_rdict.pcm` and. `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of. `TCling::LoadPCM` it seems impossible to load the second version of the. dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3013
https://github.com/root-project/root/pull/3013:575,modifiability,version,version,575,"Do not generate an rdict file for multidicts.; In several cases we have to store information in more than one dictionary. There are two cases: (a) when dictionary becomes too big (windows) and. more importantly (b) when we want to have double vs Double32_t specializations. This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option. is specified. For example, `libGenVector_rdict.pcm` and. `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of. `TCling::LoadPCM` it seems impossible to load the second version of the. dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3013
https://github.com/root-project/root/pull/3013:527,performance,Load,LoadPCM,527,"Do not generate an rdict file for multidicts.; In several cases we have to store information in more than one dictionary. There are two cases: (a) when dictionary becomes too big (windows) and. more importantly (b) when we want to have double vs Double32_t specializations. This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option. is specified. For example, `libGenVector_rdict.pcm` and. `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of. `TCling::LoadPCM` it seems impossible to load the second version of the. dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3013
https://github.com/root-project/root/pull/3013:559,performance,load,load,559,"Do not generate an rdict file for multidicts.; In several cases we have to store information in more than one dictionary. There are two cases: (a) when dictionary becomes too big (windows) and. more importantly (b) when we want to have double vs Double32_t specializations. This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option. is specified. For example, `libGenVector_rdict.pcm` and. `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of. `TCling::LoadPCM` it seems impossible to load the second version of the. dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3013
https://github.com/root-project/root/pull/3013:608,safety,patch,patch,608,"Do not generate an rdict file for multidicts.; In several cases we have to store information in more than one dictionary. There are two cases: (a) when dictionary becomes too big (windows) and. more importantly (b) when we want to have double vs Double32_t specializations. This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option. is specified. For example, `libGenVector_rdict.pcm` and. `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of. `TCling::LoadPCM` it seems impossible to load the second version of the. dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3013
https://github.com/root-project/root/pull/3013:608,security,patch,patch,608,"Do not generate an rdict file for multidicts.; In several cases we have to store information in more than one dictionary. There are two cases: (a) when dictionary becomes too big (windows) and. more importantly (b) when we want to have double vs Double32_t specializations. This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option. is specified. For example, `libGenVector_rdict.pcm` and. `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of. `TCling::LoadPCM` it seems impossible to load the second version of the. dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3013
https://github.com/root-project/root/pull/3014:415,integrability,interfac,interface,415,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3014
https://github.com/root-project/root/pull/3014:58,interoperability,Specif,Specifically,58,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3014
https://github.com/root-project/root/pull/3014:198,interoperability,plug,plugin,198,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3014
https://github.com/root-project/root/pull/3014:415,interoperability,interfac,interface,415,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3014
https://github.com/root-project/root/pull/3014:415,modifiability,interfac,interface,415,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3014
https://github.com/root-project/root/pull/3014:507,safety,avoid,avoid,507,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3014
https://github.com/root-project/root/pull/3014:32,usability,learn,learning,32,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3014
https://github.com/root-project/root/pull/3014:315,usability,close,close,315,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3014
https://github.com/root-project/root/pull/3014:325,usability,learn,learning,325,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3014
https://github.com/root-project/root/pull/3014:356,usability,learn,learning,356,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3014
https://github.com/root-project/root/pull/3014:486,usability,learn,learning,486,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3014
https://github.com/root-project/root/pull/3014:517,usability,Learn,LearningPrefill,517,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3014
https://github.com/root-project/root/pull/3015:415,integrability,interfac,interface,415,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3015
https://github.com/root-project/root/pull/3015:58,interoperability,Specif,Specifically,58,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3015
https://github.com/root-project/root/pull/3015:198,interoperability,plug,plugin,198,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3015
https://github.com/root-project/root/pull/3015:415,interoperability,interfac,interface,415,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3015
https://github.com/root-project/root/pull/3015:415,modifiability,interfac,interface,415,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3015
https://github.com/root-project/root/pull/3015:507,safety,avoid,avoid,507,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3015
https://github.com/root-project/root/pull/3015:32,usability,learn,learning,32,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3015
https://github.com/root-project/root/pull/3015:315,usability,close,close,315,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3015
https://github.com/root-project/root/pull/3015:325,usability,learn,learning,325,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3015
https://github.com/root-project/root/pull/3015:356,usability,learn,learning,356,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3015
https://github.com/root-project/root/pull/3015:486,usability,learn,learning,486,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3015
https://github.com/root-project/root/pull/3015:517,usability,Learn,LearningPrefill,517,Fix TTreeCache issue related to learning from ROOT-9773.; Specifically this fixes the one described at:. https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824. where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning. prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as. part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3015
https://github.com/root-project/root/pull/3017:1042,availability,error,errors,1042,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:1058,availability,error,errors,1058,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:1205,availability,error,errors,1205,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:100,deployability,patch,patch,100,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:106,deployability,contain,contains,106,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:506,deployability,patch,patch,506,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:908,energy efficiency,load,loadLibrary,908,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:223,interoperability,share,shared,223,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:908,performance,load,loadLibrary,908,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:1042,performance,error,errors,1042,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:1058,performance,error,errors,1058,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:1205,performance,error,errors,1205,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:330,reliability,doe,doesn,330,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:100,safety,patch,patch,100,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:506,safety,patch,patch,506,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:949,safety,test,tests,949,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:1042,safety,error,errors,1042,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:1058,safety,error,errors,1058,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:1205,safety,error,errors,1205,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:100,security,patch,patch,100,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:506,security,patch,patch,506,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:949,testability,test,tests,949,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:13,usability,Support,Support,13,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:517,usability,support,support,517,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:1042,usability,error,errors,1042,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:1058,usability,error,errors,1058,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3017:1205,usability,error,errors,1205,"[cxxmodules] Support autoloading of dynamic symbols and callback from…; … IncrementalExecutor. This patch contains two functionality:. 1. Autoloading of dynamic symbols for system headers. There is three kind of symbols in shared object file, which is 1. normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols. Linker doesn't care about 3, but should take care (of course) 1 and. 2. For system headers, often symbols are defined in .dynsym section. which means they are 2 dynamic symbols. This patch adds support of. autoloading those symbols. We fallback to resolving dynamic symbols. from system headers only if we couldn't resolve from normal symbol. table, as the initialization of header search is expensive (iterating. through all system headers). 2. Register callback from IncrementalExecutor. Previously, LazyFunctionCreatorAutoload was getting callback only. from DynamicLibraryManager::loadLibrary. This was enough for fixing. tests, but is insufficient to handle ""symbol <something> unresolved. while linking function"" errors as those errors are emitted from. IncrementalExecutor. Adding a callback from IncrementalExecutor. enables us to unresolved symbols. It fixes these kind of errors:. `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3017
https://github.com/root-project/root/pull/3020:69,deployability,releas,releases,69,"V618 deprecation; Will be merged into v6-16, too. @gganis FYI re LCG releases - please make sure we don't have mismatched expectations here :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3020
https://github.com/root-project/root/pull/3020:111,interoperability,mismatch,mismatched,111,"V618 deprecation; Will be merged into v6-16, too. @gganis FYI re LCG releases - please make sure we don't have mismatched expectations here :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3020
https://github.com/root-project/root/pull/3021:73,safety,test,test,73,"[DF] Let SaveGraph return a string rather than print to stdout; Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3021
https://github.com/root-project/root/pull/3021:107,safety,test,test,107,"[DF] Let SaveGraph return a string rather than print to stdout; Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3021
https://github.com/root-project/root/pull/3021:64,testability,Simpl,Simplify,64,"[DF] Let SaveGraph return a string rather than print to stdout; Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3021
https://github.com/root-project/root/pull/3021:73,testability,test,test,73,"[DF] Let SaveGraph return a string rather than print to stdout; Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3021
https://github.com/root-project/root/pull/3021:107,testability,test,test,107,"[DF] Let SaveGraph return a string rather than print to stdout; Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3021
https://github.com/root-project/root/pull/3021:64,usability,Simpl,Simplify,64,"[DF] Let SaveGraph return a string rather than print to stdout; Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3021
https://github.com/root-project/root/pull/3023:73,safety,test,test,73,"[DF] Let SaveGraph return a string rather than print to stdout; Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3023
https://github.com/root-project/root/pull/3023:107,safety,test,test,107,"[DF] Let SaveGraph return a string rather than print to stdout; Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3023
https://github.com/root-project/root/pull/3023:64,testability,Simpl,Simplify,64,"[DF] Let SaveGraph return a string rather than print to stdout; Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3023
https://github.com/root-project/root/pull/3023:73,testability,test,test,73,"[DF] Let SaveGraph return a string rather than print to stdout; Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3023
https://github.com/root-project/root/pull/3023:107,testability,test,test,107,"[DF] Let SaveGraph return a string rather than print to stdout; Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3023
https://github.com/root-project/root/pull/3023:64,usability,Simpl,Simplify,64,"[DF] Let SaveGraph return a string rather than print to stdout; Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3023
https://github.com/root-project/root/pull/3024:978,deployability,updat,update,978,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:995,deployability,version,version,995,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:18,energy efficiency,optim,optimization,18,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:143,energy efficiency,model,models,143,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:934,energy efficiency,current,currently,934,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:684,integrability,wrap,wrap,684,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:995,integrability,version,version,995,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:995,modifiability,version,version,995,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:18,performance,optimiz,optimization,18,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:672,performance,time,time,672,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:733,safety,test,testing,733,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:788,safety,review,reviews,788,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:978,safety,updat,update,978,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:143,security,model,models,143,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:525,security,sign,significant,525,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:978,security,updat,update,978,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:733,testability,test,testing,733,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:788,testability,review,reviews,788,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3024:573,usability,minim,minimization,573,"RooLinkedList::At optimization; `RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3024
https://github.com/root-project/root/pull/3025:247,availability,operat,operation,247,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:451,availability,operat,operations,451,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:73,integrability,pub,public,73,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:295,integrability,Sub,Subsequent,295,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:331,performance,cach,cached,331,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:482,performance,cach,caching,482,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:498,performance,perform,performed,498,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:545,performance,time,time,545,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:22,safety,valid,valid,22,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:217,safety,valid,valid,217,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:406,safety,test,test,406,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:312,testability,simpl,simply,312,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:375,testability,simpl,simplified,375,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:406,testability,test,test,406,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:312,usability,simpl,simply,312,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:375,usability,simpl,simplified,375,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3025:498,usability,perform,performed,498,[DF] Generate list of valid branch names once; - GetBranchNames is now a public method of RLoopManager. - fBranchNames is now RLoopManager::fValidBranchNames. - the first call to GetBranchNames evaluates the list of. valid branch names (expensive operation) and stores it. in fValidBranchNames. Subsequent calls simply return. the cached value. - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3025
https://github.com/root-project/root/pull/3026:37,usability,document,documentation,37,[TTreeCache][NFC] Improve TTreeCache documentation;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3026
https://github.com/root-project/root/pull/3027:0,deployability,Updat,Update,0,Update to ROOT build options;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3027
https://github.com/root-project/root/pull/3027:15,deployability,build,build,15,Update to ROOT build options;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3027
https://github.com/root-project/root/pull/3027:0,safety,Updat,Update,0,Update to ROOT build options;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3027
https://github.com/root-project/root/pull/3027:0,security,Updat,Update,0,Update to ROOT build options;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3027
https://github.com/root-project/root/pull/3028:153,deployability,log,logic,153,"Implement standalone class generation for multiclass BDTG; Standalone C++ class generation was not implemented for multiclass BDTG. This change uses the logic of TMVA::MethodBDT::GetMulticlassValues() and uses it in a new function ReadBDTG::GetMulticlassValues() when the multiclass training is used. Tested on multiclass BDTG and binary BDTG training, in both cases a compiling and functioning standalone class is generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3028
https://github.com/root-project/root/pull/3028:153,safety,log,logic,153,"Implement standalone class generation for multiclass BDTG; Standalone C++ class generation was not implemented for multiclass BDTG. This change uses the logic of TMVA::MethodBDT::GetMulticlassValues() and uses it in a new function ReadBDTG::GetMulticlassValues() when the multiclass training is used. Tested on multiclass BDTG and binary BDTG training, in both cases a compiling and functioning standalone class is generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3028
https://github.com/root-project/root/pull/3028:301,safety,Test,Tested,301,"Implement standalone class generation for multiclass BDTG; Standalone C++ class generation was not implemented for multiclass BDTG. This change uses the logic of TMVA::MethodBDT::GetMulticlassValues() and uses it in a new function ReadBDTG::GetMulticlassValues() when the multiclass training is used. Tested on multiclass BDTG and binary BDTG training, in both cases a compiling and functioning standalone class is generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3028
https://github.com/root-project/root/pull/3028:153,security,log,logic,153,"Implement standalone class generation for multiclass BDTG; Standalone C++ class generation was not implemented for multiclass BDTG. This change uses the logic of TMVA::MethodBDT::GetMulticlassValues() and uses it in a new function ReadBDTG::GetMulticlassValues() when the multiclass training is used. Tested on multiclass BDTG and binary BDTG training, in both cases a compiling and functioning standalone class is generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3028
https://github.com/root-project/root/pull/3028:153,testability,log,logic,153,"Implement standalone class generation for multiclass BDTG; Standalone C++ class generation was not implemented for multiclass BDTG. This change uses the logic of TMVA::MethodBDT::GetMulticlassValues() and uses it in a new function ReadBDTG::GetMulticlassValues() when the multiclass training is used. Tested on multiclass BDTG and binary BDTG training, in both cases a compiling and functioning standalone class is generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3028
https://github.com/root-project/root/pull/3028:301,testability,Test,Tested,301,"Implement standalone class generation for multiclass BDTG; Standalone C++ class generation was not implemented for multiclass BDTG. This change uses the logic of TMVA::MethodBDT::GetMulticlassValues() and uses it in a new function ReadBDTG::GetMulticlassValues() when the multiclass training is used. Tested on multiclass BDTG and binary BDTG training, in both cases a compiling and functioning standalone class is generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3028
https://github.com/root-project/root/pull/3029:196,availability,Error,Error,196,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:245,availability,Error,Error,245,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:454,availability,Error,Error,454,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:189,deployability,Fail,Failed,189,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:279,deployability,build,builddir,279,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:288,deployability,build,build,288,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:294,deployability,BUILD,BUILD,294,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:490,energy efficiency,current,current,490,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:196,performance,Error,Error,196,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:245,performance,Error,Error,245,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:454,performance,Error,Error,454,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:189,reliability,Fail,Failed,189,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:34,safety,avoid,avoid,34,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:57,safety,avoid,avoids,57,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:106,safety,Test,Test,106,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:196,safety,Error,Error,196,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:245,safety,Error,Error,245,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:454,safety,Error,Error,454,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:106,testability,Test,Test,106,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:196,usability,Error,Error,196,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:245,usability,Error,Error,245,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3029:454,usability,Error,Error,454,Make tutorial filenames unique to avoid overwrites; This avoids problems during ctest like:. ```. 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec. Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C... SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory). Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written. (int) 0. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3029
https://github.com/root-project/root/pull/3030:684,availability,error,error,684,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:4,deployability,infrastructur,infrastructure,4,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:417,deployability,depend,dependent,417,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:526,deployability,Automat,Automatic,526,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:864,deployability,infrastructur,infrastructure,864,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:899,deployability,depend,dependency,899,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:618,energy efficiency,Current,Current,618,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:778,energy efficiency,current,current,778,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:408,integrability,protocol,protocol-dependent,408,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:442,integrability,rout,routine,442,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:600,integrability,buffer,buffer,600,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:899,integrability,depend,dependency,899,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:946,integrability,buffer,buffering,946,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:975,integrability,buffer,buffer,975,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:408,interoperability,protocol,protocol-dependent,408,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:857,interoperability,plug,plugin,857,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:417,modifiability,depend,dependent,417,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:899,modifiability,depend,dependency,899,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:596,performance,I/O,I/O,596,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:684,performance,error,error,684,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:759,performance,perform,performance,759,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:839,performance,I/O,I/O,839,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:942,performance,I/O,I/O,942,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:417,safety,depend,dependent,417,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:684,safety,error,error,684,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:891,safety,avoid,avoid,891,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:899,safety,depend,dependency,899,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:969,safety,avoid,avoid,969,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:149,security,access,accessing,149,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:483,security,access,access,483,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:581,security,Control,Control,581,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:417,testability,depend,dependent,417,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:526,testability,Automat,Automatic,526,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:581,testability,Control,Control,581,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:899,testability,depend,dependency,899,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:684,usability,error,error,684,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3030:759,usability,perform,performance,759,"New infrastructure class RRawFile to read local and remote non-ROOT files; Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for. - unified access to files, either local or remote. - Automatic handling of UNIX and Windows line breaks . - Control of the I/O buffer mechanism. Current todos:. - [ ] Use upcoming `RStatus` / `RException` based error handling. - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation . - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX. - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3030
https://github.com/root-project/root/pull/3031:0,deployability,Updat,Update,0,Update geom/geocad CMakeLists.txt; * List all headers and sources. * Restrict includes to target. * Avoid shadow and extra warnings from OpenCascade,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3031
https://github.com/root-project/root/pull/3031:0,safety,Updat,Update,0,Update geom/geocad CMakeLists.txt; * List all headers and sources. * Restrict includes to target. * Avoid shadow and extra warnings from OpenCascade,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3031
https://github.com/root-project/root/pull/3031:100,safety,Avoid,Avoid,100,Update geom/geocad CMakeLists.txt; * List all headers and sources. * Restrict includes to target. * Avoid shadow and extra warnings from OpenCascade,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3031
https://github.com/root-project/root/pull/3031:0,security,Updat,Update,0,Update geom/geocad CMakeLists.txt; * List all headers and sources. * Restrict includes to target. * Avoid shadow and extra warnings from OpenCascade,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3031
https://github.com/root-project/root/pull/3032:161,availability,state,state,161,"[treereader] Do not warn about file change if *this is new:; The reader cannot know who read that tree before, maybe another reader,. and warning about previous state right after birth is too much of a guess. Fixes an issue where RDF creates exactly that situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3032
https://github.com/root-project/root/pull/3032:161,integrability,state,state,161,"[treereader] Do not warn about file change if *this is new:; The reader cannot know who read that tree before, maybe another reader,. and warning about previous state right after birth is too much of a guess. Fixes an issue where RDF creates exactly that situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3032
https://github.com/root-project/root/pull/3033:89,availability,consist,consists,89,"[TCling][ROOT-9660] Do not fwd declare on library load enums Cling kows already; the fix consists in a rewrite of the parser of enum fwd declarations which come. from dictionaries. Those are created by Cling's forward declarator. The previous implementation was assuming namespace declarations and enum fwd. declarations on different lines, e.g. ```. namespace mystuff{. enum __attribute__((annotate(""$clingAutoload$myenum.h""))) myenum : unsigned int;. }. ```. while in reality the declaration looks like. ```. namespace mystuff{enum __attribute__((annotate(""$clingAutoload$myenum.h""))) myenum : unsigned int;}. ```. Linked to: https://github.com/root-project/roottest/pull/256.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3033
https://github.com/root-project/root/pull/3033:50,energy efficiency,load,load,50,"[TCling][ROOT-9660] Do not fwd declare on library load enums Cling kows already; the fix consists in a rewrite of the parser of enum fwd declarations which come. from dictionaries. Those are created by Cling's forward declarator. The previous implementation was assuming namespace declarations and enum fwd. declarations on different lines, e.g. ```. namespace mystuff{. enum __attribute__((annotate(""$clingAutoload$myenum.h""))) myenum : unsigned int;. }. ```. while in reality the declaration looks like. ```. namespace mystuff{enum __attribute__((annotate(""$clingAutoload$myenum.h""))) myenum : unsigned int;}. ```. Linked to: https://github.com/root-project/roottest/pull/256.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3033
https://github.com/root-project/root/pull/3033:50,performance,load,load,50,"[TCling][ROOT-9660] Do not fwd declare on library load enums Cling kows already; the fix consists in a rewrite of the parser of enum fwd declarations which come. from dictionaries. Those are created by Cling's forward declarator. The previous implementation was assuming namespace declarations and enum fwd. declarations on different lines, e.g. ```. namespace mystuff{. enum __attribute__((annotate(""$clingAutoload$myenum.h""))) myenum : unsigned int;. }. ```. while in reality the declaration looks like. ```. namespace mystuff{enum __attribute__((annotate(""$clingAutoload$myenum.h""))) myenum : unsigned int;}. ```. Linked to: https://github.com/root-project/roottest/pull/256.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3033
https://github.com/root-project/root/pull/3033:89,usability,consist,consists,89,"[TCling][ROOT-9660] Do not fwd declare on library load enums Cling kows already; the fix consists in a rewrite of the parser of enum fwd declarations which come. from dictionaries. Those are created by Cling's forward declarator. The previous implementation was assuming namespace declarations and enum fwd. declarations on different lines, e.g. ```. namespace mystuff{. enum __attribute__((annotate(""$clingAutoload$myenum.h""))) myenum : unsigned int;. }. ```. while in reality the declaration looks like. ```. namespace mystuff{enum __attribute__((annotate(""$clingAutoload$myenum.h""))) myenum : unsigned int;}. ```. Linked to: https://github.com/root-project/roottest/pull/256.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3033
https://github.com/root-project/root/pull/3034:8,interoperability,conflict,conflict,8,Resolve conflict in hadd.cxx; dadd.cxx had a conflict with py2help,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3034
https://github.com/root-project/root/pull/3034:45,interoperability,conflict,conflict,45,Resolve conflict in hadd.cxx; dadd.cxx had a conflict with py2help,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3034
https://github.com/root-project/root/pull/3035:51,integrability,event,event,51,"[DF][ROOT-9783] Add DF ctors to isolate upfront an event range; there are usecases, e.g. distributed RDF, where it is necessary. to specify sub-event ranges and read only those entries. These. new constructors help in that direction.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3035
https://github.com/root-project/root/pull/3035:140,integrability,sub,sub-event,140,"[DF][ROOT-9783] Add DF ctors to isolate upfront an event range; there are usecases, e.g. distributed RDF, where it is necessary. to specify sub-event ranges and read only those entries. These. new constructors help in that direction.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3035
https://github.com/root-project/root/pull/3035:89,interoperability,distribut,distributed,89,"[DF][ROOT-9783] Add DF ctors to isolate upfront an event range; there are usecases, e.g. distributed RDF, where it is necessary. to specify sub-event ranges and read only those entries. These. new constructors help in that direction.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3035
https://github.com/root-project/root/pull/3035:132,interoperability,specif,specify,132,"[DF][ROOT-9783] Add DF ctors to isolate upfront an event range; there are usecases, e.g. distributed RDF, where it is necessary. to specify sub-event ranges and read only those entries. These. new constructors help in that direction.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3035
https://github.com/root-project/root/pull/3035:32,safety,isol,isolate,32,"[DF][ROOT-9783] Add DF ctors to isolate upfront an event range; there are usecases, e.g. distributed RDF, where it is necessary. to specify sub-event ranges and read only those entries. These. new constructors help in that direction.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3035
https://github.com/root-project/root/pull/3035:32,security,iso,isolate,32,"[DF][ROOT-9783] Add DF ctors to isolate upfront an event range; there are usecases, e.g. distributed RDF, where it is necessary. to specify sub-event ranges and read only those entries. These. new constructors help in that direction.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3035
https://github.com/root-project/root/pull/3035:32,testability,isol,isolate,32,"[DF][ROOT-9783] Add DF ctors to isolate upfront an event range; there are usecases, e.g. distributed RDF, where it is necessary. to specify sub-event ranges and read only those entries. These. new constructors help in that direction.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3035
https://github.com/root-project/root/pull/3035:210,usability,help,help,210,"[DF][ROOT-9783] Add DF ctors to isolate upfront an event range; there are usecases, e.g. distributed RDF, where it is necessary. to specify sub-event ranges and read only those entries. These. new constructors help in that direction.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3035
https://github.com/root-project/root/pull/3036:0,deployability,Updat,Update,0,Update minimum required version of CMake to 3.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3036
https://github.com/root-project/root/pull/3036:24,deployability,version,version,24,Update minimum required version of CMake to 3.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3036
https://github.com/root-project/root/pull/3036:24,integrability,version,version,24,Update minimum required version of CMake to 3.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3036
https://github.com/root-project/root/pull/3036:24,modifiability,version,version,24,Update minimum required version of CMake to 3.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3036
https://github.com/root-project/root/pull/3036:0,safety,Updat,Update,0,Update minimum required version of CMake to 3.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3036
https://github.com/root-project/root/pull/3036:0,security,Updat,Update,0,Update minimum required version of CMake to 3.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3036
https://github.com/root-project/root/pull/3036:7,usability,minim,minimum,7,Update minimum required version of CMake to 3.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3036
https://github.com/root-project/root/pull/3037:190,deployability,configurat,configuration,190,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:317,deployability,Depend,Depending,317,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:342,deployability,configurat,configuration,342,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:369,deployability,contain,container,369,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:407,deployability,fail,fail,407,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:46,integrability,interfac,interfaces,46,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:190,integrability,configur,configuration,190,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:317,integrability,Depend,Depending,317,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:342,integrability,configur,configuration,342,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:46,interoperability,interfac,interfaces,46,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:380,interoperability,bind,binding,380,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:46,modifiability,interfac,interfaces,46,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:190,modifiability,configur,configuration,190,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:317,modifiability,Depend,Depending,317,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:342,modifiability,configur,configuration,342,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:380,modifiability,bind,binding,380,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:334,performance,network,network,334,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:407,reliability,fail,fail,407,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:317,safety,Depend,Depending,317,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:190,security,configur,configuration,190,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:334,security,network,network,334,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:342,security,configur,configuration,342,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:317,testability,Depend,Depending,317,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3037:58,usability,User,Users,58,"[ROOT-9829] Make Jupyter server listen on all interfaces; Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3037
https://github.com/root-project/root/pull/3038:8,interoperability,conflict,conflicts,8,resolve conflicts; Some files had conflicts (not seen but GitHub),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3038
https://github.com/root-project/root/pull/3038:34,interoperability,conflict,conflicts,34,resolve conflicts; Some files had conflicts (not seen but GitHub),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3038
https://github.com/root-project/root/pull/3039:55,deployability,Depend,Depends,55,Remove workaorounds for spurious TTreeReader warnings; Depends on #3032,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3039
https://github.com/root-project/root/pull/3039:55,integrability,Depend,Depends,55,Remove workaorounds for spurious TTreeReader warnings; Depends on #3032,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3039
https://github.com/root-project/root/pull/3039:55,modifiability,Depend,Depends,55,Remove workaorounds for spurious TTreeReader warnings; Depends on #3032,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3039
https://github.com/root-project/root/pull/3039:55,safety,Depend,Depends,55,Remove workaorounds for spurious TTreeReader warnings; Depends on #3032,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3039
https://github.com/root-project/root/pull/3039:55,testability,Depend,Depends,55,Remove workaorounds for spurious TTreeReader warnings; Depends on #3032,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3039
https://github.com/root-project/root/pull/3040:20,deployability,depend,dependency,20,[cmake] Add missing dependency.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3040
https://github.com/root-project/root/pull/3040:20,integrability,depend,dependency,20,[cmake] Add missing dependency.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3040
https://github.com/root-project/root/pull/3040:20,modifiability,depend,dependency,20,[cmake] Add missing dependency.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3040
https://github.com/root-project/root/pull/3040:20,safety,depend,dependency,20,[cmake] Add missing dependency.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3040
https://github.com/root-project/root/pull/3040:20,testability,depend,dependency,20,[cmake] Add missing dependency.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3040
https://github.com/root-project/root/pull/3041:22,deployability,version,version,22,[TBB] Evolve built-in version to 2019 u2; this update is necessary because a bug in tbb 2019 U1 made it incompatible with osx 10.11: see https://software.intel.com/en-us/articles/intel-threading-building-blocks-release-notes. See also the failing build: http://cdash.cern.ch/viewBuildError.php?buildid=597606.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3041
https://github.com/root-project/root/pull/3041:47,deployability,updat,update,47,[TBB] Evolve built-in version to 2019 u2; this update is necessary because a bug in tbb 2019 U1 made it incompatible with osx 10.11: see https://software.intel.com/en-us/articles/intel-threading-building-blocks-release-notes. See also the failing build: http://cdash.cern.ch/viewBuildError.php?buildid=597606.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3041
https://github.com/root-project/root/pull/3041:195,deployability,build,building-blocks-release-notes,195,[TBB] Evolve built-in version to 2019 u2; this update is necessary because a bug in tbb 2019 U1 made it incompatible with osx 10.11: see https://software.intel.com/en-us/articles/intel-threading-building-blocks-release-notes. See also the failing build: http://cdash.cern.ch/viewBuildError.php?buildid=597606.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3041
https://github.com/root-project/root/pull/3041:239,deployability,fail,failing,239,[TBB] Evolve built-in version to 2019 u2; this update is necessary because a bug in tbb 2019 U1 made it incompatible with osx 10.11: see https://software.intel.com/en-us/articles/intel-threading-building-blocks-release-notes. See also the failing build: http://cdash.cern.ch/viewBuildError.php?buildid=597606.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3041
https://github.com/root-project/root/pull/3041:247,deployability,build,build,247,[TBB] Evolve built-in version to 2019 u2; this update is necessary because a bug in tbb 2019 U1 made it incompatible with osx 10.11: see https://software.intel.com/en-us/articles/intel-threading-building-blocks-release-notes. See also the failing build: http://cdash.cern.ch/viewBuildError.php?buildid=597606.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3041
https://github.com/root-project/root/pull/3041:294,deployability,build,buildid,294,[TBB] Evolve built-in version to 2019 u2; this update is necessary because a bug in tbb 2019 U1 made it incompatible with osx 10.11: see https://software.intel.com/en-us/articles/intel-threading-building-blocks-release-notes. See also the failing build: http://cdash.cern.ch/viewBuildError.php?buildid=597606.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3041
https://github.com/root-project/root/pull/3041:22,integrability,version,version,22,[TBB] Evolve built-in version to 2019 u2; this update is necessary because a bug in tbb 2019 U1 made it incompatible with osx 10.11: see https://software.intel.com/en-us/articles/intel-threading-building-blocks-release-notes. See also the failing build: http://cdash.cern.ch/viewBuildError.php?buildid=597606.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3041
https://github.com/root-project/root/pull/3041:104,interoperability,incompatib,incompatible,104,[TBB] Evolve built-in version to 2019 u2; this update is necessary because a bug in tbb 2019 U1 made it incompatible with osx 10.11: see https://software.intel.com/en-us/articles/intel-threading-building-blocks-release-notes. See also the failing build: http://cdash.cern.ch/viewBuildError.php?buildid=597606.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3041
https://github.com/root-project/root/pull/3041:6,modifiability,Evolv,Evolve,6,[TBB] Evolve built-in version to 2019 u2; this update is necessary because a bug in tbb 2019 U1 made it incompatible with osx 10.11: see https://software.intel.com/en-us/articles/intel-threading-building-blocks-release-notes. See also the failing build: http://cdash.cern.ch/viewBuildError.php?buildid=597606.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3041
https://github.com/root-project/root/pull/3041:22,modifiability,version,version,22,[TBB] Evolve built-in version to 2019 u2; this update is necessary because a bug in tbb 2019 U1 made it incompatible with osx 10.11: see https://software.intel.com/en-us/articles/intel-threading-building-blocks-release-notes. See also the failing build: http://cdash.cern.ch/viewBuildError.php?buildid=597606.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3041
https://github.com/root-project/root/pull/3041:239,reliability,fail,failing,239,[TBB] Evolve built-in version to 2019 u2; this update is necessary because a bug in tbb 2019 U1 made it incompatible with osx 10.11: see https://software.intel.com/en-us/articles/intel-threading-building-blocks-release-notes. See also the failing build: http://cdash.cern.ch/viewBuildError.php?buildid=597606.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3041
https://github.com/root-project/root/pull/3041:47,safety,updat,update,47,[TBB] Evolve built-in version to 2019 u2; this update is necessary because a bug in tbb 2019 U1 made it incompatible with osx 10.11: see https://software.intel.com/en-us/articles/intel-threading-building-blocks-release-notes. See also the failing build: http://cdash.cern.ch/viewBuildError.php?buildid=597606.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3041
https://github.com/root-project/root/pull/3041:47,security,updat,update,47,[TBB] Evolve built-in version to 2019 u2; this update is necessary because a bug in tbb 2019 U1 made it incompatible with osx 10.11: see https://software.intel.com/en-us/articles/intel-threading-building-blocks-release-notes. See also the failing build: http://cdash.cern.ch/viewBuildError.php?buildid=597606.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3041
https://github.com/root-project/root/pull/3042:61,modifiability,variab,variable,61,Remove historical references to G__VECTOR_HAS_CLASS_ITERATOR variable;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3042
https://github.com/root-project/root/pull/3043:155,availability,failur,failure,155,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:52,deployability,modul,modules,52,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:155,deployability,fail,failure,155,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:243,deployability,modul,modules,243,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:254,deployability,Patch,Patch,254,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:52,modifiability,modul,modules,52,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:243,modifiability,modul,modules,243,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:126,performance,time,time,126,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:155,performance,failur,failure,155,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:155,reliability,fail,failure,155,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:52,safety,modul,modules,52,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:166,safety,test,tests,166,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:243,safety,modul,modules,243,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:254,safety,Patch,Patch,254,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:254,security,Patch,Patch,254,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:166,testability,test,tests,166,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3043:187,usability,custom,custom,187,[cxxmodules] Don't declare strings from rootmap for modules; We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries. . Should give 5MB improvements for modules. . Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3043
https://github.com/root-project/root/pull/3044:326,availability,error,error,326,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:0,deployability,Fail,Fail,0,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:34,deployability,version,versions,34,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:150,deployability,build,builds,150,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:180,deployability,fail,fail,180,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:214,deployability,version,versions,214,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:265,deployability,fail,fail,265,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:300,deployability,configurat,configuration,300,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:376,deployability,configurat,configuration,376,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:8,integrability,configur,configure,8,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:34,integrability,version,versions,34,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:188,integrability,configur,configure,188,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:214,integrability,version,versions,214,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:300,integrability,configur,configuration,300,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:332,integrability,messag,message,332,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:376,integrability,configur,configuration,376,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:23,interoperability,mismatch,mismatched,23,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:203,interoperability,mismatch,mismatched,203,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:332,interoperability,messag,message,332,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:8,modifiability,configur,configure,8,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:34,modifiability,version,versions,34,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:188,modifiability,configur,configure,188,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:214,modifiability,version,versions,214,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:300,modifiability,configur,configuration,300,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:376,modifiability,configur,configuration,376,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:326,performance,error,error,326,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:0,reliability,Fail,Fail,0,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:180,reliability,fail,fail,180,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:265,reliability,fail,fail,265,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:326,safety,error,error,326,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:8,security,configur,configure,8,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:188,security,configur,configure,188,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:300,security,configur,configuration,300,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:376,security,configur,configuration,376,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:127,usability,user,users,127,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3044:326,usability,error,error,326,"Fail to configure with mismatched versions of Python and its libraries; This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3044
https://github.com/root-project/root/pull/3047:23,deployability,version,versions,23,"Fix check for matching versions of Python and its libraries; On Windows, these are e.g. 3.5 and 3.5.5, so comparing for equality is too strict.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3047
https://github.com/root-project/root/pull/3047:23,integrability,version,versions,23,"Fix check for matching versions of Python and its libraries; On Windows, these are e.g. 3.5 and 3.5.5, so comparing for equality is too strict.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3047
https://github.com/root-project/root/pull/3047:23,modifiability,version,versions,23,"Fix check for matching versions of Python and its libraries; On Windows, these are e.g. 3.5 and 3.5.5, so comparing for equality is too strict.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3047
https://github.com/root-project/root/pull/3048:116,deployability,modul,module,116,"Use NEW behavior for CMake policy CMP0072 and CMP0077; This selects ""GLVND"" as default for OpenGL libraries. in the module to find OpenGL. The OLD behavior uses. the legacy library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3048
https://github.com/root-project/root/pull/3048:116,modifiability,modul,module,116,"Use NEW behavior for CMake policy CMP0072 and CMP0077; This selects ""GLVND"" as default for OpenGL libraries. in the module to find OpenGL. The OLD behavior uses. the legacy library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3048
https://github.com/root-project/root/pull/3048:116,safety,modul,module,116,"Use NEW behavior for CMake policy CMP0072 and CMP0077; This selects ""GLVND"" as default for OpenGL libraries. in the module to find OpenGL. The OLD behavior uses. the legacy library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3048
https://github.com/root-project/root/pull/3048:27,security,polic,policy,27,"Use NEW behavior for CMake policy CMP0072 and CMP0077; This selects ""GLVND"" as default for OpenGL libraries. in the module to find OpenGL. The OLD behavior uses. the legacy library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3048
https://github.com/root-project/root/pull/3048:8,usability,behavi,behavior,8,"Use NEW behavior for CMake policy CMP0072 and CMP0077; This selects ""GLVND"" as default for OpenGL libraries. in the module to find OpenGL. The OLD behavior uses. the legacy library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3048
https://github.com/root-project/root/pull/3048:147,usability,behavi,behavior,147,"Use NEW behavior for CMake policy CMP0072 and CMP0077; This selects ""GLVND"" as default for OpenGL libraries. in the module to find OpenGL. The OLD behavior uses. the legacy library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3048
https://github.com/root-project/root/pull/3049:115,deployability,build,buildid,115,[GeoCad] Reformat function to avoid misleading indentation warning; http://cdash.cern.ch/viewBuildError.php?type=1&buildid=598182,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3049
https://github.com/root-project/root/pull/3049:30,safety,avoid,avoid,30,[GeoCad] Reformat function to avoid misleading indentation warning; http://cdash.cern.ch/viewBuildError.php?type=1&buildid=598182,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3049
https://github.com/root-project/root/pull/3050:12,deployability,depend,dependencies,12,"Always link dependencies for external projects; Without this, dependencies specified in ROOT_LINKER_LIBRARY() get. dropped without any warning, leading to underlinking in external. projects that make use of ROOT CMake macros (including roottest). Fixes: [ROOT-9827](https://sft.its.cern.ch/jira/browse/ROOT-9827)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3050
https://github.com/root-project/root/pull/3050:62,deployability,depend,dependencies,62,"Always link dependencies for external projects; Without this, dependencies specified in ROOT_LINKER_LIBRARY() get. dropped without any warning, leading to underlinking in external. projects that make use of ROOT CMake macros (including roottest). Fixes: [ROOT-9827](https://sft.its.cern.ch/jira/browse/ROOT-9827)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3050
https://github.com/root-project/root/pull/3050:12,integrability,depend,dependencies,12,"Always link dependencies for external projects; Without this, dependencies specified in ROOT_LINKER_LIBRARY() get. dropped without any warning, leading to underlinking in external. projects that make use of ROOT CMake macros (including roottest). Fixes: [ROOT-9827](https://sft.its.cern.ch/jira/browse/ROOT-9827)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3050
https://github.com/root-project/root/pull/3050:62,integrability,depend,dependencies,62,"Always link dependencies for external projects; Without this, dependencies specified in ROOT_LINKER_LIBRARY() get. dropped without any warning, leading to underlinking in external. projects that make use of ROOT CMake macros (including roottest). Fixes: [ROOT-9827](https://sft.its.cern.ch/jira/browse/ROOT-9827)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3050
https://github.com/root-project/root/pull/3050:75,interoperability,specif,specified,75,"Always link dependencies for external projects; Without this, dependencies specified in ROOT_LINKER_LIBRARY() get. dropped without any warning, leading to underlinking in external. projects that make use of ROOT CMake macros (including roottest). Fixes: [ROOT-9827](https://sft.its.cern.ch/jira/browse/ROOT-9827)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3050
https://github.com/root-project/root/pull/3050:12,modifiability,depend,dependencies,12,"Always link dependencies for external projects; Without this, dependencies specified in ROOT_LINKER_LIBRARY() get. dropped without any warning, leading to underlinking in external. projects that make use of ROOT CMake macros (including roottest). Fixes: [ROOT-9827](https://sft.its.cern.ch/jira/browse/ROOT-9827)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3050
https://github.com/root-project/root/pull/3050:62,modifiability,depend,dependencies,62,"Always link dependencies for external projects; Without this, dependencies specified in ROOT_LINKER_LIBRARY() get. dropped without any warning, leading to underlinking in external. projects that make use of ROOT CMake macros (including roottest). Fixes: [ROOT-9827](https://sft.its.cern.ch/jira/browse/ROOT-9827)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3050
https://github.com/root-project/root/pull/3050:12,safety,depend,dependencies,12,"Always link dependencies for external projects; Without this, dependencies specified in ROOT_LINKER_LIBRARY() get. dropped without any warning, leading to underlinking in external. projects that make use of ROOT CMake macros (including roottest). Fixes: [ROOT-9827](https://sft.its.cern.ch/jira/browse/ROOT-9827)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3050
https://github.com/root-project/root/pull/3050:62,safety,depend,dependencies,62,"Always link dependencies for external projects; Without this, dependencies specified in ROOT_LINKER_LIBRARY() get. dropped without any warning, leading to underlinking in external. projects that make use of ROOT CMake macros (including roottest). Fixes: [ROOT-9827](https://sft.its.cern.ch/jira/browse/ROOT-9827)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3050
https://github.com/root-project/root/pull/3050:12,testability,depend,dependencies,12,"Always link dependencies for external projects; Without this, dependencies specified in ROOT_LINKER_LIBRARY() get. dropped without any warning, leading to underlinking in external. projects that make use of ROOT CMake macros (including roottest). Fixes: [ROOT-9827](https://sft.its.cern.ch/jira/browse/ROOT-9827)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3050
https://github.com/root-project/root/pull/3050:62,testability,depend,dependencies,62,"Always link dependencies for external projects; Without this, dependencies specified in ROOT_LINKER_LIBRARY() get. dropped without any warning, leading to underlinking in external. projects that make use of ROOT CMake macros (including roottest). Fixes: [ROOT-9827](https://sft.its.cern.ch/jira/browse/ROOT-9827)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3050
https://github.com/root-project/root/pull/3051:111,availability,slo,slot,111,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:264,availability,cluster,cluster,264,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:359,availability,restor,restore,359,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:90,deployability,build,build,90,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:116,deployability,contain,containing,116,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:179,deployability,contain,containing,179,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:264,deployability,cluster,cluster,264,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:569,integrability,Filter,Filters,569,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:66,interoperability,Specif,Specifically,66,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:332,performance,perform,performance,332,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:551,performance,cach,cached,551,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:755,performance,perform,performance,755,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:809,performance,parallel,parallelized,809,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:111,reliability,slo,slot,111,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:359,reliability,restor,restore,359,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:131,safety,input,input,131,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:240,safety,input,input,240,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:367,safety,sanit,sanity,367,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:367,security,sanit,sanity,367,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:131,usability,input,input,131,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:240,usability,input,input,240,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:332,usability,perform,performance,332,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:616,usability,user,users,616,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:662,usability,user,users,662,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3051:755,usability,perform,performance,755,"[DF] Fix rdfentry_; [TreeProcMT] Always use global entry numbers. Specifically:. - always build one TChain per slot containing all input files, as. opposed to one TChain per task containing one file. - always do a preliminary pass over all input files to extract. cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in. RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global. (and therefore unique) entry numbers. Internally the entry number is. used to check for hit/miss on cached results of Filters and Defines,. and it is also passed to users as a `rdfentry_` column, in which. case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3051
https://github.com/root-project/root/pull/3052:204,deployability,configurat,configuration,204,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:331,deployability,Depend,Depending,331,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:356,deployability,configurat,configuration,356,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:383,deployability,contain,container,383,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:422,deployability,fail,fail,422,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:46,integrability,interfac,interfaces,46,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:204,integrability,configur,configuration,204,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:331,integrability,Depend,Depending,331,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:356,integrability,configur,configuration,356,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:46,interoperability,interfac,interfaces,46,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:395,interoperability,bind,binding,395,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:46,modifiability,interfac,interfaces,46,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:204,modifiability,configur,configuration,204,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:331,modifiability,Depend,Depending,331,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:356,modifiability,configur,configuration,356,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:395,modifiability,bind,binding,395,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:348,performance,network,network,348,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:422,reliability,fail,fail,422,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:331,safety,Depend,Depending,331,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:204,security,configur,configuration,204,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:348,security,network,network,348,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:356,security,configur,configuration,356,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:331,testability,Depend,Depending,331,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3052:70,usability,User,Users,70,"[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16); Users might want to connect to a notebook server launched with. 'root --notebook' from another computer. This setting of the. Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,. binding on localhost might fail. This looks like the issue. reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3052
https://github.com/root-project/root/pull/3053:17,testability,simpl,simply,17,"[R] #undef Free, simply because. And ROOT-9258.;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3053
https://github.com/root-project/root/pull/3053:17,usability,simpl,simply,17,"[R] #undef Free, simply because. And ROOT-9258.;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3053
https://github.com/root-project/root/pull/3055:269,integrability,messag,message,269,[ROOT-9836] Include templated function in list of overloads; This PR fixes the issue described in:. https://sft.its.cern.ch/jira/browse/ROOT-9836. This should help with the development of `RDataFrame.AsMatrix` by @stwunsch . More information can be found in the commit message.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3055
https://github.com/root-project/root/pull/3055:269,interoperability,messag,message,269,[ROOT-9836] Include templated function in list of overloads; This PR fixes the issue described in:. https://sft.its.cern.ch/jira/browse/ROOT-9836. This should help with the development of `RDataFrame.AsMatrix` by @stwunsch . More information can be found in the commit message.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3055
https://github.com/root-project/root/pull/3055:159,usability,help,help,159,[ROOT-9836] Include templated function in list of overloads; This PR fixes the issue described in:. https://sft.its.cern.ch/jira/browse/ROOT-9836. This should help with the development of `RDataFrame.AsMatrix` by @stwunsch . More information can be found in the commit message.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3055
https://github.com/root-project/root/pull/3057:51,deployability,contain,contain,51,"[Geo][ROOT-9837] Avoid name clashes; workaround to contain leaks of the name `Handle` which is defined as a macro. Ideally, the headers should be re-written in order not to need direct inclusion of oce headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3057
https://github.com/root-project/root/pull/3057:17,safety,Avoid,Avoid,17,"[Geo][ROOT-9837] Avoid name clashes; workaround to contain leaks of the name `Handle` which is defined as a macro. Ideally, the headers should be re-written in order not to need direct inclusion of oce headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3057
https://github.com/root-project/root/pull/3059:624,availability,operat,operations,624,"[ROOT-9797] Properly apply exclusion of branches and cut (Port 6.16); The previous version of the code in rooteventselector first applied. the cut by invoking CopyTree on the input TTree, getting an output. tree as a result. After that, it deactivated the branches to exclude. and called CloneTree on the aforementioned output tree, thus getting. the final tree. When following this strategy, the final tree is. bigger than the input tree, probably because the intermediate tree. data (before the cloning) is also stored. In order to successfully combine the exclusion of branches and a cut. we need to reverse the order of operations: first deactivate branches. and clone the tree, then apply the cut with CopyTree. Note that keeping the initial solution, only changing the call. to Write on the final tree with Write("""", ROOT.TObject.kOverwrite). does not work either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3059
https://github.com/root-project/root/pull/3059:83,deployability,version,version,83,"[ROOT-9797] Properly apply exclusion of branches and cut (Port 6.16); The previous version of the code in rooteventselector first applied. the cut by invoking CopyTree on the input TTree, getting an output. tree as a result. After that, it deactivated the branches to exclude. and called CloneTree on the aforementioned output tree, thus getting. the final tree. When following this strategy, the final tree is. bigger than the input tree, probably because the intermediate tree. data (before the cloning) is also stored. In order to successfully combine the exclusion of branches and a cut. we need to reverse the order of operations: first deactivate branches. and clone the tree, then apply the cut with CopyTree. Note that keeping the initial solution, only changing the call. to Write on the final tree with Write("""", ROOT.TObject.kOverwrite). does not work either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3059
https://github.com/root-project/root/pull/3059:83,integrability,version,version,83,"[ROOT-9797] Properly apply exclusion of branches and cut (Port 6.16); The previous version of the code in rooteventselector first applied. the cut by invoking CopyTree on the input TTree, getting an output. tree as a result. After that, it deactivated the branches to exclude. and called CloneTree on the aforementioned output tree, thus getting. the final tree. When following this strategy, the final tree is. bigger than the input tree, probably because the intermediate tree. data (before the cloning) is also stored. In order to successfully combine the exclusion of branches and a cut. we need to reverse the order of operations: first deactivate branches. and clone the tree, then apply the cut with CopyTree. Note that keeping the initial solution, only changing the call. to Write on the final tree with Write("""", ROOT.TObject.kOverwrite). does not work either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3059
https://github.com/root-project/root/pull/3059:83,modifiability,version,version,83,"[ROOT-9797] Properly apply exclusion of branches and cut (Port 6.16); The previous version of the code in rooteventselector first applied. the cut by invoking CopyTree on the input TTree, getting an output. tree as a result. After that, it deactivated the branches to exclude. and called CloneTree on the aforementioned output tree, thus getting. the final tree. When following this strategy, the final tree is. bigger than the input tree, probably because the intermediate tree. data (before the cloning) is also stored. In order to successfully combine the exclusion of branches and a cut. we need to reverse the order of operations: first deactivate branches. and clone the tree, then apply the cut with CopyTree. Note that keeping the initial solution, only changing the call. to Write on the final tree with Write("""", ROOT.TObject.kOverwrite). does not work either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3059
https://github.com/root-project/root/pull/3059:461,modifiability,interm,intermediate,461,"[ROOT-9797] Properly apply exclusion of branches and cut (Port 6.16); The previous version of the code in rooteventselector first applied. the cut by invoking CopyTree on the input TTree, getting an output. tree as a result. After that, it deactivated the branches to exclude. and called CloneTree on the aforementioned output tree, thus getting. the final tree. When following this strategy, the final tree is. bigger than the input tree, probably because the intermediate tree. data (before the cloning) is also stored. In order to successfully combine the exclusion of branches and a cut. we need to reverse the order of operations: first deactivate branches. and clone the tree, then apply the cut with CopyTree. Note that keeping the initial solution, only changing the call. to Write on the final tree with Write("""", ROOT.TObject.kOverwrite). does not work either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3059
https://github.com/root-project/root/pull/3059:849,reliability,doe,does,849,"[ROOT-9797] Properly apply exclusion of branches and cut (Port 6.16); The previous version of the code in rooteventselector first applied. the cut by invoking CopyTree on the input TTree, getting an output. tree as a result. After that, it deactivated the branches to exclude. and called CloneTree on the aforementioned output tree, thus getting. the final tree. When following this strategy, the final tree is. bigger than the input tree, probably because the intermediate tree. data (before the cloning) is also stored. In order to successfully combine the exclusion of branches and a cut. we need to reverse the order of operations: first deactivate branches. and clone the tree, then apply the cut with CopyTree. Note that keeping the initial solution, only changing the call. to Write on the final tree with Write("""", ROOT.TObject.kOverwrite). does not work either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3059
https://github.com/root-project/root/pull/3059:175,safety,input,input,175,"[ROOT-9797] Properly apply exclusion of branches and cut (Port 6.16); The previous version of the code in rooteventselector first applied. the cut by invoking CopyTree on the input TTree, getting an output. tree as a result. After that, it deactivated the branches to exclude. and called CloneTree on the aforementioned output tree, thus getting. the final tree. When following this strategy, the final tree is. bigger than the input tree, probably because the intermediate tree. data (before the cloning) is also stored. In order to successfully combine the exclusion of branches and a cut. we need to reverse the order of operations: first deactivate branches. and clone the tree, then apply the cut with CopyTree. Note that keeping the initial solution, only changing the call. to Write on the final tree with Write("""", ROOT.TObject.kOverwrite). does not work either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3059
https://github.com/root-project/root/pull/3059:428,safety,input,input,428,"[ROOT-9797] Properly apply exclusion of branches and cut (Port 6.16); The previous version of the code in rooteventselector first applied. the cut by invoking CopyTree on the input TTree, getting an output. tree as a result. After that, it deactivated the branches to exclude. and called CloneTree on the aforementioned output tree, thus getting. the final tree. When following this strategy, the final tree is. bigger than the input tree, probably because the intermediate tree. data (before the cloning) is also stored. In order to successfully combine the exclusion of branches and a cut. we need to reverse the order of operations: first deactivate branches. and clone the tree, then apply the cut with CopyTree. Note that keeping the initial solution, only changing the call. to Write on the final tree with Write("""", ROOT.TObject.kOverwrite). does not work either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3059
https://github.com/root-project/root/pull/3059:175,usability,input,input,175,"[ROOT-9797] Properly apply exclusion of branches and cut (Port 6.16); The previous version of the code in rooteventselector first applied. the cut by invoking CopyTree on the input TTree, getting an output. tree as a result. After that, it deactivated the branches to exclude. and called CloneTree on the aforementioned output tree, thus getting. the final tree. When following this strategy, the final tree is. bigger than the input tree, probably because the intermediate tree. data (before the cloning) is also stored. In order to successfully combine the exclusion of branches and a cut. we need to reverse the order of operations: first deactivate branches. and clone the tree, then apply the cut with CopyTree. Note that keeping the initial solution, only changing the call. to Write on the final tree with Write("""", ROOT.TObject.kOverwrite). does not work either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3059
https://github.com/root-project/root/pull/3059:428,usability,input,input,428,"[ROOT-9797] Properly apply exclusion of branches and cut (Port 6.16); The previous version of the code in rooteventselector first applied. the cut by invoking CopyTree on the input TTree, getting an output. tree as a result. After that, it deactivated the branches to exclude. and called CloneTree on the aforementioned output tree, thus getting. the final tree. When following this strategy, the final tree is. bigger than the input tree, probably because the intermediate tree. data (before the cloning) is also stored. In order to successfully combine the exclusion of branches and a cut. we need to reverse the order of operations: first deactivate branches. and clone the tree, then apply the cut with CopyTree. Note that keeping the initial solution, only changing the call. to Write on the final tree with Write("""", ROOT.TObject.kOverwrite). does not work either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3059
https://github.com/root-project/root/pull/3060:4,deployability,releas,release,4,"Add release notes for 6.16 (PyROOT, notebooks, command line tools); Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3060
https://github.com/root-project/root/pull/3060:72,deployability,releas,release,72,"Add release notes for 6.16 (PyROOT, notebooks, command line tools); Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3060
https://github.com/root-project/root/pull/3060:142,deployability,integr,integration,142,"Add release notes for 6.16 (PyROOT, notebooks, command line tools); Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3060
https://github.com/root-project/root/pull/3060:98,energy efficiency,current,current,98,"Add release notes for 6.16 (PyROOT, notebooks, command line tools); Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3060
https://github.com/root-project/root/pull/3060:142,integrability,integr,integration,142,"Add release notes for 6.16 (PyROOT, notebooks, command line tools); Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3060
https://github.com/root-project/root/pull/3060:142,interoperability,integr,integration,142,"Add release notes for 6.16 (PyROOT, notebooks, command line tools); Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3060
https://github.com/root-project/root/pull/3060:142,modifiability,integr,integration,142,"Add release notes for 6.16 (PyROOT, notebooks, command line tools); Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3060
https://github.com/root-project/root/pull/3060:142,reliability,integr,integration,142,"Add release notes for 6.16 (PyROOT, notebooks, command line tools); Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3060
https://github.com/root-project/root/pull/3060:142,security,integr,integration,142,"Add release notes for 6.16 (PyROOT, notebooks, command line tools); Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3060
https://github.com/root-project/root/pull/3060:142,testability,integr,integration,142,"Add release notes for 6.16 (PyROOT, notebooks, command line tools); Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3060
https://github.com/root-project/root/pull/3060:47,usability,command,command,47,"Add release notes for 6.16 (PyROOT, notebooks, command line tools); Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3060
https://github.com/root-project/root/pull/3060:60,usability,tool,tools,60,"Add release notes for 6.16 (PyROOT, notebooks, command line tools); Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3060
https://github.com/root-project/root/pull/3060:158,usability,command,command,158,"Add release notes for 6.16 (PyROOT, notebooks, command line tools); Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3060
https://github.com/root-project/root/pull/3060:171,usability,tool,tools,171,"Add release notes for 6.16 (PyROOT, notebooks, command line tools); Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3060
https://github.com/root-project/root/pull/3062:255,integrability,Filter,Filter,255,"[DF] Separate RDF entry count from TChain entry number for MT runs; TTreeProcessorMT does not guarantee that TTreeReader::GetCurrentEntry. returns the global entry number of the underlying dataset. RDF, however, needs a unique entry identifier to use for Filter/Define. cache invalidation, so for MT runs we now use an atomic counter. As a consequence, in MT runs `rdfentry_` is now an arbitrary integer. with no connection to the underlying ROOT dataset. This PR solves the same bug as #3051 , without the performance hit, at the cost of losing correspondence between RDF's `rdfentry_` column values and the global entry numbers in a corresponding TChain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3062
https://github.com/root-project/root/pull/3062:270,performance,cach,cache,270,"[DF] Separate RDF entry count from TChain entry number for MT runs; TTreeProcessorMT does not guarantee that TTreeReader::GetCurrentEntry. returns the global entry number of the underlying dataset. RDF, however, needs a unique entry identifier to use for Filter/Define. cache invalidation, so for MT runs we now use an atomic counter. As a consequence, in MT runs `rdfentry_` is now an arbitrary integer. with no connection to the underlying ROOT dataset. This PR solves the same bug as #3051 , without the performance hit, at the cost of losing correspondence between RDF's `rdfentry_` column values and the global entry numbers in a corresponding TChain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3062
https://github.com/root-project/root/pull/3062:507,performance,perform,performance,507,"[DF] Separate RDF entry count from TChain entry number for MT runs; TTreeProcessorMT does not guarantee that TTreeReader::GetCurrentEntry. returns the global entry number of the underlying dataset. RDF, however, needs a unique entry identifier to use for Filter/Define. cache invalidation, so for MT runs we now use an atomic counter. As a consequence, in MT runs `rdfentry_` is now an arbitrary integer. with no connection to the underlying ROOT dataset. This PR solves the same bug as #3051 , without the performance hit, at the cost of losing correspondence between RDF's `rdfentry_` column values and the global entry numbers in a corresponding TChain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3062
https://github.com/root-project/root/pull/3062:85,reliability,doe,does,85,"[DF] Separate RDF entry count from TChain entry number for MT runs; TTreeProcessorMT does not guarantee that TTreeReader::GetCurrentEntry. returns the global entry number of the underlying dataset. RDF, however, needs a unique entry identifier to use for Filter/Define. cache invalidation, so for MT runs we now use an atomic counter. As a consequence, in MT runs `rdfentry_` is now an arbitrary integer. with no connection to the underlying ROOT dataset. This PR solves the same bug as #3051 , without the performance hit, at the cost of losing correspondence between RDF's `rdfentry_` column values and the global entry numbers in a corresponding TChain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3062
https://github.com/root-project/root/pull/3062:233,security,ident,identifier,233,"[DF] Separate RDF entry count from TChain entry number for MT runs; TTreeProcessorMT does not guarantee that TTreeReader::GetCurrentEntry. returns the global entry number of the underlying dataset. RDF, however, needs a unique entry identifier to use for Filter/Define. cache invalidation, so for MT runs we now use an atomic counter. As a consequence, in MT runs `rdfentry_` is now an arbitrary integer. with no connection to the underlying ROOT dataset. This PR solves the same bug as #3051 , without the performance hit, at the cost of losing correspondence between RDF's `rdfentry_` column values and the global entry numbers in a corresponding TChain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3062
https://github.com/root-project/root/pull/3062:507,usability,perform,performance,507,"[DF] Separate RDF entry count from TChain entry number for MT runs; TTreeProcessorMT does not guarantee that TTreeReader::GetCurrentEntry. returns the global entry number of the underlying dataset. RDF, however, needs a unique entry identifier to use for Filter/Define. cache invalidation, so for MT runs we now use an atomic counter. As a consequence, in MT runs `rdfentry_` is now an arbitrary integer. with no connection to the underlying ROOT dataset. This PR solves the same bug as #3051 , without the performance hit, at the cost of losing correspondence between RDF's `rdfentry_` column values and the global entry numbers in a corresponding TChain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3062
https://github.com/root-project/root/pull/3066:322,availability,error,error,322,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:350,availability,Error,Error,350,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:43,deployability,instal,installed,43,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:133,deployability,instal,installed,133,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:210,deployability,depend,dependencies,210,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:258,deployability,depend,dependency,258,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:298,deployability,instal,install,298,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:357,deployability,instal,install,357,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:210,integrability,depend,dependencies,210,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:258,integrability,depend,dependency,258,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:246,interoperability,share,shared,246,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:88,modifiability,interm,intermediate,88,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:210,modifiability,depend,dependencies,210,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:258,modifiability,depend,dependency,258,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:322,performance,error,error,322,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:350,performance,Error,Error,350,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:210,safety,depend,dependencies,210,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:258,safety,depend,dependency,258,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:322,safety,error,error,322,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:350,safety,Error,Error,350,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:210,testability,depend,dependencies,210,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:258,testability,depend,dependency,258,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:322,usability,error,error,322,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3066:350,usability,Error,Error,350,"Make dnn_cuda library static, as it is not installed; The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared. the dependency won't be there after a `make install'. Therefore the error in CMake:. ```. CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3066
https://github.com/root-project/root/pull/3067:0,deployability,Updat,Update,0,Update builtin version of XRootD to 4.8.5;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3067
https://github.com/root-project/root/pull/3067:15,deployability,version,version,15,Update builtin version of XRootD to 4.8.5;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3067
https://github.com/root-project/root/pull/3067:15,integrability,version,version,15,Update builtin version of XRootD to 4.8.5;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3067
https://github.com/root-project/root/pull/3067:15,modifiability,version,version,15,Update builtin version of XRootD to 4.8.5;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3067
https://github.com/root-project/root/pull/3067:0,safety,Updat,Update,0,Update builtin version of XRootD to 4.8.5;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3067
https://github.com/root-project/root/pull/3067:0,security,Updat,Update,0,Update builtin version of XRootD to 4.8.5;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3067
https://github.com/root-project/root/pull/3069:11,deployability,depend,dependent,11,"Moving OCC-dependent headers out of the way; This removes the implementation headers dependent on OpenCascade from the include directory of geocad (moved to src), keeping only the interface header. Added an example of use in tutorials (geo2occ.C)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3069
https://github.com/root-project/root/pull/3069:85,deployability,depend,dependent,85,"Moving OCC-dependent headers out of the way; This removes the implementation headers dependent on OpenCascade from the include directory of geocad (moved to src), keeping only the interface header. Added an example of use in tutorials (geo2occ.C)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3069
https://github.com/root-project/root/pull/3069:11,integrability,depend,dependent,11,"Moving OCC-dependent headers out of the way; This removes the implementation headers dependent on OpenCascade from the include directory of geocad (moved to src), keeping only the interface header. Added an example of use in tutorials (geo2occ.C)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3069
https://github.com/root-project/root/pull/3069:85,integrability,depend,dependent,85,"Moving OCC-dependent headers out of the way; This removes the implementation headers dependent on OpenCascade from the include directory of geocad (moved to src), keeping only the interface header. Added an example of use in tutorials (geo2occ.C)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3069
https://github.com/root-project/root/pull/3069:180,integrability,interfac,interface,180,"Moving OCC-dependent headers out of the way; This removes the implementation headers dependent on OpenCascade from the include directory of geocad (moved to src), keeping only the interface header. Added an example of use in tutorials (geo2occ.C)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3069
https://github.com/root-project/root/pull/3069:180,interoperability,interfac,interface,180,"Moving OCC-dependent headers out of the way; This removes the implementation headers dependent on OpenCascade from the include directory of geocad (moved to src), keeping only the interface header. Added an example of use in tutorials (geo2occ.C)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3069
https://github.com/root-project/root/pull/3069:11,modifiability,depend,dependent,11,"Moving OCC-dependent headers out of the way; This removes the implementation headers dependent on OpenCascade from the include directory of geocad (moved to src), keeping only the interface header. Added an example of use in tutorials (geo2occ.C)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3069
https://github.com/root-project/root/pull/3069:85,modifiability,depend,dependent,85,"Moving OCC-dependent headers out of the way; This removes the implementation headers dependent on OpenCascade from the include directory of geocad (moved to src), keeping only the interface header. Added an example of use in tutorials (geo2occ.C)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3069
https://github.com/root-project/root/pull/3069:180,modifiability,interfac,interface,180,"Moving OCC-dependent headers out of the way; This removes the implementation headers dependent on OpenCascade from the include directory of geocad (moved to src), keeping only the interface header. Added an example of use in tutorials (geo2occ.C)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3069
https://github.com/root-project/root/pull/3069:11,safety,depend,dependent,11,"Moving OCC-dependent headers out of the way; This removes the implementation headers dependent on OpenCascade from the include directory of geocad (moved to src), keeping only the interface header. Added an example of use in tutorials (geo2occ.C)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3069
https://github.com/root-project/root/pull/3069:85,safety,depend,dependent,85,"Moving OCC-dependent headers out of the way; This removes the implementation headers dependent on OpenCascade from the include directory of geocad (moved to src), keeping only the interface header. Added an example of use in tutorials (geo2occ.C)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3069
https://github.com/root-project/root/pull/3069:11,testability,depend,dependent,11,"Moving OCC-dependent headers out of the way; This removes the implementation headers dependent on OpenCascade from the include directory of geocad (moved to src), keeping only the interface header. Added an example of use in tutorials (geo2occ.C)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3069
https://github.com/root-project/root/pull/3069:85,testability,depend,dependent,85,"Moving OCC-dependent headers out of the way; This removes the implementation headers dependent on OpenCascade from the include directory of geocad (moved to src), keeping only the interface header. Added an example of use in tutorials (geo2occ.C)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3069
https://github.com/root-project/root/pull/3070:21,interoperability,compatib,compatibility,21,Remove checks for Vc compatibility; Fixes: [ROOT-9845](https://sft.its.cern.ch/jira/browse/ROOT-9845),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3070
https://github.com/root-project/root/pull/3071:0,deployability,Updat,Update,0,Update builtin openssl to 1.0.2q;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3071
https://github.com/root-project/root/pull/3071:0,safety,Updat,Update,0,Update builtin openssl to 1.0.2q;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3071
https://github.com/root-project/root/pull/3071:0,security,Updat,Update,0,Update builtin openssl to 1.0.2q;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3071
https://github.com/root-project/root/pull/3072:0,deployability,Updat,Update,0,Update builtin version of OpenSSL to 1.0.2q;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3072
https://github.com/root-project/root/pull/3072:15,deployability,version,version,15,Update builtin version of OpenSSL to 1.0.2q;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3072
https://github.com/root-project/root/pull/3072:15,integrability,version,version,15,Update builtin version of OpenSSL to 1.0.2q;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3072
https://github.com/root-project/root/pull/3072:15,modifiability,version,version,15,Update builtin version of OpenSSL to 1.0.2q;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3072
https://github.com/root-project/root/pull/3072:0,safety,Updat,Update,0,Update builtin version of OpenSSL to 1.0.2q;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3072
https://github.com/root-project/root/pull/3072:0,security,Updat,Update,0,Update builtin version of OpenSSL to 1.0.2q;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3072
https://github.com/root-project/root/pull/3073:50,deployability,version,version,50,Use builtin OpenSSL for builtin XRootD if needed (version 2);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3073
https://github.com/root-project/root/pull/3073:50,integrability,version,version,50,Use builtin OpenSSL for builtin XRootD if needed (version 2);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3073
https://github.com/root-project/root/pull/3073:50,modifiability,version,version,50,Use builtin OpenSSL for builtin XRootD if needed (version 2);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3073
https://github.com/root-project/root/pull/3074:363,integrability,PUB,PUBLIC,363,"Link ROOTDataFrame library to RDAVIX library in ROOT; When Davix is builtin, libdavix is static and the symbols get copied both into RDAVIX and ROOTDataFrame, and clash at runtime because there are multiple copies of the same symbols. To resolve this problem, we link ROOTDataFrame to RDAVIX only, but for that we have to propagate the include directory by using PUBLIC linking explicitly. Also, since the header for SQLite is not needed during dictionary generation, we can remove it from the DICTIONARY_OPTIONS of ROOTDataFrame as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3074
https://github.com/root-project/root/pull/3077:5,energy efficiency,Reduc,Reduce,5,"[DF] Reduce number of inclusions, match columns with stl regex;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3077
https://github.com/root-project/root/pull/3080:0,deployability,Releas,Release,0,Release notes for TWebCanvas and JSROOT;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3080
https://github.com/root-project/root/pull/3081:56,usability,support,supports,56,"Remove requirement for C++14 for compiling cppyy; Cppyy supports C++11. This has been pointed out to me by Wim, but I forgot to actually remove the check.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3081
https://github.com/root-project/root/pull/3082:58,deployability,contain,container,58,"[Exp PyROOT] Associate len with getter methods of size of container classes; As a follow up of the discussion in ROOT-9846:. https://sft.its.cern.ch/jira/browse/ROOT-9846. This PR injects the necessary pythonizations to support the `len(c)` syntax when getting the size of containers (`TCollection`, `TArray`, `RooAbsCollection` and their respective derivates) from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3082
https://github.com/root-project/root/pull/3082:273,deployability,contain,containers,273,"[Exp PyROOT] Associate len with getter methods of size of container classes; As a follow up of the discussion in ROOT-9846:. https://sft.its.cern.ch/jira/browse/ROOT-9846. This PR injects the necessary pythonizations to support the `len(c)` syntax when getting the size of containers (`TCollection`, `TArray`, `RooAbsCollection` and their respective derivates) from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3082
https://github.com/root-project/root/pull/3082:180,integrability,inject,injects,180,"[Exp PyROOT] Associate len with getter methods of size of container classes; As a follow up of the discussion in ROOT-9846:. https://sft.its.cern.ch/jira/browse/ROOT-9846. This PR injects the necessary pythonizations to support the `len(c)` syntax when getting the size of containers (`TCollection`, `TArray`, `RooAbsCollection` and their respective derivates) from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3082
https://github.com/root-project/root/pull/3082:180,security,inject,injects,180,"[Exp PyROOT] Associate len with getter methods of size of container classes; As a follow up of the discussion in ROOT-9846:. https://sft.its.cern.ch/jira/browse/ROOT-9846. This PR injects the necessary pythonizations to support the `len(c)` syntax when getting the size of containers (`TCollection`, `TArray`, `RooAbsCollection` and their respective derivates) from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3082
https://github.com/root-project/root/pull/3082:220,usability,support,support,220,"[Exp PyROOT] Associate len with getter methods of size of container classes; As a follow up of the discussion in ROOT-9846:. https://sft.its.cern.ch/jira/browse/ROOT-9846. This PR injects the necessary pythonizations to support the `len(c)` syntax when getting the size of containers (`TCollection`, `TArray`, `RooAbsCollection` and their respective derivates) from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3082
https://github.com/root-project/root/pull/3083:338,deployability,updat,updated,338,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3083:338,safety,updat,updated,338,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3083:359,safety,input,input,359,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3083:372,safety,test,tests,372,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3083:125,security,expos,exposed,125,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3083:168,security,modif,modify,168,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3083:198,security,expos,exposing,198,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3083:299,security,modif,modifiers,299,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3083:338,security,updat,updated,338,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3083:372,testability,test,tests,372,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3083:140,usability,user,user,140,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3083:156,usability,user,user,156,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3083:225,usability,user,user,225,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3083:279,usability,user,user-defined,279,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3083:359,usability,input,input,359,"[RF] Enable writing of RooDataSets to streams.; RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3083
https://github.com/root-project/root/pull/3084:13,deployability,releas,release,13,Web-releated release notes for 6.16 branch;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3084
https://github.com/root-project/root/pull/3085:7,deployability,releas,release,7,Adding release notes for O.Shadura;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3085
https://github.com/root-project/root/pull/3086:0,deployability,Updat,Update,0,Update index.md for eve-7;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3086
https://github.com/root-project/root/pull/3086:0,safety,Updat,Update,0,Update index.md for eve-7;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3086
https://github.com/root-project/root/pull/3086:0,security,Updat,Update,0,Update index.md for eve-7;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3086
https://github.com/root-project/root/pull/3089:7,deployability,Releas,Release,7,[6-16] Release notes backport;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3089
https://github.com/root-project/root/pull/3091:5,deployability,releas,release,5,Port release notes to 6.16;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3091
https://github.com/root-project/root/pull/3093:92,energy efficiency,core,core,92,"[v6-16] Next iteration for improvement of generic switch of compr.algorithms (backport); In core/zip/inc/Compression.h was introduced RCompressionSetting class with set of enumerated classes for compression level, compression algorithm and default compression settings",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3093
https://github.com/root-project/root/pull/3094:17,availability,error,error,17,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:160,availability,error,error,160,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:200,availability,Error,Error,200,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:4,deployability,instal,installation,4,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:91,deployability,depend,dependency,91,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:143,deployability,patch,patch,143,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:179,deployability,instal,install,179,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:247,deployability,INSTAL,INSTALL,247,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:270,deployability,build,build,270,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:281,deployability,build,build-,281,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:298,deployability,BUILD,BUILD,298,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:343,deployability,build,build,343,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:91,integrability,depend,dependency,91,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:91,modifiability,depend,dependency,91,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:17,performance,error,error,17,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:160,performance,error,error,160,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:200,performance,Error,Error,200,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:17,safety,error,error,17,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:91,safety,depend,dependency,91,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:143,safety,patch,patch,143,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:160,safety,error,error,160,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:200,safety,Error,Error,200,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:143,security,patch,patch,143,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:91,testability,depend,dependency,91,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:17,usability,error,error,17,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:160,usability,error,error,160,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3094:200,usability,Error,Error,200,"Fix installation error; This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,. dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:. ```. CMake Error at cmake_install.cmake:132 (file):. file INSTALL cannot find. ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3094
https://github.com/root-project/root/pull/3095:103,deployability,instal,installation,103,"Cleanup rootd/proofd/pq2 remnants; This PR removes some remnants of the previous PR, preventing proper installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3095
https://github.com/root-project/root/pull/3095:85,safety,prevent,preventing,85,"Cleanup rootd/proofd/pq2 remnants; This PR removes some remnants of the previous PR, preventing proper installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3095
https://github.com/root-project/root/pull/3095:85,security,preven,preventing,85,"Cleanup rootd/proofd/pq2 remnants; This PR removes some remnants of the previous PR, preventing proper installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3095
https://github.com/root-project/root/pull/3096:8,deployability,version,version,8,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3096:59,deployability,build,build,59,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3096:85,deployability,fail,fails,85,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3096:308,deployability,patch,patch,308,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3096:8,integrability,version,version,8,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3096:337,integrability,configur,configuring,337,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3096:8,modifiability,version,version,8,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3096:275,modifiability,pac,package,275,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3096:337,modifiability,configur,configuring,337,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3096:85,reliability,fail,fails,85,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3096:308,safety,patch,patch,308,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3096:308,security,patch,patch,308,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3096:337,security,configur,configuring,337,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3096:25,usability,support,support,25,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3096:77,usability,support,support,77,"Fix C++ version check to support clang 4; Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3096
https://github.com/root-project/root/pull/3097:35,deployability,build,builds,35,Disable warnings from LLVM in ROOT builds;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3097
https://github.com/root-project/root/pull/3098:21,availability,error,error,21,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:67,availability,error,error,67,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:200,availability,error,error,200,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:401,integrability,inject,injected,401,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:320,interoperability,specif,specifying,320,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:344,modifiability,paramet,parameters,344,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:21,performance,error,error,21,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:67,performance,error,error,67,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:200,performance,error,error,200,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:21,safety,error,error,21,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:67,safety,error,error,67,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:200,safety,error,error,200,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:251,safety,isol,isolation,251,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:314,safety,avoid,avoid,314,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:251,security,iso,isolation,251,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:401,security,inject,injected,401,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:251,testability,isol,isolation,251,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:21,usability,error,error,21,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:67,usability,error,error,67,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3098:200,usability,error,error,200,"[DF] Fix compilation error on mac1012, XCode9; Link to compilation error:. https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:. https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a. template base class -- the full type is injected in the derived class. anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3098
https://github.com/root-project/root/pull/3100:861,security,secur,secure,861,"Add macros to flag legacy functions/classes.; Functions and classes that are outdated, but will probably never be removed, can be flagged with deprecation warnings at the discretion of the user. This was a request by the experiments during the Sarajevo workshop. The macros would be used as follows:. ```. class BetterNotUse {. } R__SUGGEST_CLASS(""NewerClass"");. ```. ```. TIterator* createIterator() const. R__SUGGEST_FUNCTION(""begin(), end() or range-based for loops.""). {. return new RooLinkedListIter(makeLegacyIterator());. }. ```. Since this uses class/function attributes, these need to be put *after* the class body and *before* the function body. Defining `R__SUGGEST_FASTER_FUNCTIONS`, the compiler will e.g. issue:. ```. root-src/roofit/roofitcore/src/RooAbsCollection.cxx:725:21: warning: 'fwdIterator' is deprecated:. This function has faster/more secure alternatives:. begin(), end() and range-based for loops. [-Wdeprecated-declarations]. RooFIter iter = fwdIterator() ;. ^. ```. With `R__SUGGEST_FASTER_CLASSES`, one gets:. ```. /home/shageboe/root-dbg/include/RooStats/RooStatsUtils.h:64:7: warning: 'RooLinkedListIter' is deprecated: This class has a faster/more secure alternative: The ROOFIter is faster. [-Wdeprecated-declarations]. RooLinkedListIter it = set->iterator();. ```. PS: Names are totally up for debate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3100
https://github.com/root-project/root/pull/3100:1181,security,secur,secure,1181,"Add macros to flag legacy functions/classes.; Functions and classes that are outdated, but will probably never be removed, can be flagged with deprecation warnings at the discretion of the user. This was a request by the experiments during the Sarajevo workshop. The macros would be used as follows:. ```. class BetterNotUse {. } R__SUGGEST_CLASS(""NewerClass"");. ```. ```. TIterator* createIterator() const. R__SUGGEST_FUNCTION(""begin(), end() or range-based for loops.""). {. return new RooLinkedListIter(makeLegacyIterator());. }. ```. Since this uses class/function attributes, these need to be put *after* the class body and *before* the function body. Defining `R__SUGGEST_FASTER_FUNCTIONS`, the compiler will e.g. issue:. ```. root-src/roofit/roofitcore/src/RooAbsCollection.cxx:725:21: warning: 'fwdIterator' is deprecated:. This function has faster/more secure alternatives:. begin(), end() and range-based for loops. [-Wdeprecated-declarations]. RooFIter iter = fwdIterator() ;. ^. ```. With `R__SUGGEST_FASTER_CLASSES`, one gets:. ```. /home/shageboe/root-dbg/include/RooStats/RooStatsUtils.h:64:7: warning: 'RooLinkedListIter' is deprecated: This class has a faster/more secure alternative: The ROOFIter is faster. [-Wdeprecated-declarations]. RooLinkedListIter it = set->iterator();. ```. PS: Names are totally up for debate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3100
https://github.com/root-project/root/pull/3100:189,usability,user,user,189,"Add macros to flag legacy functions/classes.; Functions and classes that are outdated, but will probably never be removed, can be flagged with deprecation warnings at the discretion of the user. This was a request by the experiments during the Sarajevo workshop. The macros would be used as follows:. ```. class BetterNotUse {. } R__SUGGEST_CLASS(""NewerClass"");. ```. ```. TIterator* createIterator() const. R__SUGGEST_FUNCTION(""begin(), end() or range-based for loops.""). {. return new RooLinkedListIter(makeLegacyIterator());. }. ```. Since this uses class/function attributes, these need to be put *after* the class body and *before* the function body. Defining `R__SUGGEST_FASTER_FUNCTIONS`, the compiler will e.g. issue:. ```. root-src/roofit/roofitcore/src/RooAbsCollection.cxx:725:21: warning: 'fwdIterator' is deprecated:. This function has faster/more secure alternatives:. begin(), end() and range-based for loops. [-Wdeprecated-declarations]. RooFIter iter = fwdIterator() ;. ^. ```. With `R__SUGGEST_FASTER_CLASSES`, one gets:. ```. /home/shageboe/root-dbg/include/RooStats/RooStatsUtils.h:64:7: warning: 'RooLinkedListIter' is deprecated: This class has a faster/more secure alternative: The ROOFIter is faster. [-Wdeprecated-declarations]. RooLinkedListIter it = set->iterator();. ```. PS: Names are totally up for debate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3100
https://github.com/root-project/root/pull/3104:16,deployability,version,version,16,CPack: get ROOT version from CMake; This allows us to create daily releases and binaries for arbitrary tags (not just `x.yy.zz` as currently allowed by `build/version_number`),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3104
https://github.com/root-project/root/pull/3104:67,deployability,releas,releases,67,CPack: get ROOT version from CMake; This allows us to create daily releases and binaries for arbitrary tags (not just `x.yy.zz` as currently allowed by `build/version_number`),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3104
https://github.com/root-project/root/pull/3104:153,deployability,build,build,153,CPack: get ROOT version from CMake; This allows us to create daily releases and binaries for arbitrary tags (not just `x.yy.zz` as currently allowed by `build/version_number`),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3104
https://github.com/root-project/root/pull/3104:131,energy efficiency,current,currently,131,CPack: get ROOT version from CMake; This allows us to create daily releases and binaries for arbitrary tags (not just `x.yy.zz` as currently allowed by `build/version_number`),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3104
https://github.com/root-project/root/pull/3104:16,integrability,version,version,16,CPack: get ROOT version from CMake; This allows us to create daily releases and binaries for arbitrary tags (not just `x.yy.zz` as currently allowed by `build/version_number`),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3104
https://github.com/root-project/root/pull/3104:16,modifiability,version,version,16,CPack: get ROOT version from CMake; This allows us to create daily releases and binaries for arbitrary tags (not just `x.yy.zz` as currently allowed by `build/version_number`),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3104
https://github.com/root-project/root/pull/3105:10,deployability,manag,manage,10,Let CMake manage RPATH entries; Adding RPATH entries manually and via CMAKE_*RPATH* facilities may lead. to conflict of authorities. This instance in particular tries to add the. same RPATH entry twice (fails on MacOS).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3105
https://github.com/root-project/root/pull/3105:203,deployability,fail,fails,203,Let CMake manage RPATH entries; Adding RPATH entries manually and via CMAKE_*RPATH* facilities may lead. to conflict of authorities. This instance in particular tries to add the. same RPATH entry twice (fails on MacOS).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3105
https://github.com/root-project/root/pull/3105:10,energy efficiency,manag,manage,10,Let CMake manage RPATH entries; Adding RPATH entries manually and via CMAKE_*RPATH* facilities may lead. to conflict of authorities. This instance in particular tries to add the. same RPATH entry twice (fails on MacOS).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3105
https://github.com/root-project/root/pull/3105:108,interoperability,conflict,conflict,108,Let CMake manage RPATH entries; Adding RPATH entries manually and via CMAKE_*RPATH* facilities may lead. to conflict of authorities. This instance in particular tries to add the. same RPATH entry twice (fails on MacOS).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3105
https://github.com/root-project/root/pull/3105:203,reliability,fail,fails,203,Let CMake manage RPATH entries; Adding RPATH entries manually and via CMAKE_*RPATH* facilities may lead. to conflict of authorities. This instance in particular tries to add the. same RPATH entry twice (fails on MacOS).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3105
https://github.com/root-project/root/pull/3105:10,safety,manag,manage,10,Let CMake manage RPATH entries; Adding RPATH entries manually and via CMAKE_*RPATH* facilities may lead. to conflict of authorities. This instance in particular tries to add the. same RPATH entry twice (fails on MacOS).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3105
https://github.com/root-project/root/pull/3105:120,security,auth,authorities,120,Let CMake manage RPATH entries; Adding RPATH entries manually and via CMAKE_*RPATH* facilities may lead. to conflict of authorities. This instance in particular tries to add the. same RPATH entry twice (fails on MacOS).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3105
https://github.com/root-project/root/pull/3107:237,integrability,Event,Events,237,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:347,integrability,Filter,Filter,347,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:379,integrability,event,events,379,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:491,integrability,event,events,491,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:588,integrability,event,event,588,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:675,integrability,event,event,675,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:745,integrability,event,events,745,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:810,integrability,event,event,810,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:852,integrability,event,event,852,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:1020,integrability,wrap,wrapped,1020,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:1084,integrability,Inject,Inject,1084,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:1160,integrability,pub,public,1160,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:512,interoperability,format,format,512,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:603,interoperability,format,format,603,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:690,interoperability,format,format,690,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:1084,security,Inject,Inject,1084,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:915,usability,support,support,915,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:1105,usability,Custom,CustomObject,1105,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:1144,usability,Custom,CustomObject,1144,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:1274,usability,Custom,CustomObject,1274,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:1310,usability,Custom,CustomObject,1310,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:1474,usability,Custom,CustomObject,1474,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:1516,usability,Custom,CustomObject,1516,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:1558,usability,Custom,CustomObject,1558,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3107:1600,usability,Custom,CustomObject,1600,"[RDF,PyROOT] Add RDataFrame.AsNumpy feature; This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \. .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""). npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)). print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))). print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))). ```. ```. Number of events selected: 2846996. Average number of primary vertices per event: 16.03. Average number of muons per event: 1.29. ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python. ROOT.gInterpreter.Declare("""""". // Inject the C++ class CustomObject in the C++ runtime. class CustomObject {. public:. int x = 42;. };. // Create a function that returns such an object. This is called to fill the dataframe. CustomObject fill_object() { return CustomObject(); }. """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""). npy = df.AsNumpy(). print(npy). ```. ```. {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,. <ROOT.CustomObject object at 0x79bd140>,. <ROOT.CustomObject object at 0x743f440>,. <ROOT.CustomObject object at 0x7359710>], dtype=object)}. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3107
https://github.com/root-project/root/pull/3108:38,reliability,doe,doesn,38,"Shut up Clang too, since of course it doesn't know -Wpragmas; Why can't compilers simply ignore these options when they don't know?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3108
https://github.com/root-project/root/pull/3108:82,testability,simpl,simply,82,"Shut up Clang too, since of course it doesn't know -Wpragmas; Why can't compilers simply ignore these options when they don't know?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3108
https://github.com/root-project/root/pull/3108:82,usability,simpl,simply,82,"Shut up Clang too, since of course it doesn't know -Wpragmas; Why can't compilers simply ignore these options when they don't know?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3108
https://github.com/root-project/root/pull/3109:8,performance,content,contents,8,Protect contents of .vscode from `git clean -df`; Previous spelling worked for `git clean -f` but not `git clean -df`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3109
https://github.com/root-project/root/pull/3110:30,usability,behavi,behaviour,30,Fix peculiar TFile::GetObject behaviour; This is a workaround for ROOT-9857,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3110
https://github.com/root-project/root/pull/3111:33,deployability,API,API,33,"[ROOT-9809] Only invoke Python C API if Python is initialized; If `libPyROOT` is loaded with `gSystem->Load`, the static initialization block in `TMemoryRegulator.cxx` is executed and ends up invoking `PyCFunction_New`, which causes a crash from Python 3.7. The crash is due to Python not being initialized, so we need to protect that case. Note that when loading `libPyROOT` from `ROOT.py`, which is what happens when someone uses PyROOT, the Python interpreter already exists and is initialized, so invoking `PyCFunction_New` does not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3111
https://github.com/root-project/root/pull/3111:81,energy efficiency,load,loaded,81,"[ROOT-9809] Only invoke Python C API if Python is initialized; If `libPyROOT` is loaded with `gSystem->Load`, the static initialization block in `TMemoryRegulator.cxx` is executed and ends up invoking `PyCFunction_New`, which causes a crash from Python 3.7. The crash is due to Python not being initialized, so we need to protect that case. Note that when loading `libPyROOT` from `ROOT.py`, which is what happens when someone uses PyROOT, the Python interpreter already exists and is initialized, so invoking `PyCFunction_New` does not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3111
https://github.com/root-project/root/pull/3111:103,energy efficiency,Load,Load,103,"[ROOT-9809] Only invoke Python C API if Python is initialized; If `libPyROOT` is loaded with `gSystem->Load`, the static initialization block in `TMemoryRegulator.cxx` is executed and ends up invoking `PyCFunction_New`, which causes a crash from Python 3.7. The crash is due to Python not being initialized, so we need to protect that case. Note that when loading `libPyROOT` from `ROOT.py`, which is what happens when someone uses PyROOT, the Python interpreter already exists and is initialized, so invoking `PyCFunction_New` does not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3111
https://github.com/root-project/root/pull/3111:356,energy efficiency,load,loading,356,"[ROOT-9809] Only invoke Python C API if Python is initialized; If `libPyROOT` is loaded with `gSystem->Load`, the static initialization block in `TMemoryRegulator.cxx` is executed and ends up invoking `PyCFunction_New`, which causes a crash from Python 3.7. The crash is due to Python not being initialized, so we need to protect that case. Note that when loading `libPyROOT` from `ROOT.py`, which is what happens when someone uses PyROOT, the Python interpreter already exists and is initialized, so invoking `PyCFunction_New` does not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3111
https://github.com/root-project/root/pull/3111:33,integrability,API,API,33,"[ROOT-9809] Only invoke Python C API if Python is initialized; If `libPyROOT` is loaded with `gSystem->Load`, the static initialization block in `TMemoryRegulator.cxx` is executed and ends up invoking `PyCFunction_New`, which causes a crash from Python 3.7. The crash is due to Python not being initialized, so we need to protect that case. Note that when loading `libPyROOT` from `ROOT.py`, which is what happens when someone uses PyROOT, the Python interpreter already exists and is initialized, so invoking `PyCFunction_New` does not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3111
https://github.com/root-project/root/pull/3111:33,interoperability,API,API,33,"[ROOT-9809] Only invoke Python C API if Python is initialized; If `libPyROOT` is loaded with `gSystem->Load`, the static initialization block in `TMemoryRegulator.cxx` is executed and ends up invoking `PyCFunction_New`, which causes a crash from Python 3.7. The crash is due to Python not being initialized, so we need to protect that case. Note that when loading `libPyROOT` from `ROOT.py`, which is what happens when someone uses PyROOT, the Python interpreter already exists and is initialized, so invoking `PyCFunction_New` does not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3111
https://github.com/root-project/root/pull/3111:81,performance,load,loaded,81,"[ROOT-9809] Only invoke Python C API if Python is initialized; If `libPyROOT` is loaded with `gSystem->Load`, the static initialization block in `TMemoryRegulator.cxx` is executed and ends up invoking `PyCFunction_New`, which causes a crash from Python 3.7. The crash is due to Python not being initialized, so we need to protect that case. Note that when loading `libPyROOT` from `ROOT.py`, which is what happens when someone uses PyROOT, the Python interpreter already exists and is initialized, so invoking `PyCFunction_New` does not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3111
https://github.com/root-project/root/pull/3111:103,performance,Load,Load,103,"[ROOT-9809] Only invoke Python C API if Python is initialized; If `libPyROOT` is loaded with `gSystem->Load`, the static initialization block in `TMemoryRegulator.cxx` is executed and ends up invoking `PyCFunction_New`, which causes a crash from Python 3.7. The crash is due to Python not being initialized, so we need to protect that case. Note that when loading `libPyROOT` from `ROOT.py`, which is what happens when someone uses PyROOT, the Python interpreter already exists and is initialized, so invoking `PyCFunction_New` does not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3111
https://github.com/root-project/root/pull/3111:356,performance,load,loading,356,"[ROOT-9809] Only invoke Python C API if Python is initialized; If `libPyROOT` is loaded with `gSystem->Load`, the static initialization block in `TMemoryRegulator.cxx` is executed and ends up invoking `PyCFunction_New`, which causes a crash from Python 3.7. The crash is due to Python not being initialized, so we need to protect that case. Note that when loading `libPyROOT` from `ROOT.py`, which is what happens when someone uses PyROOT, the Python interpreter already exists and is initialized, so invoking `PyCFunction_New` does not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3111
https://github.com/root-project/root/pull/3111:528,reliability,doe,does,528,"[ROOT-9809] Only invoke Python C API if Python is initialized; If `libPyROOT` is loaded with `gSystem->Load`, the static initialization block in `TMemoryRegulator.cxx` is executed and ends up invoking `PyCFunction_New`, which causes a crash from Python 3.7. The crash is due to Python not being initialized, so we need to protect that case. Note that when loading `libPyROOT` from `ROOT.py`, which is what happens when someone uses PyROOT, the Python interpreter already exists and is initialized, so invoking `PyCFunction_New` does not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3111
https://github.com/root-project/root/pull/3123:33,deployability,API,API,33,[ROOT-9809] Only invoke Python C API if Python is initialized (backport to 6.16); Backport of https://github.com/root-project/root/pull/3111,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3123
https://github.com/root-project/root/pull/3123:33,integrability,API,API,33,[ROOT-9809] Only invoke Python C API if Python is initialized (backport to 6.16); Backport of https://github.com/root-project/root/pull/3111,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3123
https://github.com/root-project/root/pull/3123:33,interoperability,API,API,33,[ROOT-9809] Only invoke Python C API if Python is initialized (backport to 6.16); Backport of https://github.com/root-project/root/pull/3111,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3123
https://github.com/root-project/root/pull/3127:202,deployability,Patch,Patch,202,[smatrix] Spell out the default argument.; If we include the definition of SMatrix after MathFunctions.h (which. relies on HelperOps.h (to forward declare SMatrix) we cannot see the. default arguments. Patch by Lorenzo Moneta and me! (cherry picked from commit d4b004c641b1e939250eb17721083a2016172bef),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3127
https://github.com/root-project/root/pull/3127:202,safety,Patch,Patch,202,[smatrix] Spell out the default argument.; If we include the definition of SMatrix after MathFunctions.h (which. relies on HelperOps.h (to forward declare SMatrix) we cannot see the. default arguments. Patch by Lorenzo Moneta and me! (cherry picked from commit d4b004c641b1e939250eb17721083a2016172bef),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3127
https://github.com/root-project/root/pull/3127:202,security,Patch,Patch,202,[smatrix] Spell out the default argument.; If we include the definition of SMatrix after MathFunctions.h (which. relies on HelperOps.h (to forward declare SMatrix) we cannot see the. default arguments. Patch by Lorenzo Moneta and me! (cherry picked from commit d4b004c641b1e939250eb17721083a2016172bef),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3127
https://github.com/root-project/root/pull/3127:123,usability,Help,HelperOps,123,[smatrix] Spell out the default argument.; If we include the definition of SMatrix after MathFunctions.h (which. relies on HelperOps.h (to forward declare SMatrix) we cannot see the. default arguments. Patch by Lorenzo Moneta and me! (cherry picked from commit d4b004c641b1e939250eb17721083a2016172bef),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3127
https://github.com/root-project/root/pull/3129:169,usability,help,helpers,169,"[RDF,PyROOT] Rename TTreeAsFlatMatrix header to PyROOTHelpers and cha…; …nge namespace from Detail to Internal. This prepares #3107, which needs further C++ side PyROOT helpers in the RDataFrame library. I've changed the `Detail` namespace to the `Internal` once, since this makes more sense (imho).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3129
https://github.com/root-project/root/pull/3131:18,usability,help,helper,18,"[RDF] Add AsRNode helper to cast RDF nodes to common type ROOT::RDF::…; …RNode. This prepares #3107, which needs a cast of a dataframe node to `ROOT::RDF::RNode` as part of the pythonization. @bluehood pointed out that this might be of general use so I've factored it out in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3131
https://github.com/root-project/root/pull/3134:1,deployability,build,build,1,[build] makepchinput should keep order of CXXFLAGS.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3134
https://github.com/root-project/root/pull/3135:272,availability,error,errors,272,[RDF] Make copy-constructor external and add extern templates of Take…; …Helper for basic types. Make copy-constructor extern and put extern templates of the `TakeHelper` to speed-up the `Take` action of basic types. This prepares #3107. ~~TODO: Put ifdef guards to catch errors with gcc5 and others.~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3135
https://github.com/root-project/root/pull/3135:272,performance,error,errors,272,[RDF] Make copy-constructor external and add extern templates of Take…; …Helper for basic types. Make copy-constructor extern and put extern templates of the `TakeHelper` to speed-up the `Take` action of basic types. This prepares #3107. ~~TODO: Put ifdef guards to catch errors with gcc5 and others.~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3135
https://github.com/root-project/root/pull/3135:272,safety,error,errors,272,[RDF] Make copy-constructor external and add extern templates of Take…; …Helper for basic types. Make copy-constructor extern and put extern templates of the `TakeHelper` to speed-up the `Take` action of basic types. This prepares #3107. ~~TODO: Put ifdef guards to catch errors with gcc5 and others.~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3135
https://github.com/root-project/root/pull/3135:73,usability,Help,Helper,73,[RDF] Make copy-constructor external and add extern templates of Take…; …Helper for basic types. Make copy-constructor extern and put extern templates of the `TakeHelper` to speed-up the `Take` action of basic types. This prepares #3107. ~~TODO: Put ifdef guards to catch errors with gcc5 and others.~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3135
https://github.com/root-project/root/pull/3135:272,usability,error,errors,272,[RDF] Make copy-constructor external and add extern templates of Take…; …Helper for basic types. Make copy-constructor extern and put extern templates of the `TakeHelper` to speed-up the `Take` action of basic types. This prepares #3107. ~~TODO: Put ifdef guards to catch errors with gcc5 and others.~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3135
https://github.com/root-project/root/pull/3136:99,interoperability,format,formatting,99,"[RF] Improve doxygen for several RooFit classes; * Improve documentation of RooAddition. * Improve formatting of docs for RooMCStudy and RooAbsRealLValue. * Improve documentation for RooMCStudy and RooAddPdf. * Improve docs for several Roo classes: RooAbsReal, RooAbsPdf, RooAbsRealLValue, RooExtendPdf. * Minor improvement of docs in RooAbsPdf, RooExtendPdf, RooRealIntegral. (cherry picked from commit eae768ef7cc30e914b2eb36ac9013149bfbfd8df)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3136
https://github.com/root-project/root/pull/3136:59,usability,document,documentation,59,"[RF] Improve doxygen for several RooFit classes; * Improve documentation of RooAddition. * Improve formatting of docs for RooMCStudy and RooAbsRealLValue. * Improve documentation for RooMCStudy and RooAddPdf. * Improve docs for several Roo classes: RooAbsReal, RooAbsPdf, RooAbsRealLValue, RooExtendPdf. * Minor improvement of docs in RooAbsPdf, RooExtendPdf, RooRealIntegral. (cherry picked from commit eae768ef7cc30e914b2eb36ac9013149bfbfd8df)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3136
https://github.com/root-project/root/pull/3136:165,usability,document,documentation,165,"[RF] Improve doxygen for several RooFit classes; * Improve documentation of RooAddition. * Improve formatting of docs for RooMCStudy and RooAbsRealLValue. * Improve documentation for RooMCStudy and RooAddPdf. * Improve docs for several Roo classes: RooAbsReal, RooAbsPdf, RooAbsRealLValue, RooExtendPdf. * Minor improvement of docs in RooAbsPdf, RooExtendPdf, RooRealIntegral. (cherry picked from commit eae768ef7cc30e914b2eb36ac9013149bfbfd8df)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3136
https://github.com/root-project/root/pull/3138:11,safety,test,test,11,[hist] Add test for TFormula autoloading (ROOT-9840).;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3138
https://github.com/root-project/root/pull/3138:11,testability,test,test,11,[hist] Add test for TFormula autoloading (ROOT-9840).;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3138
https://github.com/root-project/root/pull/3141:22,usability,help,help,22,Add a mailmap file to help with git statistics;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3141
https://github.com/root-project/root/pull/3142:33,deployability,API,API,33,[ROOT-9809] Only invoke Python C API if Python is initialized (backport to 6.14); Backport of #3111,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3142
https://github.com/root-project/root/pull/3142:33,integrability,API,API,33,[ROOT-9809] Only invoke Python C API if Python is initialized (backport to 6.14); Backport of #3111,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3142
https://github.com/root-project/root/pull/3142:33,interoperability,API,API,33,[ROOT-9809] Only invoke Python C API if Python is initialized (backport to 6.14); Backport of #3111,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3142
https://github.com/root-project/root/pull/3143:262,modifiability,paramet,parameter,262,"Fix ROOT-9784. Avoid to use empty name in v5 'replacement name'.; The mechanism attempting to find v6 equivalent for names found. in v5 files (eg. adding missing namespaces) under some circunstances. (see ROOT-9784) would create class name with missing template parameter. (eg literally map<,RooExpensiveObjectCache::ExpensiveObject*>. This is a fix for commit c412ad28b4e242c853aac66eeed3c08bb135a16c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3143
https://github.com/root-project/root/pull/3143:15,safety,Avoid,Avoid,15,"Fix ROOT-9784. Avoid to use empty name in v5 'replacement name'.; The mechanism attempting to find v6 equivalent for names found. in v5 files (eg. adding missing namespaces) under some circunstances. (see ROOT-9784) would create class name with missing template parameter. (eg literally map<,RooExpensiveObjectCache::ExpensiveObject*>. This is a fix for commit c412ad28b4e242c853aac66eeed3c08bb135a16c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3143
https://github.com/root-project/root/pull/3145:51,safety,avoid,avoid,51,[Doxy] Remove io/io/res directory from the doc; to avoid an odd namespace to appear in the doc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3145
https://github.com/root-project/root/pull/3146:31,integrability,rout,routines,31,[DF] Add fwd decls of critical routines in RInterface; - IsImplicitMTEnabled. - EnableImplicitMT. - DisableImplicitMT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3146
https://github.com/root-project/root/pull/3147:29,energy efficiency,core,coreteam,29,"Replace git_coreteam.py with coreteam.sh; The script `git_coreteam.py` uses outdated gitstats information from the web, while the new script uses the git shortlog from the repository itself (with a little help of recently added .mailmap).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3147
https://github.com/root-project/root/pull/3147:172,integrability,repositor,repository,172,"Replace git_coreteam.py with coreteam.sh; The script `git_coreteam.py` uses outdated gitstats information from the web, while the new script uses the git shortlog from the repository itself (with a little help of recently added .mailmap).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3147
https://github.com/root-project/root/pull/3147:172,interoperability,repositor,repository,172,"Replace git_coreteam.py with coreteam.sh; The script `git_coreteam.py` uses outdated gitstats information from the web, while the new script uses the git shortlog from the repository itself (with a little help of recently added .mailmap).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3147
https://github.com/root-project/root/pull/3147:205,usability,help,help,205,"Replace git_coreteam.py with coreteam.sh; The script `git_coreteam.py` uses outdated gitstats information from the web, while the new script uses the git shortlog from the repository itself (with a little help of recently added .mailmap).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3147
https://github.com/root-project/root/pull/3148:29,deployability,compos,composite,29,Eve7: simplify generation of composite shape ; Previous solution from Matevz (@osschar) was using gPad and TVirtualViewer3D - forcing to link complete libGpad for that. Now composite shape created directly using REveCsgOps function. Prepare code to use normal CsgOps which is now identical with REveCsgOps,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3148
https://github.com/root-project/root/pull/3148:173,deployability,compos,composite,173,Eve7: simplify generation of composite shape ; Previous solution from Matevz (@osschar) was using gPad and TVirtualViewer3D - forcing to link complete libGpad for that. Now composite shape created directly using REveCsgOps function. Prepare code to use normal CsgOps which is now identical with REveCsgOps,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3148
https://github.com/root-project/root/pull/3148:29,modifiability,compos,composite,29,Eve7: simplify generation of composite shape ; Previous solution from Matevz (@osschar) was using gPad and TVirtualViewer3D - forcing to link complete libGpad for that. Now composite shape created directly using REveCsgOps function. Prepare code to use normal CsgOps which is now identical with REveCsgOps,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3148
https://github.com/root-project/root/pull/3148:173,modifiability,compos,composite,173,Eve7: simplify generation of composite shape ; Previous solution from Matevz (@osschar) was using gPad and TVirtualViewer3D - forcing to link complete libGpad for that. Now composite shape created directly using REveCsgOps function. Prepare code to use normal CsgOps which is now identical with REveCsgOps,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3148
https://github.com/root-project/root/pull/3148:142,safety,compl,complete,142,Eve7: simplify generation of composite shape ; Previous solution from Matevz (@osschar) was using gPad and TVirtualViewer3D - forcing to link complete libGpad for that. Now composite shape created directly using REveCsgOps function. Prepare code to use normal CsgOps which is now identical with REveCsgOps,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3148
https://github.com/root-project/root/pull/3148:142,security,compl,complete,142,Eve7: simplify generation of composite shape ; Previous solution from Matevz (@osschar) was using gPad and TVirtualViewer3D - forcing to link complete libGpad for that. Now composite shape created directly using REveCsgOps function. Prepare code to use normal CsgOps which is now identical with REveCsgOps,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3148
https://github.com/root-project/root/pull/3148:280,security,ident,identical,280,Eve7: simplify generation of composite shape ; Previous solution from Matevz (@osschar) was using gPad and TVirtualViewer3D - forcing to link complete libGpad for that. Now composite shape created directly using REveCsgOps function. Prepare code to use normal CsgOps which is now identical with REveCsgOps,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3148
https://github.com/root-project/root/pull/3148:6,testability,simpl,simplify,6,Eve7: simplify generation of composite shape ; Previous solution from Matevz (@osschar) was using gPad and TVirtualViewer3D - forcing to link complete libGpad for that. Now composite shape created directly using REveCsgOps function. Prepare code to use normal CsgOps which is now identical with REveCsgOps,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3148
https://github.com/root-project/root/pull/3148:6,usability,simpl,simplify,6,Eve7: simplify generation of composite shape ; Previous solution from Matevz (@osschar) was using gPad and TVirtualViewer3D - forcing to link complete libGpad for that. Now composite shape created directly using REveCsgOps function. Prepare code to use normal CsgOps which is now identical with REveCsgOps,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3148
https://github.com/root-project/root/pull/3149:113,safety,test,test,113,"Added GDML support for: opticalsurface, skinsurface, bordersurface; This addresses point 1 of issue ROOT-9742. A test macro with instructions on how optical surface information can be retrieved from TGeoManager is provided in: tutorials/geom/gdml/testoptical.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3149
https://github.com/root-project/root/pull/3149:247,safety,test,testoptical,247,"Added GDML support for: opticalsurface, skinsurface, bordersurface; This addresses point 1 of issue ROOT-9742. A test macro with instructions on how optical surface information can be retrieved from TGeoManager is provided in: tutorials/geom/gdml/testoptical.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3149
https://github.com/root-project/root/pull/3149:113,testability,test,test,113,"Added GDML support for: opticalsurface, skinsurface, bordersurface; This addresses point 1 of issue ROOT-9742. A test macro with instructions on how optical surface information can be retrieved from TGeoManager is provided in: tutorials/geom/gdml/testoptical.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3149
https://github.com/root-project/root/pull/3149:247,testability,test,testoptical,247,"Added GDML support for: opticalsurface, skinsurface, bordersurface; This addresses point 1 of issue ROOT-9742. A test macro with instructions on how optical surface information can be retrieved from TGeoManager is provided in: tutorials/geom/gdml/testoptical.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3149
https://github.com/root-project/root/pull/3149:11,usability,support,support,11,"Added GDML support for: opticalsurface, skinsurface, bordersurface; This addresses point 1 of issue ROOT-9742. A test macro with instructions on how optical surface information can be retrieved from TGeoManager is provided in: tutorials/geom/gdml/testoptical.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3149
https://github.com/root-project/root/pull/3150:56,deployability,patch,patch,56,"THistPainter fixes, ROOT-9655; Hi,. I'm trying to add a patch to address the issue here: https://sft.its.cern.ch/jira/browse/ROOT-9655. There are two features:. 1) using the default option, TPaletteAxis will have the same range as the early histogram that the current histogram is normalized to, and thus the correct palette;. 2) New options ""SAME0"" and ""SAMES0"" to allow opting out of the default normalization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3150
https://github.com/root-project/root/pull/3150:260,energy efficiency,current,current,260,"THistPainter fixes, ROOT-9655; Hi,. I'm trying to add a patch to address the issue here: https://sft.its.cern.ch/jira/browse/ROOT-9655. There are two features:. 1) using the default option, TPaletteAxis will have the same range as the early histogram that the current histogram is normalized to, and thus the correct palette;. 2) New options ""SAME0"" and ""SAMES0"" to allow opting out of the default normalization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3150
https://github.com/root-project/root/pull/3150:56,safety,patch,patch,56,"THistPainter fixes, ROOT-9655; Hi,. I'm trying to add a patch to address the issue here: https://sft.its.cern.ch/jira/browse/ROOT-9655. There are two features:. 1) using the default option, TPaletteAxis will have the same range as the early histogram that the current histogram is normalized to, and thus the correct palette;. 2) New options ""SAME0"" and ""SAMES0"" to allow opting out of the default normalization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3150
https://github.com/root-project/root/pull/3150:56,security,patch,patch,56,"THistPainter fixes, ROOT-9655; Hi,. I'm trying to add a patch to address the issue here: https://sft.its.cern.ch/jira/browse/ROOT-9655. There are two features:. 1) using the default option, TPaletteAxis will have the same range as the early histogram that the current histogram is normalized to, and thus the correct palette;. 2) New options ""SAME0"" and ""SAMES0"" to allow opting out of the default normalization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3150
https://github.com/root-project/root/pull/3151:62,deployability,compos,composite,62,"Extract CSG iibrary from libRGL; This library used to produce composite shape. Same code now used in libRGL and libROOTEve. In principal, it can be moved into Geom package",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3151
https://github.com/root-project/root/pull/3151:62,modifiability,compos,composite,62,"Extract CSG iibrary from libRGL; This library used to produce composite shape. Same code now used in libRGL and libROOTEve. In principal, it can be moved into Geom package",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3151
https://github.com/root-project/root/pull/3151:164,modifiability,pac,package,164,"Extract CSG iibrary from libRGL; This library used to produce composite shape. Same code now used in libRGL and libROOTEve. In principal, it can be moved into Geom package",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3151
https://github.com/root-project/root/pull/3152:402,deployability,contain,contains,402,"[ROOT-9859] Fall-back to __repr__ in __str__ if cling returns an address; This PR addresses the report in [ROOT-9859](https://sft.its.cern.ch/jira/browse/ROOT-9859) about the change in behaviour of `__str__`, which now relies on cling to obtain a pretty printing for a class. With this PR, if what we obtain from cling is not pretty but just an address, we fall back to `__repr__` in `__str__`. The PR contains the changes for both current and experimental PyROOT, together with their respective tests and tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3152
https://github.com/root-project/root/pull/3152:432,energy efficiency,current,current,432,"[ROOT-9859] Fall-back to __repr__ in __str__ if cling returns an address; This PR addresses the report in [ROOT-9859](https://sft.its.cern.ch/jira/browse/ROOT-9859) about the change in behaviour of `__str__`, which now relies on cling to obtain a pretty printing for a class. With this PR, if what we obtain from cling is not pretty but just an address, we fall back to `__repr__` in `__str__`. The PR contains the changes for both current and experimental PyROOT, together with their respective tests and tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3152
https://github.com/root-project/root/pull/3152:496,safety,test,tests,496,"[ROOT-9859] Fall-back to __repr__ in __str__ if cling returns an address; This PR addresses the report in [ROOT-9859](https://sft.its.cern.ch/jira/browse/ROOT-9859) about the change in behaviour of `__str__`, which now relies on cling to obtain a pretty printing for a class. With this PR, if what we obtain from cling is not pretty but just an address, we fall back to `__repr__` in `__str__`. The PR contains the changes for both current and experimental PyROOT, together with their respective tests and tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3152
https://github.com/root-project/root/pull/3152:496,testability,test,tests,496,"[ROOT-9859] Fall-back to __repr__ in __str__ if cling returns an address; This PR addresses the report in [ROOT-9859](https://sft.its.cern.ch/jira/browse/ROOT-9859) about the change in behaviour of `__str__`, which now relies on cling to obtain a pretty printing for a class. With this PR, if what we obtain from cling is not pretty but just an address, we fall back to `__repr__` in `__str__`. The PR contains the changes for both current and experimental PyROOT, together with their respective tests and tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3152
https://github.com/root-project/root/pull/3152:185,usability,behavi,behaviour,185,"[ROOT-9859] Fall-back to __repr__ in __str__ if cling returns an address; This PR addresses the report in [ROOT-9859](https://sft.its.cern.ch/jira/browse/ROOT-9859) about the change in behaviour of `__str__`, which now relies on cling to obtain a pretty printing for a class. With this PR, if what we obtain from cling is not pretty but just an address, we fall back to `__repr__` in `__str__`. The PR contains the changes for both current and experimental PyROOT, together with their respective tests and tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3152
https://github.com/root-project/root/pull/3153:490,availability,slo,slot,490,"[DF][ROOT-9865][ROOT-9860] Handle snapshot of C arrays drastically changing ther size; from one entry to another. It can happen that the size of C arrays stored in branches varies a lot. from event to event. It can happen also that a very small array becomes. suddently very big. This triggers a reallocation of the buffer ROOT. uses internally to hold the read content. When snapshotting, RDataFrame, was setting the addresses of the output. tree only once at the 1st event processed (per slot). This of course could. lead to the persistification of corrupted values. This change allow to keep track of the changing addresses and properly. handle them via the TBranch::SetAddress method. A test is also added to the suite in order to avoid regressions in the. future. Nota bene: this **does also** fix ROOT-9860.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3153
https://github.com/root-project/root/pull/3153:192,integrability,event,event,192,"[DF][ROOT-9865][ROOT-9860] Handle snapshot of C arrays drastically changing ther size; from one entry to another. It can happen that the size of C arrays stored in branches varies a lot. from event to event. It can happen also that a very small array becomes. suddently very big. This triggers a reallocation of the buffer ROOT. uses internally to hold the read content. When snapshotting, RDataFrame, was setting the addresses of the output. tree only once at the 1st event processed (per slot). This of course could. lead to the persistification of corrupted values. This change allow to keep track of the changing addresses and properly. handle them via the TBranch::SetAddress method. A test is also added to the suite in order to avoid regressions in the. future. Nota bene: this **does also** fix ROOT-9860.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3153
https://github.com/root-project/root/pull/3153:201,integrability,event,event,201,"[DF][ROOT-9865][ROOT-9860] Handle snapshot of C arrays drastically changing ther size; from one entry to another. It can happen that the size of C arrays stored in branches varies a lot. from event to event. It can happen also that a very small array becomes. suddently very big. This triggers a reallocation of the buffer ROOT. uses internally to hold the read content. When snapshotting, RDataFrame, was setting the addresses of the output. tree only once at the 1st event processed (per slot). This of course could. lead to the persistification of corrupted values. This change allow to keep track of the changing addresses and properly. handle them via the TBranch::SetAddress method. A test is also added to the suite in order to avoid regressions in the. future. Nota bene: this **does also** fix ROOT-9860.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3153
https://github.com/root-project/root/pull/3153:316,integrability,buffer,buffer,316,"[DF][ROOT-9865][ROOT-9860] Handle snapshot of C arrays drastically changing ther size; from one entry to another. It can happen that the size of C arrays stored in branches varies a lot. from event to event. It can happen also that a very small array becomes. suddently very big. This triggers a reallocation of the buffer ROOT. uses internally to hold the read content. When snapshotting, RDataFrame, was setting the addresses of the output. tree only once at the 1st event processed (per slot). This of course could. lead to the persistification of corrupted values. This change allow to keep track of the changing addresses and properly. handle them via the TBranch::SetAddress method. A test is also added to the suite in order to avoid regressions in the. future. Nota bene: this **does also** fix ROOT-9860.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3153
https://github.com/root-project/root/pull/3153:469,integrability,event,event,469,"[DF][ROOT-9865][ROOT-9860] Handle snapshot of C arrays drastically changing ther size; from one entry to another. It can happen that the size of C arrays stored in branches varies a lot. from event to event. It can happen also that a very small array becomes. suddently very big. This triggers a reallocation of the buffer ROOT. uses internally to hold the read content. When snapshotting, RDataFrame, was setting the addresses of the output. tree only once at the 1st event processed (per slot). This of course could. lead to the persistification of corrupted values. This change allow to keep track of the changing addresses and properly. handle them via the TBranch::SetAddress method. A test is also added to the suite in order to avoid regressions in the. future. Nota bene: this **does also** fix ROOT-9860.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3153
https://github.com/root-project/root/pull/3153:362,performance,content,content,362,"[DF][ROOT-9865][ROOT-9860] Handle snapshot of C arrays drastically changing ther size; from one entry to another. It can happen that the size of C arrays stored in branches varies a lot. from event to event. It can happen also that a very small array becomes. suddently very big. This triggers a reallocation of the buffer ROOT. uses internally to hold the read content. When snapshotting, RDataFrame, was setting the addresses of the output. tree only once at the 1st event processed (per slot). This of course could. lead to the persistification of corrupted values. This change allow to keep track of the changing addresses and properly. handle them via the TBranch::SetAddress method. A test is also added to the suite in order to avoid regressions in the. future. Nota bene: this **does also** fix ROOT-9860.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3153
https://github.com/root-project/root/pull/3153:490,reliability,slo,slot,490,"[DF][ROOT-9865][ROOT-9860] Handle snapshot of C arrays drastically changing ther size; from one entry to another. It can happen that the size of C arrays stored in branches varies a lot. from event to event. It can happen also that a very small array becomes. suddently very big. This triggers a reallocation of the buffer ROOT. uses internally to hold the read content. When snapshotting, RDataFrame, was setting the addresses of the output. tree only once at the 1st event processed (per slot). This of course could. lead to the persistification of corrupted values. This change allow to keep track of the changing addresses and properly. handle them via the TBranch::SetAddress method. A test is also added to the suite in order to avoid regressions in the. future. Nota bene: this **does also** fix ROOT-9860.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3153
https://github.com/root-project/root/pull/3153:787,reliability,doe,does,787,"[DF][ROOT-9865][ROOT-9860] Handle snapshot of C arrays drastically changing ther size; from one entry to another. It can happen that the size of C arrays stored in branches varies a lot. from event to event. It can happen also that a very small array becomes. suddently very big. This triggers a reallocation of the buffer ROOT. uses internally to hold the read content. When snapshotting, RDataFrame, was setting the addresses of the output. tree only once at the 1st event processed (per slot). This of course could. lead to the persistification of corrupted values. This change allow to keep track of the changing addresses and properly. handle them via the TBranch::SetAddress method. A test is also added to the suite in order to avoid regressions in the. future. Nota bene: this **does also** fix ROOT-9860.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3153
https://github.com/root-project/root/pull/3153:691,safety,test,test,691,"[DF][ROOT-9865][ROOT-9860] Handle snapshot of C arrays drastically changing ther size; from one entry to another. It can happen that the size of C arrays stored in branches varies a lot. from event to event. It can happen also that a very small array becomes. suddently very big. This triggers a reallocation of the buffer ROOT. uses internally to hold the read content. When snapshotting, RDataFrame, was setting the addresses of the output. tree only once at the 1st event processed (per slot). This of course could. lead to the persistification of corrupted values. This change allow to keep track of the changing addresses and properly. handle them via the TBranch::SetAddress method. A test is also added to the suite in order to avoid regressions in the. future. Nota bene: this **does also** fix ROOT-9860.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3153
https://github.com/root-project/root/pull/3153:735,safety,avoid,avoid,735,"[DF][ROOT-9865][ROOT-9860] Handle snapshot of C arrays drastically changing ther size; from one entry to another. It can happen that the size of C arrays stored in branches varies a lot. from event to event. It can happen also that a very small array becomes. suddently very big. This triggers a reallocation of the buffer ROOT. uses internally to hold the read content. When snapshotting, RDataFrame, was setting the addresses of the output. tree only once at the 1st event processed (per slot). This of course could. lead to the persistification of corrupted values. This change allow to keep track of the changing addresses and properly. handle them via the TBranch::SetAddress method. A test is also added to the suite in order to avoid regressions in the. future. Nota bene: this **does also** fix ROOT-9860.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3153
https://github.com/root-project/root/pull/3153:691,testability,test,test,691,"[DF][ROOT-9865][ROOT-9860] Handle snapshot of C arrays drastically changing ther size; from one entry to another. It can happen that the size of C arrays stored in branches varies a lot. from event to event. It can happen also that a very small array becomes. suddently very big. This triggers a reallocation of the buffer ROOT. uses internally to hold the read content. When snapshotting, RDataFrame, was setting the addresses of the output. tree only once at the 1st event processed (per slot). This of course could. lead to the persistification of corrupted values. This change allow to keep track of the changing addresses and properly. handle them via the TBranch::SetAddress method. A test is also added to the suite in order to avoid regressions in the. future. Nota bene: this **does also** fix ROOT-9860.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3153
https://github.com/root-project/root/pull/3153:741,testability,regress,regressions,741,"[DF][ROOT-9865][ROOT-9860] Handle snapshot of C arrays drastically changing ther size; from one entry to another. It can happen that the size of C arrays stored in branches varies a lot. from event to event. It can happen also that a very small array becomes. suddently very big. This triggers a reallocation of the buffer ROOT. uses internally to hold the read content. When snapshotting, RDataFrame, was setting the addresses of the output. tree only once at the 1st event processed (per slot). This of course could. lead to the persistification of corrupted values. This change allow to keep track of the changing addresses and properly. handle them via the TBranch::SetAddress method. A test is also added to the suite in order to avoid regressions in the. future. Nota bene: this **does also** fix ROOT-9860.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3153
https://github.com/root-project/root/pull/3154:60,interoperability,socket,socket,60,"webgui: add possibility to record data, transferred via web socket; Such data can be used with JSROOT for testing only client side without running of C++. Of course, client is not fully-functional, but many aspects can be tested much-much easier",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3154
https://github.com/root-project/root/pull/3154:106,safety,test,testing,106,"webgui: add possibility to record data, transferred via web socket; Such data can be used with JSROOT for testing only client side without running of C++. Of course, client is not fully-functional, but many aspects can be tested much-much easier",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3154
https://github.com/root-project/root/pull/3154:222,safety,test,tested,222,"webgui: add possibility to record data, transferred via web socket; Such data can be used with JSROOT for testing only client side without running of C++. Of course, client is not fully-functional, but many aspects can be tested much-much easier",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3154
https://github.com/root-project/root/pull/3154:60,security,soc,socket,60,"webgui: add possibility to record data, transferred via web socket; Such data can be used with JSROOT for testing only client side without running of C++. Of course, client is not fully-functional, but many aspects can be tested much-much easier",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3154
https://github.com/root-project/root/pull/3154:106,testability,test,testing,106,"webgui: add possibility to record data, transferred via web socket; Such data can be used with JSROOT for testing only client side without running of C++. Of course, client is not fully-functional, but many aspects can be tested much-much easier",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3154
https://github.com/root-project/root/pull/3154:222,testability,test,tested,222,"webgui: add possibility to record data, transferred via web socket; Such data can be used with JSROOT for testing only client side without running of C++. Of course, client is not fully-functional, but many aspects can be tested much-much easier",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3154
https://github.com/root-project/root/pull/3156:100,integrability,sub,sub-product,100,"[RF][ROOT-9826] Fix generation of Asimov data.; When a PDF is a product of products, only the first sub-product. would have its values set to the expected values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3156
https://github.com/root-project/root/pull/3158:20,integrability,interfac,interface,20,[PyROOT] Make array interface pythonizations lazy; This makes the array interface pythonizations truly lazy so that the classes are not touched during `import ROOT`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3158
https://github.com/root-project/root/pull/3158:72,integrability,interfac,interface,72,[PyROOT] Make array interface pythonizations lazy; This makes the array interface pythonizations truly lazy so that the classes are not touched during `import ROOT`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3158
https://github.com/root-project/root/pull/3158:20,interoperability,interfac,interface,20,[PyROOT] Make array interface pythonizations lazy; This makes the array interface pythonizations truly lazy so that the classes are not touched during `import ROOT`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3158
https://github.com/root-project/root/pull/3158:72,interoperability,interfac,interface,72,[PyROOT] Make array interface pythonizations lazy; This makes the array interface pythonizations truly lazy so that the classes are not touched during `import ROOT`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3158
https://github.com/root-project/root/pull/3158:20,modifiability,interfac,interface,20,[PyROOT] Make array interface pythonizations lazy; This makes the array interface pythonizations truly lazy so that the classes are not touched during `import ROOT`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3158
https://github.com/root-project/root/pull/3158:72,modifiability,interfac,interface,72,[PyROOT] Make array interface pythonizations lazy; This makes the array interface pythonizations truly lazy so that the classes are not touched during `import ROOT`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3158
https://github.com/root-project/root/pull/3159:21,deployability,updat,update,21,eve7: fix in GL view update; Only when scene has all necessary data make geometry draw,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3159
https://github.com/root-project/root/pull/3159:82,energy efficiency,draw,draw,82,eve7: fix in GL view update; Only when scene has all necessary data make geometry draw,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3159
https://github.com/root-project/root/pull/3159:21,safety,updat,update,21,eve7: fix in GL view update; Only when scene has all necessary data make geometry draw,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3159
https://github.com/root-project/root/pull/3159:21,security,updat,update,21,eve7: fix in GL view update; Only when scene has all necessary data make geometry draw,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3159
https://github.com/root-project/root/pull/3160:123,availability,failur,failures,123,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:338,availability,failur,failure,338,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:123,deployability,fail,failures,123,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:151,deployability,build,builds,151,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:235,deployability,version,versions,235,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:338,deployability,fail,failure,338,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:398,deployability,build,build,398,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:235,integrability,version,versions,235,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:46,modifiability,portab,portable,46,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:235,modifiability,version,versions,235,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:123,performance,failur,failures,123,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:338,performance,failur,failure,338,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:123,reliability,fail,failures,123,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:338,reliability,fail,failure,338,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:34,safety,test,tests,34,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:93,safety,test,test,93,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:118,safety,test,test,118,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:307,safety,test,test,307,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:333,safety,test,test,333,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:368,safety,test,testDetails,368,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:384,safety,test,test,384,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:29,testability,unit,unit-tests,29,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:93,testability,test,test,93,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:98,testability,coverag,coverage,98,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:118,testability,test,test,118,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:307,testability,test,test,307,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:312,testability,coverag,coverage,312,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:333,testability,test,test,333,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:368,testability,test,testDetails,368,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3160:384,testability,test,test,384,"[RDF] Fix RDataFrame.AsNumpy unit-tests to be portable among Python v…; …ersions and improve test coverage. Fixes the test failures in the incremental builds since `dict.keys() == [...]` seems to behave differently on different Python versions. As well, I've changed `any` to `all` (my bad) to increase the test coverage. Edit: This test failure: http://cdash.cern.ch/testDetails.php?test=58796321&build=604175",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3160
https://github.com/root-project/root/pull/3161:194,deployability,build,build,194,"[ACLiC] Require ""no missing symbols"", like we do for ROOT (ROOT-9759):; We pass ROOT's shared library flags to ACLiC. This includes -Wl,--no-undefined on Linux. With this flag, ACLiC refuses to build a shared library that uses a missing symbol. This prevents ROOT-9759, where the missing symbol is only hit at execution time,. too late for it to be handled gracefully.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3161
https://github.com/root-project/root/pull/3161:87,interoperability,share,shared,87,"[ACLiC] Require ""no missing symbols"", like we do for ROOT (ROOT-9759):; We pass ROOT's shared library flags to ACLiC. This includes -Wl,--no-undefined on Linux. With this flag, ACLiC refuses to build a shared library that uses a missing symbol. This prevents ROOT-9759, where the missing symbol is only hit at execution time,. too late for it to be handled gracefully.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3161
https://github.com/root-project/root/pull/3161:202,interoperability,share,shared,202,"[ACLiC] Require ""no missing symbols"", like we do for ROOT (ROOT-9759):; We pass ROOT's shared library flags to ACLiC. This includes -Wl,--no-undefined on Linux. With this flag, ACLiC refuses to build a shared library that uses a missing symbol. This prevents ROOT-9759, where the missing symbol is only hit at execution time,. too late for it to be handled gracefully.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3161
https://github.com/root-project/root/pull/3161:310,performance,execution time,execution time,310,"[ACLiC] Require ""no missing symbols"", like we do for ROOT (ROOT-9759):; We pass ROOT's shared library flags to ACLiC. This includes -Wl,--no-undefined on Linux. With this flag, ACLiC refuses to build a shared library that uses a missing symbol. This prevents ROOT-9759, where the missing symbol is only hit at execution time,. too late for it to be handled gracefully.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3161
https://github.com/root-project/root/pull/3161:250,safety,prevent,prevents,250,"[ACLiC] Require ""no missing symbols"", like we do for ROOT (ROOT-9759):; We pass ROOT's shared library flags to ACLiC. This includes -Wl,--no-undefined on Linux. With this flag, ACLiC refuses to build a shared library that uses a missing symbol. This prevents ROOT-9759, where the missing symbol is only hit at execution time,. too late for it to be handled gracefully.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3161
https://github.com/root-project/root/pull/3161:250,security,preven,prevents,250,"[ACLiC] Require ""no missing symbols"", like we do for ROOT (ROOT-9759):; We pass ROOT's shared library flags to ACLiC. This includes -Wl,--no-undefined on Linux. With this flag, ACLiC refuses to build a shared library that uses a missing symbol. This prevents ROOT-9759, where the missing symbol is only hit at execution time,. too late for it to be handled gracefully.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3161
https://github.com/root-project/root/pull/3162:21,deployability,updat,update,21,eve7: fix in GL view update;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3162
https://github.com/root-project/root/pull/3162:21,safety,updat,update,21,eve7: fix in GL view update;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3162
https://github.com/root-project/root/pull/3162:21,security,updat,update,21,eve7: fix in GL view update;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3162
https://github.com/root-project/root/pull/3164:143,modifiability,paramet,parameters,143,"[RF][ROOT-9826] Fix generation of Asimov data.; When a PDF is a product of more products, only the first factor in the product. would have its parameters set to the expected values. (cherry picked from commit 38ab2dce390218e7f025e306929a17bc81ed1b09)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3164
https://github.com/root-project/root/pull/3165:143,modifiability,paramet,parameters,143,"[RF][ROOT-9826] Fix generation of Asimov data.; When a PDF is a product of more products, only the first factor in the product. would have its parameters set to the expected values. (cherry picked from commit 38ab2dce390218e7f025e306929a17bc81ed1b09)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3165
https://github.com/root-project/root/pull/3167:31,availability,error,error,31,[TBranch][NFC] More expressive error message; hinting to the potential absence of a branch holding the size of a. variable size C array.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3167
https://github.com/root-project/root/pull/3167:37,integrability,messag,message,37,[TBranch][NFC] More expressive error message; hinting to the potential absence of a branch holding the size of a. variable size C array.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3167
https://github.com/root-project/root/pull/3167:37,interoperability,messag,message,37,[TBranch][NFC] More expressive error message; hinting to the potential absence of a branch holding the size of a. variable size C array.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3167
https://github.com/root-project/root/pull/3167:114,modifiability,variab,variable,114,[TBranch][NFC] More expressive error message; hinting to the potential absence of a branch holding the size of a. variable size C array.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3167
https://github.com/root-project/root/pull/3167:31,performance,error,error,31,[TBranch][NFC] More expressive error message; hinting to the potential absence of a branch holding the size of a. variable size C array.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3167
https://github.com/root-project/root/pull/3167:31,safety,error,error,31,[TBranch][NFC] More expressive error message; hinting to the potential absence of a branch holding the size of a. variable size C array.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3167
https://github.com/root-project/root/pull/3167:31,usability,error,error,31,[TBranch][NFC] More expressive error message; hinting to the potential absence of a branch holding the size of a. variable size C array.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3167
https://github.com/root-project/root/pull/3167:46,usability,hint,hinting,46,[TBranch][NFC] More expressive error message; hinting to the potential absence of a branch holding the size of a. variable size C array.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3167
https://github.com/root-project/root/pull/3168:37,usability,navigat,navigation,37,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3168
https://github.com/root-project/root/pull/3168:72,usability,navigat,navigation,72,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3168
https://github.com/root-project/root/pull/3168:123,usability,close,close,123,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3168
https://github.com/root-project/root/pull/3168:197,usability,navigat,navigation-behaviour-with-overlapping-nodes,197,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3168
https://github.com/root-project/root/pull/3169:10,deployability,build,build,10,[RDF] Fix build warnings introduced in TakeHelper; See here: https://cdash.cern.ch/viewBuildError.php?type=1&buildid=604376,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3169
https://github.com/root-project/root/pull/3169:109,deployability,build,buildid,109,[RDF] Fix build warnings introduced in TakeHelper; See here: https://cdash.cern.ch/viewBuildError.php?type=1&buildid=604376,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3169
https://github.com/root-project/root/pull/3170:282,availability,failur,failures,282,[PyROOT] Fix lazy array interface pythonization for Python 3; @etejedor This seems to fix the problem with attaching a property to the class definition. I do not understand why we get an `bad argument to internal function` if we skip the proxy function ... Edit: These are the test failures: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=604404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3170
https://github.com/root-project/root/pull/3170:282,deployability,fail,failures,282,[PyROOT] Fix lazy array interface pythonization for Python 3; @etejedor This seems to fix the problem with attaching a property to the class definition. I do not understand why we get an `bad argument to internal function` if we skip the proxy function ... Edit: These are the test failures: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=604404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3170
https://github.com/root-project/root/pull/3170:337,deployability,build,buildid,337,[PyROOT] Fix lazy array interface pythonization for Python 3; @etejedor This seems to fix the problem with attaching a property to the class definition. I do not understand why we get an `bad argument to internal function` if we skip the proxy function ... Edit: These are the test failures: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=604404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3170
https://github.com/root-project/root/pull/3170:24,integrability,interfac,interface,24,[PyROOT] Fix lazy array interface pythonization for Python 3; @etejedor This seems to fix the problem with attaching a property to the class definition. I do not understand why we get an `bad argument to internal function` if we skip the proxy function ... Edit: These are the test failures: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=604404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3170
https://github.com/root-project/root/pull/3170:24,interoperability,interfac,interface,24,[PyROOT] Fix lazy array interface pythonization for Python 3; @etejedor This seems to fix the problem with attaching a property to the class definition. I do not understand why we get an `bad argument to internal function` if we skip the proxy function ... Edit: These are the test failures: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=604404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3170
https://github.com/root-project/root/pull/3170:238,interoperability,prox,proxy,238,[PyROOT] Fix lazy array interface pythonization for Python 3; @etejedor This seems to fix the problem with attaching a property to the class definition. I do not understand why we get an `bad argument to internal function` if we skip the proxy function ... Edit: These are the test failures: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=604404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3170
https://github.com/root-project/root/pull/3170:24,modifiability,interfac,interface,24,[PyROOT] Fix lazy array interface pythonization for Python 3; @etejedor This seems to fix the problem with attaching a property to the class definition. I do not understand why we get an `bad argument to internal function` if we skip the proxy function ... Edit: These are the test failures: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=604404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3170
https://github.com/root-project/root/pull/3170:282,performance,failur,failures,282,[PyROOT] Fix lazy array interface pythonization for Python 3; @etejedor This seems to fix the problem with attaching a property to the class definition. I do not understand why we get an `bad argument to internal function` if we skip the proxy function ... Edit: These are the test failures: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=604404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3170
https://github.com/root-project/root/pull/3170:282,reliability,fail,failures,282,[PyROOT] Fix lazy array interface pythonization for Python 3; @etejedor This seems to fix the problem with attaching a property to the class definition. I do not understand why we get an `bad argument to internal function` if we skip the proxy function ... Edit: These are the test failures: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=604404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3170
https://github.com/root-project/root/pull/3170:277,safety,test,test,277,[PyROOT] Fix lazy array interface pythonization for Python 3; @etejedor This seems to fix the problem with attaching a property to the class definition. I do not understand why we get an `bad argument to internal function` if we skip the proxy function ... Edit: These are the test failures: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=604404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3170
https://github.com/root-project/root/pull/3170:162,testability,understand,understand,162,[PyROOT] Fix lazy array interface pythonization for Python 3; @etejedor This seems to fix the problem with attaching a property to the class definition. I do not understand why we get an `bad argument to internal function` if we skip the proxy function ... Edit: These are the test failures: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=604404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3170
https://github.com/root-project/root/pull/3170:277,testability,test,test,277,[PyROOT] Fix lazy array interface pythonization for Python 3; @etejedor This seems to fix the problem with attaching a property to the class definition. I do not understand why we get an `bad argument to internal function` if we skip the proxy function ... Edit: These are the test failures: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=604404,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3170
https://github.com/root-project/root/pull/3171:115,availability,sli,sligthly,115,"[TTreeCacheUnzip] Improve documentation and implementation; the documentation was outdated, the implementation was sligthly. modernised.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3171
https://github.com/root-project/root/pull/3171:115,reliability,sli,sligthly,115,"[TTreeCacheUnzip] Improve documentation and implementation; the documentation was outdated, the implementation was sligthly. modernised.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3171
https://github.com/root-project/root/pull/3171:26,usability,document,documentation,26,"[TTreeCacheUnzip] Improve documentation and implementation; the documentation was outdated, the implementation was sligthly. modernised.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3171
https://github.com/root-project/root/pull/3171:64,usability,document,documentation,64,"[TTreeCacheUnzip] Improve documentation and implementation; the documentation was outdated, the implementation was sligthly. modernised.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3171
https://github.com/root-project/root/pull/3173:45,performance,cach,cache,45,[TTreeCacheUnzip] [ROOT-9870] Uncompress the cache in parallel only if ImplicitMT is enabled; this fix prevents to trigger multithreaded execution even if the user or. framework did not enable implicit multithreading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3173
https://github.com/root-project/root/pull/3173:54,performance,parallel,parallel,54,[TTreeCacheUnzip] [ROOT-9870] Uncompress the cache in parallel only if ImplicitMT is enabled; this fix prevents to trigger multithreaded execution even if the user or. framework did not enable implicit multithreading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3173
https://github.com/root-project/root/pull/3173:103,safety,prevent,prevents,103,[TTreeCacheUnzip] [ROOT-9870] Uncompress the cache in parallel only if ImplicitMT is enabled; this fix prevents to trigger multithreaded execution even if the user or. framework did not enable implicit multithreading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3173
https://github.com/root-project/root/pull/3173:103,security,preven,prevents,103,[TTreeCacheUnzip] [ROOT-9870] Uncompress the cache in parallel only if ImplicitMT is enabled; this fix prevents to trigger multithreaded execution even if the user or. framework did not enable implicit multithreading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3173
https://github.com/root-project/root/pull/3173:159,usability,user,user,159,[TTreeCacheUnzip] [ROOT-9870] Uncompress the cache in parallel only if ImplicitMT is enabled; this fix prevents to trigger multithreaded execution even if the user or. framework did not enable implicit multithreading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3173
https://github.com/root-project/root/pull/3174:52,deployability,version,version,52,[cmake] FindGit before using GIT_EXECUTABLE:; Fixes version detection e.g. for release / cpack builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3174
https://github.com/root-project/root/pull/3174:79,deployability,releas,release,79,[cmake] FindGit before using GIT_EXECUTABLE:; Fixes version detection e.g. for release / cpack builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3174
https://github.com/root-project/root/pull/3174:95,deployability,build,builds,95,[cmake] FindGit before using GIT_EXECUTABLE:; Fixes version detection e.g. for release / cpack builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3174
https://github.com/root-project/root/pull/3174:52,integrability,version,version,52,[cmake] FindGit before using GIT_EXECUTABLE:; Fixes version detection e.g. for release / cpack builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3174
https://github.com/root-project/root/pull/3174:52,modifiability,version,version,52,[cmake] FindGit before using GIT_EXECUTABLE:; Fixes version detection e.g. for release / cpack builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3174
https://github.com/root-project/root/pull/3174:60,safety,detect,detection,60,[cmake] FindGit before using GIT_EXECUTABLE:; Fixes version detection e.g. for release / cpack builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3174
https://github.com/root-project/root/pull/3174:60,security,detect,detection,60,[cmake] FindGit before using GIT_EXECUTABLE:; Fixes version detection e.g. for release / cpack builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3174
https://github.com/root-project/root/pull/3175:0,deployability,Updat,Updated,0,Updated the reference file for ATLAS in stressGeometry test.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3175
https://github.com/root-project/root/pull/3175:0,safety,Updat,Updated,0,Updated the reference file for ATLAS in stressGeometry test.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3175
https://github.com/root-project/root/pull/3175:55,safety,test,test,55,Updated the reference file for ATLAS in stressGeometry test.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3175
https://github.com/root-project/root/pull/3175:0,security,Updat,Updated,0,Updated the reference file for ATLAS in stressGeometry test.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3175
https://github.com/root-project/root/pull/3175:55,testability,test,test,55,Updated the reference file for ATLAS in stressGeometry test.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3175
https://github.com/root-project/root/pull/3176:37,usability,navigat,navigation,37,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618. This is a backport of commit db6a19aa4 from master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3176
https://github.com/root-project/root/pull/3176:72,usability,navigat,navigation,72,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618. This is a backport of commit db6a19aa4 from master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3176
https://github.com/root-project/root/pull/3176:123,usability,close,close,123,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618. This is a backport of commit db6a19aa4 from master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3176
https://github.com/root-project/root/pull/3176:197,usability,navigat,navigation-behaviour-with-overlapping-nodes,197,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618. This is a backport of commit db6a19aa4 from master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3176
https://github.com/root-project/root/pull/3177:37,usability,navigat,navigation,37,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618. This is a backport of commit db6a19a from master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3177
https://github.com/root-project/root/pull/3177:72,usability,navigat,navigation,72,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618. This is a backport of commit db6a19a from master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3177
https://github.com/root-project/root/pull/3177:123,usability,close,close,123,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618. This is a backport of commit db6a19a from master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3177
https://github.com/root-project/root/pull/3177:197,usability,navigat,navigation-behaviour-with-overlapping-nodes,197,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618. This is a backport of commit db6a19a from master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3177
https://github.com/root-project/root/pull/3178:37,usability,navigat,navigation,37,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618. This is a backport of commit db6a19a from master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3178
https://github.com/root-project/root/pull/3178:72,usability,navigat,navigation,72,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618. This is a backport of commit db6a19a from master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3178
https://github.com/root-project/root/pull/3178:123,usability,close,close,123,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618. This is a backport of commit db6a19a from master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3178
https://github.com/root-project/root/pull/3178:197,usability,navigat,navigation-behaviour-with-overlapping-nodes,197,"Apply fix from ddc88ff2 to voxelized navigation, too; This commit fixes navigation in overlapping nodes when the point is. close to the boundary. See also:. https://root-forum.cern.ch/t/unexpected-navigation-behaviour-with-overlapping-nodes/26618. This is a backport of commit db6a19a from master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3178
https://github.com/root-project/root/pull/3179:39,deployability,instal,installed,39,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:76,deployability,patch,patch,76,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:101,deployability,modul,modules,101,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:110,deployability,instal,installable,110,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:136,deployability,modul,modulemap,136,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:207,deployability,build,build,207,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:244,deployability,build,build,244,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:278,deployability,modul,modulemap,278,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:323,deployability,modul,modulemap,323,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:360,deployability,build,build,360,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:391,deployability,instal,installed,391,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:466,deployability,patch,patch,466,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:515,deployability,build,build,515,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:549,deployability,instal,installed,549,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:591,deployability,modul,modulemap,591,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:644,deployability,modul,modulemap,644,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:670,deployability,build,build,670,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:723,deployability,instal,install,723,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:731,deployability,modul,modulemap,731,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:786,deployability,modul,modulemap,786,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:809,deployability,instal,install,809,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:101,modifiability,modul,modules,101,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:136,modifiability,modul,modulemap,136,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:278,modifiability,modul,modulemap,278,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:323,modifiability,modul,modulemap,323,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:591,modifiability,modul,modulemap,591,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:644,modifiability,modul,modulemap,644,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:731,modifiability,modul,modulemap,731,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:786,modifiability,modul,modulemap,786,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:691,performance,time,time,691,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:76,safety,patch,patch,76,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:101,safety,modul,modules,101,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:136,safety,modul,modulemap,136,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:278,safety,modul,modulemap,278,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:323,safety,modul,modulemap,323,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:466,safety,patch,patch,466,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:591,safety,modul,modulemap,591,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:644,safety,modul,modulemap,644,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:731,safety,modul,modulemap,731,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:786,safety,modul,modulemap,786,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:76,security,patch,patch,76,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:265,security,hardcod,hardcoded,265,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3179:466,security,patch,patch,466,"[cxxmodules] Create a overlay file for installed directory; The aim of this patch is to make runtime modules ""installable"". Previously, modulemap.overlay.yaml file was being generated by cmake. __only__ for build directory. So the path/to/your/build/directory was. hardcoded to modulemap.overlay.yaml and Cling was reading modulemap for. stl and libc from the build directory even if it was installed to different. location. This was a problem for CMSSW, so in this patch I'm generating two. overlay files, one for build directory and other one for installed. directory. CMake will generate modulemap.overlay.yaml for __build__. directory from modulemap.overlay.yaml.in.build at compilation time, and. it will generate and install modulemap.overlay.yaml for __install__. directory from modulemap.overlay.yaml.install.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3179
https://github.com/root-project/root/pull/3180:586,availability,redund,redundant,586,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:33,deployability,modul,modulemap,33,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:56,deployability,modul,modules,56,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:86,deployability,patch,patch,86,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:120,deployability,modul,module,120,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:127,deployability,instal,installable,127,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:197,deployability,modul,modulemap,197,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:268,deployability,modul,module,268,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:312,deployability,modul,modulemap,312,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:349,deployability,modul,module,349,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:426,deployability,instal,install,426,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:434,deployability,modul,modulemaps,434,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:523,deployability,instal,installed,523,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:547,deployability,instal,installed,547,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:586,deployability,redundan,redundant,586,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:217,energy efficiency,current,currently,217,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:227,energy efficiency,load,loaded,227,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:260,energy efficiency,current,current,260,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:332,energy efficiency,current,current,332,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:33,modifiability,modul,modulemap,33,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:56,modifiability,modul,modules,56,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:120,modifiability,modul,module,120,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:197,modifiability,modul,modulemap,197,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:268,modifiability,modul,module,268,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
https://github.com/root-project/root/pull/3180:312,modifiability,modul,modulemap,312,"[cxxmodules] Don't complain when modulemap for implicit modules has c…; …hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which. is currently loaded and gives a definition of current module (say, stl). and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps. and prebuilt pcms to other directory. stl and libc pcms should be. prebuilt, installed and used from installed directory, so this check is. redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3180
