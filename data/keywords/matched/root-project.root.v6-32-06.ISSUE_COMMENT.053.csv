id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/9371:166,integrability,depend,dependent,166,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:88,interoperability,platform,platform,88,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:97,modifiability,depend,dependent,97,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:166,modifiability,depend,dependent,166,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:298,performance,I/O,I/O,298,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:357,performance,memor,memory,357,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:364,performance,content,content,364,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:97,safety,depend,dependent,97,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:135,safety,compl,complete,135,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:166,safety,depend,dependent,166,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:492,safety,safe,safety,492,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:135,security,compl,complete,135,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:97,testability,depend,dependent,97,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:166,testability,depend,dependent,166,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:357,usability,memor,memory,357,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:592,availability,Error,Error,592,"humm ... that might be a fluke (that there is no warning in the direct case), On MacOS, I do:. ```. root [0] f = TFile::Open(""empty.root"", ""RECREATE"");. root [1] std::atomic<double> ad. (std::atomic<double> &) @0x101594eb8. root [2] f->WriteObject(&ad,""ad""). Warning in <TStreamerInfo::Build>: __atomic_base<double,false>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> > has no streamer or dictionary, data member ""__a_"" will not be saved. Warning in <TStreamerInfo::Build>: atomic<double>: base class __atomic_base<double,false> has no streamer or dictionary it will not be saved. Error in <TStreamerInfo::Build>: __cxx_atomic_base_impl<double>, unknown type: _Atomic(double) __a_value. Warning in <TStreamerInfo::Build>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> >: base class __cxx_atomic_base_impl<double> has no streamer or dictionary it will not be saved. (int) 97. ```. (and reading it back does not seem to work either).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:286,deployability,Build,Build,286,"humm ... that might be a fluke (that there is no warning in the direct case), On MacOS, I do:. ```. root [0] f = TFile::Open(""empty.root"", ""RECREATE"");. root [1] std::atomic<double> ad. (std::atomic<double> &) @0x101594eb8. root [2] f->WriteObject(&ad,""ad""). Warning in <TStreamerInfo::Build>: __atomic_base<double,false>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> > has no streamer or dictionary, data member ""__a_"" will not be saved. Warning in <TStreamerInfo::Build>: atomic<double>: base class __atomic_base<double,false> has no streamer or dictionary it will not be saved. Error in <TStreamerInfo::Build>: __cxx_atomic_base_impl<double>, unknown type: _Atomic(double) __a_value. Warning in <TStreamerInfo::Build>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> >: base class __cxx_atomic_base_impl<double> has no streamer or dictionary it will not be saved. (int) 97. ```. (and reading it back does not seem to work either).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:477,deployability,Build,Build,477,"humm ... that might be a fluke (that there is no warning in the direct case), On MacOS, I do:. ```. root [0] f = TFile::Open(""empty.root"", ""RECREATE"");. root [1] std::atomic<double> ad. (std::atomic<double> &) @0x101594eb8. root [2] f->WriteObject(&ad,""ad""). Warning in <TStreamerInfo::Build>: __atomic_base<double,false>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> > has no streamer or dictionary, data member ""__a_"" will not be saved. Warning in <TStreamerInfo::Build>: atomic<double>: base class __atomic_base<double,false> has no streamer or dictionary it will not be saved. Error in <TStreamerInfo::Build>: __cxx_atomic_base_impl<double>, unknown type: _Atomic(double) __a_value. Warning in <TStreamerInfo::Build>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> >: base class __cxx_atomic_base_impl<double> has no streamer or dictionary it will not be saved. (int) 97. ```. (and reading it back does not seem to work either).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:617,deployability,Build,Build,617,"humm ... that might be a fluke (that there is no warning in the direct case), On MacOS, I do:. ```. root [0] f = TFile::Open(""empty.root"", ""RECREATE"");. root [1] std::atomic<double> ad. (std::atomic<double> &) @0x101594eb8. root [2] f->WriteObject(&ad,""ad""). Warning in <TStreamerInfo::Build>: __atomic_base<double,false>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> > has no streamer or dictionary, data member ""__a_"" will not be saved. Warning in <TStreamerInfo::Build>: atomic<double>: base class __atomic_base<double,false> has no streamer or dictionary it will not be saved. Error in <TStreamerInfo::Build>: __cxx_atomic_base_impl<double>, unknown type: _Atomic(double) __a_value. Warning in <TStreamerInfo::Build>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> >: base class __cxx_atomic_base_impl<double> has no streamer or dictionary it will not be saved. (int) 97. ```. (and reading it back does not seem to work either).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:725,deployability,Build,Build,725,"humm ... that might be a fluke (that there is no warning in the direct case), On MacOS, I do:. ```. root [0] f = TFile::Open(""empty.root"", ""RECREATE"");. root [1] std::atomic<double> ad. (std::atomic<double> &) @0x101594eb8. root [2] f->WriteObject(&ad,""ad""). Warning in <TStreamerInfo::Build>: __atomic_base<double,false>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> > has no streamer or dictionary, data member ""__a_"" will not be saved. Warning in <TStreamerInfo::Build>: atomic<double>: base class __atomic_base<double,false> has no streamer or dictionary it will not be saved. Error in <TStreamerInfo::Build>: __cxx_atomic_base_impl<double>, unknown type: _Atomic(double) __a_value. Warning in <TStreamerInfo::Build>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> >: base class __cxx_atomic_base_impl<double> has no streamer or dictionary it will not be saved. (int) 97. ```. (and reading it back does not seem to work either).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:592,performance,Error,Error,592,"humm ... that might be a fluke (that there is no warning in the direct case), On MacOS, I do:. ```. root [0] f = TFile::Open(""empty.root"", ""RECREATE"");. root [1] std::atomic<double> ad. (std::atomic<double> &) @0x101594eb8. root [2] f->WriteObject(&ad,""ad""). Warning in <TStreamerInfo::Build>: __atomic_base<double,false>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> > has no streamer or dictionary, data member ""__a_"" will not be saved. Warning in <TStreamerInfo::Build>: atomic<double>: base class __atomic_base<double,false> has no streamer or dictionary it will not be saved. Error in <TStreamerInfo::Build>: __cxx_atomic_base_impl<double>, unknown type: _Atomic(double) __a_value. Warning in <TStreamerInfo::Build>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> >: base class __cxx_atomic_base_impl<double> has no streamer or dictionary it will not be saved. (int) 97. ```. (and reading it back does not seem to work either).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:922,reliability,doe,does,922,"humm ... that might be a fluke (that there is no warning in the direct case), On MacOS, I do:. ```. root [0] f = TFile::Open(""empty.root"", ""RECREATE"");. root [1] std::atomic<double> ad. (std::atomic<double> &) @0x101594eb8. root [2] f->WriteObject(&ad,""ad""). Warning in <TStreamerInfo::Build>: __atomic_base<double,false>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> > has no streamer or dictionary, data member ""__a_"" will not be saved. Warning in <TStreamerInfo::Build>: atomic<double>: base class __atomic_base<double,false> has no streamer or dictionary it will not be saved. Error in <TStreamerInfo::Build>: __cxx_atomic_base_impl<double>, unknown type: _Atomic(double) __a_value. Warning in <TStreamerInfo::Build>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> >: base class __cxx_atomic_base_impl<double> has no streamer or dictionary it will not be saved. (int) 97. ```. (and reading it back does not seem to work either).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:592,safety,Error,Error,592,"humm ... that might be a fluke (that there is no warning in the direct case), On MacOS, I do:. ```. root [0] f = TFile::Open(""empty.root"", ""RECREATE"");. root [1] std::atomic<double> ad. (std::atomic<double> &) @0x101594eb8. root [2] f->WriteObject(&ad,""ad""). Warning in <TStreamerInfo::Build>: __atomic_base<double,false>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> > has no streamer or dictionary, data member ""__a_"" will not be saved. Warning in <TStreamerInfo::Build>: atomic<double>: base class __atomic_base<double,false> has no streamer or dictionary it will not be saved. Error in <TStreamerInfo::Build>: __cxx_atomic_base_impl<double>, unknown type: _Atomic(double) __a_value. Warning in <TStreamerInfo::Build>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> >: base class __cxx_atomic_base_impl<double> has no streamer or dictionary it will not be saved. (int) 97. ```. (and reading it back does not seem to work either).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:592,usability,Error,Error,592,"humm ... that might be a fluke (that there is no warning in the direct case), On MacOS, I do:. ```. root [0] f = TFile::Open(""empty.root"", ""RECREATE"");. root [1] std::atomic<double> ad. (std::atomic<double> &) @0x101594eb8. root [2] f->WriteObject(&ad,""ad""). Warning in <TStreamerInfo::Build>: __atomic_base<double,false>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> > has no streamer or dictionary, data member ""__a_"" will not be saved. Warning in <TStreamerInfo::Build>: atomic<double>: base class __atomic_base<double,false> has no streamer or dictionary it will not be saved. Error in <TStreamerInfo::Build>: __cxx_atomic_base_impl<double>, unknown type: _Atomic(double) __a_value. Warning in <TStreamerInfo::Build>: __cxx_atomic_impl<double,__cxx_atomic_base_impl<double> >: base class __cxx_atomic_base_impl<double> has no streamer or dictionary it will not be saved. (int) 97. ```. (and reading it back does not seem to work either).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:418,deployability,Build,Build,418,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:163,integrability,pub,public,163,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:136,safety,Test,TestBase,136,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:156,safety,Test,Test,156,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:170,safety,Test,TestBase,170,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:189,safety,test,testio,189,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:201,safety,Test,Test,201,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:237,safety,test,test,237,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:305,safety,Test,Test,305,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:342,safety,test,testio,342,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:377,safety,test,testio,377,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:426,safety,Test,Test,426,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:443,safety,Test,TestBase,443,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:42,testability,simpl,simpler,42,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:136,testability,Test,TestBase,136,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:156,testability,Test,Test,156,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:170,testability,Test,TestBase,170,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:189,testability,test,testio,189,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:201,testability,Test,Test,201,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:237,testability,test,test,237,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:305,testability,Test,Test,305,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:342,testability,test,testio,342,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:377,testability,test,testio,377,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:426,testability,Test,Test,426,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:443,testability,Test,TestBase,443,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:42,usability,simpl,simpler,42,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp. #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. root [1] .q. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:447,availability,state,state,447,"And for this I think the problem is ""just"" the checks on ```TClass::IsLoaded()``` at. https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L384. https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L580. https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L592. Since the state of the TClass object is ```kInterpreted``` in this case. Not sure what the best solution here is. On the one hand being able to persist interpreted classes is extremely useful (especially for the case of templates which are only instantiated from PyROOT), but it's also clear that one can shoot themselves in the foot here if the interpreted class changes in a way that breaks the IO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:447,integrability,state,state,447,"And for this I think the problem is ""just"" the checks on ```TClass::IsLoaded()``` at. https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L384. https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L580. https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L592. Since the state of the TClass object is ```kInterpreted``` in this case. Not sure what the best solution here is. On the one hand being able to persist interpreted classes is extremely useful (especially for the case of templates which are only instantiated from PyROOT), but it's also clear that one can shoot themselves in the foot here if the interpreted class changes in a way that breaks the IO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:723,usability,clear,clear,723,"And for this I think the problem is ""just"" the checks on ```TClass::IsLoaded()``` at. https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L384. https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L580. https://github.com/root-project/root/blob/702e1ee22ce472508d0ab2de7f51b85e6613b55d/io/io/src/TStreamerInfo.cxx#L592. Since the state of the TClass object is ```kInterpreted``` in this case. Not sure what the best solution here is. On the one hand being able to persist interpreted classes is extremely useful (especially for the case of templates which are only instantiated from PyROOT), but it's also clear that one can shoot themselves in the foot here if the interpreted class changes in a way that breaks the IO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:193,integrability,messag,message,193,"The support for I/O of interpreted classes is not complete (it is missing at least support for STL collection). Even-though that some classes could be stored, we choose (for now?) to leave the message for all of them (rather than trying to test for the subset that 'works' and have a mixed up message)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:253,integrability,sub,subset,253,"The support for I/O of interpreted classes is not complete (it is missing at least support for STL collection). Even-though that some classes could be stored, we choose (for now?) to leave the message for all of them (rather than trying to test for the subset that 'works' and have a mixed up message)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:293,integrability,messag,message,293,"The support for I/O of interpreted classes is not complete (it is missing at least support for STL collection). Even-though that some classes could be stored, we choose (for now?) to leave the message for all of them (rather than trying to test for the subset that 'works' and have a mixed up message)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:193,interoperability,messag,message,193,"The support for I/O of interpreted classes is not complete (it is missing at least support for STL collection). Even-though that some classes could be stored, we choose (for now?) to leave the message for all of them (rather than trying to test for the subset that 'works' and have a mixed up message)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:293,interoperability,messag,message,293,"The support for I/O of interpreted classes is not complete (it is missing at least support for STL collection). Even-though that some classes could be stored, we choose (for now?) to leave the message for all of them (rather than trying to test for the subset that 'works' and have a mixed up message)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:16,performance,I/O,I/O,16,"The support for I/O of interpreted classes is not complete (it is missing at least support for STL collection). Even-though that some classes could be stored, we choose (for now?) to leave the message for all of them (rather than trying to test for the subset that 'works' and have a mixed up message)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:50,safety,compl,complete,50,"The support for I/O of interpreted classes is not complete (it is missing at least support for STL collection). Even-though that some classes could be stored, we choose (for now?) to leave the message for all of them (rather than trying to test for the subset that 'works' and have a mixed up message)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:240,safety,test,test,240,"The support for I/O of interpreted classes is not complete (it is missing at least support for STL collection). Even-though that some classes could be stored, we choose (for now?) to leave the message for all of them (rather than trying to test for the subset that 'works' and have a mixed up message)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:50,security,compl,complete,50,"The support for I/O of interpreted classes is not complete (it is missing at least support for STL collection). Even-though that some classes could be stored, we choose (for now?) to leave the message for all of them (rather than trying to test for the subset that 'works' and have a mixed up message)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:240,testability,test,test,240,"The support for I/O of interpreted classes is not complete (it is missing at least support for STL collection). Even-though that some classes could be stored, we choose (for now?) to leave the message for all of them (rather than trying to test for the subset that 'works' and have a mixed up message)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:4,usability,support,support,4,"The support for I/O of interpreted classes is not complete (it is missing at least support for STL collection). Even-though that some classes could be stored, we choose (for now?) to leave the message for all of them (rather than trying to test for the subset that 'works' and have a mixed up message)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:83,usability,support,support,83,"The support for I/O of interpreted classes is not complete (it is missing at least support for STL collection). Even-though that some classes could be stored, we choose (for now?) to leave the message for all of them (rather than trying to test for the subset that 'works' and have a mixed up message)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:282,availability,Error,Error,282,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:451,availability,error,error,451,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1399,availability,Error,Error,1399,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1190,deployability,Build,Build,1190,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1303,deployability,Build,Build,1303,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1424,deployability,Build,Build,1424,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:22,energy efficiency,current,current,22,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:630,integrability,pub,public,630,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:282,performance,Error,Error,282,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:451,performance,error,error,451,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1399,performance,Error,Error,1399,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:282,safety,Error,Error,282,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:451,safety,error,error,451,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:581,safety,Test,TestBase,581,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:601,safety,Test,TestMember,601,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:623,safety,Test,Test,623,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:637,safety,Test,TestBase,637,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:666,safety,Test,TestMember,666,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:704,safety,Test,TestMember,704,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:743,safety,test,testio,743,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:755,safety,Test,Test,755,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:765,safety,Test,Test,765,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:823,safety,test,test,823,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:892,safety,Test,TestBase,892,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:955,safety,Test,Test,955,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1114,safety,test,testio,1114,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1149,safety,test,testio,1149,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1198,safety,Test,Test,1198,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1215,safety,Test,TestBase,1215,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1318,safety,Test,TestMember,1318,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1399,safety,Error,Error,1399,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1439,safety,Test,TestMember,1439,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:581,testability,Test,TestBase,581,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:601,testability,Test,TestMember,601,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:623,testability,Test,Test,623,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:637,testability,Test,TestBase,637,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:666,testability,Test,TestMember,666,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:704,testability,Test,TestMember,704,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:743,testability,test,testio,743,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:755,testability,Test,Test,755,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:765,testability,Test,Test,765,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:823,testability,test,test,823,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:892,testability,Test,TestBase,892,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:955,testability,Test,Test,955,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1114,testability,test,testio,1114,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1149,testability,test,testio,1149,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1198,testability,Test,Test,1198,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1215,testability,Test,TestBase,1215,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1318,testability,Test,TestMember,1318,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1439,testability,Test,TestMember,1439,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:282,usability,Error,Error,282,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:451,usability,error,error,451,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:468,usability,behavi,behaviour,468,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1399,usability,Error,Error,1399,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member. 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning. 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp. #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {. TestMember data_;. };. class Test3 {. TestMember *data_ = nullptr;. };. void testio() {. Test tb;. Test t;. Test2 t2;. Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");. fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");. fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }. ```. ```. root -l testio.cpp . root [0] . Processing testio.cpp... Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved. Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved. Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:78,modifiability,inherit,inheritance,78,"> Is this connected to #16202? No, there is no transiency involved here, only inheritance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9372:147,energy efficiency,model,models,147,"@cburgard, your help would be greatly appreciated here to ensure that the fixes are correctly implemented without breaking support for HistFactory models.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:147,security,model,models,147,"@cburgard, your help would be greatly appreciated here to ensure that the fixes are correctly implemented without breaking support for HistFactory models.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:16,usability,help,help,16,"@cburgard, your help would be greatly appreciated here to ensure that the fixes are correctly implemented without breaking support for HistFactory models.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:123,usability,support,support,123,"@cburgard, your help would be greatly appreciated here to ensure that the fixes are correctly implemented without breaking support for HistFactory models.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/pull/9374:186,availability,error,error,186,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:86,deployability,build,build,86,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:120,deployability,build,build,120,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:193,deployability,Fail,Failed,193,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:342,deployability,version,version,342,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:429,deployability,version,version,429,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:342,integrability,version,version,342,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:429,integrability,version,version,429,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:785,integrability,schema,schema,785,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:695,interoperability,platform,platforms,695,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:342,modifiability,version,version,342,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:429,modifiability,version,version,429,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:186,performance,error,error,186,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:415,performance,memor,memory,415,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:193,reliability,Fail,Failed,193,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:221,reliability,diagno,diagnostic,221,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:608,reliability,doe,does,608,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:28,safety,test,test,28,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:131,safety,test,test,131,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:186,safety,error,error,186,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:28,testability,test,test,28,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:131,testability,test,test,131,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:221,testability,diagno,diagnostic,221,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:186,usability,error,error,186,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:415,usability,memor,memory,415,"> projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential. ```. C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.cxx(70): error: Failed. Received unexpected diagnostic of severity 2000 at 'TStreamerInfo::CompareContent' reading 'The following data member of. the on-file layout version 1 of class 'RooSTLRefCountList<RooAbsArg>' differs from . the in-memory layout version 1:. vector<unsigned long> _refCount; //. vs. vector<unsigned int> _refCount; //'. ```. The problem stems wrong:. ```. std::vector<std::size_t> _refCount;. ```. where ROOT does not (yet) make the std:*_t type opaque and thus sees different types on different platforms (and `long` is stored with 64 bits, `int` is stored with 32 bits, so here the 2 schema are indeed different). . Using `unsigned long` instead of `std::size_t` should solve the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:133,deployability,version,version,133,"Hi @pcanal, thanks a lot for commenting! Okay so I need to change the type. Just to make sure, do I still need to increase the class version too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:133,integrability,version,version,133,"Hi @pcanal, thanks a lot for commenting! Okay so I need to change the type. Just to make sure, do I still need to increase the class version too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:133,modifiability,version,version,133,"Hi @pcanal, thanks a lot for commenting! Okay so I need to change the type. Just to make sure, do I still need to increase the class version too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:28,deployability,version,version,28,"You do need to increase the version number. This is because, a priori, there is file written with both alternative of version 1 (when written from Windows or from Linux) and increasing the number would let the automatic schema evolution kick-in when reading file written with the 'wrong' alternative.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:118,deployability,version,version,118,"You do need to increase the version number. This is because, a priori, there is file written with both alternative of version 1 (when written from Windows or from Linux) and increasing the number would let the automatic schema evolution kick-in when reading file written with the 'wrong' alternative.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:210,deployability,automat,automatic,210,"You do need to increase the version number. This is because, a priori, there is file written with both alternative of version 1 (when written from Windows or from Linux) and increasing the number would let the automatic schema evolution kick-in when reading file written with the 'wrong' alternative.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:28,integrability,version,version,28,"You do need to increase the version number. This is because, a priori, there is file written with both alternative of version 1 (when written from Windows or from Linux) and increasing the number would let the automatic schema evolution kick-in when reading file written with the 'wrong' alternative.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:118,integrability,version,version,118,"You do need to increase the version number. This is because, a priori, there is file written with both alternative of version 1 (when written from Windows or from Linux) and increasing the number would let the automatic schema evolution kick-in when reading file written with the 'wrong' alternative.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:220,integrability,schema,schema,220,"You do need to increase the version number. This is because, a priori, there is file written with both alternative of version 1 (when written from Windows or from Linux) and increasing the number would let the automatic schema evolution kick-in when reading file written with the 'wrong' alternative.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:28,modifiability,version,version,28,"You do need to increase the version number. This is because, a priori, there is file written with both alternative of version 1 (when written from Windows or from Linux) and increasing the number would let the automatic schema evolution kick-in when reading file written with the 'wrong' alternative.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:118,modifiability,version,version,118,"You do need to increase the version number. This is because, a priori, there is file written with both alternative of version 1 (when written from Windows or from Linux) and increasing the number would let the automatic schema evolution kick-in when reading file written with the 'wrong' alternative.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:210,testability,automat,automatic,210,"You do need to increase the version number. This is because, a priori, there is file written with both alternative of version 1 (when written from Windows or from Linux) and increasing the number would let the automatic schema evolution kick-in when reading file written with the 'wrong' alternative.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:71,deployability,version,version,71,[This may or may not apply here]. Remember to also increment the class version of any class derived from the 2 you changed here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:71,integrability,version,version,71,[This may or may not apply here]. Remember to also increment the class version of any class derived from the 2 you changed here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:71,modifiability,version,version,71,[This may or may not apply here]. Remember to also increment the class version of any class derived from the 2 you changed here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:34,safety,Reme,Remember,34,[This may or may not apply here]. Remember to also increment the class version of any class derived from the 2 you changed here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9375:3,safety,review,review,3,"My review was not requests but to me this looks goo! I understand now how to use the new Likelihood classes and I didn't understand it before, so the README is effective.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9375
https://github.com/root-project/root/pull/9375:3,testability,review,review,3,"My review was not requests but to me this looks goo! I understand now how to use the new Likelihood classes and I didn't understand it before, so the README is effective.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9375
https://github.com/root-project/root/pull/9375:55,testability,understand,understand,55,"My review was not requests but to me this looks goo! I understand now how to use the new Likelihood classes and I didn't understand it before, so the README is effective.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9375
https://github.com/root-project/root/pull/9375:121,testability,understand,understand,121,"My review was not requests but to me this looks goo! I understand now how to use the new Likelihood classes and I didn't understand it before, so the README is effective.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9375
https://github.com/root-project/root/pull/9375:160,usability,effectiv,effective,160,"My review was not requests but to me this looks goo! I understand now how to use the new Likelihood classes and I didn't understand it before, so the README is effective.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9375
https://github.com/root-project/root/pull/9375:122,safety,review,review,122,"Apologies @guitargeek (I made the PR just before running to get my kid to swimming lessons ;)). Thanks for the unofficial review, glad to know it is useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9375
https://github.com/root-project/root/pull/9375:122,testability,review,review,122,"Apologies @guitargeek (I made the PR just before running to get my kid to swimming lessons ;)). Thanks for the unofficial review, glad to know it is useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9375
https://github.com/root-project/root/pull/9378:53,performance,time,times,53,> That's better than calling emplace_back a bunch of times. Only for non complex type :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:73,safety,compl,complex,73,> That's better than calling emplace_back a bunch of times. Only for non complex type :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:73,security,compl,complex,73,> That's better than calling emplace_back a bunch of times. Only for non complex type :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:144,availability,operat,operator,144,Also for fundamental types: emplace_back has branching to check if the capacity is sufficient and it has to increment the size. Assignment with operator[] is strictly less work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:117,deployability,patch,patch,117,"@ikabadzhov i won't merge this for now. When you have time please check the difference between master, master + this patch and any alternative version you come up with on a dedicated micro-benchmark.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:143,deployability,version,version,143,"@ikabadzhov i won't merge this for now. When you have time please check the difference between master, master + this patch and any alternative version you come up with on a dedicated micro-benchmark.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:143,integrability,version,version,143,"@ikabadzhov i won't merge this for now. When you have time please check the difference between master, master + this patch and any alternative version you come up with on a dedicated micro-benchmark.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:143,modifiability,version,version,143,"@ikabadzhov i won't merge this for now. When you have time please check the difference between master, master + this patch and any alternative version you come up with on a dedicated micro-benchmark.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:54,performance,time,time,54,"@ikabadzhov i won't merge this for now. When you have time please check the difference between master, master + this patch and any alternative version you come up with on a dedicated micro-benchmark.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:117,safety,patch,patch,117,"@ikabadzhov i won't merge this for now. When you have time please check the difference between master, master + this patch and any alternative version you come up with on a dedicated micro-benchmark.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:117,security,patch,patch,117,"@ikabadzhov i won't merge this for now. When you have time please check the difference between master, master + this patch and any alternative version you come up with on a dedicated micro-benchmark.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:41,deployability,manag,managed,41,"Thanks @eguiraud , I will compare. And I managed to do faster main body. Fyi locally is a lot faster. Need to adapt to RVec and will compare against master, and compare against only having precomputed sizes. Fyi this is my minimal version for new body:. ```C++. std::vector<std::vector<size_t>> combinations (const int s, const int n){. const size_t C = [=] {. size_t inners = s - n + 1;. for (size_t m = s - n + 2; m <= s; ++m). inners *= m;. size_t factn = 1;. for (size_t i = 2; i <= n; ++i). factn *= i;. inners /= factn;. return inners;. }();. std::vector<std::vector<size_t>> T (n, std::vector<size_t>(C));. std::vector<bool> bitmask(s);. for (size_t i = 0; i < n; ++i). bitmask[i] = true;. for (size_t j = 0; j < C; ++j) {. for (size_t i = 0, ind = 0; i < s; ++i). if (bitmask[i]). T[ind++][j] = i;. std::prev_permutation(bitmask.begin(), bitmask.end());. }. return T;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:231,deployability,version,version,231,"Thanks @eguiraud , I will compare. And I managed to do faster main body. Fyi locally is a lot faster. Need to adapt to RVec and will compare against master, and compare against only having precomputed sizes. Fyi this is my minimal version for new body:. ```C++. std::vector<std::vector<size_t>> combinations (const int s, const int n){. const size_t C = [=] {. size_t inners = s - n + 1;. for (size_t m = s - n + 2; m <= s; ++m). inners *= m;. size_t factn = 1;. for (size_t i = 2; i <= n; ++i). factn *= i;. inners /= factn;. return inners;. }();. std::vector<std::vector<size_t>> T (n, std::vector<size_t>(C));. std::vector<bool> bitmask(s);. for (size_t i = 0; i < n; ++i). bitmask[i] = true;. for (size_t j = 0; j < C; ++j) {. for (size_t i = 0, ind = 0; i < s; ++i). if (bitmask[i]). T[ind++][j] = i;. std::prev_permutation(bitmask.begin(), bitmask.end());. }. return T;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:41,energy efficiency,manag,managed,41,"Thanks @eguiraud , I will compare. And I managed to do faster main body. Fyi locally is a lot faster. Need to adapt to RVec and will compare against master, and compare against only having precomputed sizes. Fyi this is my minimal version for new body:. ```C++. std::vector<std::vector<size_t>> combinations (const int s, const int n){. const size_t C = [=] {. size_t inners = s - n + 1;. for (size_t m = s - n + 2; m <= s; ++m). inners *= m;. size_t factn = 1;. for (size_t i = 2; i <= n; ++i). factn *= i;. inners /= factn;. return inners;. }();. std::vector<std::vector<size_t>> T (n, std::vector<size_t>(C));. std::vector<bool> bitmask(s);. for (size_t i = 0; i < n; ++i). bitmask[i] = true;. for (size_t j = 0; j < C; ++j) {. for (size_t i = 0, ind = 0; i < s; ++i). if (bitmask[i]). T[ind++][j] = i;. std::prev_permutation(bitmask.begin(), bitmask.end());. }. return T;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:110,energy efficiency,adapt,adapt,110,"Thanks @eguiraud , I will compare. And I managed to do faster main body. Fyi locally is a lot faster. Need to adapt to RVec and will compare against master, and compare against only having precomputed sizes. Fyi this is my minimal version for new body:. ```C++. std::vector<std::vector<size_t>> combinations (const int s, const int n){. const size_t C = [=] {. size_t inners = s - n + 1;. for (size_t m = s - n + 2; m <= s; ++m). inners *= m;. size_t factn = 1;. for (size_t i = 2; i <= n; ++i). factn *= i;. inners /= factn;. return inners;. }();. std::vector<std::vector<size_t>> T (n, std::vector<size_t>(C));. std::vector<bool> bitmask(s);. for (size_t i = 0; i < n; ++i). bitmask[i] = true;. for (size_t j = 0; j < C; ++j) {. for (size_t i = 0, ind = 0; i < s; ++i). if (bitmask[i]). T[ind++][j] = i;. std::prev_permutation(bitmask.begin(), bitmask.end());. }. return T;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:110,integrability,adapt,adapt,110,"Thanks @eguiraud , I will compare. And I managed to do faster main body. Fyi locally is a lot faster. Need to adapt to RVec and will compare against master, and compare against only having precomputed sizes. Fyi this is my minimal version for new body:. ```C++. std::vector<std::vector<size_t>> combinations (const int s, const int n){. const size_t C = [=] {. size_t inners = s - n + 1;. for (size_t m = s - n + 2; m <= s; ++m). inners *= m;. size_t factn = 1;. for (size_t i = 2; i <= n; ++i). factn *= i;. inners /= factn;. return inners;. }();. std::vector<std::vector<size_t>> T (n, std::vector<size_t>(C));. std::vector<bool> bitmask(s);. for (size_t i = 0; i < n; ++i). bitmask[i] = true;. for (size_t j = 0; j < C; ++j) {. for (size_t i = 0, ind = 0; i < s; ++i). if (bitmask[i]). T[ind++][j] = i;. std::prev_permutation(bitmask.begin(), bitmask.end());. }. return T;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:231,integrability,version,version,231,"Thanks @eguiraud , I will compare. And I managed to do faster main body. Fyi locally is a lot faster. Need to adapt to RVec and will compare against master, and compare against only having precomputed sizes. Fyi this is my minimal version for new body:. ```C++. std::vector<std::vector<size_t>> combinations (const int s, const int n){. const size_t C = [=] {. size_t inners = s - n + 1;. for (size_t m = s - n + 2; m <= s; ++m). inners *= m;. size_t factn = 1;. for (size_t i = 2; i <= n; ++i). factn *= i;. inners /= factn;. return inners;. }();. std::vector<std::vector<size_t>> T (n, std::vector<size_t>(C));. std::vector<bool> bitmask(s);. for (size_t i = 0; i < n; ++i). bitmask[i] = true;. for (size_t j = 0; j < C; ++j) {. for (size_t i = 0, ind = 0; i < s; ++i). if (bitmask[i]). T[ind++][j] = i;. std::prev_permutation(bitmask.begin(), bitmask.end());. }. return T;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:110,interoperability,adapt,adapt,110,"Thanks @eguiraud , I will compare. And I managed to do faster main body. Fyi locally is a lot faster. Need to adapt to RVec and will compare against master, and compare against only having precomputed sizes. Fyi this is my minimal version for new body:. ```C++. std::vector<std::vector<size_t>> combinations (const int s, const int n){. const size_t C = [=] {. size_t inners = s - n + 1;. for (size_t m = s - n + 2; m <= s; ++m). inners *= m;. size_t factn = 1;. for (size_t i = 2; i <= n; ++i). factn *= i;. inners /= factn;. return inners;. }();. std::vector<std::vector<size_t>> T (n, std::vector<size_t>(C));. std::vector<bool> bitmask(s);. for (size_t i = 0; i < n; ++i). bitmask[i] = true;. for (size_t j = 0; j < C; ++j) {. for (size_t i = 0, ind = 0; i < s; ++i). if (bitmask[i]). T[ind++][j] = i;. std::prev_permutation(bitmask.begin(), bitmask.end());. }. return T;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:110,modifiability,adapt,adapt,110,"Thanks @eguiraud , I will compare. And I managed to do faster main body. Fyi locally is a lot faster. Need to adapt to RVec and will compare against master, and compare against only having precomputed sizes. Fyi this is my minimal version for new body:. ```C++. std::vector<std::vector<size_t>> combinations (const int s, const int n){. const size_t C = [=] {. size_t inners = s - n + 1;. for (size_t m = s - n + 2; m <= s; ++m). inners *= m;. size_t factn = 1;. for (size_t i = 2; i <= n; ++i). factn *= i;. inners /= factn;. return inners;. }();. std::vector<std::vector<size_t>> T (n, std::vector<size_t>(C));. std::vector<bool> bitmask(s);. for (size_t i = 0; i < n; ++i). bitmask[i] = true;. for (size_t j = 0; j < C; ++j) {. for (size_t i = 0, ind = 0; i < s; ++i). if (bitmask[i]). T[ind++][j] = i;. std::prev_permutation(bitmask.begin(), bitmask.end());. }. return T;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:231,modifiability,version,version,231,"Thanks @eguiraud , I will compare. And I managed to do faster main body. Fyi locally is a lot faster. Need to adapt to RVec and will compare against master, and compare against only having precomputed sizes. Fyi this is my minimal version for new body:. ```C++. std::vector<std::vector<size_t>> combinations (const int s, const int n){. const size_t C = [=] {. size_t inners = s - n + 1;. for (size_t m = s - n + 2; m <= s; ++m). inners *= m;. size_t factn = 1;. for (size_t i = 2; i <= n; ++i). factn *= i;. inners /= factn;. return inners;. }();. std::vector<std::vector<size_t>> T (n, std::vector<size_t>(C));. std::vector<bool> bitmask(s);. for (size_t i = 0; i < n; ++i). bitmask[i] = true;. for (size_t j = 0; j < C; ++j) {. for (size_t i = 0, ind = 0; i < s; ++i). if (bitmask[i]). T[ind++][j] = i;. std::prev_permutation(bitmask.begin(), bitmask.end());. }. return T;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:41,safety,manag,managed,41,"Thanks @eguiraud , I will compare. And I managed to do faster main body. Fyi locally is a lot faster. Need to adapt to RVec and will compare against master, and compare against only having precomputed sizes. Fyi this is my minimal version for new body:. ```C++. std::vector<std::vector<size_t>> combinations (const int s, const int n){. const size_t C = [=] {. size_t inners = s - n + 1;. for (size_t m = s - n + 2; m <= s; ++m). inners *= m;. size_t factn = 1;. for (size_t i = 2; i <= n; ++i). factn *= i;. inners /= factn;. return inners;. }();. std::vector<std::vector<size_t>> T (n, std::vector<size_t>(C));. std::vector<bool> bitmask(s);. for (size_t i = 0; i < n; ++i). bitmask[i] = true;. for (size_t j = 0; j < C; ++j) {. for (size_t i = 0, ind = 0; i < s; ++i). if (bitmask[i]). T[ind++][j] = i;. std::prev_permutation(bitmask.begin(), bitmask.end());. }. return T;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:223,usability,minim,minimal,223,"Thanks @eguiraud , I will compare. And I managed to do faster main body. Fyi locally is a lot faster. Need to adapt to RVec and will compare against master, and compare against only having precomputed sizes. Fyi this is my minimal version for new body:. ```C++. std::vector<std::vector<size_t>> combinations (const int s, const int n){. const size_t C = [=] {. size_t inners = s - n + 1;. for (size_t m = s - n + 2; m <= s; ++m). inners *= m;. size_t factn = 1;. for (size_t i = 2; i <= n; ++i). factn *= i;. inners /= factn;. return inners;. }();. std::vector<std::vector<size_t>> T (n, std::vector<size_t>(C));. std::vector<bool> bitmask(s);. for (size_t i = 0; i < n; ++i). bitmask[i] = true;. for (size_t j = 0; j < C; ++j) {. for (size_t i = 0, ind = 0; i < s; ++i). if (bitmask[i]). T[ind++][j] = i;. std::prev_permutation(bitmask.begin(), bitmask.end());. }. return T;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:11,energy efficiency,current,current,11,Rebased on current master and fixed the formatting issue that Philippe pointed out.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:40,interoperability,format,formatting,40,Rebased on current master and fixed the formatting issue that Philippe pointed out.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9380:2000,availability,operat,operator,2000,"ter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2058,availability,operat,operator,2058,"reter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3236,availability,operat,operator,3236,"ng FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3294,availability,operat,operator,3294,"am(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*Sk",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:16,deployability,patch,patch,16,"Just to have my patch fixing other things serialized:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. index 93a48f3..18c7029 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. @@ -34,6 +34,8 @@. . #include <iostream>. . +#include ""llvm/Support/Debug.h"". +. using namespace llvm;. . namespace cling {. @@ -112,6 +114,8 @@ IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine& /*diags*/,. : m_Diags(diags). #endif. {. + //llvm::DebugFlag = true;. + //setCurrentDebugType(""dyld"");. . // MSVC doesn't support m_AtExitFuncsSpinLock=ATOMIC_FLAG_INIT; in the class definition. std::atomic_flag_clear( &m_AtExitFuncsSpinLock );. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index e20543b..668bf0b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2017,deployability,Modul,Module,2017,"IT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2407,deployability,Modul,ModuleStream,2407,"ayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2469,deployability,Modul,ModuleStream,2469,"ib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3253,deployability,Modul,Module,3253,"{. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new Lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4957,deployability,Instal,Install,4957,"rc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initialization for Objective-C context sensitive keywords recognition. // Referenced in Parser::ParseObjCTypeQualifierList. if (getLangOpts().ObjC) {. @@ -535,10 +536,12 @@ void Parser::Initialize() {. Ident_module = PP.getIdentifierInfo(""module"");. }. . + if (!IsTemporary) {. Actions.Initialize();. . // Prime the lexer look-ahead. ConsumeToken();. + }. }. . void Parser::LateTemplateParserCleanupCallback(void *P) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5412,deployability,modul,module,5412,"rc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initialization for Objective-C context sensitive keywords recognition. // Referenced in Parser::ParseObjCTypeQualifierList. if (getLangOpts().ObjC) {. @@ -535,10 +536,12 @@ void Parser::Initialize() {. Ident_module = PP.getIdentifierInfo(""module"");. }. . + if (!IsTemporary) {. Actions.Initialize();. . // Prime the lexer look-ahead. ConsumeToken();. + }. }. . void Parser::LateTemplateParserCleanupCallback(void *P) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4975,energy efficiency,current,current,4975,"rc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initialization for Objective-C context sensitive keywords recognition. // Referenced in Parser::ParseObjCTypeQualifierList. if (getLangOpts().ObjC) {. @@ -535,10 +536,12 @@ void Parser::Initialize() {. Ident_module = PP.getIdentifierInfo(""module"");. }. . + if (!IsTemporary) {. Actions.Initialize();. . // Prime the lexer look-ahead. ConsumeToken();. + }. }. . void Parser::LateTemplateParserCleanupCallback(void *P) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1816,integrability,pub,public,1816," --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index e20543b..668bf0b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1854,integrability,pub,public,1854,"eter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index e20543b..668bf0b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2890,integrability,pub,public,2890,"tMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3052,integrability,pub,public,3052,"r::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3090,integrability,pub,public,3090," ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4933,integrability,translat,translation,4933,"rc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initialization for Objective-C context sensitive keywords recognition. // Referenced in Parser::ParseObjCTypeQualifierList. if (getLangOpts().ObjC) {. @@ -535,10 +536,12 @@ void Parser::Initialize() {. Ident_module = PP.getIdentifierInfo(""module"");. }. . + if (!IsTemporary) {. Actions.Initialize();. . // Prime the lexer look-ahead. ConsumeToken();. + }. }. . void Parser::LateTemplateParserCleanupCallback(void *P) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4933,interoperability,translat,translation,4933,"rc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initialization for Objective-C context sensitive keywords recognition. // Referenced in Parser::ParseObjCTypeQualifierList. if (getLangOpts().ObjC) {. @@ -535,10 +536,12 @@ void Parser::Initialize() {. Ident_module = PP.getIdentifierInfo(""module"");. }. . + if (!IsTemporary) {. Actions.Initialize();. . // Prime the lexer look-ahead. ConsumeToken();. + }. }. . void Parser::LateTemplateParserCleanupCallback(void *P) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2017,modifiability,Modul,Module,2017,"IT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2407,modifiability,Modul,ModuleStream,2407,"ayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2469,modifiability,Modul,ModuleStream,2469,"ib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3253,modifiability,Modul,Module,3253,"{. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new Lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5412,modifiability,modul,module,5412,"rc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initialization for Objective-C context sensitive keywords recognition. // Referenced in Parser::ParseObjCTypeQualifierList. if (getLangOpts().ObjC) {. @@ -535,10 +536,12 @@ void Parser::Initialize() {. Ident_module = PP.getIdentifierInfo(""module"");. }. . + if (!IsTemporary) {. Actions.Initialize();. . // Prime the lexer look-ahead. ConsumeToken();. + }. }. . void Parser::LateTemplateParserCleanupCallback(void *P) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:550,reliability,Diagno,DiagnosticsEngine,550,"Just to have my patch fixing other things serialized:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. index 93a48f3..18c7029 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. @@ -34,6 +34,8 @@. . #include <iostream>. . +#include ""llvm/Support/Debug.h"". +. using namespace llvm;. . namespace cling {. @@ -112,6 +114,8 @@ IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine& /*diags*/,. : m_Diags(diags). #endif. {. + //llvm::DebugFlag = true;. + //setCurrentDebugType(""dyld"");. . // MSVC doesn't support m_AtExitFuncsSpinLock=ATOMIC_FLAG_INIT; in the class definition. std::atomic_flag_clear( &m_AtExitFuncsSpinLock );. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index e20543b..668bf0b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:683,reliability,doe,doesn,683,"Just to have my patch fixing other things serialized:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. index 93a48f3..18c7029 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. @@ -34,6 +34,8 @@. . #include <iostream>. . +#include ""llvm/Support/Debug.h"". +. using namespace llvm;. . namespace cling {. @@ -112,6 +114,8 @@ IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine& /*diags*/,. : m_Diags(diags). #endif. {. + //llvm::DebugFlag = true;. + //setCurrentDebugType(""dyld"");. . // MSVC doesn't support m_AtExitFuncsSpinLock=ATOMIC_FLAG_INIT; in the class definition. std::atomic_flag_clear( &m_AtExitFuncsSpinLock );. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index e20543b..668bf0b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:16,safety,patch,patch,16,"Just to have my patch fixing other things serialized:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. index 93a48f3..18c7029 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. @@ -34,6 +34,8 @@. . #include <iostream>. . +#include ""llvm/Support/Debug.h"". +. using namespace llvm;. . namespace cling {. @@ -112,6 +114,8 @@ IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine& /*diags*/,. : m_Diags(diags). #endif. {. + //llvm::DebugFlag = true;. + //setCurrentDebugType(""dyld"");. . // MSVC doesn't support m_AtExitFuncsSpinLock=ATOMIC_FLAG_INIT; in the class definition. std::atomic_flag_clear( &m_AtExitFuncsSpinLock );. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index e20543b..668bf0b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2017,safety,Modul,Module,2017,"IT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2407,safety,Modul,ModuleStream,2407,"ayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2469,safety,Modul,ModuleStream,2469,"ib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3253,safety,Modul,Module,3253,"{. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new Lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4124,safety,prevent,prevents,4124,"etMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTran",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5412,safety,modul,module,5412,"rc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initialization for Objective-C context sensitive keywords recognition. // Referenced in Parser::ParseObjCTypeQualifierList. if (getLangOpts().ObjC) {. @@ -535,10 +536,12 @@ void Parser::Initialize() {. Ident_module = PP.getIdentifierInfo(""module"");. }. . + if (!IsTemporary) {. Actions.Initialize();. . // Prime the lexer look-ahead. ConsumeToken();. + }. }. . void Parser::LateTemplateParserCleanupCallback(void *P) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:16,security,patch,patch,16,"Just to have my patch fixing other things serialized:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. index 93a48f3..18c7029 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. @@ -34,6 +34,8 @@. . #include <iostream>. . +#include ""llvm/Support/Debug.h"". +. using namespace llvm;. . namespace cling {. @@ -112,6 +114,8 @@ IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine& /*diags*/,. : m_Diags(diags). #endif. {. + //llvm::DebugFlag = true;. + //setCurrentDebugType(""dyld"");. . // MSVC doesn't support m_AtExitFuncsSpinLock=ATOMIC_FLAG_INIT; in the class definition. std::atomic_flag_clear( &m_AtExitFuncsSpinLock );. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index e20543b..668bf0b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4124,security,preven,prevents,4124,"etMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTran",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4182,security,token,token,4182,": SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initializati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:550,testability,Diagno,DiagnosticsEngine,550,"Just to have my patch fixing other things serialized:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. index 93a48f3..18c7029 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. @@ -34,6 +34,8 @@. . #include <iostream>. . +#include ""llvm/Support/Debug.h"". +. using namespace llvm;. . namespace cling {. @@ -112,6 +114,8 @@ IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine& /*diags*/,. : m_Diags(diags). #endif. {. + //llvm::DebugFlag = true;. + //setCurrentDebugType(""dyld"");. . // MSVC doesn't support m_AtExitFuncsSpinLock=ATOMIC_FLAG_INIT; in the class definition. std::atomic_flag_clear( &m_AtExitFuncsSpinLock );. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index e20543b..668bf0b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1282,testability,Simpl,SimpleCompiler,1282,"p. +++ b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. @@ -34,6 +34,8 @@. . #include <iostream>. . +#include ""llvm/Support/Debug.h"". +. using namespace llvm;. . namespace cling {. @@ -112,6 +114,8 @@ IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine& /*diags*/,. : m_Diags(diags). #endif. {. + //llvm::DebugFlag = true;. + //setCurrentDebugType(""dyld"");. . // MSVC doesn't support m_AtExitFuncsSpinLock=ATOMIC_FLAG_INIT; in the class definition. std::atomic_flag_clear( &m_AtExitFuncsSpinLock );. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index e20543b..668bf0b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream Fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1834,testability,Simpl,SimpleCompiler,1834,"ling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index e20543b..668bf0b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1951,testability,Simpl,SimpleCompiler,1951,"b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2042,testability,Simpl,SimpleCompiler,2042,"ng/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3070,testability,Simpl,SimpleCompiler,3070,"/auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3187,testability,Simpl,SimpleCompiler,3187," . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.en",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3278,testability,Simpl,SimpleCompiler,3278," FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, Sem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3600,testability,Simpl,SimpleCompiler,3600,"rt(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4945,testability,unit,unit,4945,"rc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initialization for Objective-C context sensitive keywords recognition. // Referenced in Parser::ParseObjCTypeQualifierList. if (getLangOpts().ObjC) {. @@ -535,10 +536,12 @@ void Parser::Initialize() {. Ident_module = PP.getIdentifierInfo(""module"");. }. . + if (!IsTemporary) {. Actions.Initialize();. . // Prime the lexer look-ahead. ConsumeToken();. + }. }. . void Parser::LateTemplateParserCleanupCallback(void *P) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5013,testability,assert,assert,5013,"rc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initialization for Objective-C context sensitive keywords recognition. // Referenced in Parser::ParseObjCTypeQualifierList. if (getLangOpts().ObjC) {. @@ -535,10 +536,12 @@ void Parser::Initialize() {. Ident_module = PP.getIdentifierInfo(""module"");. }. . + if (!IsTemporary) {. Actions.Initialize();. . // Prime the lexer look-ahead. ConsumeToken();. + }. }. . void Parser::LateTemplateParserCleanupCallback(void *P) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5204,testability,context,context,5204,"rc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initialization for Objective-C context sensitive keywords recognition. // Referenced in Parser::ParseObjCTypeQualifierList. if (getLangOpts().ObjC) {. @@ -535,10 +536,12 @@ void Parser::Initialize() {. Ident_module = PP.getIdentifierInfo(""module"");. }. . + if (!IsTemporary) {. Actions.Initialize();. . // Prime the lexer look-ahead. ConsumeToken();. + }. }. . void Parser::LateTemplateParserCleanupCallback(void *P) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:417,usability,Support,Support,417,"Just to have my patch fixing other things serialized:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. index 93a48f3..18c7029 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. @@ -34,6 +34,8 @@. . #include <iostream>. . +#include ""llvm/Support/Debug.h"". +. using namespace llvm;. . namespace cling {. @@ -112,6 +114,8 @@ IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine& /*diags*/,. : m_Diags(diags). #endif. {. + //llvm::DebugFlag = true;. + //setCurrentDebugType(""dyld"");. . // MSVC doesn't support m_AtExitFuncsSpinLock=ATOMIC_FLAG_INIT; in the class definition. std::atomic_flag_clear( &m_AtExitFuncsSpinLock );. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index e20543b..668bf0b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:691,usability,support,support,691,"Just to have my patch fixing other things serialized:. ```diff. diff --git a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. index 93a48f3..18c7029 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. @@ -34,6 +34,8 @@. . #include <iostream>. . +#include ""llvm/Support/Debug.h"". +. using namespace llvm;. . namespace cling {. @@ -112,6 +114,8 @@ IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine& /*diags*/,. : m_Diags(diags). #endif. {. + //llvm::DebugFlag = true;. + //setCurrentDebugType(""dyld"");. . // MSVC doesn't support m_AtExitFuncsSpinLock=ATOMIC_FLAG_INIT; in the class definition. std::atomic_flag_clear( &m_AtExitFuncsSpinLock );. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index e20543b..668bf0b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1282,usability,Simpl,SimpleCompiler,1282,"p. +++ b/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp. @@ -34,6 +34,8 @@. . #include <iostream>. . +#include ""llvm/Support/Debug.h"". +. using namespace llvm;. . namespace cling {. @@ -112,6 +114,8 @@ IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine& /*diags*/,. : m_Diags(diags). #endif. {. + //llvm::DebugFlag = true;. + //setCurrentDebugType(""dyld"");. . // MSVC doesn't support m_AtExitFuncsSpinLock=ATOMIC_FLAG_INIT; in the class definition. std::atomic_flag_clear( &m_AtExitFuncsSpinLock );. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index e20543b..668bf0b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream Fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1834,usability,Simpl,SimpleCompiler,1834,"ling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. index e20543b..668bf0b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1951,usability,Simpl,SimpleCompiler,1951,"b 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2042,usability,Simpl,SimpleCompiler,2042,"ng/lib/Interpreter/IncrementalJIT.cpp. @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,. this->m_Resolver};. },. m_NotifyObjectLoaded, NotifyFinalizedT(*this)),. - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),. + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),. m_LazyEmitLayer(m_CompileLayer) {. . m_CompileLayer.setNotifyCompiled(NCC);. diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. index df4360f..ac4c851 100644. --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h. +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h. @@ -38,6 +38,37 @@ namespace cling {. class Azog;. class IncrementalExecutor;. . + class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + //auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3070,usability,Simpl,SimpleCompiler,3070,"/auto Filename = ""output.o"";. + std::error_code EC;. + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);. + . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3187,usability,Simpl,SimpleCompiler,3187," . + static unsigned counter = 0;. + std::string FileStem;. + {. + llvm::raw_string_ostream FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.en",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3278,usability,Simpl,SimpleCompiler,3278," FileStemStream(FileStem);. + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;. + }. + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);. + ModuleStream << M;. + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);. + ObjectStream.write(R->getBufferStart(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, Sem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3600,usability,Simpl,SimpleCompiler,3600,"rt(), R->getBufferSize());. +. +/* if (R) {. + M.dump();. + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());. + printf(""MemBuf '%s'\n"", R->getBuffer().data());. + // dump M and object file *R here. + }*/. + return R;. + }. + };. +. class IncrementalJIT {. public:. using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;. @@ -131,9 +162,24 @@ private:. SymbolMapT& m_SymbolMap;. };. . +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {. + public:. + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr). + : SimpleCompiler(TM, ObjCache) {}. + CompileResult operator()(llvm::Module &M) {. + auto R = SimpleCompiler::operator()(M);. + if (R) {. + M.dump();. + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());. + // dump M and object file *R here. + }. + return R;. + }. + };*/. +. typedef RemovableObjectLinkingLayer ObjectLayerT;. typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,. - llvm::orc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4599,usability,tool,tools,4599,"rc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initialization for Objective-C context sensitive keywords recognition. // Referenced in Parser::ParseObjCTypeQualifierList. if (getLangOpts().ObjC) {. @@ -535,10 +536,12 @@ void Parser::Initialize() {. Ident_module = PP.getIdentifierInfo(""module"");. }. . + if (!IsTemporary) {. Actions.Initialize();. . // Prime the lexer look-ahead. ConsumeToken();. + }. }. . void Parser::LateTemplateParserCleanupCallback(void *P) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4655,usability,tool,tools,4655,"rc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initialization for Objective-C context sensitive keywords recognition. // Referenced in Parser::ParseObjCTypeQualifierList. if (getLangOpts().ObjC) {. @@ -535,10 +536,12 @@ void Parser::Initialize() {. Ident_module = PP.getIdentifierInfo(""module"");. }. . + if (!IsTemporary) {. Actions.Initialize();. . // Prime the lexer look-ahead. ConsumeToken();. + }. }. . void Parser::LateTemplateParserCleanupCallback(void *P) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4747,usability,tool,tools,4747,"rc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initialization for Objective-C context sensitive keywords recognition. // Referenced in Parser::ParseObjCTypeQualifierList. if (getLangOpts().ObjC) {. @@ -535,10 +536,12 @@ void Parser::Initialize() {. Ident_module = PP.getIdentifierInfo(""module"");. }. . + if (!IsTemporary) {. Actions.Initialize();. . // Prime the lexer look-ahead. ConsumeToken();. + }. }. . void Parser::LateTemplateParserCleanupCallback(void *P) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4808,usability,tool,tools,4808,"rc::SimpleCompiler> CompileLayerT;. + MySimpleCompiler> CompileLayerT;. typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;. . std::unique_ptr<llvm::TargetMachine> m_TM;. diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp. index 544d946..d10eaea 100644. --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp. +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp. @@ -251,10 +251,9 @@ namespace cling {. // Enable incremental processing, which prevents the preprocessor destroying. // the lexer on EOF token. PP.enableIncrementalProcessing();. -. - m_LookupHelper.reset(new LookupHelper(new Parser(PP, SemaRef,. - /*SkipFunctionBodies*/false,. - /*isTemp*/true), this));. + Parser* TempParser = new Parser(PP, SemaRef,/*SkipFunctionBodies*/false,/*isTemp*/true);. + TempParser->Initialize();. + m_LookupHelper.reset(new LookupHelper(TempParser, this));. if (!m_LookupHelper). return;. diff --git a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. index f3d7ec8..bbb2c21 100644. --- a/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp. @@ -452,10 +452,11 @@ Parser::~Parser() {. ///. void Parser::Initialize() {. // Create the translation unit scope. Install it as the current scope. + if (!IsTemporary) {. assert(getCurScope() == nullptr && ""A scope is already active?"");. EnterScope(Scope::DeclScope);. Actions.ActOnTranslationUnitScope(getCurScope());. -. + }. // Initialization for Objective-C context sensitive keywords recognition. // Referenced in Parser::ParseObjCTypeQualifierList. if (getLangOpts().ObjC) {. @@ -535,10 +536,12 @@ void Parser::Initialize() {. Ident_module = PP.getIdentifierInfo(""module"");. }. . + if (!IsTemporary) {. Actions.Initialize();. . // Prime the lexer look-ahead. ConsumeToken();. + }. }. . void Parser::LateTemplateParserCleanupCallback(void *P) {. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:205,deployability,fail,failed,205,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:215,deployability,build,build,215,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:270,deployability,artifact,artifacts,270,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:293,deployability,integr,integration,293,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:371,deployability,log,log,371,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:293,integrability,integr,integration,293,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:293,interoperability,integr,integration,293,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:293,modifiability,integr,integration,293,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:205,reliability,fail,failed,205,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:293,reliability,integr,integration,293,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:19,safety,test,testing,19,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:371,safety,log,log,371,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:293,security,integr,integration,293,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:371,security,log,log,371,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:19,testability,test,testing,19,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:293,testability,integr,integration,293,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:371,testability,log,log,371,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le . https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:70,deployability,log,log,70,"@smuzaffar, the jenkins link does not open for me. Can you attach the log here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:29,reliability,doe,does,29,"@smuzaffar, the jenkins link does not open for me. Can you attach the log here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:70,safety,log,log,70,"@smuzaffar, the jenkins link does not open for me. Can you attach the log here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:70,security,log,log,70,"@smuzaffar, the jenkins link does not open for me. Can you attach the log here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:70,testability,log,log,70,"@smuzaffar, the jenkins link does not open for me. Can you attach the log here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:72,deployability,log,log,72,"> @smuzaffar, the jenkins link does not open for me. Can you attach the log here. The build works for me -- `cmsbuild@ibmminsky-1:/scratch/cmsbuild/vvasilev/rootobj`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:86,deployability,build,build,86,"> @smuzaffar, the jenkins link does not open for me. Can you attach the log here. The build works for me -- `cmsbuild@ibmminsky-1:/scratch/cmsbuild/vvasilev/rootobj`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:31,reliability,doe,does,31,"> @smuzaffar, the jenkins link does not open for me. Can you attach the log here. The build works for me -- `cmsbuild@ibmminsky-1:/scratch/cmsbuild/vvasilev/rootobj`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:72,safety,log,log,72,"> @smuzaffar, the jenkins link does not open for me. Can you attach the log here. The build works for me -- `cmsbuild@ibmminsky-1:/scratch/cmsbuild/vvasilev/rootobj`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:72,security,log,log,72,"> @smuzaffar, the jenkins link does not open for me. Can you attach the log here. The build works for me -- `cmsbuild@ibmminsky-1:/scratch/cmsbuild/vvasilev/rootobj`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:72,testability,log,log,72,"> @smuzaffar, the jenkins link does not open for me. Can you attach the log here. The build works for me -- `cmsbuild@ibmminsky-1:/scratch/cmsbuild/vvasilev/rootobj`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:20,deployability,build,build,20,@vgvassilev did you build root master or root v6.24 plus your change and fb3367f ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:91,availability,fault,faults,91,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:121,availability,error,error,121,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5879,availability,fault,fault,5879,9c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11398,availability,error,error,11398,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:62,deployability,log,logs,62,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:71,deployability,fail,fails,71,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:203,deployability,BUILD,BUILD,203,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:277,deployability,build,build,277,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:379,deployability,BUILD,BUILD,379,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:453,deployability,build,build,453,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5625,deployability,BUILD,BUILD,5625,02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5699,deployability,build,build,5699,dDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5982,deployability,BUILD,BUILD,5982,z2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.4,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6056,deployability,build,build,6056,_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11228,deployability,BUILD,BUILD,11228,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11302,deployability,build,build,11302,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11364,deployability,build,build,11364,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11390,deployability,fail,failed,11390,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11514,deployability,build,build,11514,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:91,energy efficiency,fault,faults,91,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5879,energy efficiency,fault,fault,5879,9c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5886,energy efficiency,core,core,5886,b:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11379,integrability,sub,subcommand,11379,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:91,performance,fault,faults,91,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:121,performance,error,error,121,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5879,performance,fault,fault,5879,9c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11398,performance,error,error,11398,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:71,reliability,fail,fails,71,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:91,reliability,fault,faults,91,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5879,reliability,fault,fault,5879,9c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11390,reliability,fail,failed,11390,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:62,safety,log,logs,62,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:91,safety,fault,faults,91,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:121,safety,error,error,121,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:184,safety,test,tests,184,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:190,safety,test,testBuildDir,190,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:360,safety,test,tests,360,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:366,safety,test,testBuildDir,366,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:511,safety,test,tests,511,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:517,safety,test,testBuildDir,517,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:656,safety,test,tests,656,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:662,safety,test,testBuildDir,662,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:804,safety,test,tests,804,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:810,safety,test,testBuildDir,810,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:950,safety,test,tests,950,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:956,safety,test,testBuildDir,956,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1094,safety,test,tests,1094,) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1100,safety,test,testBuildDir,1100,end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1208,safety,test,tests,1208,c7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1214,safety,test,testBuildDir,1214,e_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1328,safety,test,tests,1328,enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1334,safety,test,testBuildDir,1334,workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1439,safety,test,tests,1439,7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1445,safety,test,testBuildDir,1445,3/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe596514,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1578,safety,test,tests,1578,c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1584,safety,test,testBuildDir,1584,36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1689,safety,test,tests,1689,/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1695,safety,test,testBuildDir,1695,/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1830,safety,test,tests,1830,le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1836,safety,test,testBuildDir,1836,xternal/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenki,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1973,safety,test,tests,1973,c64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/w,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1979,safety,test,testBuildDir,1979,9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2100,safety,test,tests,2100,tBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2106,safety,test,testBuildDir,2106,/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2212,safety,test,tests,2212,estBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2218,safety,test,testBuildDir,2218,ir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d844,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2362,safety,test,tests,2362,external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2368,safety,test,testBuildDir,2368,dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/je,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2509,safety,test,tests,2509,dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2515,safety,test,testBuildDir,2515,bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2630,safety,test,tests,2630,2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2636,safety,test,testBuildDir,2636,scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenki,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2751,safety,test,tests,2751,fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenk,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2757,safety,test,testBuildDir,2757,1b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/wor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2867,safety,test,tests,2867,ernal/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2873,safety,test,testBuildDir,2873,w3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2995,safety,test,tests,2995,pc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3001,safety,test,testBuildDir,3001,c9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3136,safety,test,tests,3136,ternal/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3142,safety,test,testBuildDir,3142,bpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3279,safety,test,tests,3279,c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3285,safety,test,testBuildDir,3285,05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3402,safety,test,tests,3402,al/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3408,safety,test,testBuildDir,3408,AS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3522,safety,test,tests,3522,ir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3528,safety,test,testBuildDir,3528,pc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3667,safety,test,tests,3667,ernal/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/wo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3673,safety,test,testBuildDir,3673,-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3780,safety,test,tests,3780,gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3786,safety,test,testBuildDir,3786,rnal/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3890,safety,test,tests,3890,c64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/sc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3896,safety,test,testBuildDir,3896,9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cms,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4002,safety,test,tests,4002,BuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4008,safety,test,testBuildDir,4008,slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4114,safety,test,tests,4114,orkspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4120,safety,test,testBuildDir,4120,ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/externa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4259,safety,test,tests,4259,kspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4265,safety,test,testBuildDir,4265,-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4405,safety,test,tests,4405,testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsb,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4411,safety,test,testBuildDir,4411,Dir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenk,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4546,safety,test,tests,4546,64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4552,safety,test,testBuildDir,4552,/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4688,safety,test,tests,4688,ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c773,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4694,safety,test,testBuildDir,4694,cc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4795,safety,test,tests,4795,/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 sup,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4801,safety,test,testBuildDir,4801,64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4938,safety,test,tests,4938,n3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4944,safety,test,testBuildDir,4944,lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5082,safety,test,tests,5082,enkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/j,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5088,safety,test,testBuildDir,5088,workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5225,safety,test,tests,5225,/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5231,safety,test,testBuildDir,5231,a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5335,safety,test,tests,5335,0ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5341,safety,test,testBuildDir,5341,523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5443,safety,test,tests,5443,rnal/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/ex,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5449,safety,test,testBuildDir,5449,/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5606,safety,test,tests,5606,ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5612,safety,test,testBuildDir,5612,88bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af7,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5879,safety,fault,fault,5879,9c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5963,safety,test,tests,5963,4le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5969,safety,test,testBuildDir,5969,external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/externa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6114,safety,test,tests,6114,9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6120,safety,test,testBuildDir,6120,l/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6259,safety,test,tests,6259,external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6265,safety,test,testBuildDir,6265,gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6407,safety,test,tests,6407,ld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6413,safety,test,testBuildDir,6413,s_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/worksp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6553,safety,test,tests,6553,0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6559,safety,test,testBuildDir,6559,h/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6697,safety,test,tests,6697,uild/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6703,safety,test,testBuildDir,6703,root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6811,safety,test,tests,6811,get! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6817,safety,test,testBuildDir,6817,essing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6931,safety,test,tests,6931,enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6937,safety,test,testBuildDir,6937,workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7042,safety,test,tests,7042,7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7048,safety,test,testBuildDir,7048,3/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe596514,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7181,safety,test,tests,7181,c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7187,safety,test,testBuildDir,7187,36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7292,safety,test,tests,7292,/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7298,safety,test,testBuildDir,7298,/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7433,safety,test,tests,7433,le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7439,safety,test,testBuildDir,7439,xternal/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenki,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7576,safety,test,tests,7576,c64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/w,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7582,safety,test,testBuildDir,7582,9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7703,safety,test,tests,7703,tBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7709,safety,test,testBuildDir,7709,/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7815,safety,test,tests,7815,estBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7821,safety,test,testBuildDir,7821,ir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d844,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7965,safety,test,tests,7965,external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7971,safety,test,testBuildDir,7971,dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/je,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8112,safety,test,tests,8112,dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8118,safety,test,testBuildDir,8118,bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8233,safety,test,tests,8233,2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8239,safety,test,testBuildDir,8239,scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenki,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8354,safety,test,tests,8354,fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenk,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8360,safety,test,testBuildDir,8360,1b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/wor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8470,safety,test,tests,8470,ernal/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8476,safety,test,testBuildDir,8476,w3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8598,safety,test,tests,8598,pc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8604,safety,test,testBuildDir,8604,c9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8739,safety,test,tests,8739,ternal/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8745,safety,test,testBuildDir,8745,bpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8882,safety,test,tests,8882,c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8888,safety,test,testBuildDir,8888,05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9005,safety,test,tests,9005,al/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9011,safety,test,testBuildDir,9011,AS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9125,safety,test,tests,9125,ir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9131,safety,test,testBuildDir,9131,pc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9270,safety,test,tests,9270,ernal/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/wo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9276,safety,test,testBuildDir,9276,-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9383,safety,test,tests,9383,gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9389,safety,test,testBuildDir,9389,rnal/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9493,safety,test,tests,9493,c64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/sc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9499,safety,test,testBuildDir,9499,9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cms,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9605,safety,test,tests,9605,BuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9611,safety,test,testBuildDir,9611,slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9717,safety,test,tests,9717,orkspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9723,safety,test,testBuildDir,9723,ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/externa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9862,safety,test,tests,9862,kspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9868,safety,test,testBuildDir,9868,-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10008,safety,test,tests,10008,testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsb,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10014,safety,test,testBuildDir,10014,Dir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenk,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10149,safety,test,tests,10149,64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10155,safety,test,testBuildDir,10155,/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10291,safety,test,tests,10291,ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c773,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10297,safety,test,testBuildDir,10297,cc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10398,safety,test,tests,10398,/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. err,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10404,safety,test,testBuildDir,10404,64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10541,safety,test,tests,10541,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10547,safety,test,testBuildDir,10547,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10685,safety,test,tests,10685,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10691,safety,test,testBuildDir,10691,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10828,safety,test,tests,10828,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10834,safety,test,testBuildDir,10834,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10938,safety,test,tests,10938,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10944,safety,test,testBuildDir,10944,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11046,safety,test,tests,11046,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11052,safety,test,testBuildDir,11052,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11209,safety,test,tests,11209,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11215,safety,test,testBuildDir,11215,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11398,safety,error,error,11398,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11474,safety,test,tests,11474,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11480,safety,test,testBuildDir,11480,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:51,security,access,access,51,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:62,security,log,logs,62,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:62,testability,log,logs,62,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:184,testability,test,tests,184,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:190,testability,test,testBuildDir,190,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:360,testability,test,tests,360,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:366,testability,test,testBuildDir,366,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:511,testability,test,tests,511,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:517,testability,test,testBuildDir,517,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:656,testability,test,tests,656,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:662,testability,test,testBuildDir,662,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:804,testability,test,tests,804,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:810,testability,test,testBuildDir,810,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:950,testability,test,tests,950,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:956,testability,test,testBuildDir,956,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1094,testability,test,tests,1094,) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1100,testability,test,testBuildDir,1100,end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1208,testability,test,tests,1208,c7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1214,testability,test,testBuildDir,1214,e_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1328,testability,test,tests,1328,enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1334,testability,test,testBuildDir,1334,workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1439,testability,test,tests,1439,7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1445,testability,test,testBuildDir,1445,3/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe596514,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1578,testability,test,tests,1578,c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1584,testability,test,testBuildDir,1584,36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1689,testability,test,tests,1689,/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1695,testability,test,testBuildDir,1695,/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1830,testability,test,tests,1830,le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1836,testability,test,testBuildDir,1836,xternal/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenki,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1973,testability,test,tests,1973,c64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/w,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:1979,testability,test,testBuildDir,1979,9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2100,testability,test,tests,2100,tBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2106,testability,test,testBuildDir,2106,/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2212,testability,test,tests,2212,estBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2218,testability,test,testBuildDir,2218,ir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d844,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2362,testability,test,tests,2362,external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2368,testability,test,testBuildDir,2368,dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/je,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2509,testability,test,tests,2509,dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2515,testability,test,testBuildDir,2515,bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2630,testability,test,tests,2630,2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2636,testability,test,testBuildDir,2636,scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenki,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2751,testability,test,tests,2751,fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenk,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2757,testability,test,testBuildDir,2757,1b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/wor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2867,testability,test,tests,2867,ernal/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2873,testability,test,testBuildDir,2873,w3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:2995,testability,test,tests,2995,pc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3001,testability,test,testBuildDir,3001,c9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3136,testability,test,tests,3136,ternal/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3142,testability,test,testBuildDir,3142,bpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3279,testability,test,tests,3279,c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3285,testability,test,testBuildDir,3285,05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3402,testability,test,tests,3402,al/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3408,testability,test,testBuildDir,3408,AS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3522,testability,test,tests,3522,ir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3528,testability,test,testBuildDir,3528,pc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3667,testability,test,tests,3667,ernal/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/wo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3673,testability,test,testBuildDir,3673,-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3780,testability,test,tests,3780,gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3786,testability,test,testBuildDir,3786,rnal/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3890,testability,test,tests,3890,c64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/sc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:3896,testability,test,testBuildDir,3896,9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cms,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4002,testability,test,tests,4002,BuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4008,testability,test,testBuildDir,4008,slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4114,testability,test,tests,4114,orkspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4120,testability,test,testBuildDir,4120,ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/externa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4259,testability,test,tests,4259,kspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4265,testability,test,testBuildDir,4265,-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4405,testability,test,tests,4405,testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsb,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4411,testability,test,testBuildDir,4411,Dir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenk,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4546,testability,test,tests,4546,64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4552,testability,test,testBuildDir,4552,/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4688,testability,test,tests,4688,ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c773,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4694,testability,test,testBuildDir,4694,cc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4795,testability,test,tests,4795,/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 sup,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4801,testability,test,testBuildDir,4801,64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4938,testability,test,tests,4938,n3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:4944,testability,test,testBuildDir,4944,lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5082,testability,test,tests,5082,enkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/j,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5088,testability,test,testBuildDir,5088,workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5225,testability,test,tests,5225,/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5231,testability,test,testBuildDir,5231,a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5335,testability,test,tests,5335,0ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5341,testability,test,testBuildDir,5341,523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5443,testability,test,tests,5443,rnal/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/ex,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5449,testability,test,testBuildDir,5449,/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5606,testability,test,tests,5606,ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5612,testability,test,testBuildDir,5612,88bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af7,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5963,testability,test,tests,5963,4le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5969,testability,test,testBuildDir,5969,external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/externa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6114,testability,test,tests,6114,9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6120,testability,test,testBuildDir,6120,l/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6259,testability,test,tests,6259,external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6265,testability,test,testBuildDir,6265,gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6407,testability,test,tests,6407,ld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6413,testability,test,testBuildDir,6413,s_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/worksp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6553,testability,test,tests,6553,0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6559,testability,test,testBuildDir,6559,h/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6697,testability,test,tests,6697,uild/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6703,testability,test,testBuildDir,6703,root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6811,testability,test,tests,6811,get! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6817,testability,test,testBuildDir,6817,essing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6931,testability,test,tests,6931,enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:6937,testability,test,testBuildDir,6937,workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7042,testability,test,tests,7042,7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7048,testability,test,testBuildDir,7048,3/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe596514,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7181,testability,test,tests,7181,c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7187,testability,test,testBuildDir,7187,36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7292,testability,test,tests,7292,/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7298,testability,test,testBuildDir,7298,/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7433,testability,test,tests,7433,le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7439,testability,test,testBuildDir,7439,xternal/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenki,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7576,testability,test,tests,7576,c64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/w,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7582,testability,test,testBuildDir,7582,9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7703,testability,test,tests,7703,tBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7709,testability,test,testBuildDir,7709,/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7815,testability,test,tests,7815,estBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7821,testability,test,testBuildDir,7821,ir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d844,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7965,testability,test,tests,7965,external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7971,testability,test,testBuildDir,7971,dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/je,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8112,testability,test,tests,8112,dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8118,testability,test,testBuildDir,8118,bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8233,testability,test,tests,8233,2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8239,testability,test,testBuildDir,8239,scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenki,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8354,testability,test,tests,8354,fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenk,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8360,testability,test,testBuildDir,8360,1b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/wor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8470,testability,test,tests,8470,ernal/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8476,testability,test,testBuildDir,8476,w3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8598,testability,test,tests,8598,pc64le_gcc9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8604,testability,test,testBuildDir,8604,c9/external/libjpeg-turbo/2.0.2-llifpc/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8739,testability,test,tests,8739,ternal/libpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8745,testability,test,testBuildDir,8745,bpng/1.6.37/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-cython/0.29.24-48208c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8882,testability,test,tests,8882,c98f1b2fb05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:8888,testability,test,testBuildDir,8888,05fdf8cf248e8e98e3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9005,testability,test,tests,9005,al/OpenBLAS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9011,testability,test,testBuildDir,9011,AS/0.3.15-365e264f5eb8c650c5abe5965142fcf5/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9125,testability,test,tests,9125,ir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9131,testability,test,testBuildDir,9131,pc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9270,testability,test,tests,9270,ernal/py3-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/wo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9276,testability,test,testBuildDir,9276,-pip/20.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9383,testability,test,tests,9383,gcc9/external/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9389,testability,test,testBuildDir,9389,rnal/zstd/1.4.5-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9493,testability,test,tests,9493,c64le_gcc9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/sc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9499,testability,test,testBuildDir,9499,9/external/py3-setuptools/51.3.3-llifpc2/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cms,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9605,testability,test,tests,9605,BuildDir/slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9611,testability,test,testBuildDir,9611,slc7_ppc64le_gcc9/external/pcre/8.43-8c1dd3674662facab9e6e3314cd61fd3/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9717,testability,test,tests,9717,orkspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9723,testability,test,testBuildDir,9723,ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/hwloc/2.4.0-f0b8cda4b8e4663ae38d34e601d8446f/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/externa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9862,testability,test,tests,9862,kspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:9868,testability,test,testBuildDir,9868,-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libpciaccess/0.16-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10008,testability,test,tests,10008,testBuildDir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsb,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10014,testability,test,testBuildDir,10014,Dir/slc7_ppc64le_gcc9/external/numactl/2.0.14-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenk,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10149,testability,test,tests,10149,64le_gcc9/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10155,testability,test,testBuildDir,10155,/external/cuda/11.4.2-0939a3504c82d9c20346029080003d72/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10291,testability,test,tests,10291,ppc64le_gcc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c773,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10297,testability,test,testBuildDir,10297,cc9/external/libxml2/2.9.10/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10398,testability,test,tests,10398,/slc7_ppc64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. err,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10404,testability,test,testBuildDir,10404,64le_gcc9/external/curl/7.70.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10541,testability,test,tests,10541,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10547,testability,test,testBuildDir,10547,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10685,testability,test,tests,10685,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10691,testability,test,testBuildDir,10691,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10828,testability,test,tests,10828,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10834,testability,test,testBuildDir,10834,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10938,testability,test,tests,10938,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:10944,testability,test,testBuildDir,10944,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11046,testability,test,tests,11046,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11052,testability,test,testBuildDir,11052,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11209,testability,test,tests,11209,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11215,testability,test,testBuildDir,11215,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11474,testability,test,tests,11474,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11480,testability,test,testBuildDir,11480,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:121,usability,error,error,121,if you have cms account then you should be able to access the logs. It fails (segmentation faults) at the end again with error. ```. cd /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/tutorials && LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:5795,usability,support,support,5795,s/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Disabling gnu++: clang has no __float128 support on this target! Processing hsimple.C... /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11370,usability,stop,stopped,11370,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11398,usability,error,error,11398,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:11414,usability,statu,status,11414,gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/python3/3.9.6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/sqlite/3.22.0-c4c906c1e57bb9a584d7364f66307a71/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libffi/3.2.1-e67e3e5be269ebb6de560ac98fe20523/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gdbm/1.10-1b1e7fda812e8b0cd77e389a2d1cf51e/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/db6/6.2.32-8cfa28ff7d3e78188bfcc23fc02c71c6/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xz/5.2.4/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/expat/2.1.0-b174473c0445cc260267c9e4e44719c1/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/bz2lib/1.0.6-acf2897cb2b9727bfbf932c11cc72bf7/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/zlib/1.2.11-99271b1d98da3981abdd2087fe66ac21/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gcc/9.3.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/rpm/4.13.0.1/lib:/.singularity.d/libs ROOTIGNOREPREFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return. ninja: build stopped: subcommand failed. error: Bad exit status from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.nG29NO (%build). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:22,deployability,build,build,22,"> @vgvassilev did you build root master or root v6.24 plus your change and [fb3367f](https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed) ? @smuzaffar, I am on v6-24-00-patches with the patches you mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:202,deployability,patch,patches,202,"> @vgvassilev did you build root master or root v6.24 plus your change and [fb3367f](https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed) ? @smuzaffar, I am on v6-24-00-patches with the patches you mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:219,deployability,patch,patches,219,"> @vgvassilev did you build root master or root v6.24 plus your change and [fb3367f](https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed) ? @smuzaffar, I am on v6-24-00-patches with the patches you mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:202,safety,patch,patches,202,"> @vgvassilev did you build root master or root v6.24 plus your change and [fb3367f](https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed) ? @smuzaffar, I am on v6-24-00-patches with the patches you mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:219,safety,patch,patches,219,"> @vgvassilev did you build root master or root v6.24 plus your change and [fb3367f](https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed) ? @smuzaffar, I am on v6-24-00-patches with the patches you mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:202,security,patch,patches,202,"> @vgvassilev did you build root master or root v6.24 plus your change and [fb3367f](https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed) ? @smuzaffar, I am on v6-24-00-patches with the patches you mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:219,security,patch,patches,219,"> @vgvassilev did you build root master or root v6.24 plus your change and [fb3367f](https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed) ? @smuzaffar, I am on v6-24-00-patches with the patches you mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:39,safety,test,tested,39,"@vgvassilev , this looks good ( I have tested it here https://github.com/cms-sw/cmsdist/pull/7445 ) . Can you please back port it to v6.24 branch too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:39,testability,test,tested,39,"@vgvassilev , this looks good ( I have tested it here https://github.com/cms-sw/cmsdist/pull/7445 ) . Can you please back port it to v6.24 branch too?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/issues/9381:23,deployability,build,builds,23,Thanks @guitargeek our builds are fine again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9383:187,availability,restor,restored,187,"Hi, this is because the default unit was changed at the time to Geant4 units, which produced this changed behavior. Since v6-25-01 the default behavior of having by default CGS units was restored. In v6-24 you can try:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. ```. before creating any material.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:56,performance,time,time,56,"Hi, this is because the default unit was changed at the time to Geant4 units, which produced this changed behavior. Since v6-25-01 the default behavior of having by default CGS units was restored. In v6-24 you can try:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. ```. before creating any material.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:238,performance,Lock,LockDefaultUnits,238,"Hi, this is because the default unit was changed at the time to Geant4 units, which produced this changed behavior. Since v6-25-01 the default behavior of having by default CGS units was restored. In v6-24 you can try:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. ```. before creating any material.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:187,reliability,restor,restored,187,"Hi, this is because the default unit was changed at the time to Geant4 units, which produced this changed behavior. Since v6-25-01 the default behavior of having by default CGS units was restored. In v6-24 you can try:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. ```. before creating any material.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:238,security,Lock,LockDefaultUnits,238,"Hi, this is because the default unit was changed at the time to Geant4 units, which produced this changed behavior. Since v6-25-01 the default behavior of having by default CGS units was restored. In v6-24 you can try:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. ```. before creating any material.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:32,testability,unit,unit,32,"Hi, this is because the default unit was changed at the time to Geant4 units, which produced this changed behavior. Since v6-25-01 the default behavior of having by default CGS units was restored. In v6-24 you can try:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. ```. before creating any material.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:71,testability,unit,units,71,"Hi, this is because the default unit was changed at the time to Geant4 units, which produced this changed behavior. Since v6-25-01 the default behavior of having by default CGS units was restored. In v6-24 you can try:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. ```. before creating any material.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:177,testability,unit,units,177,"Hi, this is because the default unit was changed at the time to Geant4 units, which produced this changed behavior. Since v6-25-01 the default behavior of having by default CGS units was restored. In v6-24 you can try:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. ```. before creating any material.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:106,usability,behavi,behavior,106,"Hi, this is because the default unit was changed at the time to Geant4 units, which produced this changed behavior. Since v6-25-01 the default behavior of having by default CGS units was restored. In v6-24 you can try:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. ```. before creating any material.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:143,usability,behavi,behavior,143,"Hi, this is because the default unit was changed at the time to Geant4 units, which produced this changed behavior. Since v6-25-01 the default behavior of having by default CGS units was restored. In v6-24 you can try:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. ```. before creating any material.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:167,availability,consist,consistently,167,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:192,deployability,version,versions,192,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:314,deployability,version,version,314,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:495,deployability,version,version,495,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:192,integrability,version,versions,192,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:314,integrability,version,version,314,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:495,integrability,version,version,495,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:192,modifiability,version,versions,192,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:314,modifiability,version,version,314,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:495,modifiability,version,version,495,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:455,performance,Lock,LockDefaultUnits,455,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:635,performance,Lock,LockDefaultUnits,635,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:455,security,Lock,LockDefaultUnits,455,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:635,security,Lock,LockDefaultUnits,635,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:331,testability,unit,unit,331,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:516,testability,unit,units,516,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:557,testability,unit,units,557,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:167,usability,consist,consistently,167,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:322,usability,support,supports,322,"@agheata Many thanks, indeed, that fixes it! . So I think (for future reference), to get into a situation which can be used in an analysis framework which should work consistently across ROOT versions >= 6.00.00 to 6.25.00 and beyond, I have to use:. ```cpp. #if ROOT_VERSION_CODE > ROOT_VERSION(6,19,02). // ROOT version supports unit switching, forcing usage of kRootUnits. if (TGeoManager::GetDefaultUnits() != TGeoManager::kRootUnits) {. TGeoManager::LockDefaultUnits(false);. /// This ROOT version uses TGeant4 units by default, switching back to ROOT units... TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. }. #endif. // Create your TGeoManager here... ```. Correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:64,deployability,version,versions,64,"@olifre yes this looks to behave correctly also for more recent versions, where the lines will have no effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:64,integrability,version,versions,64,"@olifre yes this looks to behave correctly also for more recent versions, where the lines will have no effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:64,modifiability,version,versions,64,"@olifre yes this looks to behave correctly also for more recent versions, where the lines will have no effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:175,deployability,releas,release,175,"@agheata Thanks for the confirmation! . Since this is a rather breaking change in defaults which has cost one of us over a week to identify, I wonder whether a warning in the release notes would be possible. Checking at:. https://root.cern/doc/v620/release-notes.html. I don't find any warning that the units were changed in that release. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:249,deployability,releas,release-notes,249,"@agheata Thanks for the confirmation! . Since this is a rather breaking change in defaults which has cost one of us over a week to identify, I wonder whether a warning in the release notes would be possible. Checking at:. https://root.cern/doc/v620/release-notes.html. I don't find any warning that the units were changed in that release. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:330,deployability,releas,release,330,"@agheata Thanks for the confirmation! . Since this is a rather breaking change in defaults which has cost one of us over a week to identify, I wonder whether a warning in the release notes would be possible. Checking at:. https://root.cern/doc/v620/release-notes.html. I don't find any warning that the units were changed in that release. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:131,security,ident,identify,131,"@agheata Thanks for the confirmation! . Since this is a rather breaking change in defaults which has cost one of us over a week to identify, I wonder whether a warning in the release notes would be possible. Checking at:. https://root.cern/doc/v620/release-notes.html. I don't find any warning that the units were changed in that release. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:303,testability,unit,units,303,"@agheata Thanks for the confirmation! . Since this is a rather breaking change in defaults which has cost one of us over a week to identify, I wonder whether a warning in the release notes would be possible. Checking at:. https://root.cern/doc/v620/release-notes.html. I don't find any warning that the units were changed in that release. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:24,usability,confirm,confirmation,24,"@agheata Thanks for the confirmation! . Since this is a rather breaking change in defaults which has cost one of us over a week to identify, I wonder whether a warning in the release notes would be possible. Checking at:. https://root.cern/doc/v620/release-notes.html. I don't find any warning that the units were changed in that release. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:59,deployability,releas,release,59,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:177,deployability,releas,release,177,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:280,deployability,version,versions,280,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:280,integrability,version,versions,280,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:339,interoperability,incompatib,incompatibility,339,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:280,modifiability,version,versions,280,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:132,performance,time,time,132,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:36,reliability,doe,does,36,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:105,safety,avoid,avoid,105,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:380,usability,guid,guide,380,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:491,usability,user,users,491,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:529,usability,behavi,behaviour,529,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:271,energy efficiency,energ,energy,271,"@agheata That sounds like a reasonable location to add the documentation :-). I also talked to the user on our end who invested a signficant time to find the issue, and while of course the actual place to look for was unclear for most of the time (since he just saw that energy loss calculation in reconstruction had changed, but did not see why), [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) then finally would have been the place he looked at. . So I think this is the most visible location indeed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:141,performance,time,time,141,"@agheata That sounds like a reasonable location to add the documentation :-). I also talked to the user on our end who invested a signficant time to find the issue, and while of course the actual place to look for was unclear for most of the time (since he just saw that energy loss calculation in reconstruction had changed, but did not see why), [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) then finally would have been the place he looked at. . So I think this is the most visible location indeed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:242,performance,time,time,242,"@agheata That sounds like a reasonable location to add the documentation :-). I also talked to the user on our end who invested a signficant time to find the issue, and while of course the actual place to look for was unclear for most of the time (since he just saw that energy loss calculation in reconstruction had changed, but did not see why), [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) then finally would have been the place he looked at. . So I think this is the most visible location indeed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:130,security,sign,signficant,130,"@agheata That sounds like a reasonable location to add the documentation :-). I also talked to the user on our end who invested a signficant time to find the issue, and while of course the actual place to look for was unclear for most of the time (since he just saw that energy loss calculation in reconstruction had changed, but did not see why), [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) then finally would have been the place he looked at. . So I think this is the most visible location indeed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:278,security,loss,loss,278,"@agheata That sounds like a reasonable location to add the documentation :-). I also talked to the user on our end who invested a signficant time to find the issue, and while of course the actual place to look for was unclear for most of the time (since he just saw that energy loss calculation in reconstruction had changed, but did not see why), [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) then finally would have been the place he looked at. . So I think this is the most visible location indeed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:59,usability,document,documentation,59,"@agheata That sounds like a reasonable location to add the documentation :-). I also talked to the user on our end who invested a signficant time to find the issue, and while of course the actual place to look for was unclear for most of the time (since he just saw that energy loss calculation in reconstruction had changed, but did not see why), [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) then finally would have been the place he looked at. . So I think this is the most visible location indeed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:99,usability,user,user,99,"@agheata That sounds like a reasonable location to add the documentation :-). I also talked to the user on our end who invested a signficant time to find the issue, and while of course the actual place to look for was unclear for most of the time (since he just saw that energy loss calculation in reconstruction had changed, but did not see why), [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) then finally would have been the place he looked at. . So I think this is the most visible location indeed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:154,deployability,version,version,154,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:656,deployability,log,logic,656,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:32,integrability,discover,discovered,32,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:92,integrability,interfac,interface,92,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:154,integrability,version,version,154,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:252,integrability,interfac,interface,252,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:32,interoperability,discover,discovered,32,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:92,interoperability,interfac,interface,92,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:252,interoperability,interfac,interface,252,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:92,modifiability,interfac,interface,92,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:154,modifiability,version,version,154,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:252,modifiability,interfac,interface,252,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:523,performance,Lock,LockDefaultUnits,523,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:618,performance,Lock,LockDefaultUnits,618,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:656,safety,log,logic,656,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:523,security,Lock,LockDefaultUnits,523,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:618,security,Lock,LockDefaultUnits,618,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:656,security,log,logic,656,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:55,testability,unit,units,55,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:178,testability,unit,units,178,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:276,testability,unit,unit,276,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:394,testability,unit,unit,394,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:656,testability,log,logic,656,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:32,usability,discov,discovered,32,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:. ```. TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);. ```. The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:. ```. TGeoManager::LockDefaultUnits(false);. TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);. TGeoManager::LockDefaultUnits(true);. ```. So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:54,testability,unit,units,54,Please correct also the formula related to the Geant4 units in TGeoMaterial::SetRadLen(...). The returned value is off by a factor of 100 (ie radlength in dm instead mm) if one uses density in g/cm^3. Cheers Andreas.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:56,testability,unit,units,56,> Please correct also the formula related to the Geant4 units in TGeoMaterial::SetRadLen(...). > The returned value is off by a factor of 100 (ie radlength in dm instead mm) if one uses density in g/cm^3. > Cheers Andreas. @MarkusFrankATcernch and @petricm can you comment on this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9389:61,deployability,build,build,61,@ferdymercury I have tried disabling roofit can successfully build now. Thanks a lot!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/pull/9390:11,deployability,build,build,11,"@phsft-bot build just on ROOT-ubuntu2004/default, ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9390
https://github.com/root-project/root/pull/9390:11,deployability,build,build,11,"@phsft-bot build just on ROOT-ubuntu2004/default, ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9390
https://github.com/root-project/root/pull/9390:11,deployability,build,build,11,"@phsft-bot build just on ROOT-ubuntu2004/default, ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9390
https://github.com/root-project/root/pull/9390:11,deployability,build,build,11,"@phsft-bot build just on ROOT-ubuntu2004/default, ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9390
https://github.com/root-project/root/pull/9390:11,deployability,build,build,11,"@phsft-bot build just on ROOT-ubuntu2004/default, ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9390
https://github.com/root-project/root/pull/9392:30,reliability,Doe,Does,30,> Good idea for python. > . > Does this work? `if (generate(...) == nullptr)`. Yes that works! You can also do these checks here:. ```C++. RooFit::Owner<int*>(nullptr) == nullptr. RooFit::Owner<int*>(new int) == nullptr. ```. Also maybe a question also to @etejedor and @Axel-Naumann: you think this is general enough to have the `Owner` in the `ROOT` namespace rather than `RooFit`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:263,deployability,log,logic,263,"Closing this PR, because this is probably not the way to solve the ownership problem. It would be better to have another approach here, with attributes on the C++ side that cppyy can understand. Either way, if we would go with a special owning pointer class, the logic suggested in this PR can better be implemented with a custom CPyCppyy executor that is declared via the public CPyCppyy API.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:389,deployability,API,API,389,"Closing this PR, because this is probably not the way to solve the ownership problem. It would be better to have another approach here, with attributes on the C++ side that cppyy can understand. Either way, if we would go with a special owning pointer class, the logic suggested in this PR can better be implemented with a custom CPyCppyy executor that is declared via the public CPyCppyy API.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:373,integrability,pub,public,373,"Closing this PR, because this is probably not the way to solve the ownership problem. It would be better to have another approach here, with attributes on the C++ side that cppyy can understand. Either way, if we would go with a special owning pointer class, the logic suggested in this PR can better be implemented with a custom CPyCppyy executor that is declared via the public CPyCppyy API.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:389,integrability,API,API,389,"Closing this PR, because this is probably not the way to solve the ownership problem. It would be better to have another approach here, with attributes on the C++ side that cppyy can understand. Either way, if we would go with a special owning pointer class, the logic suggested in this PR can better be implemented with a custom CPyCppyy executor that is declared via the public CPyCppyy API.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:389,interoperability,API,API,389,"Closing this PR, because this is probably not the way to solve the ownership problem. It would be better to have another approach here, with attributes on the C++ side that cppyy can understand. Either way, if we would go with a special owning pointer class, the logic suggested in this PR can better be implemented with a custom CPyCppyy executor that is declared via the public CPyCppyy API.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:263,safety,log,logic,263,"Closing this PR, because this is probably not the way to solve the ownership problem. It would be better to have another approach here, with attributes on the C++ side that cppyy can understand. Either way, if we would go with a special owning pointer class, the logic suggested in this PR can better be implemented with a custom CPyCppyy executor that is declared via the public CPyCppyy API.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:263,security,log,logic,263,"Closing this PR, because this is probably not the way to solve the ownership problem. It would be better to have another approach here, with attributes on the C++ side that cppyy can understand. Either way, if we would go with a special owning pointer class, the logic suggested in this PR can better be implemented with a custom CPyCppyy executor that is declared via the public CPyCppyy API.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:183,testability,understand,understand,183,"Closing this PR, because this is probably not the way to solve the ownership problem. It would be better to have another approach here, with attributes on the C++ side that cppyy can understand. Either way, if we would go with a special owning pointer class, the logic suggested in this PR can better be implemented with a custom CPyCppyy executor that is declared via the public CPyCppyy API.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:263,testability,log,logic,263,"Closing this PR, because this is probably not the way to solve the ownership problem. It would be better to have another approach here, with attributes on the C++ side that cppyy can understand. Either way, if we would go with a special owning pointer class, the logic suggested in this PR can better be implemented with a custom CPyCppyy executor that is declared via the public CPyCppyy API.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:323,usability,custom,custom,323,"Closing this PR, because this is probably not the way to solve the ownership problem. It would be better to have another approach here, with attributes on the C++ side that cppyy can understand. Either way, if we would go with a special owning pointer class, the logic suggested in this PR can better be implemented with a custom CPyCppyy executor that is declared via the public CPyCppyy API.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9393:126,safety,avoid,avoid,126,"Hi Andrei. It looks ok for me. Note that I did a spell check and found a typo on line 586. It is written ""avaoid"" instead of ""avoid"". May be you can add this little fix to this PR ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9393
https://github.com/root-project/root/pull/9393:128,safety,avoid,avoid,128,"> Hi Andrei. It looks ok for me. Note that I did a spell check and found a typo on line 586. It is written ""avaoid"" instead of ""avoid"". May be you can add this little fix to this PR ? Should be fixed now, thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9393
https://github.com/root-project/root/issues/9395:93,modifiability,paramet,parameter,93,"Hi, . We could add this method, but we have already `TFormula::EvalPar` which has as default parameter a nullptr. I would then prefer avoiding adding this function. . Any particular reason that you need it and you cannot use EvalPar ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9395
https://github.com/root-project/root/issues/9395:134,safety,avoid,avoiding,134,"Hi, . We could add this method, but we have already `TFormula::EvalPar` which has as default parameter a nullptr. I would then prefer avoiding adding this function. . Any particular reason that you need it and you cannot use EvalPar ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9395
https://github.com/root-project/root/issues/9395:127,usability,prefer,prefer,127,"Hi, . We could add this method, but we have already `TFormula::EvalPar` which has as default parameter a nullptr. I would then prefer avoiding adding this function. . Any particular reason that you need it and you cannot use EvalPar ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9395
https://github.com/root-project/root/issues/9395:135,usability,document,documentation,135,"Hi, . thanks for the response. No I just asked because I needed to evaluate a N-dimensional function in a point, but couldn't find any documentation on how to do it, and couldn't find any documentation on the `TFormula::EvalPar()` method, whereas lot of documentation is given for the `TFormula::Eval()` method. . Other than this I don't have any other particular reason to need another implementationi of the Eval method. . Anyway, thank you!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9395
https://github.com/root-project/root/issues/9395:188,usability,document,documentation,188,"Hi, . thanks for the response. No I just asked because I needed to evaluate a N-dimensional function in a point, but couldn't find any documentation on how to do it, and couldn't find any documentation on the `TFormula::EvalPar()` method, whereas lot of documentation is given for the `TFormula::Eval()` method. . Other than this I don't have any other particular reason to need another implementationi of the Eval method. . Anyway, thank you!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9395
https://github.com/root-project/root/issues/9395:254,usability,document,documentation,254,"Hi, . thanks for the response. No I just asked because I needed to evaluate a N-dimensional function in a point, but couldn't find any documentation on how to do it, and couldn't find any documentation on the `TFormula::EvalPar()` method, whereas lot of documentation is given for the `TFormula::Eval()` method. . Other than this I don't have any other particular reason to need another implementationi of the Eval method. . Anyway, thank you!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9395
https://github.com/root-project/root/issues/9395:41,availability,operat,operator,41,"Hi, . Note that TF1 implements also the `operator()(double * x, double * p = nullptr)`. You can do for example: . ```. TF2 f(""f"",""x+y"");. double x[] = {1,2};. cout << f(x) << endl;. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9395
https://github.com/root-project/root/issues/9397:71,usability,close,close,71,"Hi @vveckaln! Since the forum post was followed up on by @pcanal, I'll close this issue. I hope that is okay!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9397
https://github.com/root-project/root/pull/9398:84,availability,failur,failures,84,This PR touches the ppc llvm backend. I do not see how this could be related to the failures we see.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9398
https://github.com/root-project/root/pull/9398:84,deployability,fail,failures,84,This PR touches the ppc llvm backend. I do not see how this could be related to the failures we see.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9398
https://github.com/root-project/root/pull/9398:84,performance,failur,failures,84,This PR touches the ppc llvm backend. I do not see how this could be related to the failures we see.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9398
https://github.com/root-project/root/pull/9398:84,reliability,fail,failures,84,This PR touches the ppc llvm backend. I do not see how this could be related to the failures we see.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9398
https://github.com/root-project/root/pull/9399:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:4,deployability,fail,failing,4,The failing CI builds are not an issue of this PR. The Windows build is expected to fail with roofit_multiprocess=ON and the macOS build fails for unrelated reasons. Ready for review :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:15,deployability,build,builds,15,The failing CI builds are not an issue of this PR. The Windows build is expected to fail with roofit_multiprocess=ON and the macOS build fails for unrelated reasons. Ready for review :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:63,deployability,build,build,63,The failing CI builds are not an issue of this PR. The Windows build is expected to fail with roofit_multiprocess=ON and the macOS build fails for unrelated reasons. Ready for review :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:84,deployability,fail,fail,84,The failing CI builds are not an issue of this PR. The Windows build is expected to fail with roofit_multiprocess=ON and the macOS build fails for unrelated reasons. Ready for review :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:131,deployability,build,build,131,The failing CI builds are not an issue of this PR. The Windows build is expected to fail with roofit_multiprocess=ON and the macOS build fails for unrelated reasons. Ready for review :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:137,deployability,fail,fails,137,The failing CI builds are not an issue of this PR. The Windows build is expected to fail with roofit_multiprocess=ON and the macOS build fails for unrelated reasons. Ready for review :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:4,reliability,fail,failing,4,The failing CI builds are not an issue of this PR. The Windows build is expected to fail with roofit_multiprocess=ON and the macOS build fails for unrelated reasons. Ready for review :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:84,reliability,fail,fail,84,The failing CI builds are not an issue of this PR. The Windows build is expected to fail with roofit_multiprocess=ON and the macOS build fails for unrelated reasons. Ready for review :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:137,reliability,fail,fails,137,The failing CI builds are not an issue of this PR. The Windows build is expected to fail with roofit_multiprocess=ON and the macOS build fails for unrelated reasons. Ready for review :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:176,safety,review,review,176,The failing CI builds are not an issue of this PR. The Windows build is expected to fail with roofit_multiprocess=ON and the macOS build fails for unrelated reasons. Ready for review :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:176,testability,review,review,176,The failing CI builds are not an issue of this PR. The Windows build is expected to fail with roofit_multiprocess=ON and the macOS build fails for unrelated reasons. Ready for review :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON. The force push was just a rebase on master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9401:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9401
https://github.com/root-project/root/pull/9402:28,interoperability,conflict,conflicts,28,"Hi @Zeff020, there are some conflicts now. Can you please fix them before we proceed with the CI tests? Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:97,safety,test,tests,97,"Hi @Zeff020, there are some conflicts now. Can you please fix them before we proceed with the CI tests? Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:97,testability,test,tests,97,"Hi @Zeff020, there are some conflicts now. Can you please fix them before we proceed with the CI tests? Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9404:21,safety,test,test,21,Any chance to have a test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9404
https://github.com/root-project/root/pull/9404:21,testability,test,test,21,Any chance to have a test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9404
https://github.com/root-project/root/pull/9404:14,availability,ping,ping,14,@Axel-Naumann ping.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9404
https://github.com/root-project/root/issues/9406:101,integrability,Batch,BatchMode,101,"Hi @vlisovsk, sorry I forgot to post an anwer here! The issue has been fixed in ROOT 6.26 by the new BatchMode implementation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:101,performance,Batch,BatchMode,101,"Hi @vlisovsk, sorry I forgot to post an anwer here! The issue has been fixed in ROOT 6.26 by the new BatchMode implementation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/pull/9407:9,availability,failur,failure,9,"The test failure on macOS should be https://github.com/root-project/root/pull/9314, now backporting in https://github.com/root-project/root/pull/9408. Not sure about the failure on Ubuntu, but cannot be related to this PR since the changes only touch PPC, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:170,availability,failur,failure,170,"The test failure on macOS should be https://github.com/root-project/root/pull/9314, now backporting in https://github.com/root-project/root/pull/9408. Not sure about the failure on Ubuntu, but cannot be related to this PR since the changes only touch PPC, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:9,deployability,fail,failure,9,"The test failure on macOS should be https://github.com/root-project/root/pull/9314, now backporting in https://github.com/root-project/root/pull/9408. Not sure about the failure on Ubuntu, but cannot be related to this PR since the changes only touch PPC, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:170,deployability,fail,failure,170,"The test failure on macOS should be https://github.com/root-project/root/pull/9314, now backporting in https://github.com/root-project/root/pull/9408. Not sure about the failure on Ubuntu, but cannot be related to this PR since the changes only touch PPC, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:9,performance,failur,failure,9,"The test failure on macOS should be https://github.com/root-project/root/pull/9314, now backporting in https://github.com/root-project/root/pull/9408. Not sure about the failure on Ubuntu, but cannot be related to this PR since the changes only touch PPC, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:170,performance,failur,failure,170,"The test failure on macOS should be https://github.com/root-project/root/pull/9314, now backporting in https://github.com/root-project/root/pull/9408. Not sure about the failure on Ubuntu, but cannot be related to this PR since the changes only touch PPC, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:9,reliability,fail,failure,9,"The test failure on macOS should be https://github.com/root-project/root/pull/9314, now backporting in https://github.com/root-project/root/pull/9408. Not sure about the failure on Ubuntu, but cannot be related to this PR since the changes only touch PPC, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:170,reliability,fail,failure,170,"The test failure on macOS should be https://github.com/root-project/root/pull/9314, now backporting in https://github.com/root-project/root/pull/9408. Not sure about the failure on Ubuntu, but cannot be related to this PR since the changes only touch PPC, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:4,safety,test,test,4,"The test failure on macOS should be https://github.com/root-project/root/pull/9314, now backporting in https://github.com/root-project/root/pull/9408. Not sure about the failure on Ubuntu, but cannot be related to this PR since the changes only touch PPC, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:4,testability,test,test,4,"The test failure on macOS should be https://github.com/root-project/root/pull/9314, now backporting in https://github.com/root-project/root/pull/9408. Not sure about the failure on Ubuntu, but cannot be related to this PR since the changes only touch PPC, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9409:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9409
https://github.com/root-project/root/pull/9411:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9411
https://github.com/root-project/root/pull/9413:167,energy efficiency,current,current,167,":warning: FIXME: noticed after merge: not important for now given that we are not using feature flags, but the two's complement of `x` is `(~x + 1)`, meaning that the current on-disk representation is roughly the negation of the original bitmap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9413
https://github.com/root-project/root/pull/9413:178,performance,disk,disk,178,":warning: FIXME: noticed after merge: not important for now given that we are not using feature flags, but the two's complement of `x` is `(~x + 1)`, meaning that the current on-disk representation is roughly the negation of the original bitmap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9413
https://github.com/root-project/root/pull/9413:117,safety,compl,complement,117,":warning: FIXME: noticed after merge: not important for now given that we are not using feature flags, but the two's complement of `x` is `(~x + 1)`, meaning that the current on-disk representation is roughly the negation of the original bitmap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9413
https://github.com/root-project/root/pull/9413:117,security,compl,complement,117,":warning: FIXME: noticed after merge: not important for now given that we are not using feature flags, but the two's complement of `x` is `(~x + 1)`, meaning that the current on-disk representation is roughly the negation of the original bitmap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9413
https://github.com/root-project/root/pull/9414:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9414
https://github.com/root-project/root/pull/9414:47,performance,time,time,47,"For reference:. > It gains 15% on NLL creation time for HGam workspace (~5sec out of 35sec), but a whopping 2min45 out of 6min in the combined workspace so combined workspace NLL creation is now 3min15sec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9414
https://github.com/root-project/root/pull/9417:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9417
https://github.com/root-project/root/pull/9419:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9419
https://github.com/root-project/root/pull/9419:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9419
https://github.com/root-project/root/issues/9421:137,interoperability,standard,standard,137,"This is tricky to do because isotopes cannot be added to normal elements (see: TGeoElement::AddIsotope) because one may want to use both standard elements and elements having isotopes in the same geometry. Since the reusing mechanism relies on the element name, the easiest is to rename the elements having isotopes to something non-standard (e.g. HydrogenNat). . Of course, the definition of such elements as having isotopes can be detected in the parser, forcing the creation of a new element, but then using this element by name would not work (being identical to the standard one). I'm open to suggestions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:333,interoperability,standard,standard,333,"This is tricky to do because isotopes cannot be added to normal elements (see: TGeoElement::AddIsotope) because one may want to use both standard elements and elements having isotopes in the same geometry. Since the reusing mechanism relies on the element name, the easiest is to rename the elements having isotopes to something non-standard (e.g. HydrogenNat). . Of course, the definition of such elements as having isotopes can be detected in the parser, forcing the creation of a new element, but then using this element by name would not work (being identical to the standard one). I'm open to suggestions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:571,interoperability,standard,standard,571,"This is tricky to do because isotopes cannot be added to normal elements (see: TGeoElement::AddIsotope) because one may want to use both standard elements and elements having isotopes in the same geometry. Since the reusing mechanism relies on the element name, the easiest is to rename the elements having isotopes to something non-standard (e.g. HydrogenNat). . Of course, the definition of such elements as having isotopes can be detected in the parser, forcing the creation of a new element, but then using this element by name would not work (being identical to the standard one). I'm open to suggestions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:216,modifiability,reu,reusing,216,"This is tricky to do because isotopes cannot be added to normal elements (see: TGeoElement::AddIsotope) because one may want to use both standard elements and elements having isotopes in the same geometry. Since the reusing mechanism relies on the element name, the easiest is to rename the elements having isotopes to something non-standard (e.g. HydrogenNat). . Of course, the definition of such elements as having isotopes can be detected in the parser, forcing the creation of a new element, but then using this element by name would not work (being identical to the standard one). I'm open to suggestions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:433,safety,detect,detected,433,"This is tricky to do because isotopes cannot be added to normal elements (see: TGeoElement::AddIsotope) because one may want to use both standard elements and elements having isotopes in the same geometry. Since the reusing mechanism relies on the element name, the easiest is to rename the elements having isotopes to something non-standard (e.g. HydrogenNat). . Of course, the definition of such elements as having isotopes can be detected in the parser, forcing the creation of a new element, but then using this element by name would not work (being identical to the standard one). I'm open to suggestions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:29,security,iso,isotopes,29,"This is tricky to do because isotopes cannot be added to normal elements (see: TGeoElement::AddIsotope) because one may want to use both standard elements and elements having isotopes in the same geometry. Since the reusing mechanism relies on the element name, the easiest is to rename the elements having isotopes to something non-standard (e.g. HydrogenNat). . Of course, the definition of such elements as having isotopes can be detected in the parser, forcing the creation of a new element, but then using this element by name would not work (being identical to the standard one). I'm open to suggestions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:175,security,iso,isotopes,175,"This is tricky to do because isotopes cannot be added to normal elements (see: TGeoElement::AddIsotope) because one may want to use both standard elements and elements having isotopes in the same geometry. Since the reusing mechanism relies on the element name, the easiest is to rename the elements having isotopes to something non-standard (e.g. HydrogenNat). . Of course, the definition of such elements as having isotopes can be detected in the parser, forcing the creation of a new element, but then using this element by name would not work (being identical to the standard one). I'm open to suggestions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:307,security,iso,isotopes,307,"This is tricky to do because isotopes cannot be added to normal elements (see: TGeoElement::AddIsotope) because one may want to use both standard elements and elements having isotopes in the same geometry. Since the reusing mechanism relies on the element name, the easiest is to rename the elements having isotopes to something non-standard (e.g. HydrogenNat). . Of course, the definition of such elements as having isotopes can be detected in the parser, forcing the creation of a new element, but then using this element by name would not work (being identical to the standard one). I'm open to suggestions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:417,security,iso,isotopes,417,"This is tricky to do because isotopes cannot be added to normal elements (see: TGeoElement::AddIsotope) because one may want to use both standard elements and elements having isotopes in the same geometry. Since the reusing mechanism relies on the element name, the easiest is to rename the elements having isotopes to something non-standard (e.g. HydrogenNat). . Of course, the definition of such elements as having isotopes can be detected in the parser, forcing the creation of a new element, but then using this element by name would not work (being identical to the standard one). I'm open to suggestions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:433,security,detect,detected,433,"This is tricky to do because isotopes cannot be added to normal elements (see: TGeoElement::AddIsotope) because one may want to use both standard elements and elements having isotopes in the same geometry. Since the reusing mechanism relies on the element name, the easiest is to rename the elements having isotopes to something non-standard (e.g. HydrogenNat). . Of course, the definition of such elements as having isotopes can be detected in the parser, forcing the creation of a new element, but then using this element by name would not work (being identical to the standard one). I'm open to suggestions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:554,security,ident,identical,554,"This is tricky to do because isotopes cannot be added to normal elements (see: TGeoElement::AddIsotope) because one may want to use both standard elements and elements having isotopes in the same geometry. Since the reusing mechanism relies on the element name, the easiest is to rename the elements having isotopes to something non-standard (e.g. HydrogenNat). . Of course, the definition of such elements as having isotopes can be detected in the parser, forcing the creation of a new element, but then using this element by name would not work (being identical to the standard one). I'm open to suggestions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:435,interoperability,compatib,compatibility,435,"It would seem to me that by reading in a GDML file that redefines the default elements, the user has indicated that their intention is to ... redefine the default elements. Perhaps the override of default elements (i.e. giving them isotopes) could be controlled by adding a boolean flag to the import call, or a static method of the TElement class. You could make the default value of the flag agree with present behavior for backward compatibility, but allowing someone who wants the default elements to have isotopes to enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:232,security,iso,isotopes,232,"It would seem to me that by reading in a GDML file that redefines the default elements, the user has indicated that their intention is to ... redefine the default elements. Perhaps the override of default elements (i.e. giving them isotopes) could be controlled by adding a boolean flag to the import call, or a static method of the TElement class. You could make the default value of the flag agree with present behavior for backward compatibility, but allowing someone who wants the default elements to have isotopes to enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:251,security,control,controlled,251,"It would seem to me that by reading in a GDML file that redefines the default elements, the user has indicated that their intention is to ... redefine the default elements. Perhaps the override of default elements (i.e. giving them isotopes) could be controlled by adding a boolean flag to the import call, or a static method of the TElement class. You could make the default value of the flag agree with present behavior for backward compatibility, but allowing someone who wants the default elements to have isotopes to enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:510,security,iso,isotopes,510,"It would seem to me that by reading in a GDML file that redefines the default elements, the user has indicated that their intention is to ... redefine the default elements. Perhaps the override of default elements (i.e. giving them isotopes) could be controlled by adding a boolean flag to the import call, or a static method of the TElement class. You could make the default value of the flag agree with present behavior for backward compatibility, but allowing someone who wants the default elements to have isotopes to enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:251,testability,control,controlled,251,"It would seem to me that by reading in a GDML file that redefines the default elements, the user has indicated that their intention is to ... redefine the default elements. Perhaps the override of default elements (i.e. giving them isotopes) could be controlled by adding a boolean flag to the import call, or a static method of the TElement class. You could make the default value of the flag agree with present behavior for backward compatibility, but allowing someone who wants the default elements to have isotopes to enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:92,usability,user,user,92,"It would seem to me that by reading in a GDML file that redefines the default elements, the user has indicated that their intention is to ... redefine the default elements. Perhaps the override of default elements (i.e. giving them isotopes) could be controlled by adding a boolean flag to the import call, or a static method of the TElement class. You could make the default value of the flag agree with present behavior for backward compatibility, but allowing someone who wants the default elements to have isotopes to enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:101,usability,indicat,indicated,101,"It would seem to me that by reading in a GDML file that redefines the default elements, the user has indicated that their intention is to ... redefine the default elements. Perhaps the override of default elements (i.e. giving them isotopes) could be controlled by adding a boolean flag to the import call, or a static method of the TElement class. You could make the default value of the flag agree with present behavior for backward compatibility, but allowing someone who wants the default elements to have isotopes to enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:413,usability,behavi,behavior,413,"It would seem to me that by reading in a GDML file that redefines the default elements, the user has indicated that their intention is to ... redefine the default elements. Perhaps the override of default elements (i.e. giving them isotopes) could be controlled by adding a boolean flag to the import call, or a static method of the TElement class. You could make the default value of the flag agree with present behavior for backward compatibility, but allowing someone who wants the default elements to have isotopes to enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:335,safety,except,exception,335,"A static flag that allows the user to explicitly override default elements sounds like a good compromise. This can be implemented indeed as a static method like: `TGeoElement::AllowElementOverride(true)` to be called by the user before reading the geometry file. If the user forgets to call it, importing the geometry would produce an exception (like in your case). Is this acceptable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:30,usability,user,user,30,"A static flag that allows the user to explicitly override default elements sounds like a good compromise. This can be implemented indeed as a static method like: `TGeoElement::AllowElementOverride(true)` to be called by the user before reading the geometry file. If the user forgets to call it, importing the geometry would produce an exception (like in your case). Is this acceptable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:224,usability,user,user,224,"A static flag that allows the user to explicitly override default elements sounds like a good compromise. This can be implemented indeed as a static method like: `TGeoElement::AllowElementOverride(true)` to be called by the user before reading the geometry file. If the user forgets to call it, importing the geometry would produce an exception (like in your case). Is this acceptable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:270,usability,user,user,270,"A static flag that allows the user to explicitly override default elements sounds like a good compromise. This can be implemented indeed as a static method like: `TGeoElement::AllowElementOverride(true)` to be called by the user before reading the geometry file. If the user forgets to call it, importing the geometry would produce an exception (like in your case). Is this acceptable?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:41,deployability,scale,scale,41,"OK, I'll make a PR on that on a one week scale and add you as reviewer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:41,energy efficiency,scale,scale,41,"OK, I'll make a PR on that on a one week scale and add you as reviewer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:41,modifiability,scal,scale,41,"OK, I'll make a PR on that on a one week scale and add you as reviewer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:41,performance,scale,scale,41,"OK, I'll make a PR on that on a one week scale and add you as reviewer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:62,safety,review,reviewer,62,"OK, I'll make a PR on that on a one week scale and add you as reviewer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:62,testability,review,reviewer,62,"OK, I'll make a PR on that on a one week scale and add you as reviewer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:183,safety,review,reviewer,183,"Hi, I realized that other geometry files are affected by this, so this is a bug indeed, no need for an extra user flag. The PR #9602 is supposed to fix the issue. I cannot add you as reviewer for this, but you can comment here if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:183,testability,review,reviewer,183,"Hi, I realized that other geometry files are affected by this, so this is a bug indeed, no need for an extra user flag. The PR #9602 is supposed to fix the issue. I cannot add you as reviewer for this, but you can comment here if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:109,usability,user,user,109,"Hi, I realized that other geometry files are affected by this, so this is a bug indeed, no need for an extra user flag. The PR #9602 is supposed to fix the issue. I cannot add you as reviewer for this, but you can comment here if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9422:174,deployability,releas,released,174,"Hi @veprbl! I can't reproduce this issue myself, even if I configure ROOT with `CMAKE_CXX_STANDARD =14`. So I guess this issue has been fixed in the long time since 6.16 got released? ROOT also only claims C++14 compatibility with the upcoming v6.26 release. I would close this issue because it works with the new ROOT, and for older versions there is the workaround you are suggesting yourself. But before doing that, I invite @Axel-Naumann to comment as well, who has a better overview on C++ standards and ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:250,deployability,releas,release,250,"Hi @veprbl! I can't reproduce this issue myself, even if I configure ROOT with `CMAKE_CXX_STANDARD =14`. So I guess this issue has been fixed in the long time since 6.16 got released? ROOT also only claims C++14 compatibility with the upcoming v6.26 release. I would close this issue because it works with the new ROOT, and for older versions there is the workaround you are suggesting yourself. But before doing that, I invite @Axel-Naumann to comment as well, who has a better overview on C++ standards and ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:334,deployability,version,versions,334,"Hi @veprbl! I can't reproduce this issue myself, even if I configure ROOT with `CMAKE_CXX_STANDARD =14`. So I guess this issue has been fixed in the long time since 6.16 got released? ROOT also only claims C++14 compatibility with the upcoming v6.26 release. I would close this issue because it works with the new ROOT, and for older versions there is the workaround you are suggesting yourself. But before doing that, I invite @Axel-Naumann to comment as well, who has a better overview on C++ standards and ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:59,integrability,configur,configure,59,"Hi @veprbl! I can't reproduce this issue myself, even if I configure ROOT with `CMAKE_CXX_STANDARD =14`. So I guess this issue has been fixed in the long time since 6.16 got released? ROOT also only claims C++14 compatibility with the upcoming v6.26 release. I would close this issue because it works with the new ROOT, and for older versions there is the workaround you are suggesting yourself. But before doing that, I invite @Axel-Naumann to comment as well, who has a better overview on C++ standards and ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:334,integrability,version,versions,334,"Hi @veprbl! I can't reproduce this issue myself, even if I configure ROOT with `CMAKE_CXX_STANDARD =14`. So I guess this issue has been fixed in the long time since 6.16 got released? ROOT also only claims C++14 compatibility with the upcoming v6.26 release. I would close this issue because it works with the new ROOT, and for older versions there is the workaround you are suggesting yourself. But before doing that, I invite @Axel-Naumann to comment as well, who has a better overview on C++ standards and ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:212,interoperability,compatib,compatibility,212,"Hi @veprbl! I can't reproduce this issue myself, even if I configure ROOT with `CMAKE_CXX_STANDARD =14`. So I guess this issue has been fixed in the long time since 6.16 got released? ROOT also only claims C++14 compatibility with the upcoming v6.26 release. I would close this issue because it works with the new ROOT, and for older versions there is the workaround you are suggesting yourself. But before doing that, I invite @Axel-Naumann to comment as well, who has a better overview on C++ standards and ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:495,interoperability,standard,standards,495,"Hi @veprbl! I can't reproduce this issue myself, even if I configure ROOT with `CMAKE_CXX_STANDARD =14`. So I guess this issue has been fixed in the long time since 6.16 got released? ROOT also only claims C++14 compatibility with the upcoming v6.26 release. I would close this issue because it works with the new ROOT, and for older versions there is the workaround you are suggesting yourself. But before doing that, I invite @Axel-Naumann to comment as well, who has a better overview on C++ standards and ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:59,modifiability,configur,configure,59,"Hi @veprbl! I can't reproduce this issue myself, even if I configure ROOT with `CMAKE_CXX_STANDARD =14`. So I guess this issue has been fixed in the long time since 6.16 got released? ROOT also only claims C++14 compatibility with the upcoming v6.26 release. I would close this issue because it works with the new ROOT, and for older versions there is the workaround you are suggesting yourself. But before doing that, I invite @Axel-Naumann to comment as well, who has a better overview on C++ standards and ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:334,modifiability,version,versions,334,"Hi @veprbl! I can't reproduce this issue myself, even if I configure ROOT with `CMAKE_CXX_STANDARD =14`. So I guess this issue has been fixed in the long time since 6.16 got released? ROOT also only claims C++14 compatibility with the upcoming v6.26 release. I would close this issue because it works with the new ROOT, and for older versions there is the workaround you are suggesting yourself. But before doing that, I invite @Axel-Naumann to comment as well, who has a better overview on C++ standards and ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:154,performance,time,time,154,"Hi @veprbl! I can't reproduce this issue myself, even if I configure ROOT with `CMAKE_CXX_STANDARD =14`. So I guess this issue has been fixed in the long time since 6.16 got released? ROOT also only claims C++14 compatibility with the upcoming v6.26 release. I would close this issue because it works with the new ROOT, and for older versions there is the workaround you are suggesting yourself. But before doing that, I invite @Axel-Naumann to comment as well, who has a better overview on C++ standards and ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:59,security,configur,configure,59,"Hi @veprbl! I can't reproduce this issue myself, even if I configure ROOT with `CMAKE_CXX_STANDARD =14`. So I guess this issue has been fixed in the long time since 6.16 got released? ROOT also only claims C++14 compatibility with the upcoming v6.26 release. I would close this issue because it works with the new ROOT, and for older versions there is the workaround you are suggesting yourself. But before doing that, I invite @Axel-Naumann to comment as well, who has a better overview on C++ standards and ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:267,usability,close,close,267,"Hi @veprbl! I can't reproduce this issue myself, even if I configure ROOT with `CMAKE_CXX_STANDARD =14`. So I guess this issue has been fixed in the long time since 6.16 got released? ROOT also only claims C++14 compatibility with the upcoming v6.26 release. I would close this issue because it works with the new ROOT, and for older versions there is the workaround you are suggesting yourself. But before doing that, I invite @Axel-Naumann to comment as well, who has a better overview on C++ standards and ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1237,availability,error,error,1237,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:305,deployability,version,version,305,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:336,deployability,version,version,336,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:350,deployability,Version,Version,350,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:455,deployability,version,version,455,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:844,deployability,fail,fail,844,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:150,integrability,translat,translation,150,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:305,integrability,version,version,305,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:336,integrability,version,version,336,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:350,integrability,Version,Version,350,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:455,integrability,version,version,455,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:150,interoperability,translat,translation,150,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:305,modifiability,version,version,305,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:336,modifiability,version,version,336,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:350,modifiability,Version,Version,350,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:455,modifiability,version,version,455,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1237,performance,error,error,1237,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:844,reliability,fail,fail,844,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:716,safety,test,test,716,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:968,safety,test,test,968,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:980,safety,test,test,980,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1159,safety,test,test,1159,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1237,safety,error,error,1237,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:262,security,ident,identical,262,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:162,testability,unit,unit,162,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:716,testability,test,test,716,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:968,testability,test,test,968,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:980,testability,test,test,980,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1159,testability,test,test,1159,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1237,usability,error,error,1237,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1263,usability,statu,status,1263,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1302,usability,close,closed,1302,"@guitargeek Thanks for looking into this. I don't see any fixes for this issue, it would require to ""duplicate"" the definition in the class'es ""main"" translation unit, and there are quite a few definitions to go through. Here is an MRE with c++11, but should be identical for c++14:. ```. # root-config --version. 6.24/06. # root.exe --version. ROOT Version: 6.24/06. Built for linuxx8664gcc on Sep 02 2021, 14:20:23. From tags/v6-24-06@v6-24-06. # g++ --version. g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11). Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. # cat test.cxx . #include <vector>. #include <TChain.h>. int func() {. std::vector<long long> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(TChain::kBigNumber - 1); // fine. return v.size();. }. # g++ -O0 -std=c++11 `root-config --cflags --libs` test.cxx -o test. /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':. (.text+0x20): undefined reference to `main'. /tmp/ccxkwRYF.o: In function `func()':. test.cxx:(.text+0x1a): undefined reference to `TChain::kBigNumber'. collect2: error: ld returned 1 exit status. ```. I don't mind if this gets closed with wontfix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:78,deployability,build,building,78,Can you remind us of the output of ROOT v6.16's `root-config --libs`? Are you building against ROOT v6.16 in the above example? ROOT's master does not support GCC 4.8 anymore.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:142,reliability,doe,does,142,Can you remind us of the output of ROOT v6.16's `root-config --libs`? Are you building against ROOT v6.16 in the above example? ROOT's master does not support GCC 4.8 anymore.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:151,usability,support,support,151,Can you remind us of the output of ROOT v6.16's `root-config --libs`? Are you building against ROOT v6.16 in the above example? ROOT's master does not support GCC 4.8 anymore.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1264,availability,error,error,1264,"> Can you remind us of the output of ROOT v6.16's `root-config --libs`? Sure. 6.16:. ```. -L/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -Wl,-rpath,/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lm -ldl -rdynamic. ```. 6.24/06:. ```. root-config --libs. -L/path/to/root/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -pthread -lm -ldl -rdynamic. ```. > Are you building against ROOT v6.16 in the above example? In my previous message it was against 6.24/06 built with the same gcc:. ```. cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/path/to/root .. -Dx11=OFF -Dsqlite=OFF -Dtmva=OFF -Dxrootd=OFF -Dpyroot=OFF -Dmlp=OFF -Dssl=OFF -Dhttp=OFF -Dclad=OFF -Ddataframe=OFF -Dpythia6=ON -Dbuiltin_tbb=OFF -Dbuiltin_xrootd=OFF -Dbuiltin_freetype=OFF. ```. > ROOT's master does not support GCC 4.8 anymore. At godbolt link above you can reproduce the same error with GCC 11.2 and clang 13.0.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:768,deployability,build,building,768,"> Can you remind us of the output of ROOT v6.16's `root-config --libs`? Sure. 6.16:. ```. -L/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -Wl,-rpath,/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lm -ldl -rdynamic. ```. 6.24/06:. ```. root-config --libs. -L/path/to/root/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -pthread -lm -ldl -rdynamic. ```. > Are you building against ROOT v6.16 in the above example? In my previous message it was against 6.24/06 built with the same gcc:. ```. cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/path/to/root .. -Dx11=OFF -Dsqlite=OFF -Dtmva=OFF -Dxrootd=OFF -Dpyroot=OFF -Dmlp=OFF -Dssl=OFF -Dhttp=OFF -Dclad=OFF -Ddataframe=OFF -Dpythia6=ON -Dbuiltin_tbb=OFF -Dbuiltin_xrootd=OFF -Dbuiltin_freetype=OFF. ```. > ROOT's master does not support GCC 4.8 anymore. At godbolt link above you can reproduce the same error with GCC 11.2 and clang 13.0.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:833,integrability,messag,message,833,"> Can you remind us of the output of ROOT v6.16's `root-config --libs`? Sure. 6.16:. ```. -L/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -Wl,-rpath,/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lm -ldl -rdynamic. ```. 6.24/06:. ```. root-config --libs. -L/path/to/root/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -pthread -lm -ldl -rdynamic. ```. > Are you building against ROOT v6.16 in the above example? In my previous message it was against 6.24/06 built with the same gcc:. ```. cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/path/to/root .. -Dx11=OFF -Dsqlite=OFF -Dtmva=OFF -Dxrootd=OFF -Dpyroot=OFF -Dmlp=OFF -Dssl=OFF -Dhttp=OFF -Dclad=OFF -Ddataframe=OFF -Dpythia6=ON -Dbuiltin_tbb=OFF -Dbuiltin_xrootd=OFF -Dbuiltin_freetype=OFF. ```. > ROOT's master does not support GCC 4.8 anymore. At godbolt link above you can reproduce the same error with GCC 11.2 and clang 13.0.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:833,interoperability,messag,message,833,"> Can you remind us of the output of ROOT v6.16's `root-config --libs`? Sure. 6.16:. ```. -L/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -Wl,-rpath,/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lm -ldl -rdynamic. ```. 6.24/06:. ```. root-config --libs. -L/path/to/root/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -pthread -lm -ldl -rdynamic. ```. > Are you building against ROOT v6.16 in the above example? In my previous message it was against 6.24/06 built with the same gcc:. ```. cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/path/to/root .. -Dx11=OFF -Dsqlite=OFF -Dtmva=OFF -Dxrootd=OFF -Dpyroot=OFF -Dmlp=OFF -Dssl=OFF -Dhttp=OFF -Dclad=OFF -Ddataframe=OFF -Dpythia6=ON -Dbuiltin_tbb=OFF -Dbuiltin_xrootd=OFF -Dbuiltin_freetype=OFF. ```. > ROOT's master does not support GCC 4.8 anymore. At godbolt link above you can reproduce the same error with GCC 11.2 and clang 13.0.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1264,performance,error,error,1264,"> Can you remind us of the output of ROOT v6.16's `root-config --libs`? Sure. 6.16:. ```. -L/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -Wl,-rpath,/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lm -ldl -rdynamic. ```. 6.24/06:. ```. root-config --libs. -L/path/to/root/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -pthread -lm -ldl -rdynamic. ```. > Are you building against ROOT v6.16 in the above example? In my previous message it was against 6.24/06 built with the same gcc:. ```. cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/path/to/root .. -Dx11=OFF -Dsqlite=OFF -Dtmva=OFF -Dxrootd=OFF -Dpyroot=OFF -Dmlp=OFF -Dssl=OFF -Dhttp=OFF -Dclad=OFF -Ddataframe=OFF -Dpythia6=ON -Dbuiltin_tbb=OFF -Dbuiltin_xrootd=OFF -Dbuiltin_freetype=OFF. ```. > ROOT's master does not support GCC 4.8 anymore. At godbolt link above you can reproduce the same error with GCC 11.2 and clang 13.0.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1181,reliability,doe,does,1181,"> Can you remind us of the output of ROOT v6.16's `root-config --libs`? Sure. 6.16:. ```. -L/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -Wl,-rpath,/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lm -ldl -rdynamic. ```. 6.24/06:. ```. root-config --libs. -L/path/to/root/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -pthread -lm -ldl -rdynamic. ```. > Are you building against ROOT v6.16 in the above example? In my previous message it was against 6.24/06 built with the same gcc:. ```. cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/path/to/root .. -Dx11=OFF -Dsqlite=OFF -Dtmva=OFF -Dxrootd=OFF -Dpyroot=OFF -Dmlp=OFF -Dssl=OFF -Dhttp=OFF -Dclad=OFF -Ddataframe=OFF -Dpythia6=ON -Dbuiltin_tbb=OFF -Dbuiltin_xrootd=OFF -Dbuiltin_freetype=OFF. ```. > ROOT's master does not support GCC 4.8 anymore. At godbolt link above you can reproduce the same error with GCC 11.2 and clang 13.0.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1264,safety,error,error,1264,"> Can you remind us of the output of ROOT v6.16's `root-config --libs`? Sure. 6.16:. ```. -L/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -Wl,-rpath,/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lm -ldl -rdynamic. ```. 6.24/06:. ```. root-config --libs. -L/path/to/root/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -pthread -lm -ldl -rdynamic. ```. > Are you building against ROOT v6.16 in the above example? In my previous message it was against 6.24/06 built with the same gcc:. ```. cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/path/to/root .. -Dx11=OFF -Dsqlite=OFF -Dtmva=OFF -Dxrootd=OFF -Dpyroot=OFF -Dmlp=OFF -Dssl=OFF -Dhttp=OFF -Dclad=OFF -Ddataframe=OFF -Dpythia6=ON -Dbuiltin_tbb=OFF -Dbuiltin_xrootd=OFF -Dbuiltin_freetype=OFF. ```. > ROOT's master does not support GCC 4.8 anymore. At godbolt link above you can reproduce the same error with GCC 11.2 and clang 13.0.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1190,usability,support,support,1190,"> Can you remind us of the output of ROOT v6.16's `root-config --libs`? Sure. 6.16:. ```. -L/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -Wl,-rpath,/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lm -ldl -rdynamic. ```. 6.24/06:. ```. root-config --libs. -L/path/to/root/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -pthread -lm -ldl -rdynamic. ```. > Are you building against ROOT v6.16 in the above example? In my previous message it was against 6.24/06 built with the same gcc:. ```. cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/path/to/root .. -Dx11=OFF -Dsqlite=OFF -Dtmva=OFF -Dxrootd=OFF -Dpyroot=OFF -Dmlp=OFF -Dssl=OFF -Dhttp=OFF -Dclad=OFF -Ddataframe=OFF -Dpythia6=ON -Dbuiltin_tbb=OFF -Dbuiltin_xrootd=OFF -Dbuiltin_freetype=OFF. ```. > ROOT's master does not support GCC 4.8 anymore. At godbolt link above you can reproduce the same error with GCC 11.2 and clang 13.0.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1264,usability,error,error,1264,"> Can you remind us of the output of ROOT v6.16's `root-config --libs`? Sure. 6.16:. ```. -L/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -Wl,-rpath,/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lm -ldl -rdynamic. ```. 6.24/06:. ```. root-config --libs. -L/path/to/root/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -pthread -lm -ldl -rdynamic. ```. > Are you building against ROOT v6.16 in the above example? In my previous message it was against 6.24/06 built with the same gcc:. ```. cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/path/to/root .. -Dx11=OFF -Dsqlite=OFF -Dtmva=OFF -Dxrootd=OFF -Dpyroot=OFF -Dmlp=OFF -Dssl=OFF -Dhttp=OFF -Dclad=OFF -Ddataframe=OFF -Dpythia6=ON -Dbuiltin_tbb=OFF -Dbuiltin_xrootd=OFF -Dbuiltin_freetype=OFF. ```. > ROOT's master does not support GCC 4.8 anymore. At godbolt link above you can reproduce the same error with GCC 11.2 and clang 13.0.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:40,modifiability,variab,variables,40,That's indeed a bug; `static constexpr` variables must have a definition somewhere. Thanks for reporting!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:177,deployability,version,versions,177,"Hello again two years later! I'll close this as ""won't fix"" now, because ROOTs support for C++14 has stopped:. * https://github.com/root-project/root/pull/13243. For older ROOT versions, there is at least a workaround:. ```c++. int kBigNumberTChain = TChain::kBigNumber;. v.push_back(kBigNumberTChain);. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:177,integrability,version,versions,177,"Hello again two years later! I'll close this as ""won't fix"" now, because ROOTs support for C++14 has stopped:. * https://github.com/root-project/root/pull/13243. For older ROOT versions, there is at least a workaround:. ```c++. int kBigNumberTChain = TChain::kBigNumber;. v.push_back(kBigNumberTChain);. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:177,modifiability,version,versions,177,"Hello again two years later! I'll close this as ""won't fix"" now, because ROOTs support for C++14 has stopped:. * https://github.com/root-project/root/pull/13243. For older ROOT versions, there is at least a workaround:. ```c++. int kBigNumberTChain = TChain::kBigNumber;. v.push_back(kBigNumberTChain);. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:34,usability,close,close,34,"Hello again two years later! I'll close this as ""won't fix"" now, because ROOTs support for C++14 has stopped:. * https://github.com/root-project/root/pull/13243. For older ROOT versions, there is at least a workaround:. ```c++. int kBigNumberTChain = TChain::kBigNumber;. v.push_back(kBigNumberTChain);. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:79,usability,support,support,79,"Hello again two years later! I'll close this as ""won't fix"" now, because ROOTs support for C++14 has stopped:. * https://github.com/root-project/root/pull/13243. For older ROOT versions, there is at least a workaround:. ```c++. int kBigNumberTChain = TChain::kBigNumber;. v.push_back(kBigNumberTChain);. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:101,usability,stop,stopped,101,"Hello again two years later! I'll close this as ""won't fix"" now, because ROOTs support for C++14 has stopped:. * https://github.com/root-project/root/pull/13243. For older ROOT versions, there is at least a workaround:. ```c++. int kBigNumberTChain = TChain::kBigNumber;. v.push_back(kBigNumberTChain);. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/pull/9423:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9423
https://github.com/root-project/root/issues/9424:103,deployability,patch,patch,103,"https://github.com/llvm/llvm-project/commit/3185c30c54d0af5bffbff3bcfd721668d086ff10, I will apply the patch to our LLVM 9 and backport to 6.24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:103,safety,patch,patch,103,"https://github.com/llvm/llvm-project/commit/3185c30c54d0af5bffbff3bcfd721668d086ff10, I will apply the patch to our LLVM 9 and backport to 6.24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:103,security,patch,patch,103,"https://github.com/llvm/llvm-project/commit/3185c30c54d0af5bffbff3bcfd721668d086ff10, I will apply the patch to our LLVM 9 and backport to 6.24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:54,deployability,build,build,54,"thanks @hahnjo , this indeed fixed the ppc64le GCC 11 build issues",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9429:1176,availability,cluster,cluster,1176,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1290,availability,cluster,cluster,1290,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1329,availability,cluster,cluster,1329,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:222,deployability,modul,module,222,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1176,deployability,cluster,cluster,1176,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1290,deployability,cluster,cluster,1290,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1298,deployability,scale,scale,1298,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1329,deployability,cluster,cluster,1329,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:746,energy efficiency,reduc,reducer,746,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1202,energy efficiency,core,cores,1202,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1298,energy efficiency,scale,scale,1298,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1356,integrability,Event,Events,1356,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:345,interoperability,Prox,Proxy,345,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:492,interoperability,Prox,Proxy,492,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1067,interoperability,Distribut,Distributed,1067,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1106,interoperability,distribut,distributed,1106,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:222,modifiability,modul,module,222,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1298,modifiability,scal,scale,1298,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1224,performance,memor,memory,1224,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1238,performance,disk,disk,1238,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1298,performance,scale,scale,1298,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:91,safety,except,exception,91,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:177,safety,test,testDistRDF,177,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:189,safety,test,testCondorTree,189,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:222,safety,modul,module,222,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:108,testability,Trace,Traceback,108,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:177,testability,test,testDistRDF,177,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:189,testability,test,testCondorTree,189,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:163,usability,user,user,163,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1224,usability,memor,memory,1224,"I should add that when running the RDF on an existing file and TTree, there is a different exception:. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondorTree.py"", line 35, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 219, in execute. values = self.ProcessAndMerge(ranges, mapper, reducer). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Dask/Backend.py"", line 128, in ProcessAndMerge. final_results = mergeables_lists.pop().persist(). IndexError: pop from empty list. ```. With the code:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": espresso""}). cluster.scale(jobs=1). client = Client(cluster). df = RDataFrame(""Events"", ""tree.root"", daskclient=client). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. And the file `tree.root` attached. [tree.root.zip](https://github.com/root-project/root/files/7704237/tree.root.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:306,availability,avail,available,306,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:335,availability,cluster,cluster,335,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:894,availability,avail,available,894,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1106,availability,cluster,cluster,1106,"o with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1775,availability,cluster,cluster,1775,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:335,deployability,cluster,cluster,335,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:500,deployability,contain,contains,500,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1106,deployability,cluster,cluster,1106,"o with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1297,deployability,resourc,resources,1297,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1371,deployability,contain,contains,1371,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1744,deployability,releas,released,1744,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1753,deployability,resourc,resources,1753,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1775,deployability,cluster,cluster,1775,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1846,deployability,api,api,1846,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:296,energy efficiency,core,cores,296,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:391,energy efficiency,core,core,391,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:597,energy efficiency,current,current,597,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:884,energy efficiency,core,cores,884,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1297,energy efficiency,resourc,resources,1297,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1753,energy efficiency,resourc,resources,1753,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:371,integrability,sub,submit,371,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1003,integrability,interfac,interface,1003,"tz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1240,integrability,batch,batch,1240,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1846,integrability,api,api,1846,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:323,interoperability,distribut,distributed,323,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:698,interoperability,bind,bindings,698,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1003,interoperability,interfac,interface,1003,"tz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1815,interoperability,distribut,distributed,1815,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1846,interoperability,api,api,1846,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1855,interoperability,distribut,distributed,1855,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:698,modifiability,bind,bindings,698,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1003,modifiability,interfac,interface,1003,"tz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1240,performance,batch,batch,1240,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1297,performance,resourc,resources,1297,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1753,performance,resourc,resources,1753,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:203,reliability,doe,doesn,203,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:306,reliability,availab,available,306,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:894,reliability,availab,available,894,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:306,safety,avail,available,306,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:894,safety,avail,available,894,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1297,safety,resourc,resources,1297,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1753,safety,resourc,resources,1753,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:306,security,availab,available,306,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:434,security,access,accessing,434,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:894,security,availab,available,894,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1297,testability,resourc,resources,1297,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1753,testability,resourc,resources,1753,"rtitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger so that in your reproducer above the `npartitions` should correctly default to two instead of zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:198,usability,user,user,198,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:350,usability,user,user,350,"Hi @swertz,. Thanks a lot for trying it out and for the reproducer! . The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a . ```python. print(client.scheduler_info()). ```. call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:141,deployability,resourc,resources,141,"As for your second comment. > IndexError: pop from empty list. I think you are still seeing the effect of HTCondor that hasn't already given resources to Dask. Try again adding `client.wait_for_workers(N_WORKERS)` before calling RDF API. `N_WORKERS` should be the amount of Dask workers that the HTCondor job should give you back, so I guess one in your case. But the dask docs are a bit scarce on this so I can't give you too many details",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:233,deployability,API,API,233,"As for your second comment. > IndexError: pop from empty list. I think you are still seeing the effect of HTCondor that hasn't already given resources to Dask. Try again adding `client.wait_for_workers(N_WORKERS)` before calling RDF API. `N_WORKERS` should be the amount of Dask workers that the HTCondor job should give you back, so I guess one in your case. But the dask docs are a bit scarce on this so I can't give you too many details",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:141,energy efficiency,resourc,resources,141,"As for your second comment. > IndexError: pop from empty list. I think you are still seeing the effect of HTCondor that hasn't already given resources to Dask. Try again adding `client.wait_for_workers(N_WORKERS)` before calling RDF API. `N_WORKERS` should be the amount of Dask workers that the HTCondor job should give you back, so I guess one in your case. But the dask docs are a bit scarce on this so I can't give you too many details",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:233,integrability,API,API,233,"As for your second comment. > IndexError: pop from empty list. I think you are still seeing the effect of HTCondor that hasn't already given resources to Dask. Try again adding `client.wait_for_workers(N_WORKERS)` before calling RDF API. `N_WORKERS` should be the amount of Dask workers that the HTCondor job should give you back, so I guess one in your case. But the dask docs are a bit scarce on this so I can't give you too many details",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:233,interoperability,API,API,233,"As for your second comment. > IndexError: pop from empty list. I think you are still seeing the effect of HTCondor that hasn't already given resources to Dask. Try again adding `client.wait_for_workers(N_WORKERS)` before calling RDF API. `N_WORKERS` should be the amount of Dask workers that the HTCondor job should give you back, so I guess one in your case. But the dask docs are a bit scarce on this so I can't give you too many details",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:141,performance,resourc,resources,141,"As for your second comment. > IndexError: pop from empty list. I think you are still seeing the effect of HTCondor that hasn't already given resources to Dask. Try again adding `client.wait_for_workers(N_WORKERS)` before calling RDF API. `N_WORKERS` should be the amount of Dask workers that the HTCondor job should give you back, so I guess one in your case. But the dask docs are a bit scarce on this so I can't give you too many details",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:141,safety,resourc,resources,141,"As for your second comment. > IndexError: pop from empty list. I think you are still seeing the effect of HTCondor that hasn't already given resources to Dask. Try again adding `client.wait_for_workers(N_WORKERS)` before calling RDF API. `N_WORKERS` should be the amount of Dask workers that the HTCondor job should give you back, so I guess one in your case. But the dask docs are a bit scarce on this so I can't give you too many details",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:141,testability,resourc,resources,141,"As for your second comment. > IndexError: pop from empty list. I think you are still seeing the effect of HTCondor that hasn't already given resources to Dask. Try again adding `client.wait_for_workers(N_WORKERS)` before calling RDF API. `N_WORKERS` should be the amount of Dask workers that the HTCondor job should give you back, so I guess one in your case. But the dask docs are a bit scarce on this so I can't give you too many details",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:246,deployability,log,logging,246,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:255,deployability,log,logging,255,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:317,deployability,log,logging,317,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:411,deployability,releas,released,411,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:583,deployability,manag,management,583,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:791,deployability,automat,automatically,791,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:567,energy efficiency,adapt,adaptive,567,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:583,energy efficiency,manag,management,583,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:805,energy efficiency,adapt,adapts,805,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:299,integrability,messag,message,299,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:567,integrability,adapt,adaptive,567,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:679,integrability,queue,queueing-system-walltime-killing-workers,679,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:750,integrability,sub,submitted,750,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:805,integrability,adapt,adapts,805,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:275,interoperability,format,format,275,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:299,interoperability,messag,message,299,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:567,interoperability,adapt,adaptive,567,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:805,interoperability,adapt,adapts,805,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:567,modifiability,adapt,adaptive,567,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:805,modifiability,adapt,adapts,805,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:679,performance,queue,queueing-system-walltime-killing-workers,679,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:819,performance,workload,workload,819,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:108,reliability,doe,doesn,108,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:246,safety,log,logging,246,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:255,safety,log,logging,255,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:317,safety,log,logging,317,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:583,safety,manag,management,583,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:246,security,log,logging,246,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:255,security,log,logging,255,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:317,security,log,logging,317,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:246,testability,log,logging,246,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:255,testability,log,logging,255,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:317,testability,log,logging,317,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:791,testability,automat,automatically,791,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:21,usability,feedback,feedback,21,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:640,usability,tip,tips-and-tricks,640,"Thanks for the quick feedback! I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:517,availability,cluster,cluster,517,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:632,availability,cluster,cluster,632,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:671,availability,cluster,cluster,671,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1845,availability,cluster,clusters,1845,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1907,availability,cluster,clusters,1907,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:517,deployability,cluster,cluster,517,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:632,deployability,cluster,cluster,632,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:640,deployability,scale,scale,640,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:671,deployability,cluster,cluster,671,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1219,deployability,resourc,resources,1219,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1564,deployability,UPDAT,UPDATE,1564,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1636,deployability,manag,management,1636,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1717,deployability,automat,automatically,1717,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1845,deployability,cluster,clusters,1845,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1907,deployability,cluster,clusters,1907,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:543,energy efficiency,core,cores,543,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:640,energy efficiency,scale,scale,640,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1164,energy efficiency,schedul,scheduler,1164,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1219,energy efficiency,resourc,resources,1219,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1545,energy efficiency,core,cores,1545,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1620,energy efficiency,adapt,adaptive,1620,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1636,energy efficiency,manag,management,1636,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1731,energy efficiency,adapt,adapts,1731,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1620,integrability,adapt,adaptive,1620,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1676,integrability,sub,submitted,1676,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1731,integrability,adapt,adapts,1731,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:447,interoperability,distribut,distributed,447,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1121,interoperability,distribut,distributed,1121,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1620,interoperability,adapt,adaptive,1620,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1731,interoperability,adapt,adapts,1731,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:640,modifiability,scal,scale,640,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1087,modifiability,paramet,parameter,1087,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1620,modifiability,adapt,adaptive,1620,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1731,modifiability,adapt,adapts,1731,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1793,modifiability,paramet,parameter,1793,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:390,performance,time,time,390,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:565,performance,memor,memory,565,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:579,performance,disk,disk,579,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:640,performance,scale,scale,640,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:751,performance,time,time,751,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:807,performance,time,time,807,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:866,performance,time,time,866,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1164,performance,schedul,scheduler,1164,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1219,performance,resourc,resources,1219,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1449,performance,parallel,parallelisation,1449,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1745,performance,workload,workload,1745,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1219,safety,resourc,resources,1219,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1564,safety,UPDAT,UPDATE,1564,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1636,safety,manag,management,1636,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1564,security,UPDAT,UPDATE,1564,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:135,testability,simpl,simple,135,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1219,testability,resourc,resources,1219,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1717,testability,automat,automatically,1717,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:135,usability,simpl,simple,135,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:565,usability,memor,memory,565,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):. ```python. import time. import random. from dask import delayed. from dask.distributed import Client. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). client = Client(cluster). # Try with and without this. client.wait_for_workers(1). def inc(x):. time.sleep(random.random()). return x + 1. def dec(x):. time.sleep(random.random()). return x - 1. def add(x, y):. time.sleep(random.random()). return x + y. inc = delayed(inc). dec = delayed(dec). add = delayed(add). x = inc(1). y = dec(2). z = add(x, y). print(f""Result is: {z.compute()}""). ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like. ```python. df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS). ``` . A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use. UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:355,availability,cluster,clusters,355,"Strange, I've tried the dask-only example (with lxbatch) but in both cases (with or without the `wait`) it waits forever. I see the job come and go in `condor_q` but nothing happens. Perhaps we're missing something to correctly use `dask_jobqueue` :thinking: . About the choice of `npartitions`: thanks, that's useful information. I should check how many clusters/file we have on average for nanoAOD files. But since I'm feeding in a TChain with (in some cases) several hundred files, I suppose I should choose `npartitions ~ n_files * n_clusters_per_file`? Although, this would quickly amount to much more than ""3x the amount of cores I can use"" (I have O(400) RDF's with each O(200) input files but only a total of O(500) cores to run on)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:355,deployability,cluster,clusters,355,"Strange, I've tried the dask-only example (with lxbatch) but in both cases (with or without the `wait`) it waits forever. I see the job come and go in `condor_q` but nothing happens. Perhaps we're missing something to correctly use `dask_jobqueue` :thinking: . About the choice of `npartitions`: thanks, that's useful information. I should check how many clusters/file we have on average for nanoAOD files. But since I'm feeding in a TChain with (in some cases) several hundred files, I suppose I should choose `npartitions ~ n_files * n_clusters_per_file`? Although, this would quickly amount to much more than ""3x the amount of cores I can use"" (I have O(400) RDF's with each O(200) input files but only a total of O(500) cores to run on)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:630,energy efficiency,core,cores,630,"Strange, I've tried the dask-only example (with lxbatch) but in both cases (with or without the `wait`) it waits forever. I see the job come and go in `condor_q` but nothing happens. Perhaps we're missing something to correctly use `dask_jobqueue` :thinking: . About the choice of `npartitions`: thanks, that's useful information. I should check how many clusters/file we have on average for nanoAOD files. But since I'm feeding in a TChain with (in some cases) several hundred files, I suppose I should choose `npartitions ~ n_files * n_clusters_per_file`? Although, this would quickly amount to much more than ""3x the amount of cores I can use"" (I have O(400) RDF's with each O(200) input files but only a total of O(500) cores to run on)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:724,energy efficiency,core,cores,724,"Strange, I've tried the dask-only example (with lxbatch) but in both cases (with or without the `wait`) it waits forever. I see the job come and go in `condor_q` but nothing happens. Perhaps we're missing something to correctly use `dask_jobqueue` :thinking: . About the choice of `npartitions`: thanks, that's useful information. I should check how many clusters/file we have on average for nanoAOD files. But since I'm feeding in a TChain with (in some cases) several hundred files, I suppose I should choose `npartitions ~ n_files * n_clusters_per_file`? Although, this would quickly amount to much more than ""3x the amount of cores I can use"" (I have O(400) RDF's with each O(200) input files but only a total of O(500) cores to run on)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:685,safety,input,input,685,"Strange, I've tried the dask-only example (with lxbatch) but in both cases (with or without the `wait`) it waits forever. I see the job come and go in `condor_q` but nothing happens. Perhaps we're missing something to correctly use `dask_jobqueue` :thinking: . About the choice of `npartitions`: thanks, that's useful information. I should check how many clusters/file we have on average for nanoAOD files. But since I'm feeding in a TChain with (in some cases) several hundred files, I suppose I should choose `npartitions ~ n_files * n_clusters_per_file`? Although, this would quickly amount to much more than ""3x the amount of cores I can use"" (I have O(400) RDF's with each O(200) input files but only a total of O(500) cores to run on)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:685,usability,input,input,685,"Strange, I've tried the dask-only example (with lxbatch) but in both cases (with or without the `wait`) it waits forever. I see the job come and go in `condor_q` but nothing happens. Perhaps we're missing something to correctly use `dask_jobqueue` :thinking: . About the choice of `npartitions`: thanks, that's useful information. I should check how many clusters/file we have on average for nanoAOD files. But since I'm feeding in a TChain with (in some cases) several hundred files, I suppose I should choose `npartitions ~ n_files * n_clusters_per_file`? Although, this would quickly amount to much more than ""3x the amount of cores I can use"" (I have O(400) RDF's with each O(200) input files but only a total of O(500) cores to run on)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:582,deployability,manag,manage,582,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:51,energy efficiency,schedul,scheduler,51,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:582,energy efficiency,manag,manage,582,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:27,integrability,sub,submit,27,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:543,integrability,interfac,interface,543,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:39,interoperability,distribut,distributed,39,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:543,interoperability,interfac,interface,543,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:543,modifiability,interfac,interface,543,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:51,performance,schedul,scheduler,51,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:336,performance,overhead,overhead,336,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:141,safety,test,test,141,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:582,safety,manag,manage,582,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:101,testability,understand,understand,101,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:141,testability,test,test,141,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:592,testability,understand,understand,592,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:223,availability,cluster,cluster,223,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:277,availability,cluster,cluster,277,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:738,availability,cluster,cluster,738,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1031,availability,cluster,clusters,1031,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1613,availability,cluster,clusters,1613,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:2,deployability,manag,managed,2,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:223,deployability,cluster,cluster,223,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:277,deployability,cluster,cluster,277,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:738,deployability,cluster,cluster,738,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1031,deployability,cluster,clusters,1031,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1217,deployability,build,build,1217,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1613,deployability,cluster,clusters,1613,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:2,energy efficiency,manag,managed,2,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:303,energy efficiency,core,cores,303,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:90,integrability,batch,batchdocs,90,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:234,integrability,configur,configured,234,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:713,integrability,sub,submit,713,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:838,integrability,sub,submit,838,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:865,integrability,sub,submit,865,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:892,integrability,sub,submit,892,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:143,interoperability,distribut,distributed,143,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:268,interoperability,socket,socket,268,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:559,interoperability,socket,socket,559,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:234,modifiability,configur,configured,234,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:90,performance,batch,batchdocs,90,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:325,performance,memor,memory,325,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:339,performance,disk,disk,339,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1508,performance,overhead,overhead,1508,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:2,safety,manag,managed,2,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1315,safety,test,test,1315,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:234,security,configur,configured,234,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:268,security,soc,socket,268,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:559,security,soc,socket,559,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1315,testability,test,test,1315,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:325,usability,memor,memory,325,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:960,usability,document,documentation,960,"I managed to get it to work on HTCondor/lxbatch thanks to the instructions [here](https://batchdocs.web.cern.ch/specialpayload/dask.html). The distributed RDF case (with the `wait_for_workers` call) works fine provided the cluster is configured as:. ```python. import socket . cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"",. job_extra={. ""+JobFlavour"": '""espresso""',. 'should_transfer_files': 'Yes',. 'when_to_transfer_output': 'ON_EXIT',. 'getenv': 'True'. },. death_timeout = '60', . scheduler_options={. 'port': 8786,. 'host': socket.gethostname(). },. extra=['--worker-port 10000:10100']. ). ```. Note that for the dask-only example I had to use futures instead of `delayed`, and submit explicitly to the cluster (and this works both with and without the `wait` call, as expected):. ```python. x = client.submit(inc, 1). y = client.submit(inc, 2). z = client.submit(add, x, y). print(f""Result is: {z.result()}""). ```. The dask documentation is not very enlightening about the use of `delayed` with clusters... As for using the `SLURMCluster`, just adding the call to `wait_for_workers` worked fine with the config I had before :+1:. If you'd like I'll try again with the next nightly build including your merged PR, without the explicit call to `wait_for_workers`. > I would try to test first with npartitions ~ n_files * (n_clusters_per_file / 5) so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. If I may abuse the thread with a naive question: how do you get the number of clusters in a file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:147,deployability,configurat,configuration,147,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: ! Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:414,deployability,continu,continue,414,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: ! Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:86,integrability,interfac,interfaces,86,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: ! Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:147,integrability,configur,configuration,147,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: ! Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:459,integrability,topic,topics,459,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: ! Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:86,interoperability,interfac,interfaces,86,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: ! Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:246,interoperability,distribut,distributed,246,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: ! Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:86,modifiability,interfac,interfaces,86,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: ! Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:147,modifiability,configur,configuration,147,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: ! Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:374,performance,time,time,374,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: ! Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:147,security,configur,configuration,147,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: ! Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:42,usability,learn,learning,42,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: ! Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:223,usability,user,users,223,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: ! Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9430:87,deployability,releas,release,87,"Which of the builtin packages can we use from the distro - are we waiting for the next release of cppzmq or zeromq, and can we use a current release for the other one? For testing we try to use distro packages wherever possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:141,deployability,releas,release,141,"Which of the builtin packages can we use from the distro - are we waiting for the next release of cppzmq or zeromq, and can we use a current release for the other one? For testing we try to use distro packages wherever possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:133,energy efficiency,current,current,133,"Which of the builtin packages can we use from the distro - are we waiting for the next release of cppzmq or zeromq, and can we use a current release for the other one? For testing we try to use distro packages wherever possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:21,modifiability,pac,packages,21,"Which of the builtin packages can we use from the distro - are we waiting for the next release of cppzmq or zeromq, and can we use a current release for the other one? For testing we try to use distro packages wherever possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:201,modifiability,pac,packages,201,"Which of the builtin packages can we use from the distro - are we waiting for the next release of cppzmq or zeromq, and can we use a current release for the other one? For testing we try to use distro packages wherever possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:172,safety,test,testing,172,"Which of the builtin packages can we use from the distro - are we waiting for the next release of cppzmq or zeromq, and can we use a current release for the other one? For testing we try to use distro packages wherever possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:172,testability,test,testing,172,"Which of the builtin packages can we use from the distro - are we waiting for the next release of cppzmq or zeromq, and can we use a current release for the other one? For testing we try to use distro packages wherever possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:58,deployability,releas,release,58,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:120,deployability,patch,patch,120,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:135,deployability,version,version,135,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:178,deployability,releas,release,178,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:290,deployability,releas,release,290,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:339,deployability,releas,release,339,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:135,integrability,version,version,135,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:135,modifiability,version,version,135,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:206,modifiability,pac,package,206,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:120,safety,patch,patch,120,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:308,safety,test,test,308,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:120,security,patch,patch,120,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:308,testability,test,test,308,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:329,usability,support,supported,329,"For zeromq (libzmq): indeed, we have to wait for the next release, anything higher than 4.3.4 (not sure if it will be a patch or minor version bump). For cppzmq: the most recent release works. Most distros package cppzmq together with libzmq though, so still need to wait for libzmq's next release. I didn't test what the oldest supported release was.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:126,modifiability,pac,package,126,"Yes, that's a different one, [cppzmq](https://github.com/zeromq/cppzmq) includes zmq.hpp, which is included in the Ubuntu dev package, e.g. this one: https://packages.ubuntu.com/impish/amd64/libzmq3-dev/filelist",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:158,modifiability,pac,packages,158,"Yes, that's a different one, [cppzmq](https://github.com/zeromq/cppzmq) includes zmq.hpp, which is included in the Ubuntu dev package, e.g. this one: https://packages.ubuntu.com/impish/amd64/libzmq3-dev/filelist",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:172,deployability,depend,depends,172,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:190,deployability,version,version,190,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:276,deployability,version,version,276,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:22,energy efficiency,current,current,22,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:172,integrability,depend,depends,172,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:190,integrability,version,version,190,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:276,integrability,version,version,276,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:77,modifiability,pac,packages,77,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:172,modifiability,depend,depends,172,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:190,modifiability,version,version,190,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:276,modifiability,version,version,276,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:110,performance,time,time,110,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:129,reliability,doe,does,129,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:172,safety,depend,depends,172,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:30,testability,understand,understanding,30,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:172,testability,depend,depends,172,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:36,deployability,build,build,36,"I see now that you [added it to the build configuration](https://github.com/root-project/rootspi/commit/0353d6200a1390c2af1c0c109658ba01615b0f25), that's great, thanks! We should keep the issue open then to revisit the builtin configuration later, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:42,deployability,configurat,configuration,42,"I see now that you [added it to the build configuration](https://github.com/root-project/rootspi/commit/0353d6200a1390c2af1c0c109658ba01615b0f25), that's great, thanks! We should keep the issue open then to revisit the builtin configuration later, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:227,deployability,configurat,configuration,227,"I see now that you [added it to the build configuration](https://github.com/root-project/rootspi/commit/0353d6200a1390c2af1c0c109658ba01615b0f25), that's great, thanks! We should keep the issue open then to revisit the builtin configuration later, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:42,integrability,configur,configuration,42,"I see now that you [added it to the build configuration](https://github.com/root-project/rootspi/commit/0353d6200a1390c2af1c0c109658ba01615b0f25), that's great, thanks! We should keep the issue open then to revisit the builtin configuration later, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:227,integrability,configur,configuration,227,"I see now that you [added it to the build configuration](https://github.com/root-project/rootspi/commit/0353d6200a1390c2af1c0c109658ba01615b0f25), that's great, thanks! We should keep the issue open then to revisit the builtin configuration later, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:42,modifiability,configur,configuration,42,"I see now that you [added it to the build configuration](https://github.com/root-project/rootspi/commit/0353d6200a1390c2af1c0c109658ba01615b0f25), that's great, thanks! We should keep the issue open then to revisit the builtin configuration later, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:227,modifiability,configur,configuration,227,"I see now that you [added it to the build configuration](https://github.com/root-project/rootspi/commit/0353d6200a1390c2af1c0c109658ba01615b0f25), that's great, thanks! We should keep the issue open then to revisit the builtin configuration later, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:42,security,configur,configuration,42,"I see now that you [added it to the build configuration](https://github.com/root-project/rootspi/commit/0353d6200a1390c2af1c0c109658ba01615b0f25), that's great, thanks! We should keep the issue open then to revisit the builtin configuration later, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:227,security,configur,configuration,227,"I see now that you [added it to the build configuration](https://github.com/root-project/rootspi/commit/0353d6200a1390c2af1c0c109658ba01615b0f25), that's great, thanks! We should keep the issue open then to revisit the builtin configuration later, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:103,availability,avail,available,103,I think we'll just revisit this as part of the ongoing inclusion of new distro versions; reviewing the available set of external packages is just part of that. Let's close this instead!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:79,deployability,version,versions,79,I think we'll just revisit this as part of the ongoing inclusion of new distro versions; reviewing the available set of external packages is just part of that. Let's close this instead!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:79,integrability,version,versions,79,I think we'll just revisit this as part of the ongoing inclusion of new distro versions; reviewing the available set of external packages is just part of that. Let's close this instead!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:79,modifiability,version,versions,79,I think we'll just revisit this as part of the ongoing inclusion of new distro versions; reviewing the available set of external packages is just part of that. Let's close this instead!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:129,modifiability,pac,packages,129,I think we'll just revisit this as part of the ongoing inclusion of new distro versions; reviewing the available set of external packages is just part of that. Let's close this instead!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:103,reliability,availab,available,103,I think we'll just revisit this as part of the ongoing inclusion of new distro versions; reviewing the available set of external packages is just part of that. Let's close this instead!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:89,safety,review,reviewing,89,I think we'll just revisit this as part of the ongoing inclusion of new distro versions; reviewing the available set of external packages is just part of that. Let's close this instead!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:103,safety,avail,available,103,I think we'll just revisit this as part of the ongoing inclusion of new distro versions; reviewing the available set of external packages is just part of that. Let's close this instead!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:103,security,availab,available,103,I think we'll just revisit this as part of the ongoing inclusion of new distro versions; reviewing the available set of external packages is just part of that. Let's close this instead!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:89,testability,review,reviewing,89,I think we'll just revisit this as part of the ongoing inclusion of new distro versions; reviewing the available set of external packages is just part of that. Let's close this instead!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:166,usability,close,close,166,I think we'll just revisit this as part of the ongoing inclusion of new distro versions; reviewing the available set of external packages is just part of that. Let's close this instead!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/pull/9431:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:15,deployability,build,build,15,Unsure why the build system wasn't triggered previously,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9435:11,deployability,build,build,11,"@phsft-bot build just on ROOT-ubuntu2004/default, ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9435
https://github.com/root-project/root/issues/9436:45,availability,failur,failures,45,"I've assigned people for cling and math test failures, please assign others as necessary for other failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:99,availability,failur,failures,99,"I've assigned people for cling and math test failures, please assign others as necessary for other failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:45,deployability,fail,failures,45,"I've assigned people for cling and math test failures, please assign others as necessary for other failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:99,deployability,fail,failures,99,"I've assigned people for cling and math test failures, please assign others as necessary for other failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:45,performance,failur,failures,45,"I've assigned people for cling and math test failures, please assign others as necessary for other failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:99,performance,failur,failures,99,"I've assigned people for cling and math test failures, please assign others as necessary for other failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:45,reliability,fail,failures,45,"I've assigned people for cling and math test failures, please assign others as necessary for other failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:99,reliability,fail,failures,99,"I've assigned people for cling and math test failures, please assign others as necessary for other failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:40,safety,test,test,40,"I've assigned people for cling and math test failures, please assign others as necessary for other failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:40,testability,test,test,40,"I've assigned people for cling and math test failures, please assign others as necessary for other failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:574,availability,failur,failures,574,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:23,deployability,build,build,23,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:38,deployability,Releas,Release,38,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:79,deployability,fail,fail,79,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:111,deployability,FAIL,FAILED,111,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:149,deployability,Fail,Failed,149,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:184,deployability,depend,dependency-versions,184,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:205,deployability,Fail,Failed,205,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:290,deployability,Fail,Failed,290,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:351,deployability,Fail,Failed,351,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:388,deployability,Fail,Failed,388,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:424,deployability,Fail,Failed,424,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:545,deployability,Fail,Failed,545,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:567,deployability,log,log,567,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:574,deployability,fail,failures,574,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:650,deployability,fail,failed,650,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:657,deployability,log,log,657,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:184,integrability,depend,dependency-versions,184,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:184,modifiability,depend,dependency-versions,184,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:574,performance,failur,failures,574,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:79,reliability,fail,fail,79,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:111,reliability,FAIL,FAILED,111,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:149,reliability,Fail,Failed,149,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:205,reliability,Fail,Failed,205,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:290,reliability,Fail,Failed,290,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:351,reliability,Fail,Failed,351,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:388,reliability,Fail,Failed,388,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:424,reliability,Fail,Failed,424,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:545,reliability,Fail,Failed,545,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:574,reliability,fail,failures,574,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:650,reliability,fail,failed,650,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:105,safety,test,tests,105,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:184,safety,depend,dependency-versions,184,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:271,safety,test,test-import-numba,271,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:326,safety,test,test-stressMathCoreUnit,326,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:367,safety,test,test-stressmathcore,367,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:404,safety,test,test-TFormulaTests,404,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:567,safety,log,log,567,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:657,safety,log,log,657,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:567,security,log,log,567,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:657,security,log,log,657,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:105,testability,test,tests,105,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:184,testability,depend,dependency-versions,184,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:271,testability,test,test-import-numba,271,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:326,testability,test,test-stressMathCoreUnit,326,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:367,testability,test,test-stressmathcore,367,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:404,testability,test,test-TFormulaTests,404,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:567,testability,log,log,567,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:657,testability,log,log,657,"FYI, after setting the build type to `Release` and rerunning, only these still fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed). ```. and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:17,availability,down,down,17,You can get that down by a couple by addressing:. ```. The 'numba>=0.47.0' distribution was not found and is required by the application. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:27,integrability,coupl,couple,27,You can get that down by a couple by addressing:. ```. The 'numba>=0.47.0' distribution was not found and is required by the application. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:75,interoperability,distribut,distribution,75,You can get that down by a couple by addressing:. ```. The 'numba>=0.47.0' distribution was not found and is required by the application. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:27,modifiability,coupl,couple,27,You can get that down by a couple by addressing:. ```. The 'numba>=0.47.0' distribution was not found and is required by the application. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:27,testability,coupl,couple,27,You can get that down by a couple by addressing:. ```. The 'numba>=0.47.0' distribution was not found and is required by the application. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:38,deployability,instal,installed,38,I did mention that I don't have numba installed and those should be ignored in the description...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:70,deployability,instal,install,70,> those should be ignored in the description... We really want you to install numba if you want to test ROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:99,safety,test,test,99,> those should be ignored in the description... We really want you to install numba if you want to test ROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:99,testability,test,test,99,> those should be ignored in the description... We really want you to install numba if you want to test ROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:60,performance,time,time,60,"@amadio , I believe this report was extremely useful at the time and that meanwhile all issues have been fixed. If I am not wrong, would you be so kind to close the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:155,usability,close,close,155,"@amadio , I believe this report was extremely useful at the time and that meanwhile all issues have been fixed. If I am not wrong, would you be so kind to close the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/pull/9437:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:96,energy efficiency,gpu,gpu,96,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:96,performance,gpu,gpu,96,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:11,deployability,build,build,11,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:91,energy efficiency,gpu,gpu,91,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:25,performance,perform,performance-,25,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:91,performance,gpu,gpu,91,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:25,usability,perform,performance-,25,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:11,deployability,build,build,11,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On -Dfail-on-missing=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:91,energy efficiency,gpu,gpu,91,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On -Dfail-on-missing=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:25,performance,perform,performance-,25,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On -Dfail-on-missing=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:91,performance,gpu,gpu,91,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On -Dfail-on-missing=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:25,usability,perform,performance-,25,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On -Dfail-on-missing=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9442:11,deployability,build,build,11,"@phsft-bot build just on ROOT-ubuntu2004/default, ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9442
https://github.com/root-project/root/pull/9442:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9442
https://github.com/root-project/root/pull/9444:26,deployability,updat,updating,26,"Hi @rahulgrit, thanks for updating the PR! Locally it works now, I'll ask the CI to test as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:26,safety,updat,updating,26,"Hi @rahulgrit, thanks for updating the PR! Locally it works now, I'll ask the CI to test as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:84,safety,test,test,84,"Hi @rahulgrit, thanks for updating the PR! Locally it works now, I'll ask the CI to test as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:26,security,updat,updating,26,"Hi @rahulgrit, thanks for updating the PR! Locally it works now, I'll ask the CI to test as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:84,testability,test,test,84,"Hi @rahulgrit, thanks for updating the PR! Locally it works now, I'll ask the CI to test as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:7,availability,failur,failures,7,"The CI failures are unrelated to this PR. You can find them also in other PRs, for example https://github.com/root-project/root/pull/9601.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:7,deployability,fail,failures,7,"The CI failures are unrelated to this PR. You can find them also in other PRs, for example https://github.com/root-project/root/pull/9601.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:7,performance,failur,failures,7,"The CI failures are unrelated to this PR. You can find them also in other PRs, for example https://github.com/root-project/root/pull/9601.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:7,reliability,fail,failures,7,"The CI failures are unrelated to this PR. You can find them also in other PRs, for example https://github.com/root-project/root/pull/9601.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/issues/9445:13,availability,error,errors,13,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:162,availability,error,error,162,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:595,availability,error,error,595,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1032,availability,error,error,1032,"owing your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1471,availability,error,error,1471,".clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1919,availability,error,error,1919,"en.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\belle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2347,availability,error,error,2347,".clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2787,availability,error,error,2787,"en\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3229,availability,error,error,3229,"-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3667,availability,error,error,3667,"ng-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4110,availability,error,error,4110,"g-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4575,availability,error,error,4575,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5000,availability,error,error,5000,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:403,deployability,build,build,403,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:840,deployability,build,build,840,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1279,deployability,build,build,1279,":\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1725,deployability,build,build,1725,"lenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2155,deployability,build,build,2155,"ers\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\mast",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2595,deployability,build,build,2595,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3037,deployability,build,build,3037,"\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\maste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3475,deployability,build,build,3475,"ellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3918,deployability,build,build,3918,"enot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4381,deployability,build,build,4381,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5252,deployability,build,build,5252,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13,performance,error,errors,13,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:162,performance,error,error,162,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:595,performance,error,error,595,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1032,performance,error,error,1032,"owing your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1471,performance,error,error,1471,".clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1919,performance,error,error,1919,"en.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\belle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2347,performance,error,error,2347,".clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2787,performance,error,error,2787,"en\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3229,performance,error,error,3229,"-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3667,performance,error,error,3667,"ng-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4110,performance,error,error,4110,"g-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4575,performance,error,error,4575,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5000,performance,error,error,5000,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13,safety,error,errors,13,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:162,safety,error,error,162,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:203,safety,sanit,sanitizer,203,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:413,safety,sanit,sanitizer,413,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:595,safety,error,error,595,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:636,safety,sanit,sanitizer,636,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:850,safety,sanit,sanitizer,850,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1032,safety,error,error,1032,"owing your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1073,safety,sanit,sanitizer,1073,"enot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1289,safety,sanit,sanitizer,1289,"llenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1471,safety,error,error,1471,".clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1512,safety,sanit,sanitizer,1512,"it\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1735,safety,sanit,sanitizer,1735,"ster\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1919,safety,error,error,1919,"en.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\belle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1960,safety,sanit,sanitizer,1960,"nterpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2165,safety,sanit,sanitizer,2165,"\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2347,safety,error,error,2347,".clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2388,safety,sanit,sanitizer,2388,"it\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\ll",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2605,safety,sanit,sanitizer,2605,"git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2787,safety,error,error,2787,"en\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2828,safety,sanit,sanitizer,2828,"llenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3047,safety,sanit,sanitizer,3047,"lenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interprete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3229,safety,error,error,3229,"-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3270,safety,sanit,sanitizer,3270,"ter\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3485,safety,sanit,sanitizer,3485,"master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3667,safety,error,error,3667,"ng-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3708,safety,sanit,sanitizer,3708,"aster\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3928,safety,sanit,sanitizer,3928,"ter\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4110,safety,error,error,4110,"g-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4151,safety,sanit,sanitizer,4151,"ster\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4391,safety,sanit,sanitizer,4391,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4575,safety,error,error,4575,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4616,safety,sanit,sanitizer,4616,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4818,safety,sanit,sanitizer,4818,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5000,safety,error,error,5000,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5041,safety,sanit,sanitizer,5041,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5262,safety,sanit,sanitizer,5262,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:203,security,sanit,sanitizer,203,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:413,security,sanit,sanitizer,413,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:636,security,sanit,sanitizer,636,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:850,security,sanit,sanitizer,850,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1073,security,sanit,sanitizer,1073,"enot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1289,security,sanit,sanitizer,1289,"llenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1512,security,sanit,sanitizer,1512,"it\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1735,security,sanit,sanitizer,1735,"ster\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1960,security,sanit,sanitizer,1960,"nterpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2165,security,sanit,sanitizer,2165,"\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2388,security,sanit,sanitizer,2388,"it\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\ll",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2605,security,sanit,sanitizer,2605,"git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2828,security,sanit,sanitizer,2828,"llenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3047,security,sanit,sanitizer,3047,"lenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interprete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3270,security,sanit,sanitizer,3270,"ter\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3485,security,sanit,sanitizer,3485,"master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3708,security,sanit,sanitizer,3708,"aster\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3928,security,sanit,sanitizer,3928,"ter\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4151,security,sanit,sanitizer,4151,"ster\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4391,security,sanit,sanitizer,4391,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4616,security,sanit,sanitizer,4616,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4818,security,sanit,sanitizer,4818,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5041,security,sanit,sanitizer,5041,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5262,security,sanit,sanitizer,5262,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13,usability,error,errors,13,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:68,usability,User,Users,68,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:128,usability,Support,Support,128,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:162,usability,error,error,162,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:286,usability,User,Users,286,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:333,usability,tool,tools,333,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:386,usability,User,Users,386,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:444,usability,tool,tools,444,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:501,usability,User,Users,501,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:561,usability,Support,Support,561,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:595,usability,error,error,595,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:719,usability,User,Users,719,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:766,usability,tool,tools,766,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:823,usability,User,Users,823,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:881,usability,tool,tools,881,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:938,usability,User,Users,938,"Here are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:998,usability,Support,Support,998,"re are the errors I got when following your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1032,usability,error,error,1032,"owing your receipe:. ```. ... C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1156,usability,User,Users,1156,"al error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \buil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1203,usability,tool,tools,1203,"itizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1320,usability,tool,tools,1320,"\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1377,usability,User,Users,1377,") [C:\Users\bel. lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1437,usability,Support,Support,1437,"rc\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or director",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1471,usability,error,error,1471,".clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1595,usability,User,Users,1595,"or C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1642,usability,tool,tools,1642,"/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\cla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1710,usability,User,Users,1710," C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1766,usability,tool,tools,1766,"ls\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users. \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1825,usability,User,Users,1825,". \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: '",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1885,usability,Support,Support,1885,"ang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1919,usability,error,error,1919,"en.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\belle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2043,usability,User,Users,2043,"Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2090,usability,tool,tools,2090,"face.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\uti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2138,usability,User,Users,2138,"urce file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2196,usability,tool,tools,2196,"src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Supp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2253,usability,User,Users,2253,") [C:\Use. rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2313,usability,Support,Support,2313,"rc\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or di",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2347,usability,error,error,2347,".clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2471,usability,User,Users,2471,"or C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2518,usability,tool,tools,2518,"/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2636,usability,tool,tools,2636,"rc\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Suppor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2693,usability,User,Users,2693,"ter.cpp). [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2753,usability,Support,Support,2753,"llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or dire",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2787,usability,error,error,2787,"en\obj.clang-tblgen.vcxp. roj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2911,usability,User,Users,2911,"atal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\belle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2958,usability,tool,tools,2958,"anitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\to",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3022,usability,User,Users,3022," source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3078,usability,tool,tools,3078,"llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Suppo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3135,usability,User,Users,3135,"Users\bellenot. \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3195,usability,Support,Support,3195,"ls\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or dir",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3229,usability,error,error,3229,"-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3353,usability,User,Users,3353,"83:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3400,usability,tool,tools,3400,"interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3458,usability,User,User,3458," file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3516,usability,tool,tools,3516,"ools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3573,usability,User,Users,3573,":\Us. ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3633,usability,Support,Support,3633,"ools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3667,usability,error,error,3667,"ng-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3791,usability,User,Users,3791,"1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3838,usability,tool,tools,3838,"n_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3903,usability,User,Users,3903,"C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3959,usability,tool,tools,3959,"s\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4016,usability,User,Users,4016,"\. Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Canno",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4076,usability,Support,Support,4076,"ols\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4110,usability,error,error,4110,"g-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4234,usability,User,Users,4234,"083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4281,usability,tool,tools,4281,"_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4366,usability,User,Users,4366,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4422,usability,tool,tools,4422,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4481,usability,User,Users,4481,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4541,usability,Support,Support,4541,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4575,usability,error,error,4575,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4699,usability,User,Users,4699,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4746,usability,tool,tools,4746,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4791,usability,User,Users,4791,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4849,usability,tool,tools,4849,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4906,usability,User,Users,4906,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4966,usability,Support,Support,4966,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5000,usability,error,error,5000,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5124,usability,User,Users,5124,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5171,usability,tool,tools,5171,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5237,usability,User,Users,5237,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5293,usability,tool,tools,5293,"rs\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User. s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:. \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer. enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c. lang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu. ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\. Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLTagsEmitter.cpp) [C. :\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj. ... . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:50,availability,error,errors,50,"@wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:109,availability,error,errors,109,"@wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:18,deployability,build,build,18,"@wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:209,integrability,messag,message,209,"@wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:209,interoperability,messag,message,209,"@wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:50,performance,error,errors,50,"@wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:109,performance,error,errors,109,"@wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:161,performance,parallel,parallel,161,"@wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:50,safety,error,errors,50,"@wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:109,safety,error,errors,109,"@wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:50,usability,error,errors,50,"@wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:109,usability,error,errors,109,"@wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:52,availability,error,errors,52,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:111,availability,error,errors,111,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:20,deployability,build,build,20,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:299,deployability,instal,install,299,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:211,integrability,messag,message,211,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:331,integrability,compon,components,331,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:211,interoperability,messag,message,211,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:331,interoperability,compon,components,331,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:331,modifiability,compon,components,331,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:52,performance,error,errors,52,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:111,performance,error,errors,111,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:163,performance,parallel,parallel,163,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:52,safety,error,errors,52,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:111,safety,error,errors,111,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:320,safety,Sanit,Sanitizer,320,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:320,security,Sanit,Sanitizer,320,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:52,usability,error,errors,52,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:111,usability,error,errors,111,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:345,usability,Visual,Visual,345,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:377,usability,user,user-images,377,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,. Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio? ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:61,integrability,compon,component,61,"@wmyyy I just checked and I have the ""C++ Address Sanitizer"" component in Visual studio.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:61,interoperability,compon,component,61,"@wmyyy I just checked and I have the ""C++ Address Sanitizer"" component in Visual studio.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:61,modifiability,compon,component,61,"@wmyyy I just checked and I have the ""C++ Address Sanitizer"" component in Visual studio.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:50,safety,Sanit,Sanitizer,50,"@wmyyy I just checked and I have the ""C++ Address Sanitizer"" component in Visual studio.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:50,security,Sanit,Sanitizer,50,"@wmyyy I just checked and I have the ""C++ Address Sanitizer"" component in Visual studio.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:74,usability,Visual,Visual,74,"@wmyyy I just checked and I have the ""C++ Address Sanitizer"" component in Visual studio.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:36,deployability,instal,installed,36,"Hi @bellenot,. Can you check if you installed these two components as well? ![image](https://user-images.githubusercontent.com/17844901/150990535-727b11c4-db76-43bb-a55f-ccbeb3c348ec.png). If it still not work, can you try to set include path? for example: set INCLUDE=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\crt\src;%INCLUDE%. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:56,integrability,compon,components,56,"Hi @bellenot,. Can you check if you installed these two components as well? ![image](https://user-images.githubusercontent.com/17844901/150990535-727b11c4-db76-43bb-a55f-ccbeb3c348ec.png). If it still not work, can you try to set include path? for example: set INCLUDE=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\crt\src;%INCLUDE%. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:56,interoperability,compon,components,56,"Hi @bellenot,. Can you check if you installed these two components as well? ![image](https://user-images.githubusercontent.com/17844901/150990535-727b11c4-db76-43bb-a55f-ccbeb3c348ec.png). If it still not work, can you try to set include path? for example: set INCLUDE=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\crt\src;%INCLUDE%. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:56,modifiability,compon,components,56,"Hi @bellenot,. Can you check if you installed these two components as well? ![image](https://user-images.githubusercontent.com/17844901/150990535-727b11c4-db76-43bb-a55f-ccbeb3c348ec.png). If it still not work, can you try to set include path? for example: set INCLUDE=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\crt\src;%INCLUDE%. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:93,usability,user,user-images,93,"Hi @bellenot,. Can you check if you installed these two components as well? ![image](https://user-images.githubusercontent.com/17844901/150990535-727b11c4-db76-43bb-a55f-ccbeb3c348ec.png). If it still not work, can you try to set include path? for example: set INCLUDE=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\crt\src;%INCLUDE%. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:302,usability,Visual,Visual,302,"Hi @bellenot,. Can you check if you installed these two components as well? ![image](https://user-images.githubusercontent.com/17844901/150990535-727b11c4-db76-43bb-a55f-ccbeb3c348ec.png). If it still not work, can you try to set include path? for example: set INCLUDE=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\crt\src;%INCLUDE%. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:335,usability,Tool,Tools,335,"Hi @bellenot,. Can you check if you installed these two components as well? ![image](https://user-images.githubusercontent.com/17844901/150990535-727b11c4-db76-43bb-a55f-ccbeb3c348ec.png). If it still not work, can you try to set include path? for example: set INCLUDE=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\crt\src;%INCLUDE%. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:197,availability,error,error,197,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:307,availability,error,error,307,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:530,deployability,build,build,530,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:547,deployability,Releas,Release,547,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:575,deployability,releas,release,575,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:197,performance,error,error,197,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:307,performance,error,error,307,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:197,safety,error,error,197,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:307,safety,error,error,307,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:348,safety,sanit,sanitizer,348,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:348,security,sanit,sanitizer,348,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:85,usability,Visual,Visual,85,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:117,usability,Tool,Tools,117,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:197,usability,error,error,197,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:213,usability,User,Users,213,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:273,usability,Support,Support,273,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:307,usability,error,error,307,"Still no luck, even when adding . ```. set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%. ```. I still have the following error:. ```. C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:. Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory. ```. I'll investigate more. And BTW, I see that:. > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then. > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:498,availability,error,error,498,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1044,availability,error,error,1044,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1128,availability,error,errors,1128,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:324,deployability,build,build,324,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:520,deployability,build,build,520,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:549,deployability,build,build,549,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:646,deployability,build,build,646,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:770,deployability,build,build,770,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:808,deployability,Build,Building,808,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:844,deployability,build,build,844,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:897,deployability,FAIL,FAILED,897,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:910,deployability,Build,Building,910,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:946,deployability,build,build,946,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1001,deployability,FAIL,FAILED,1001,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1009,deployability,Build,Build,1009,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1015,deployability,FAIL,FAILED,1015,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1279,deployability,upgrad,upgrade,1279,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1188,interoperability,incompatib,incompatibility,1188,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1279,modifiability,upgrad,upgrade,1279,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:498,performance,error,error,498,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1044,performance,error,error,1044,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1128,performance,error,errors,1128,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:897,reliability,FAIL,FAILED,897,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1001,reliability,FAIL,FAILED,1001,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1015,reliability,FAIL,FAILED,1015,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:498,safety,error,error,498,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1044,safety,error,error,1044,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1128,safety,error,errors,1128,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:139,usability,Visual,Visual,139,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:171,usability,Tool,Tools,171,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:405,usability,Visual,Visual,405,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:498,usability,error,error,498,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:513,usability,Custom,Custom,513,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:534,usability,User,Users,534,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:631,usability,User,Users,631,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:755,usability,User,Users,755,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:829,usability,User,Users,829,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:931,usability,User,Users,931,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1044,usability,error,error,1044,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1128,usability,error,errors,1128,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1227,usability,Visual,Visual,1227,"OK, back to this. For the record, the working syntax (for me) is:. ```. set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug. set ASAN_OPTIONS=detect_odr_violation=0. ```. And at the end of the build I got:. ```. Generating tutorials/hsimple.root. C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets. (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31. 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim. ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED. ```. So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:23,availability,error,error,23,So I can reproduce the error in 32 bit mode. But the 64 bit mode fails as previously reported. Le's see how it goes after the LLVM upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:65,deployability,fail,fails,65,So I can reproduce the error in 32 bit mode. But the 64 bit mode fails as previously reported. Le's see how it goes after the LLVM upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:131,deployability,upgrad,upgrade,131,So I can reproduce the error in 32 bit mode. But the 64 bit mode fails as previously reported. Le's see how it goes after the LLVM upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:131,modifiability,upgrad,upgrade,131,So I can reproduce the error in 32 bit mode. But the 64 bit mode fails as previously reported. Le's see how it goes after the LLVM upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:23,performance,error,error,23,So I can reproduce the error in 32 bit mode. But the 64 bit mode fails as previously reported. Le's see how it goes after the LLVM upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:65,reliability,fail,fails,65,So I can reproduce the error in 32 bit mode. But the 64 bit mode fails as previously reported. Le's see how it goes after the LLVM upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:23,safety,error,error,23,So I can reproduce the error in 32 bit mode. But the 64 bit mode fails as previously reported. Le's see how it goes after the LLVM upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:23,usability,error,error,23,So I can reproduce the error in 32 bit mode. But the 64 bit mode fails as previously reported. Le's see how it goes after the LLVM upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:30,deployability,version,version,30,Hi @bellenot . LLVM is now at version 16: is this still an issue? Can it be closed?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:30,integrability,version,version,30,Hi @bellenot . LLVM is now at version 16: is this still an issue? Can it be closed?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:30,modifiability,version,version,30,Hi @bellenot . LLVM is now at version 16: is this still an issue? Can it be closed?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:76,usability,close,closed,76,Hi @bellenot . LLVM is now at version 16: is this still an issue? Can it be closed?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:32,deployability,version,version,32,> Hi @bellenot . LLVM is now at version 16: is this still an issue? Can it be closed? I'll try,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:32,integrability,version,version,32,> Hi @bellenot . LLVM is now at version 16: is this still an issue? Can it be closed? I'll try,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:32,modifiability,version,version,32,> Hi @bellenot . LLVM is now at version 16: is this still an issue? Can it be closed? I'll try,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:78,usability,close,closed,78,> Hi @bellenot . LLVM is now at version 16: is this still an issue? Can it be closed? I'll try,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:12,deployability,fail,fails,12,So it still fails with LLVM 16,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:12,reliability,fail,fails,12,So it still fails with LLVM 16,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:30,availability,error,errors,30,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:253,availability,ERROR,ERROR,253,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4144,availability,operat,operator,4144,"TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #22 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #23 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #24 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #25 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #26 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #27 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #28 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). 0x1262507beddc is located 12 bytes inside of 16-byte region [0x1262507bedd0,0x1262507bede0). freed by thread T0 here:. #0 0x7ffdb6f705a5 in operator delete(void *) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_delete_scalar_thunk.cpp:42. #1 0x7ffdb6bbaa78 in TStorage::ObjectDealloc(void *) C:\root-dev\git\master\core\base\src\TStorage.cxx:325. #2 0x7ffdb6b79a01 in TObject::operator delete(void *) C:\root-dev\git\master\core\base\src\TObject.cxx:1095. #3 0x7ffdb6da535a in TObject::`vector deleting dtor'(unsigned int) (C:\root-dev\build\x64\relwithdebinfo\bin\libCore.dll+0x1802a535a). #4 0x7ffdb6b7a838 in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:113. #5 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4401,availability,operat,operator,4401,"-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #23 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #24 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #25 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #26 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #27 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #28 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). 0x1262507beddc is located 12 bytes inside of 16-byte region [0x1262507bedd0,0x1262507bede0). freed by thread T0 here:. #0 0x7ffdb6f705a5 in operator delete(void *) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_delete_scalar_thunk.cpp:42. #1 0x7ffdb6bbaa78 in TStorage::ObjectDealloc(void *) C:\root-dev\git\master\core\base\src\TStorage.cxx:325. #2 0x7ffdb6b79a01 in TObject::operator delete(void *) C:\root-dev\git\master\core\base\src\TObject.cxx:1095. #3 0x7ffdb6da535a in TObject::`vector deleting dtor'(unsigned int) (C:\root-dev\build\x64\relwithdebinfo\bin\libCore.dll+0x1802a535a). #4 0x7ffdb6b7a838 in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:113. #5 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:8127,availability,operat,operator,8127,"n\src\rootcling_impl.cxx:2644. #25 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #26 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #27 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #28 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:8396,availability,operat,operator,8396,"OOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #26 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #27 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #28 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13586,availability,error,error,13586,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13859,availability,error,errors,13859,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4560,deployability,build,build,4560,"xx:6251. #24 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #25 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #26 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #27 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #28 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). 0x1262507beddc is located 12 bytes inside of 16-byte region [0x1262507bedd0,0x1262507bede0). freed by thread T0 here:. #0 0x7ffdb6f705a5 in operator delete(void *) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_delete_scalar_thunk.cpp:42. #1 0x7ffdb6bbaa78 in TStorage::ObjectDealloc(void *) C:\root-dev\git\master\core\base\src\TStorage.cxx:325. #2 0x7ffdb6b79a01 in TObject::operator delete(void *) C:\root-dev\git\master\core\base\src\TObject.cxx:1095. #3 0x7ffdb6da535a in TObject::`vector deleting dtor'(unsigned int) (C:\root-dev\build\x64\relwithdebinfo\bin\libCore.dll+0x1802a535a). #4 0x7ffdb6b7a838 in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:113. #5 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13125,deployability,Stack,Stack,13125,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13149,deployability,Stack,Stack,13149,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13172,deployability,Stack,Stack,13172,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13197,deployability,Stack,Stack,13197,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13221,deployability,Stack,Stack,13221,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13313,deployability,Contain,Container,13313,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13608,deployability,build,build,13608,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13631,deployability,build,build,13631,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13759,deployability,build,build,13759,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:516,energy efficiency,core,core,516,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:633,energy efficiency,core,core,633,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:737,energy efficiency,core,core,737,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:862,energy efficiency,core,core,862,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:966,energy efficiency,core,core,966,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1083,energy efficiency,core,core,1083,"ting G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1200,energy efficiency,core,core,1200,"========================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #14 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1325,energy efficiency,core,core,1325,"pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #14 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #15 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1420,energy efficiency,core,core,1420,"T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #14 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #15 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #16 0x7ffdb6c0921e in TUrl::ParseOptions(void) cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1593,energy efficiency,core,core,1593,"esMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #14 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #15 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #16 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #17 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1735,energy efficiency,core,core,1735,"core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #14 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #15 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #16 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #17 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #19 0x7ffdcad8b4ab in C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1864,energy efficiency,core,core,1864,"\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #14 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #15 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #16 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #17 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #19 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #20 0x7ffdb74e8b32 in FinalizeStreamerInfoWri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1987,energy efficiency,core,core,1987,":827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #14 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #15 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #16 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #17 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #19 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #20 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #21 0x7ffdb74ebcc2 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2113,energy efficiency,core,core,2113," #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #14 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #15 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #16 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #17 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #19 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #20 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #21 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2222,energy efficiency,core,core,2222,"2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #14 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #15 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #16 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #17 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #19 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #20 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #21 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2344,energy efficiency,core,core,2344,":400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #14 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #15 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #16 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #17 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #19 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #20 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #21 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #22 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2447,energy efficiency,core,core,2447,". #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #14 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #15 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #16 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #17 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #19 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #20 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #21 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #22 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2556,energy efficiency,core,core,2556,"tency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #14 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #15 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #16 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #17 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #19 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #20 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #21 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #22 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #23 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2928,energy efficiency,core,core,2928,"ObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #14 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #15 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #16 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #17 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #19 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #20 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #21 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #22 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #23 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #24 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #25 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #26 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #27 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3191,energy efficiency,alloc,allocator,3191,"*) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #15 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #16 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #17 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #19 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #20 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #21 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #22 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #23 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #24 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #25 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #26 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #27 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #28 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). 0x1262507beddc is located 12 bytes inside of 16-byte region [0x1262507bedd0,0x1262507bede0). freed by thread T0 here:. #0 0x7ffdb6f705a5 in operator delete(void *) D:\a\_work\1\s\src\vctools\a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3300,energy efficiency,core,core,3300,", class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #16 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #17 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #19 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #20 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #21 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #22 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #23 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #24 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #25 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #26 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #27 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #28 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). 0x1262507beddc is located 12 bytes inside of 16-byte region [0x1262507bedd0,0x1262507bede0). freed by thread T0 here:. #0 0x7ffdb6f705a5 in operator delete(void *) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_delete_scalar_thunk.cpp:42. #1 0x7ffdb6bbaa78 in TStorage::ObjectDe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3421,energy efficiency,core,core,3421," C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #17 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #19 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #20 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #21 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #22 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #23 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #24 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #25 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #26 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #27 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #28 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). 0x1262507beddc is located 12 bytes inside of 16-byte region [0x1262507bedd0,0x1262507bede0). freed by thread T0 here:. #0 0x7ffdb6f705a5 in operator delete(void *) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_delete_scalar_thunk.cpp:42. #1 0x7ffdb6bbaa78 in TStorage::ObjectDealloc(void *) C:\root-dev\git\master\core\base\src\TStorage.cxx:325. #2 0x7ffdb6b79a01 in TObject::operator delete(void *",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:3530,energy efficiency,core,core,3530," C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #19 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #20 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #21 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #22 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #23 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #24 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #25 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #26 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #27 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #28 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). 0x1262507beddc is located 12 bytes inside of 16-byte region [0x1262507bedd0,0x1262507bede0). freed by thread T0 here:. #0 0x7ffdb6f705a5 in operator delete(void *) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_delete_scalar_thunk.cpp:42. #1 0x7ffdb6bbaa78 in TStorage::ObjectDealloc(void *) C:\root-dev\git\master\core\base\src\TStorage.cxx:325. #2 0x7ffdb6b79a01 in TObject::operator delete(void *) C:\root-dev\git\master\core\base\src\TObject.cxx:1095. #3 0x7ffdb6da535a in TObject::`vector deleting dtor'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4339,energy efficiency,core,core,4339," #22 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #23 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #24 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #25 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #26 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #27 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #28 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). 0x1262507beddc is located 12 bytes inside of 16-byte region [0x1262507bedd0,0x1262507bede0). freed by thread T0 here:. #0 0x7ffdb6f705a5 in operator delete(void *) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_delete_scalar_thunk.cpp:42. #1 0x7ffdb6bbaa78 in TStorage::ObjectDealloc(void *) C:\root-dev\git\master\core\base\src\TStorage.cxx:325. #2 0x7ffdb6b79a01 in TObject::operator delete(void *) C:\root-dev\git\master\core\base\src\TObject.cxx:1095. #3 0x7ffdb6da535a in TObject::`vector deleting dtor'(unsigned int) (C:\root-dev\build\x64\relwithdebinfo\bin\libCore.dll+0x1802a535a). #4 0x7ffdb6b7a838 in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:113. #5 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::Recursi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4448,energy efficiency,core,core,4448,"pl.cxx:4962. #23 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #24 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #25 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #26 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #27 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #28 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). 0x1262507beddc is located 12 bytes inside of 16-byte region [0x1262507bedd0,0x1262507bede0). freed by thread T0 here:. #0 0x7ffdb6f705a5 in operator delete(void *) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_delete_scalar_thunk.cpp:42. #1 0x7ffdb6bbaa78 in TStorage::ObjectDealloc(void *) C:\root-dev\git\master\core\base\src\TStorage.cxx:325. #2 0x7ffdb6b79a01 in TObject::operator delete(void *) C:\root-dev\git\master\core\base\src\TObject.cxx:1095. #3 0x7ffdb6da535a in TObject::`vector deleting dtor'(unsigned int) (C:\root-dev\build\x64\relwithdebinfo\bin\libCore.dll+0x1802a535a). #4 0x7ffdb6b7a838 in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:113. #5 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::Ca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4705,energy efficiency,core,core,4705,"ls\crt\vcstartup\src\startup\exe_common.inl:78. #26 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #27 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #28 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). 0x1262507beddc is located 12 bytes inside of 16-byte region [0x1262507bedd0,0x1262507bede0). freed by thread T0 here:. #0 0x7ffdb6f705a5 in operator delete(void *) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_delete_scalar_thunk.cpp:42. #1 0x7ffdb6bbaa78 in TStorage::ObjectDealloc(void *) C:\root-dev\git\master\core\base\src\TStorage.cxx:325. #2 0x7ffdb6b79a01 in TObject::operator delete(void *) C:\root-dev\git\master\core\base\src\TObject.cxx:1095. #3 0x7ffdb6da535a in TObject::`vector deleting dtor'(unsigned int) (C:\root-dev\build\x64\relwithdebinfo\bin\libCore.dll+0x1802a535a). #4 0x7ffdb6b7a838 in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:113. #5 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4822,energy efficiency,core,core,4822,"ls\crt\vcstartup\src\startup\exe_common.inl:288. #27 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #28 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). 0x1262507beddc is located 12 bytes inside of 16-byte region [0x1262507bedd0,0x1262507bede0). freed by thread T0 here:. #0 0x7ffdb6f705a5 in operator delete(void *) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_delete_scalar_thunk.cpp:42. #1 0x7ffdb6bbaa78 in TStorage::ObjectDealloc(void *) C:\root-dev\git\master\core\base\src\TStorage.cxx:325. #2 0x7ffdb6b79a01 in TObject::operator delete(void *) C:\root-dev\git\master\core\base\src\TObject.cxx:1095. #3 0x7ffdb6da535a in TObject::`vector deleting dtor'(unsigned int) (C:\root-dev\build\x64\relwithdebinfo\bin\libCore.dll+0x1802a535a). #4 0x7ffdb6b7a838 in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:113. #5 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemov",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4926,energy efficiency,core,core,4926,"18001257c). #28 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). 0x1262507beddc is located 12 bytes inside of 16-byte region [0x1262507bedd0,0x1262507bede0). freed by thread T0 here:. #0 0x7ffdb6f705a5 in operator delete(void *) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_delete_scalar_thunk.cpp:42. #1 0x7ffdb6bbaa78 in TStorage::ObjectDealloc(void *) C:\root-dev\git\master\core\base\src\TStorage.cxx:325. #2 0x7ffdb6b79a01 in TObject::operator delete(void *) C:\root-dev\git\master\core\base\src\TObject.cxx:1095. #3 0x7ffdb6da535a in TObject::`vector deleting dtor'(unsigned int) (C:\root-dev\build\x64\relwithdebinfo\bin\libCore.dll+0x1802a535a). #4 0x7ffdb6b7a838 in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:113. #5 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5051,energy efficiency,core,core,5051,"yte region [0x1262507bedd0,0x1262507bede0). freed by thread T0 here:. #0 0x7ffdb6f705a5 in operator delete(void *) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_delete_scalar_thunk.cpp:42. #1 0x7ffdb6bbaa78 in TStorage::ObjectDealloc(void *) C:\root-dev\git\master\core\base\src\TStorage.cxx:325. #2 0x7ffdb6b79a01 in TObject::operator delete(void *) C:\root-dev\git\master\core\base\src\TObject.cxx:1095. #3 0x7ffdb6da535a in TObject::`vector deleting dtor'(unsigned int) (C:\root-dev\build\x64\relwithdebinfo\bin\libCore.dll+0x1802a535a). #4 0x7ffdb6b7a838 in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:113. #5 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\mast",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5155,energy efficiency,core,core,5155,"te(void *) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_delete_scalar_thunk.cpp:42. #1 0x7ffdb6bbaa78 in TStorage::ObjectDealloc(void *) C:\root-dev\git\master\core\base\src\TStorage.cxx:325. #2 0x7ffdb6b79a01 in TObject::operator delete(void *) C:\root-dev\git\master\core\base\src\TObject.cxx:1095. #3 0x7ffdb6da535a in TObject::`vector deleting dtor'(unsigned int) (C:\root-dev\build\x64\relwithdebinfo\bin\libCore.dll+0x1802a535a). #4 0x7ffdb6b7a838 in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:113. #5 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5272,energy efficiency,core,core,5272,"bbaa78 in TStorage::ObjectDealloc(void *) C:\root-dev\git\master\core\base\src\TStorage.cxx:325. #2 0x7ffdb6b79a01 in TObject::operator delete(void *) C:\root-dev\git\master\core\base\src\TObject.cxx:1095. #3 0x7ffdb6da535a in TObject::`vector deleting dtor'(unsigned int) (C:\root-dev\build\x64\relwithdebinfo\bin\libCore.dll+0x1802a535a). #4 0x7ffdb6b7a838 in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:113. #5 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5390,energy efficiency,core,core,5390,"TObject::operator delete(void *) C:\root-dev\git\master\core\base\src\TObject.cxx:1095. #3 0x7ffdb6da535a in TObject::`vector deleting dtor'(unsigned int) (C:\root-dev\build\x64\relwithdebinfo\bin\libCore.dll+0x1802a535a). #4 0x7ffdb6b7a838 in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:113. #5 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #18 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5516,energy efficiency,core,core,5516,"deleting dtor'(unsigned int) (C:\root-dev\build\x64\relwithdebinfo\bin\libCore.dll+0x1802a535a). #4 0x7ffdb6b7a838 in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:113. #5 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #18 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #19 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5612,energy efficiency,core,core,5612," #4 0x7ffdb6b7a838 in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:113. #5 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #18 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #19 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #20 0x7ffdb6c0921e in TUrl::ParseOptions(void) cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5786,energy efficiency,core,core,5786,"mory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #6 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #18 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #19 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #20 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #21 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5927,energy efficiency,core,core,5927,"e\base\inc\TObject.h:403. #7 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #18 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #19 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #20 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #21 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #23 0x7ffdcad8b4ab in C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6056,energy efficiency,core,core,6056,"nt\src\TList.cxx:644. #8 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #18 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #19 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #20 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #21 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #23 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #24 0x7ffdb74e8b32 in FinalizeStreamerInfoWri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6179,energy efficiency,core,core,6179,"7. #9 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #10 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #18 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #19 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #20 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #21 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #23 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #24 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #25 0x7ffdb74ebcc2 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6305,energy efficiency,core,core,6305,"0 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #18 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #19 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #20 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #21 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #23 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #24 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #25 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6414,energy efficiency,core,core,6414,"02. #11 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #18 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #19 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #20 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #21 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #23 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #24 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #25 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6536,energy efficiency,core,core,6536,"400. #12 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #18 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #19 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #20 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #21 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #23 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #24 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #25 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #26 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6639,energy efficiency,core,core,6639,". #13 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #18 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #19 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #20 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #21 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #23 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #24 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #25 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #26 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6748,energy efficiency,core,core,6748,"stency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #14 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #18 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #19 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #20 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #21 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #23 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #24 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #25 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #26 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #27 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:7120,energy efficiency,core,core,7120,"ObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #18 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #19 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #20 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #21 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #23 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #24 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #25 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #26 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #27 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #28 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:7383,energy efficiency,alloc,allocator,7383,"*) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #19 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #20 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #21 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #23 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #24 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #25 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #26 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #27 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #28 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:7492,energy efficiency,core,core,7492,", class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #20 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #21 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #23 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #24 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #25 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #26 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #27 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #28 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Intern",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:7613,energy efficiency,core,core,7613," C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #21 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #23 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #24 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #25 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #26 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #27 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #28 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Interna",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:7722,energy efficiency,core,core,7722," C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #23 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #24 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #25 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #26 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #27 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #28 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:8076,energy efficiency,alloc,allocated,8076,"preter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #25 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #26 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #27 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #28 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(clas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:8334,energy efficiency,core,core,8334,"OT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #26 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #27 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #28 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:8432,energy efficiency,core,core,8432,"> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #26 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #27 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #28 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:8551,energy efficiency,core,core,8551,"in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #27 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #28 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveCon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:8667,energy efficiency,core,core,8667,"c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #28 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemove",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:8771,energy efficiency,core,core,8771,"7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:8896,energy efficiency,core,core,8896,"ols\crt\vcstartup\src\startup\exe_common.inl:78. #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\maste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:9000,energy efficiency,core,core,9000,"\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:. #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:9117,energy efficiency,core,core,9117,"01c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:9234,energy efficiency,core,core,9234,"thunk.cpp:40. #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #17 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:9360,energy efficiency,core,core,9360,"93. #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #17 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #18 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:9456,energy efficiency,core,core,9456,"1. #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81. #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #17 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #18 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #19 0x7ffdb6c0921e in TUrl::ParseOptions(void) cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:9630,energy efficiency,core,core,9630,"emory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #17 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #18 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #19 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #20 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:9771,energy efficiency,core,core,9771,"re\base\inc\TObject.h:403. #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #17 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #18 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #19 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #20 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #22 0x7ffdcad8b4ab in C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:9900,energy efficiency,core,core,9900,"ont\src\TList.cxx:644. #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #17 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #18 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #19 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #20 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #22 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #23 0x7ffdb74e8b32 in FinalizeStreamerInfoWri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:10023,energy efficiency,core,core,10023,"27. #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #17 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #18 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #19 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #20 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #22 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #23 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #24 0x7ffdb74ebcc2 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:10149,energy efficiency,core,core,10149,"9 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #17 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #18 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #19 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #20 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #22 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #23 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #24 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:10258,energy efficiency,core,core,10258,"02. #10 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #17 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #18 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #19 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #20 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #22 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #23 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #24 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:10380,energy efficiency,core,core,10380,"400. #11 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #17 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #18 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #19 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #20 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #22 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #23 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #24 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #25 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:10483,energy efficiency,core,core,10483,". #12 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #17 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #18 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #19 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #20 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #22 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #23 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #24 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #25 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:10592,energy efficiency,core,core,10592,"stency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency. h:68. #13 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #17 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #18 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #19 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #20 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #22 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #23 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #24 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #25 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #26 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:10964,energy efficiency,core,core,10964,"ObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #17 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #18 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #19 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #20 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #22 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #23 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #24 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #25 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #26 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #27 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #28 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #29 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #30 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:11227,energy efficiency,alloc,allocator,11227,"*) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #18 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #19 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #20 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #22 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #23 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #24 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #25 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #26 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #27 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #28 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #29 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #30 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:11336,energy efficiency,core,core,11336,", class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #19 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #20 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #22 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #23 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #24 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #25 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #26 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #27 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #28 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #29 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #30 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:11457,energy efficiency,core,core,11457," C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #20 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #22 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #23 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #24 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #25 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #26 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #27 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #28 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #29 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #30 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:11566,energy efficiency,core,core,11566," C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #22 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #23 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #24 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #25 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #26 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #27 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #28 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #29 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #30 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507be",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:12110,energy efficiency,core,core,12110,"ass cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #25 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #26 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #27 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #28 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78. #29 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. #30 0x7ffe2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13405,energy efficiency,alloc,alloca,13405,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13431,energy efficiency,alloc,alloca,13431,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:30,performance,error,errors,30,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:253,performance,ERROR,ERROR,253,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13586,performance,error,error,13586,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13859,performance,error,errors,13859,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:20,safety,sanit,sanitizer,20,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:30,safety,error,errors,30,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:253,safety,ERROR,ERROR,253,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13586,safety,error,error,13586,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13859,safety,error,errors,13859,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13900,safety,sanit,sanitizer,13900,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:20,security,sanit,sanitizer,20,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13343,security,cookie,cookie,13343,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13900,security,sanit,sanitizer,13900,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:30,usability,error,errors,30,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:253,usability,ERROR,ERROR,253,"Back to this. I got sanitizer errors with ROOT master, like for example:. ```. Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap. =================================================================. ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8. READ of size 4 at 0x1262507beddc thread T0. #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120. #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129. #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403. #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644. #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827. #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335. #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502. #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400. #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163. #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h. :68. #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:2736,usability,Close,CloseStreamerInfoROOTFile,2736,"TClass.h:504. #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #13 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #14 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #15 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #16 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #17 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #18 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #19 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #20 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #21 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #22 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #23 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #24 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #25 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6928,usability,Close,CloseStreamerInfoROOTFile,6928,"TClass.h:504. #15 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #16 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #17 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #18 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #19 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #20 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #21 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #22 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #23 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #24 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #25 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #26 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #27 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #28 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:10772,usability,Close,CloseStreamerInfoROOTFile,10772,"TClass.h:504. #14 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373. #15 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\TMap.h:124. #16 0x7ffdb6c48449 in THashTable::GetCheckedHashValue(class TObject *) const C:\root-dev\git\master\core\cont\inc\THashTable.h:95. #17 0x7ffdb6c46bf3 in THashTable::Add(class TObject *) C:\root-dev\git\master\core\cont\src\THashTable.cxx:96. #18 0x7ffdb6c5468d in TMap::Add(class TObject *, class TObject *) C:\root-dev\git\master\core\cont\src\TMap.cxx:66. #19 0x7ffdb6c0921e in TUrl::ParseOptions(void) const C:\root-dev\git\master\core\base\src\TUrl.cxx:645. #20 0x7ffdb6c08ce9 in TUrl::HasOption(char const *) const C:\root-dev\git\master\core\base\src\TUrl.cxx:686. #21 0x7ffdcaa6f611 in TFile::TFile(char const *, char const *, char const *, int) C:\root-dev\git\master\io\io\src\TFile.cxx:388. #22 0x7ffdcad8b4ab in CloseStreamerInfoROOTFile C:\root-dev\git\master\io\rootpcm\src\rootclingIO.cxx:143. #23 0x7ffdb74e8b32 in FinalizeStreamerInfoWriting(class cling::Interpreter &, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2644. #24 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon. structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803. #25 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962. #26 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251. #27 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43. #28 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13303,usability,user,user,13303,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13497,usability,Visual,Visual,13497,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13586,usability,error,error,13586,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13601,usability,Custom,Custom,13601,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13859,usability,error,errors,13859,"2028257c (C:\Windows\System32\KERNEL32.DLL+0x18001257c). #31 0x7ffe20a4af27 (C:\Windows\SYSTEM32\ntdll.dll+0x18005af27). SUMMARY: AddressSanitizer: heap-use-after-free C:\root-dev\git\master\core\base\src\TObject.cxx:120 in ROOT::Internal::DeleteChangesMemoryImpl(void). Shadow bytes around the buggy address:. 0x1262507beb00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507beb80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd. 0x1262507bec80: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 00. 0x1262507bed00: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa 00 fa. =>0x1262507bed80: fa fa 00 fa fa fa 00 fa fa fa fd[fd]fa fa fa fa. 0x1262507bee00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bef80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. 0x1262507bf000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. ==13496==ABORTING. C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\relwithdebinfo\CMakeFiles\6d5. 58ca9313984d42dbbac9eac898107\G__ROOTVecOps.cxx.rule' exited with code 1. [C:\root-dev\build\x64\relwithdebinfo\math\vecops\G__ROOTVecOps.vcxproj]. ```. Now I don't know how to fix those errors, but at least they look like real sanitizer output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:174,performance,memor,memory,174,The `read after delete` in ` ROOT::Internal::DeleteChangesMemoryImpl` is intentional :( ... We are literally probing what is the consequence of calling delete on the deleted memory.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:174,usability,memor,memory,174,The `read after delete` in ` ROOT::Internal::DeleteChangesMemoryImpl` is intentional :( ... We are literally probing what is the consequence of calling delete on the deleted memory.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:73,deployability,build,build,73,"@pcanal cool, thanks for the info! Now I have to find how to prevent the build to fail because of this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:82,deployability,fail,fail,82,"@pcanal cool, thanks for the info! Now I have to find how to prevent the build to fail because of this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:8,energy efficiency,cool,cool,8,"@pcanal cool, thanks for the info! Now I have to find how to prevent the build to fail because of this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:82,reliability,fail,fail,82,"@pcanal cool, thanks for the info! Now I have to find how to prevent the build to fail because of this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:61,safety,prevent,prevent,61,"@pcanal cool, thanks for the info! Now I have to find how to prevent the build to fail because of this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:61,security,preven,prevent,61,"@pcanal cool, thanks for the info! Now I have to find how to prevent the build to fail because of this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:67,safety,Sanit,SanitizerSpecialCaseList,67,Maybe Visual Studio has something like https://clang.llvm.org/docs/SanitizerSpecialCaseList.html,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:67,security,Sanit,SanitizerSpecialCaseList,67,Maybe Visual Studio has something like https://clang.llvm.org/docs/SanitizerSpecialCaseList.html,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6,usability,Visual,Visual,6,Maybe Visual Studio has something like https://clang.llvm.org/docs/SanitizerSpecialCaseList.html,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:550,availability,error,error,550,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:630,availability,fault,fault,630,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:705,availability,operat,operator,705,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:213,energy efficiency,core,core,213,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:241,energy efficiency,core,core,241,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:311,energy efficiency,core,core,311,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:344,energy efficiency,core,core,344,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:630,energy efficiency,fault,fault,630,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:569,integrability,messag,message,569,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:569,interoperability,messag,message,569,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:129,performance,time,time,129,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:165,performance,time,time,165,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:550,performance,error,error,550,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:630,performance,fault,fault,630,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:733,performance,memor,memory,733,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:84,reliability,doe,doesn,84,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:630,reliability,fault,fault,630,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:27,safety,sanit,sanitizer,27,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:92,safety,prevent,prevent,92,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:526,safety,detect,detect,526,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:550,safety,error,error,550,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:630,safety,fault,fault,630,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:760,safety,Test,TestBit,760,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:27,security,sanit,sanitizer,27,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:92,security,preven,prevent,92,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:151,security,hack,hack,151,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:526,security,detect,detect,526,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:760,testability,Test,TestBit,760,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:550,usability,error,error,550,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:593,usability,stop,stop,593,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:733,usability,memor,memory,733,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:. ```. diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx. index 1fdabcc2fd..c5358d1f21 100644. --- a/core/base/src/TObject.cxx. +++ b/core/base/src/TObject.cxx. @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(). // can guess this is always the case and we can rely on the changes to fBits made. // by ~TObject to detect use-after-delete error (and print a message rather than. // stop the program with a segmentation fault). +#ifndef __SANITIZE_ADDRESS__. if ( *o_fbits != 0x01000000 ) {. // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted). return true;. }. return false;. +#else. + return true;. +#endif. }. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:156,reliability,doe,does,156,"I think the 'hack' is fine and appropriate since one of the thing we can do after this testing is check for double deletes! So when the sanitizer is on, it does not really hurt to mark this feature as disabled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:87,safety,test,testing,87,"I think the 'hack' is fine and appropriate since one of the thing we can do after this testing is check for double deletes! So when the sanitizer is on, it does not really hurt to mark this feature as disabled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:136,safety,sanit,sanitizer,136,"I think the 'hack' is fine and appropriate since one of the thing we can do after this testing is check for double deletes! So when the sanitizer is on, it does not really hurt to mark this feature as disabled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:13,security,hack,hack,13,"I think the 'hack' is fine and appropriate since one of the thing we can do after this testing is check for double deletes! So when the sanitizer is on, it does not really hurt to mark this feature as disabled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:136,security,sanit,sanitizer,136,"I think the 'hack' is fine and appropriate since one of the thing we can do after this testing is check for double deletes! So when the sanitizer is on, it does not really hurt to mark this feature as disabled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:87,testability,test,testing,87,"I think the 'hack' is fine and appropriate since one of the thing we can do after this testing is check for double deletes! So when the sanitizer is on, it does not really hurt to mark this feature as disabled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/pull/9447:11,deployability,build,build,11,@phsft-bot build on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9447
https://github.com/root-project/root/pull/9447:65,availability,operat,operator,65,"Indeed, the tests still failed on Windows even if the assignment operator was implemented. I have no idea how to fix this Windows issue, and right now it's not a priority. That's why the test returns the RooPolyFunc by smart pointer now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9447
https://github.com/root-project/root/pull/9447:24,deployability,fail,failed,24,"Indeed, the tests still failed on Windows even if the assignment operator was implemented. I have no idea how to fix this Windows issue, and right now it's not a priority. That's why the test returns the RooPolyFunc by smart pointer now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9447
https://github.com/root-project/root/pull/9447:24,reliability,fail,failed,24,"Indeed, the tests still failed on Windows even if the assignment operator was implemented. I have no idea how to fix this Windows issue, and right now it's not a priority. That's why the test returns the RooPolyFunc by smart pointer now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9447
https://github.com/root-project/root/pull/9447:12,safety,test,tests,12,"Indeed, the tests still failed on Windows even if the assignment operator was implemented. I have no idea how to fix this Windows issue, and right now it's not a priority. That's why the test returns the RooPolyFunc by smart pointer now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9447
https://github.com/root-project/root/pull/9447:187,safety,test,test,187,"Indeed, the tests still failed on Windows even if the assignment operator was implemented. I have no idea how to fix this Windows issue, and right now it's not a priority. That's why the test returns the RooPolyFunc by smart pointer now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9447
https://github.com/root-project/root/pull/9447:12,testability,test,tests,12,"Indeed, the tests still failed on Windows even if the assignment operator was implemented. I have no idea how to fix this Windows issue, and right now it's not a priority. That's why the test returns the RooPolyFunc by smart pointer now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9447
https://github.com/root-project/root/pull/9447:187,testability,test,test,187,"Indeed, the tests still failed on Windows even if the assignment operator was implemented. I have no idea how to fix this Windows issue, and right now it's not a priority. That's why the test returns the RooPolyFunc by smart pointer now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9447
https://github.com/root-project/root/issues/9448:194,deployability,build,build,194,IIRC that's expected (@vgvassilev might correct me): genreflex embeds the header as string in the dictionary. As such we don't need an actual PCM file; we provide an empty one to regularize the build systems.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:32,availability,slo,slower,32,humm ... why? Is that much much slower (parsing) than a binary pcm or do you mean that it is a binary blob? Either way why is the option --cxxmodule behaving differently for genreflex than rootcling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:32,reliability,slo,slower,32,humm ... why? Is that much much slower (parsing) than a binary pcm or do you mean that it is a binary blob? Either way why is the option --cxxmodule behaving differently for genreflex than rootcling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:149,usability,behavi,behaving,149,humm ... why? Is that much much slower (parsing) than a binary pcm or do you mean that it is a binary blob? Either way why is the option --cxxmodule behaving differently for genreflex than rootcling?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:149,availability,Error,Error,149,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:379,availability,echo,echo,379,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:46,deployability,modul,module,46,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:192,deployability,modul,module,192,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:222,deployability,modul,modulemap,222,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:306,deployability,modul,modulemap,306,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:330,deployability,build,build,330,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:385,deployability,modul,module,385,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:445,deployability,modul,modulemap,445,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:478,deployability,modul,moduleMapFile,478,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:500,deployability,modul,modulemap,500,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:599,deployability,build,builds,599,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:774,deployability,modul,moduleMapFile,774,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:796,deployability,modul,modulemap,796,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:1570,deployability,modul,modules,1570,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:1668,deployability,modul,modules,1668,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:697,interoperability,xml,xml,697,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:854,interoperability,xml,xml,854,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:46,modifiability,modul,module,46,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:192,modifiability,modul,module,192,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:222,modifiability,modul,modulemap,222,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:306,modifiability,modul,modulemap,306,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:385,modifiability,modul,module,385,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:445,modifiability,modul,modulemap,445,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:478,modifiability,modul,moduleMapFile,478,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:500,modifiability,modul,modulemap,500,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:774,modifiability,modul,moduleMapFile,774,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:796,modifiability,modul,modulemap,796,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:1570,modifiability,modul,modules,1570,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:1668,modifiability,modul,modules,1668,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:149,performance,Error,Error,149,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:352,reliability,doe,does,352,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:46,safety,modul,module,46,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:149,safety,Error,Error,149,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:192,safety,modul,module,192,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:222,safety,modul,modulemap,222,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:306,safety,modul,modulemap,306,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:385,safety,modul,module,385,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:445,safety,modul,modulemap,445,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:478,safety,modul,moduleMapFile,478,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:500,safety,modul,modulemap,500,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:774,safety,modul,moduleMapFile,774,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:796,safety,modul,modulemap,796,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:1570,safety,modul,modules,1570,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:1668,safety,modul,modules,1668,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:1467,testability,context,context,1467,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:1559,testability,context,context,1559,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:19,usability,command,commands,19,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:149,usability,Error,Error,149,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:1428,usability,help,helpful,1428,"On my machine both commands produce a 0-sized module. Eg:. ```bash. rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap! du classes.pcm . 0	classes.pcm. ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash. echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap. rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h . vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm . 400K	classes.pcm. ```. If you want to use the selection xml file you could still do it like:. ```bash. rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . du classes.pcm . 404	classes.pcm. ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112. Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:75,deployability,modul,moduleMapFile,75,"Sorry for the long delay here. > ```shell. > rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . > du classes.pcm . > 404	classes.pcm. > ```. I can confirm that invoking `rootcling` in this way works as expected, but the following does not:. ```shell. $ genreflex --cxxmodule -s classes.xml classes.h. $ ls -l. ... -rw-r--r-- 1 jalopezg jalopezg 0 Feb 28 13:50 classes_rflx.pcm. -rw-r--r-- 1 jalopezg jalopezg 1026 Feb 28 13:50 classes_rflx_rdict.pcm. ```. Then, should we consider this a bug or, as @Axel-Naumann said above, it is intended behavior? Either case, I think we should document this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:97,deployability,modul,modulemap,97,"Sorry for the long delay here. > ```shell. > rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . > du classes.pcm . > 404	classes.pcm. > ```. I can confirm that invoking `rootcling` in this way works as expected, but the following does not:. ```shell. $ genreflex --cxxmodule -s classes.xml classes.h. $ ls -l. ... -rw-r--r-- 1 jalopezg jalopezg 0 Feb 28 13:50 classes_rflx.pcm. -rw-r--r-- 1 jalopezg jalopezg 1026 Feb 28 13:50 classes_rflx_rdict.pcm. ```. Then, should we consider this a bug or, as @Axel-Naumann said above, it is intended behavior? Either case, I think we should document this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:155,interoperability,xml,xml,155,"Sorry for the long delay here. > ```shell. > rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . > du classes.pcm . > 404	classes.pcm. > ```. I can confirm that invoking `rootcling` in this way works as expected, but the following does not:. ```shell. $ genreflex --cxxmodule -s classes.xml classes.h. $ ls -l. ... -rw-r--r-- 1 jalopezg jalopezg 0 Feb 28 13:50 classes_rflx.pcm. -rw-r--r-- 1 jalopezg jalopezg 1026 Feb 28 13:50 classes_rflx_rdict.pcm. ```. Then, should we consider this a bug or, as @Axel-Naumann said above, it is intended behavior? Either case, I think we should document this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:351,interoperability,xml,xml,351,"Sorry for the long delay here. > ```shell. > rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . > du classes.pcm . > 404	classes.pcm. > ```. I can confirm that invoking `rootcling` in this way works as expected, but the following does not:. ```shell. $ genreflex --cxxmodule -s classes.xml classes.h. $ ls -l. ... -rw-r--r-- 1 jalopezg jalopezg 0 Feb 28 13:50 classes_rflx.pcm. -rw-r--r-- 1 jalopezg jalopezg 1026 Feb 28 13:50 classes_rflx_rdict.pcm. ```. Then, should we consider this a bug or, as @Axel-Naumann said above, it is intended behavior? Either case, I think we should document this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:75,modifiability,modul,moduleMapFile,75,"Sorry for the long delay here. > ```shell. > rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . > du classes.pcm . > 404	classes.pcm. > ```. I can confirm that invoking `rootcling` in this way works as expected, but the following does not:. ```shell. $ genreflex --cxxmodule -s classes.xml classes.h. $ ls -l. ... -rw-r--r-- 1 jalopezg jalopezg 0 Feb 28 13:50 classes_rflx.pcm. -rw-r--r-- 1 jalopezg jalopezg 1026 Feb 28 13:50 classes_rflx_rdict.pcm. ```. Then, should we consider this a bug or, as @Axel-Naumann said above, it is intended behavior? Either case, I think we should document this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:97,modifiability,modul,modulemap,97,"Sorry for the long delay here. > ```shell. > rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . > du classes.pcm . > 404	classes.pcm. > ```. I can confirm that invoking `rootcling` in this way works as expected, but the following does not:. ```shell. $ genreflex --cxxmodule -s classes.xml classes.h. $ ls -l. ... -rw-r--r-- 1 jalopezg jalopezg 0 Feb 28 13:50 classes_rflx.pcm. -rw-r--r-- 1 jalopezg jalopezg 1026 Feb 28 13:50 classes_rflx_rdict.pcm. ```. Then, should we consider this a bug or, as @Axel-Naumann said above, it is intended behavior? Either case, I think we should document this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:295,reliability,doe,does,295,"Sorry for the long delay here. > ```shell. > rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . > du classes.pcm . > 404	classes.pcm. > ```. I can confirm that invoking `rootcling` in this way works as expected, but the following does not:. ```shell. $ genreflex --cxxmodule -s classes.xml classes.h. $ ls -l. ... -rw-r--r-- 1 jalopezg jalopezg 0 Feb 28 13:50 classes_rflx.pcm. -rw-r--r-- 1 jalopezg jalopezg 1026 Feb 28 13:50 classes_rflx_rdict.pcm. ```. Then, should we consider this a bug or, as @Axel-Naumann said above, it is intended behavior? Either case, I think we should document this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:75,safety,modul,moduleMapFile,75,"Sorry for the long delay here. > ```shell. > rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . > du classes.pcm . > 404	classes.pcm. > ```. I can confirm that invoking `rootcling` in this way works as expected, but the following does not:. ```shell. $ genreflex --cxxmodule -s classes.xml classes.h. $ ls -l. ... -rw-r--r-- 1 jalopezg jalopezg 0 Feb 28 13:50 classes_rflx.pcm. -rw-r--r-- 1 jalopezg jalopezg 1026 Feb 28 13:50 classes_rflx_rdict.pcm. ```. Then, should we consider this a bug or, as @Axel-Naumann said above, it is intended behavior? Either case, I think we should document this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:97,safety,modul,modulemap,97,"Sorry for the long delay here. > ```shell. > rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . > du classes.pcm . > 404	classes.pcm. > ```. I can confirm that invoking `rootcling` in this way works as expected, but the following does not:. ```shell. $ genreflex --cxxmodule -s classes.xml classes.h. $ ls -l. ... -rw-r--r-- 1 jalopezg jalopezg 0 Feb 28 13:50 classes_rflx.pcm. -rw-r--r-- 1 jalopezg jalopezg 1026 Feb 28 13:50 classes_rflx_rdict.pcm. ```. Then, should we consider this a bug or, as @Axel-Naumann said above, it is intended behavior? Either case, I think we should document this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:212,usability,confirm,confirm,212,"Sorry for the long delay here. > ```shell. > rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . > du classes.pcm . > 404	classes.pcm. > ```. I can confirm that invoking `rootcling` in this way works as expected, but the following does not:. ```shell. $ genreflex --cxxmodule -s classes.xml classes.h. $ ls -l. ... -rw-r--r-- 1 jalopezg jalopezg 0 Feb 28 13:50 classes_rflx.pcm. -rw-r--r-- 1 jalopezg jalopezg 1026 Feb 28 13:50 classes_rflx_rdict.pcm. ```. Then, should we consider this a bug or, as @Axel-Naumann said above, it is intended behavior? Either case, I think we should document this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:605,usability,behavi,behavior,605,"Sorry for the long delay here. > ```shell. > rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . > du classes.pcm . > 404	classes.pcm. > ```. I can confirm that invoking `rootcling` in this way works as expected, but the following does not:. ```shell. $ genreflex --cxxmodule -s classes.xml classes.h. $ ls -l. ... -rw-r--r-- 1 jalopezg jalopezg 0 Feb 28 13:50 classes_rflx.pcm. -rw-r--r-- 1 jalopezg jalopezg 1026 Feb 28 13:50 classes_rflx_rdict.pcm. ```. Then, should we consider this a bug or, as @Axel-Naumann said above, it is intended behavior? Either case, I think we should document this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:646,usability,document,document,646,"Sorry for the long delay here. > ```shell. > rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml . > du classes.pcm . > 404	classes.pcm. > ```. I can confirm that invoking `rootcling` in this way works as expected, but the following does not:. ```shell. $ genreflex --cxxmodule -s classes.xml classes.h. $ ls -l. ... -rw-r--r-- 1 jalopezg jalopezg 0 Feb 28 13:50 classes_rflx.pcm. -rw-r--r-- 1 jalopezg jalopezg 1026 Feb 28 13:50 classes_rflx_rdict.pcm. ```. Then, should we consider this a bug or, as @Axel-Naumann said above, it is intended behavior? Either case, I think we should document this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:71,deployability,modul,moduleMapFile,71,"This can be fixed working on the commandline arguments. Presenly the `-moduleMapFile...` flag passed to genreflex is translated to `-m oduleMapFile...` to rootcling, which is the bug in the current master/6.30-patches. Assigning to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:210,deployability,patch,patches,210,"This can be fixed working on the commandline arguments. Presenly the `-moduleMapFile...` flag passed to genreflex is translated to `-m oduleMapFile...` to rootcling, which is the bug in the current master/6.30-patches. Assigning to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:190,energy efficiency,current,current,190,"This can be fixed working on the commandline arguments. Presenly the `-moduleMapFile...` flag passed to genreflex is translated to `-m oduleMapFile...` to rootcling, which is the bug in the current master/6.30-patches. Assigning to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:117,integrability,translat,translated,117,"This can be fixed working on the commandline arguments. Presenly the `-moduleMapFile...` flag passed to genreflex is translated to `-m oduleMapFile...` to rootcling, which is the bug in the current master/6.30-patches. Assigning to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:117,interoperability,translat,translated,117,"This can be fixed working on the commandline arguments. Presenly the `-moduleMapFile...` flag passed to genreflex is translated to `-m oduleMapFile...` to rootcling, which is the bug in the current master/6.30-patches. Assigning to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:71,modifiability,modul,moduleMapFile,71,"This can be fixed working on the commandline arguments. Presenly the `-moduleMapFile...` flag passed to genreflex is translated to `-m oduleMapFile...` to rootcling, which is the bug in the current master/6.30-patches. Assigning to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:71,safety,modul,moduleMapFile,71,"This can be fixed working on the commandline arguments. Presenly the `-moduleMapFile...` flag passed to genreflex is translated to `-m oduleMapFile...` to rootcling, which is the bug in the current master/6.30-patches. Assigning to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:210,safety,patch,patches,210,"This can be fixed working on the commandline arguments. Presenly the `-moduleMapFile...` flag passed to genreflex is translated to `-m oduleMapFile...` to rootcling, which is the bug in the current master/6.30-patches. Assigning to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:210,security,patch,patches,210,"This can be fixed working on the commandline arguments. Presenly the `-moduleMapFile...` flag passed to genreflex is translated to `-m oduleMapFile...` to rootcling, which is the bug in the current master/6.30-patches. Assigning to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:33,usability,command,commandline,33,"This can be fixed working on the commandline arguments. Presenly the `-moduleMapFile...` flag passed to genreflex is translated to `-m oduleMapFile...` to rootcling, which is the bug in the current master/6.30-patches. Assigning to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:224,deployability,modul,modules,224,"We should probably deprecate genreflex in favor of rootcling, as there will always be such fallout. We should probably advertise `genreflex --debug` to get the right rootcling arguments for those who want to migrate and use modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:224,modifiability,modul,modules,224,"We should probably deprecate genreflex in favor of rootcling, as there will always be such fallout. We should probably advertise `genreflex --debug` to get the right rootcling arguments for those who want to migrate and use modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:224,safety,modul,modules,224,"We should probably deprecate genreflex in favor of rootcling, as there will always be such fallout. We should probably advertise `genreflex --debug` to get the right rootcling arguments for those who want to migrate and use modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:23,testability,simpl,simplifications,23,"I support this kind of simplifications: deprecating genreflex is an option. Before discussing that in detail, the advantages of the rootcling only approaches should be listed carefully. Users such as CMS and LHCb will have to migrate away of genreflex.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:2,usability,support,support,2,"I support this kind of simplifications: deprecating genreflex is an option. Before discussing that in detail, the advantages of the rootcling only approaches should be listed carefully. Users such as CMS and LHCb will have to migrate away of genreflex.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:23,usability,simpl,simplifications,23,"I support this kind of simplifications: deprecating genreflex is an option. Before discussing that in detail, the advantages of the rootcling only approaches should be listed carefully. Users such as CMS and LHCb will have to migrate away of genreflex.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:186,usability,User,Users,186,"I support this kind of simplifications: deprecating genreflex is an option. Before discussing that in detail, the advantages of the rootcling only approaches should be listed carefully. Users such as CMS and LHCb will have to migrate away of genreflex.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:67,testability,plan,planned,67,I believe CMS has done it in the CXXMODULES IB and IIRC @smuzaffar planned to put it in the mainline...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:376,deployability,build,builds,376,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:469,deployability,fail,failOnWarnings,469,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:546,deployability,modul,moduleMapFile,546,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:566,deployability,modul,module,566,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:573,deployability,modul,modulemap,573,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:585,deployability,modul,moduleMapFile,585,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:605,deployability,modul,module,605,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:612,deployability,modul,modulemap,612,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:713,deployability,build,build,713,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:754,deployability,modul,moduleMapFile,754,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:144,interoperability,xml,xml,144,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:676,interoperability,xml,xml,676,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:546,modifiability,modul,moduleMapFile,546,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:566,modifiability,modul,module,566,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:573,modifiability,modul,modulemap,573,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:585,modifiability,modul,moduleMapFile,585,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:605,modifiability,modul,module,605,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:612,modifiability,modul,modulemap,612,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:754,modifiability,modul,moduleMapFile,754,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:469,reliability,fail,failOnWarnings,469,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:546,safety,modul,moduleMapFile,546,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:566,safety,modul,module,566,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:573,safety,modul,modulemap,573,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:585,safety,modul,moduleMapFile,585,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:605,safety,modul,module,605,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:612,safety,modul,modulemap,612,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:754,safety,modul,moduleMapFile,754,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:76,usability,command,command,76,"Yes @vgvassilev , for CMS we are already using `rootcling`. The `genreflex` command we normally run is. ```. genreflex classes.h -s classes_def.xml . -o LibraryName_xr.cc . --fail_on_warnings . --rootmap=LibraryName_xr.rootmap . --rootmap-lib=libLibraryName.so . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm . <CPPFLAGS>. -I<include-dirs>. ```. and for CXXMODULE builds we run . ```. rootcling -reflex -f LibraryName_xr.cc -s libLibraryName.so -cxxmodule -failOnWarnings . -m DepsLibrary1_xr_rdict.pcm -m DepsLibrary2_xr_rdict.pcm. -moduleMapFile=<path/module.modulemap> -moduleMapFile=<path/module.modulemap . <CPPFLAGS>. -I<include-dirs>. classes.h classes_def.xml. ```. I guess, for non-cxxmocule build I can just drop `-cxxmodule` and `-moduleMapFile`. What about `--rootmap=LibraryName_xr.rootmap --rootmap-lib=libLibraryName.so` which we pass to `genreflex`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:57,deployability,fail,failed,57,"@vgvassilev , source generated directly with `rootcling` failed for cmssw see https://github.com/cms-sw/cmsdist/issues/8983 for details",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:57,reliability,fail,failed,57,"@vgvassilev , source generated directly with `rootcling` failed for cmssw see https://github.com/cms-sw/cmsdist/issues/8983 for details",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9449:122,availability,operat,operator,122,"@sbmorphe, thanks for reporting! This is a good catch! In this case, cling is trying to wrap the input as it thinks `bool operator<=(...)` is not a valid function declarator -presumably due to the `<=`. This seems to be another limitation of the current strategy to generate wrapper functions. See also the related issue #9171. @vgvassilev and I recently talked about this, which has to be addressed also for clang-repl. As a workaround, you can either temporarily turn on raw input, or define the function in an anonymous namespace, i.e. ```c++. [cling]$ .rawInput 1. [cling]$ bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); }. [cling]$ .rawInput 0. ```. or. ```c++. [cling]$ namespace { bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); } }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:583,availability,operat,operator,583,"@sbmorphe, thanks for reporting! This is a good catch! In this case, cling is trying to wrap the input as it thinks `bool operator<=(...)` is not a valid function declarator -presumably due to the `<=`. This seems to be another limitation of the current strategy to generate wrapper functions. See also the related issue #9171. @vgvassilev and I recently talked about this, which has to be addressed also for clang-repl. As a workaround, you can either temporarily turn on raw input, or define the function in an anonymous namespace, i.e. ```c++. [cling]$ .rawInput 1. [cling]$ bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); }. [cling]$ .rawInput 0. ```. or. ```c++. [cling]$ namespace { bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); } }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:751,availability,operat,operator,751,"@sbmorphe, thanks for reporting! This is a good catch! In this case, cling is trying to wrap the input as it thinks `bool operator<=(...)` is not a valid function declarator -presumably due to the `<=`. This seems to be another limitation of the current strategy to generate wrapper functions. See also the related issue #9171. @vgvassilev and I recently talked about this, which has to be addressed also for clang-repl. As a workaround, you can either temporarily turn on raw input, or define the function in an anonymous namespace, i.e. ```c++. [cling]$ .rawInput 1. [cling]$ bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); }. [cling]$ .rawInput 0. ```. or. ```c++. [cling]$ namespace { bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); } }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:246,energy efficiency,current,current,246,"@sbmorphe, thanks for reporting! This is a good catch! In this case, cling is trying to wrap the input as it thinks `bool operator<=(...)` is not a valid function declarator -presumably due to the `<=`. This seems to be another limitation of the current strategy to generate wrapper functions. See also the related issue #9171. @vgvassilev and I recently talked about this, which has to be addressed also for clang-repl. As a workaround, you can either temporarily turn on raw input, or define the function in an anonymous namespace, i.e. ```c++. [cling]$ .rawInput 1. [cling]$ bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); }. [cling]$ .rawInput 0. ```. or. ```c++. [cling]$ namespace { bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); } }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:88,integrability,wrap,wrap,88,"@sbmorphe, thanks for reporting! This is a good catch! In this case, cling is trying to wrap the input as it thinks `bool operator<=(...)` is not a valid function declarator -presumably due to the `<=`. This seems to be another limitation of the current strategy to generate wrapper functions. See also the related issue #9171. @vgvassilev and I recently talked about this, which has to be addressed also for clang-repl. As a workaround, you can either temporarily turn on raw input, or define the function in an anonymous namespace, i.e. ```c++. [cling]$ .rawInput 1. [cling]$ bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); }. [cling]$ .rawInput 0. ```. or. ```c++. [cling]$ namespace { bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); } }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:275,integrability,wrap,wrapper,275,"@sbmorphe, thanks for reporting! This is a good catch! In this case, cling is trying to wrap the input as it thinks `bool operator<=(...)` is not a valid function declarator -presumably due to the `<=`. This seems to be another limitation of the current strategy to generate wrapper functions. See also the related issue #9171. @vgvassilev and I recently talked about this, which has to be addressed also for clang-repl. As a workaround, you can either temporarily turn on raw input, or define the function in an anonymous namespace, i.e. ```c++. [cling]$ .rawInput 1. [cling]$ bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); }. [cling]$ .rawInput 0. ```. or. ```c++. [cling]$ namespace { bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); } }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:275,interoperability,wrapper,wrapper,275,"@sbmorphe, thanks for reporting! This is a good catch! In this case, cling is trying to wrap the input as it thinks `bool operator<=(...)` is not a valid function declarator -presumably due to the `<=`. This seems to be another limitation of the current strategy to generate wrapper functions. See also the related issue #9171. @vgvassilev and I recently talked about this, which has to be addressed also for clang-repl. As a workaround, you can either temporarily turn on raw input, or define the function in an anonymous namespace, i.e. ```c++. [cling]$ .rawInput 1. [cling]$ bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); }. [cling]$ .rawInput 0. ```. or. ```c++. [cling]$ namespace { bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); } }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:97,safety,input,input,97,"@sbmorphe, thanks for reporting! This is a good catch! In this case, cling is trying to wrap the input as it thinks `bool operator<=(...)` is not a valid function declarator -presumably due to the `<=`. This seems to be another limitation of the current strategy to generate wrapper functions. See also the related issue #9171. @vgvassilev and I recently talked about this, which has to be addressed also for clang-repl. As a workaround, you can either temporarily turn on raw input, or define the function in an anonymous namespace, i.e. ```c++. [cling]$ .rawInput 1. [cling]$ bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); }. [cling]$ .rawInput 0. ```. or. ```c++. [cling]$ namespace { bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); } }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:148,safety,valid,valid,148,"@sbmorphe, thanks for reporting! This is a good catch! In this case, cling is trying to wrap the input as it thinks `bool operator<=(...)` is not a valid function declarator -presumably due to the `<=`. This seems to be another limitation of the current strategy to generate wrapper functions. See also the related issue #9171. @vgvassilev and I recently talked about this, which has to be addressed also for clang-repl. As a workaround, you can either temporarily turn on raw input, or define the function in an anonymous namespace, i.e. ```c++. [cling]$ .rawInput 1. [cling]$ bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); }. [cling]$ .rawInput 0. ```. or. ```c++. [cling]$ namespace { bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); } }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:477,safety,input,input,477,"@sbmorphe, thanks for reporting! This is a good catch! In this case, cling is trying to wrap the input as it thinks `bool operator<=(...)` is not a valid function declarator -presumably due to the `<=`. This seems to be another limitation of the current strategy to generate wrapper functions. See also the related issue #9171. @vgvassilev and I recently talked about this, which has to be addressed also for clang-repl. As a workaround, you can either temporarily turn on raw input, or define the function in an anonymous namespace, i.e. ```c++. [cling]$ .rawInput 1. [cling]$ bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); }. [cling]$ .rawInput 0. ```. or. ```c++. [cling]$ namespace { bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); } }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:97,usability,input,input,97,"@sbmorphe, thanks for reporting! This is a good catch! In this case, cling is trying to wrap the input as it thinks `bool operator<=(...)` is not a valid function declarator -presumably due to the `<=`. This seems to be another limitation of the current strategy to generate wrapper functions. See also the related issue #9171. @vgvassilev and I recently talked about this, which has to be addressed also for clang-repl. As a workaround, you can either temporarily turn on raw input, or define the function in an anonymous namespace, i.e. ```c++. [cling]$ .rawInput 1. [cling]$ bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); }. [cling]$ .rawInput 0. ```. or. ```c++. [cling]$ namespace { bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); } }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:477,usability,input,input,477,"@sbmorphe, thanks for reporting! This is a good catch! In this case, cling is trying to wrap the input as it thinks `bool operator<=(...)` is not a valid function declarator -presumably due to the `<=`. This seems to be another limitation of the current strategy to generate wrapper functions. See also the related issue #9171. @vgvassilev and I recently talked about this, which has to be addressed also for clang-repl. As a workaround, you can either temporarily turn on raw input, or define the function in an anonymous namespace, i.e. ```c++. [cling]$ .rawInput 1. [cling]$ bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); }. [cling]$ .rawInput 0. ```. or. ```c++. [cling]$ namespace { bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); } }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9455:245,deployability,observ,observe,245,"For the Bayesian statistics methods, kBJeffrey, kBUniform,kBBayesian, the function pointer fBoundary is not used, so it should not matter if it is not set. I think it will stay to the default constructed value, i.e. .a nullptr. @linev , did you observe a problem using some of these 3 bayesian methods ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9455
https://github.com/root-project/root/issues/9455:245,testability,observ,observe,245,"For the Bayesian statistics methods, kBJeffrey, kBUniform,kBBayesian, the function pointer fBoundary is not used, so it should not matter if it is not set. I think it will stay to the default constructed value, i.e. .a nullptr. @linev , did you observe a problem using some of these 3 bayesian methods ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9455
https://github.com/root-project/root/issues/9455:24,energy efficiency,draw,drawing,24,`fBoundary` is used for drawing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9455
https://github.com/root-project/root/issues/9455:496,interoperability,distribut,distribution,496,"I see in JSROOT : . ```. TEfficiencyPainter.prototype.getEfficiencyErrorLow = function(bin) {. let obj = this.getObject(),. total = obj.fTotalHistogram.getBinContent(bin),. passed = obj.fPassedHistogram.getBinContent(bin),. eff = this.getEfficiency(bin);. return eff - this[this.fBoundary](total,passed, obj.fConfLevel, false);. }. ```. so no handling of the Bayesian case. In the C++ case you have Ignoring the weighted case):. ```. if(TestBit(kIsBayesian)). {. // parameters for the beta prior distribution. Double_t alpha = TestBit(kUseBinPrior) ? GetBetaAlpha(bin) : GetBetaAlpha();. Double_t beta = TestBit(kUseBinPrior) ? GetBetaBeta(bin) : GetBetaBeta();. return (eff - Bayesian(total,passed,fConfLevel,alpha,beta,false,TestBit(kShortestInterval)));. }. else. return (eff - fBoundary(total,passed,fConfLevel,false));. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9455
https://github.com/root-project/root/issues/9455:466,modifiability,paramet,parameters,466,"I see in JSROOT : . ```. TEfficiencyPainter.prototype.getEfficiencyErrorLow = function(bin) {. let obj = this.getObject(),. total = obj.fTotalHistogram.getBinContent(bin),. passed = obj.fPassedHistogram.getBinContent(bin),. eff = this.getEfficiency(bin);. return eff - this[this.fBoundary](total,passed, obj.fConfLevel, false);. }. ```. so no handling of the Bayesian case. In the C++ case you have Ignoring the weighted case):. ```. if(TestBit(kIsBayesian)). {. // parameters for the beta prior distribution. Double_t alpha = TestBit(kUseBinPrior) ? GetBetaAlpha(bin) : GetBetaAlpha();. Double_t beta = TestBit(kUseBinPrior) ? GetBetaBeta(bin) : GetBetaBeta();. return (eff - Bayesian(total,passed,fConfLevel,alpha,beta,false,TestBit(kShortestInterval)));. }. else. return (eff - fBoundary(total,passed,fConfLevel,false));. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9455
https://github.com/root-project/root/issues/9455:437,safety,Test,TestBit,437,"I see in JSROOT : . ```. TEfficiencyPainter.prototype.getEfficiencyErrorLow = function(bin) {. let obj = this.getObject(),. total = obj.fTotalHistogram.getBinContent(bin),. passed = obj.fPassedHistogram.getBinContent(bin),. eff = this.getEfficiency(bin);. return eff - this[this.fBoundary](total,passed, obj.fConfLevel, false);. }. ```. so no handling of the Bayesian case. In the C++ case you have Ignoring the weighted case):. ```. if(TestBit(kIsBayesian)). {. // parameters for the beta prior distribution. Double_t alpha = TestBit(kUseBinPrior) ? GetBetaAlpha(bin) : GetBetaAlpha();. Double_t beta = TestBit(kUseBinPrior) ? GetBetaBeta(bin) : GetBetaBeta();. return (eff - Bayesian(total,passed,fConfLevel,alpha,beta,false,TestBit(kShortestInterval)));. }. else. return (eff - fBoundary(total,passed,fConfLevel,false));. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9455
https://github.com/root-project/root/issues/9455:527,safety,Test,TestBit,527,"I see in JSROOT : . ```. TEfficiencyPainter.prototype.getEfficiencyErrorLow = function(bin) {. let obj = this.getObject(),. total = obj.fTotalHistogram.getBinContent(bin),. passed = obj.fPassedHistogram.getBinContent(bin),. eff = this.getEfficiency(bin);. return eff - this[this.fBoundary](total,passed, obj.fConfLevel, false);. }. ```. so no handling of the Bayesian case. In the C++ case you have Ignoring the weighted case):. ```. if(TestBit(kIsBayesian)). {. // parameters for the beta prior distribution. Double_t alpha = TestBit(kUseBinPrior) ? GetBetaAlpha(bin) : GetBetaAlpha();. Double_t beta = TestBit(kUseBinPrior) ? GetBetaBeta(bin) : GetBetaBeta();. return (eff - Bayesian(total,passed,fConfLevel,alpha,beta,false,TestBit(kShortestInterval)));. }. else. return (eff - fBoundary(total,passed,fConfLevel,false));. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9455
https://github.com/root-project/root/issues/9455:604,safety,Test,TestBit,604,"I see in JSROOT : . ```. TEfficiencyPainter.prototype.getEfficiencyErrorLow = function(bin) {. let obj = this.getObject(),. total = obj.fTotalHistogram.getBinContent(bin),. passed = obj.fPassedHistogram.getBinContent(bin),. eff = this.getEfficiency(bin);. return eff - this[this.fBoundary](total,passed, obj.fConfLevel, false);. }. ```. so no handling of the Bayesian case. In the C++ case you have Ignoring the weighted case):. ```. if(TestBit(kIsBayesian)). {. // parameters for the beta prior distribution. Double_t alpha = TestBit(kUseBinPrior) ? GetBetaAlpha(bin) : GetBetaAlpha();. Double_t beta = TestBit(kUseBinPrior) ? GetBetaBeta(bin) : GetBetaBeta();. return (eff - Bayesian(total,passed,fConfLevel,alpha,beta,false,TestBit(kShortestInterval)));. }. else. return (eff - fBoundary(total,passed,fConfLevel,false));. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9455
https://github.com/root-project/root/issues/9455:727,safety,Test,TestBit,727,"I see in JSROOT : . ```. TEfficiencyPainter.prototype.getEfficiencyErrorLow = function(bin) {. let obj = this.getObject(),. total = obj.fTotalHistogram.getBinContent(bin),. passed = obj.fPassedHistogram.getBinContent(bin),. eff = this.getEfficiency(bin);. return eff - this[this.fBoundary](total,passed, obj.fConfLevel, false);. }. ```. so no handling of the Bayesian case. In the C++ case you have Ignoring the weighted case):. ```. if(TestBit(kIsBayesian)). {. // parameters for the beta prior distribution. Double_t alpha = TestBit(kUseBinPrior) ? GetBetaAlpha(bin) : GetBetaAlpha();. Double_t beta = TestBit(kUseBinPrior) ? GetBetaBeta(bin) : GetBetaBeta();. return (eff - Bayesian(total,passed,fConfLevel,alpha,beta,false,TestBit(kShortestInterval)));. }. else. return (eff - fBoundary(total,passed,fConfLevel,false));. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9455
https://github.com/root-project/root/issues/9455:437,testability,Test,TestBit,437,"I see in JSROOT : . ```. TEfficiencyPainter.prototype.getEfficiencyErrorLow = function(bin) {. let obj = this.getObject(),. total = obj.fTotalHistogram.getBinContent(bin),. passed = obj.fPassedHistogram.getBinContent(bin),. eff = this.getEfficiency(bin);. return eff - this[this.fBoundary](total,passed, obj.fConfLevel, false);. }. ```. so no handling of the Bayesian case. In the C++ case you have Ignoring the weighted case):. ```. if(TestBit(kIsBayesian)). {. // parameters for the beta prior distribution. Double_t alpha = TestBit(kUseBinPrior) ? GetBetaAlpha(bin) : GetBetaAlpha();. Double_t beta = TestBit(kUseBinPrior) ? GetBetaBeta(bin) : GetBetaBeta();. return (eff - Bayesian(total,passed,fConfLevel,alpha,beta,false,TestBit(kShortestInterval)));. }. else. return (eff - fBoundary(total,passed,fConfLevel,false));. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9455
https://github.com/root-project/root/issues/9455:527,testability,Test,TestBit,527,"I see in JSROOT : . ```. TEfficiencyPainter.prototype.getEfficiencyErrorLow = function(bin) {. let obj = this.getObject(),. total = obj.fTotalHistogram.getBinContent(bin),. passed = obj.fPassedHistogram.getBinContent(bin),. eff = this.getEfficiency(bin);. return eff - this[this.fBoundary](total,passed, obj.fConfLevel, false);. }. ```. so no handling of the Bayesian case. In the C++ case you have Ignoring the weighted case):. ```. if(TestBit(kIsBayesian)). {. // parameters for the beta prior distribution. Double_t alpha = TestBit(kUseBinPrior) ? GetBetaAlpha(bin) : GetBetaAlpha();. Double_t beta = TestBit(kUseBinPrior) ? GetBetaBeta(bin) : GetBetaBeta();. return (eff - Bayesian(total,passed,fConfLevel,alpha,beta,false,TestBit(kShortestInterval)));. }. else. return (eff - fBoundary(total,passed,fConfLevel,false));. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9455
https://github.com/root-project/root/issues/9455:604,testability,Test,TestBit,604,"I see in JSROOT : . ```. TEfficiencyPainter.prototype.getEfficiencyErrorLow = function(bin) {. let obj = this.getObject(),. total = obj.fTotalHistogram.getBinContent(bin),. passed = obj.fPassedHistogram.getBinContent(bin),. eff = this.getEfficiency(bin);. return eff - this[this.fBoundary](total,passed, obj.fConfLevel, false);. }. ```. so no handling of the Bayesian case. In the C++ case you have Ignoring the weighted case):. ```. if(TestBit(kIsBayesian)). {. // parameters for the beta prior distribution. Double_t alpha = TestBit(kUseBinPrior) ? GetBetaAlpha(bin) : GetBetaAlpha();. Double_t beta = TestBit(kUseBinPrior) ? GetBetaBeta(bin) : GetBetaBeta();. return (eff - Bayesian(total,passed,fConfLevel,alpha,beta,false,TestBit(kShortestInterval)));. }. else. return (eff - fBoundary(total,passed,fConfLevel,false));. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9455
https://github.com/root-project/root/issues/9455:727,testability,Test,TestBit,727,"I see in JSROOT : . ```. TEfficiencyPainter.prototype.getEfficiencyErrorLow = function(bin) {. let obj = this.getObject(),. total = obj.fTotalHistogram.getBinContent(bin),. passed = obj.fPassedHistogram.getBinContent(bin),. eff = this.getEfficiency(bin);. return eff - this[this.fBoundary](total,passed, obj.fConfLevel, false);. }. ```. so no handling of the Bayesian case. In the C++ case you have Ignoring the weighted case):. ```. if(TestBit(kIsBayesian)). {. // parameters for the beta prior distribution. Double_t alpha = TestBit(kUseBinPrior) ? GetBetaAlpha(bin) : GetBetaAlpha();. Double_t beta = TestBit(kUseBinPrior) ? GetBetaBeta(bin) : GetBetaBeta();. return (eff - Bayesian(total,passed,fConfLevel,alpha,beta,false,TestBit(kShortestInterval)));. }. else. return (eff - fBoundary(total,passed,fConfLevel,false));. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9455
https://github.com/root-project/root/issues/9455:44,usability,prototyp,prototype,44,"I see in JSROOT : . ```. TEfficiencyPainter.prototype.getEfficiencyErrorLow = function(bin) {. let obj = this.getObject(),. total = obj.fTotalHistogram.getBinContent(bin),. passed = obj.fPassedHistogram.getBinContent(bin),. eff = this.getEfficiency(bin);. return eff - this[this.fBoundary](total,passed, obj.fConfLevel, false);. }. ```. so no handling of the Bayesian case. In the C++ case you have Ignoring the weighted case):. ```. if(TestBit(kIsBayesian)). {. // parameters for the beta prior distribution. Double_t alpha = TestBit(kUseBinPrior) ? GetBetaAlpha(bin) : GetBetaAlpha();. Double_t beta = TestBit(kUseBinPrior) ? GetBetaBeta(bin) : GetBetaBeta();. return (eff - Bayesian(total,passed,fConfLevel,alpha,beta,false,TestBit(kShortestInterval)));. }. else. return (eff - fBoundary(total,passed,fConfLevel,false));. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9455
https://github.com/root-project/root/pull/9456:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:13,deployability,fail,failed,13,"I see why it failed, that stressRooFit test that failed was passed on my pc so when updating the reference file with all the plots the relevant plot was not included. I will add it manually and commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:49,deployability,fail,failed,49,"I see why it failed, that stressRooFit test that failed was passed on my pc so when updating the reference file with all the plots the relevant plot was not included. I will add it manually and commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:84,deployability,updat,updating,84,"I see why it failed, that stressRooFit test that failed was passed on my pc so when updating the reference file with all the plots the relevant plot was not included. I will add it manually and commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:13,reliability,fail,failed,13,"I see why it failed, that stressRooFit test that failed was passed on my pc so when updating the reference file with all the plots the relevant plot was not included. I will add it manually and commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:49,reliability,fail,failed,49,"I see why it failed, that stressRooFit test that failed was passed on my pc so when updating the reference file with all the plots the relevant plot was not included. I will add it manually and commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:39,safety,test,test,39,"I see why it failed, that stressRooFit test that failed was passed on my pc so when updating the reference file with all the plots the relevant plot was not included. I will add it manually and commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:84,safety,updat,updating,84,"I see why it failed, that stressRooFit test that failed was passed on my pc so when updating the reference file with all the plots the relevant plot was not included. I will add it manually and commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:84,security,updat,updating,84,"I see why it failed, that stressRooFit test that failed was passed on my pc so when updating the reference file with all the plots the relevant plot was not included. I will add it manually and commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:39,testability,test,test,39,"I see why it failed, that stressRooFit test that failed was passed on my pc so when updating the reference file with all the plots the relevant plot was not included. I will add it manually and commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:4,safety,test,test,4,"Is `test/stressRooFit_ref.root` meant to end up on https://root.cern? If so, should the file be removed from this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:4,testability,test,test,4,"Is `test/stressRooFit_ref.root` meant to end up on https://root.cern? If so, should the file be removed from this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:49,security,modif,modified,49,"@Axel-Naumann The file was already there, I just modified it. I am not sure how it would end up on https://root.cern.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:52,safety,test,test,52,"Sorry, I confused this file with a different RooFit test file, all good!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:52,testability,test,test,52,"Sorry, I confused this file with a different RooFit test file, all good!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:72,deployability,fail,fail,72,No problem! . @guitargeek I fixed the bug that was causing the tests to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:72,reliability,fail,fail,72,No problem! . @guitargeek I fixed the bug that was causing the tests to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:63,safety,test,tests,63,No problem! . @guitargeek I fixed the bug that was causing the tests to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:63,testability,test,tests,63,No problem! . @guitargeek I fixed the bug that was causing the tests to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:150,availability,slo,slow,150,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:376,availability,slo,slow,376,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:484,deployability,build,build,484,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:668,deployability,fail,fail,668,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:286,performance,overhead,overhead,286,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:822,performance,time,time,822,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:124,reliability,Poisson,Poisson,124,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:150,reliability,slo,slow,150,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:376,reliability,slo,slow,376,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:668,reliability,fail,fail,668,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:61,safety,test,test,61,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:210,safety,test,test,210,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:364,safety,test,test,364,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:415,safety,test,tests,415,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:463,safety,test,test,463,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:490,safety,test,test,490,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:587,safety,test,test,587,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:720,safety,test,test,720,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:61,testability,test,test,61,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:210,testability,test,test,210,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:364,testability,test,test,364,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:415,testability,test,tests,415,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:463,testability,test,test,463,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:490,testability,test,test,490,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:587,testability,test,test,587,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:720,testability,test,test,720,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:775,usability,minim,minimization,775,"Hi @guitargeek thanks for your comment. > Can you change the test such that it's fast? It looks like you are only fitting a Poisson, it should not be slow right? I think this might be due to the fact that this test invokes the multiprocessing framework, which may very well induce some overhead especially for smaller tasks. I also notice that on my local pc this test is not slow (around 10 seconds for all of the tests, and around 2 seconds for this particular test) so perhaps the build/test machines are not tailored for multiprocessing jobs? Anyway, as @egpbos also mentioned, this test should probably also only be ran if multiprocessing is enabled, as it would fail otherwise. Perhaps I should just find a way to test the same functionality without doing multiprocess minimization to tackle both issues at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:8,safety,test,testing,8,"Indeed, testing the functionality without invoking MP would be ideal for stressRooFit. Alternatively, @guitargeek's suggestion of making it a standalone test under `roofitcore/test` (with gtest) would work well too. The latter option may be less work, since you probably only have to copy the existing macro code into a gtest body in a new file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:153,safety,test,test,153,"Indeed, testing the functionality without invoking MP would be ideal for stressRooFit. Alternatively, @guitargeek's suggestion of making it a standalone test under `roofitcore/test` (with gtest) would work well too. The latter option may be less work, since you probably only have to copy the existing macro code into a gtest body in a new file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:176,safety,test,test,176,"Indeed, testing the functionality without invoking MP would be ideal for stressRooFit. Alternatively, @guitargeek's suggestion of making it a standalone test under `roofitcore/test` (with gtest) would work well too. The latter option may be less work, since you probably only have to copy the existing macro code into a gtest body in a new file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:8,testability,test,testing,8,"Indeed, testing the functionality without invoking MP would be ideal for stressRooFit. Alternatively, @guitargeek's suggestion of making it a standalone test under `roofitcore/test` (with gtest) would work well too. The latter option may be less work, since you probably only have to copy the existing macro code into a gtest body in a new file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:153,testability,test,test,153,"Indeed, testing the functionality without invoking MP would be ideal for stressRooFit. Alternatively, @guitargeek's suggestion of making it a standalone test under `roofitcore/test` (with gtest) would work well too. The latter option may be less work, since you probably only have to copy the existing macro code into a gtest body in a new file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:176,testability,test,test,176,"Indeed, testing the functionality without invoking MP would be ideal for stressRooFit. Alternatively, @guitargeek's suggestion of making it a standalone test under `roofitcore/test` (with gtest) would work well too. The latter option may be less work, since you probably only have to copy the existing macro code into a gtest body in a new file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:251,interoperability,format,format,251,"Hi @Zeff020, thanks for the quick followup! I have made a few more change requests, they are a bit minute but I hope to teach you some of the good practices we use here for the future :). Also, if you introduce any *new* source file to RooFit, please format it with `clang-format` using the official ROOT [style file](https://github.com/root-project/root/blob/master/.clang-format). You will see that the right style was used if your sources are indented with three spaces. In this PR, this `testPlot.cpp` should be formatted. When you have done the formatting and implemented my comments, we can test and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:273,interoperability,format,format,273,"Hi @Zeff020, thanks for the quick followup! I have made a few more change requests, they are a bit minute but I hope to teach you some of the good practices we use here for the future :). Also, if you introduce any *new* source file to RooFit, please format it with `clang-format` using the official ROOT [style file](https://github.com/root-project/root/blob/master/.clang-format). You will see that the right style was used if your sources are indented with three spaces. In this PR, this `testPlot.cpp` should be formatted. When you have done the formatting and implemented my comments, we can test and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:374,interoperability,format,format,374,"Hi @Zeff020, thanks for the quick followup! I have made a few more change requests, they are a bit minute but I hope to teach you some of the good practices we use here for the future :). Also, if you introduce any *new* source file to RooFit, please format it with `clang-format` using the official ROOT [style file](https://github.com/root-project/root/blob/master/.clang-format). You will see that the right style was used if your sources are indented with three spaces. In this PR, this `testPlot.cpp` should be formatted. When you have done the formatting and implemented my comments, we can test and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:516,interoperability,format,formatted,516,"Hi @Zeff020, thanks for the quick followup! I have made a few more change requests, they are a bit minute but I hope to teach you some of the good practices we use here for the future :). Also, if you introduce any *new* source file to RooFit, please format it with `clang-format` using the official ROOT [style file](https://github.com/root-project/root/blob/master/.clang-format). You will see that the right style was used if your sources are indented with three spaces. In this PR, this `testPlot.cpp` should be formatted. When you have done the formatting and implemented my comments, we can test and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:550,interoperability,format,formatting,550,"Hi @Zeff020, thanks for the quick followup! I have made a few more change requests, they are a bit minute but I hope to teach you some of the good practices we use here for the future :). Also, if you introduce any *new* source file to RooFit, please format it with `clang-format` using the official ROOT [style file](https://github.com/root-project/root/blob/master/.clang-format). You will see that the right style was used if your sources are indented with three spaces. In this PR, this `testPlot.cpp` should be formatted. When you have done the formatting and implemented my comments, we can test and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:147,reliability,pra,practices,147,"Hi @Zeff020, thanks for the quick followup! I have made a few more change requests, they are a bit minute but I hope to teach you some of the good practices we use here for the future :). Also, if you introduce any *new* source file to RooFit, please format it with `clang-format` using the official ROOT [style file](https://github.com/root-project/root/blob/master/.clang-format). You will see that the right style was used if your sources are indented with three spaces. In this PR, this `testPlot.cpp` should be formatted. When you have done the formatting and implemented my comments, we can test and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:492,safety,test,testPlot,492,"Hi @Zeff020, thanks for the quick followup! I have made a few more change requests, they are a bit minute but I hope to teach you some of the good practices we use here for the future :). Also, if you introduce any *new* source file to RooFit, please format it with `clang-format` using the official ROOT [style file](https://github.com/root-project/root/blob/master/.clang-format). You will see that the right style was used if your sources are indented with three spaces. In this PR, this `testPlot.cpp` should be formatted. When you have done the formatting and implemented my comments, we can test and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:597,safety,test,test,597,"Hi @Zeff020, thanks for the quick followup! I have made a few more change requests, they are a bit minute but I hope to teach you some of the good practices we use here for the future :). Also, if you introduce any *new* source file to RooFit, please format it with `clang-format` using the official ROOT [style file](https://github.com/root-project/root/blob/master/.clang-format). You will see that the right style was used if your sources are indented with three spaces. In this PR, this `testPlot.cpp` should be formatted. When you have done the formatting and implemented my comments, we can test and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:492,testability,test,testPlot,492,"Hi @Zeff020, thanks for the quick followup! I have made a few more change requests, they are a bit minute but I hope to teach you some of the good practices we use here for the future :). Also, if you introduce any *new* source file to RooFit, please format it with `clang-format` using the official ROOT [style file](https://github.com/root-project/root/blob/master/.clang-format). You will see that the right style was used if your sources are indented with three spaces. In this PR, this `testPlot.cpp` should be formatted. When you have done the formatting and implemented my comments, we can test and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:597,testability,test,test,597,"Hi @Zeff020, thanks for the quick followup! I have made a few more change requests, they are a bit minute but I hope to teach you some of the good practices we use here for the future :). Also, if you introduce any *new* source file to RooFit, please format it with `clang-format` using the official ROOT [style file](https://github.com/root-project/root/blob/master/.clang-format). You will see that the right style was used if your sources are indented with three spaces. In this PR, this `testPlot.cpp` should be formatted. When you have done the formatting and implemented my comments, we can test and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9457:11,deployability,build,build,11,"@phsft-bot build just on ROOT-ubuntu2004/default, ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9457
https://github.com/root-project/root/pull/9458:88,availability,failur,failures,88,Thanks for this Jonas. It looks good but before merging we need too undrrstand the test failures,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:88,deployability,fail,failures,88,Thanks for this Jonas. It looks good but before merging we need too undrrstand the test failures,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:88,performance,failur,failures,88,Thanks for this Jonas. It looks good but before merging we need too undrrstand the test failures,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:88,reliability,fail,failures,88,Thanks for this Jonas. It looks good but before merging we need too undrrstand the test failures,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:83,safety,test,test,83,Thanks for this Jonas. It looks good but before merging we need too undrrstand the test failures,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:83,testability,test,test,83,Thanks for this Jonas. It looks good but before merging we need too undrrstand the test failures,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:516,availability,operat,operation,516,"Hi @lmoneta, I realized was the problem was. What I did so far in this PR was to set all nodes to `ADirty` in the RooFitDriver constructor, and then in the first evaluation round I set back the nodes evaluated in scalar node back to `Auto`. That caused trouble with the dirty flag propagation, because clients that are also evaluated in scalar mode are only set to `Auto` later when it's their turn. To fix this, I now figure out which nodes are evaluated in scalar mode in the RooFitDriver constructor, setting the operation mode correctly once and for all. Note that this required to cherry-pick the first commit from https://github.com/root-project/root/pull/9423 that is necessary to figure out the node output size in the RooFitDriver constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:213,modifiability,scal,scalar,213,"Hi @lmoneta, I realized was the problem was. What I did so far in this PR was to set all nodes to `ADirty` in the RooFitDriver constructor, and then in the first evaluation round I set back the nodes evaluated in scalar node back to `Auto`. That caused trouble with the dirty flag propagation, because clients that are also evaluated in scalar mode are only set to `Auto` later when it's their turn. To fix this, I now figure out which nodes are evaluated in scalar mode in the RooFitDriver constructor, setting the operation mode correctly once and for all. Note that this required to cherry-pick the first commit from https://github.com/root-project/root/pull/9423 that is necessary to figure out the node output size in the RooFitDriver constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:337,modifiability,scal,scalar,337,"Hi @lmoneta, I realized was the problem was. What I did so far in this PR was to set all nodes to `ADirty` in the RooFitDriver constructor, and then in the first evaluation round I set back the nodes evaluated in scalar node back to `Auto`. That caused trouble with the dirty flag propagation, because clients that are also evaluated in scalar mode are only set to `Auto` later when it's their turn. To fix this, I now figure out which nodes are evaluated in scalar mode in the RooFitDriver constructor, setting the operation mode correctly once and for all. Note that this required to cherry-pick the first commit from https://github.com/root-project/root/pull/9423 that is necessary to figure out the node output size in the RooFitDriver constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:459,modifiability,scal,scalar,459,"Hi @lmoneta, I realized was the problem was. What I did so far in this PR was to set all nodes to `ADirty` in the RooFitDriver constructor, and then in the first evaluation round I set back the nodes evaluated in scalar node back to `Auto`. That caused trouble with the dirty flag propagation, because clients that are also evaluated in scalar mode are only set to `Auto` later when it's their turn. To fix this, I now figure out which nodes are evaluated in scalar mode in the RooFitDriver constructor, setting the operation mode correctly once and for all. Note that this required to cherry-pick the first commit from https://github.com/root-project/root/pull/9423 that is necessary to figure out the node output size in the RooFitDriver constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9464:11,deployability,build,build,11,"@phsft-bot build on ROOT-performance-centos8-multicore/default, mac1015/noimt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9464
https://github.com/root-project/root/pull/9464:25,performance,perform,performance-,25,"@phsft-bot build on ROOT-performance-centos8-multicore/default, mac1015/noimt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9464
https://github.com/root-project/root/pull/9464:25,usability,perform,performance-,25,"@phsft-bot build on ROOT-performance-centos8-multicore/default, mac1015/noimt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9464
https://github.com/root-project/root/issues/9465:220,availability,error,error,220,"The problem here is that the lambda you are passing to the constructor of `TF1` is a temporary that is (can be) garbage collected right after the constructor call of `TF1` returns. That's what the `callable was deleted` error is saying. If you define the lambda beforehand and bind it to a variable so that it's still alive when you draw, you can solve that problem (notice also that the lambda needs to accept two parameters instead of one):. ```python. from ROOT import TF1. l = lambda x, p: x[0]. f = TF1('f', l, 0, 1). f.Draw(). ```. The fact that it was working with other versions of Python was by pure chance (the object was still not deleted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:578,deployability,version,versions,578,"The problem here is that the lambda you are passing to the constructor of `TF1` is a temporary that is (can be) garbage collected right after the constructor call of `TF1` returns. That's what the `callable was deleted` error is saying. If you define the lambda beforehand and bind it to a variable so that it's still alive when you draw, you can solve that problem (notice also that the lambda needs to accept two parameters instead of one):. ```python. from ROOT import TF1. l = lambda x, p: x[0]. f = TF1('f', l, 0, 1). f.Draw(). ```. The fact that it was working with other versions of Python was by pure chance (the object was still not deleted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:333,energy efficiency,draw,draw,333,"The problem here is that the lambda you are passing to the constructor of `TF1` is a temporary that is (can be) garbage collected right after the constructor call of `TF1` returns. That's what the `callable was deleted` error is saying. If you define the lambda beforehand and bind it to a variable so that it's still alive when you draw, you can solve that problem (notice also that the lambda needs to accept two parameters instead of one):. ```python. from ROOT import TF1. l = lambda x, p: x[0]. f = TF1('f', l, 0, 1). f.Draw(). ```. The fact that it was working with other versions of Python was by pure chance (the object was still not deleted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:525,energy efficiency,Draw,Draw,525,"The problem here is that the lambda you are passing to the constructor of `TF1` is a temporary that is (can be) garbage collected right after the constructor call of `TF1` returns. That's what the `callable was deleted` error is saying. If you define the lambda beforehand and bind it to a variable so that it's still alive when you draw, you can solve that problem (notice also that the lambda needs to accept two parameters instead of one):. ```python. from ROOT import TF1. l = lambda x, p: x[0]. f = TF1('f', l, 0, 1). f.Draw(). ```. The fact that it was working with other versions of Python was by pure chance (the object was still not deleted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:578,integrability,version,versions,578,"The problem here is that the lambda you are passing to the constructor of `TF1` is a temporary that is (can be) garbage collected right after the constructor call of `TF1` returns. That's what the `callable was deleted` error is saying. If you define the lambda beforehand and bind it to a variable so that it's still alive when you draw, you can solve that problem (notice also that the lambda needs to accept two parameters instead of one):. ```python. from ROOT import TF1. l = lambda x, p: x[0]. f = TF1('f', l, 0, 1). f.Draw(). ```. The fact that it was working with other versions of Python was by pure chance (the object was still not deleted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:277,interoperability,bind,bind,277,"The problem here is that the lambda you are passing to the constructor of `TF1` is a temporary that is (can be) garbage collected right after the constructor call of `TF1` returns. That's what the `callable was deleted` error is saying. If you define the lambda beforehand and bind it to a variable so that it's still alive when you draw, you can solve that problem (notice also that the lambda needs to accept two parameters instead of one):. ```python. from ROOT import TF1. l = lambda x, p: x[0]. f = TF1('f', l, 0, 1). f.Draw(). ```. The fact that it was working with other versions of Python was by pure chance (the object was still not deleted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:277,modifiability,bind,bind,277,"The problem here is that the lambda you are passing to the constructor of `TF1` is a temporary that is (can be) garbage collected right after the constructor call of `TF1` returns. That's what the `callable was deleted` error is saying. If you define the lambda beforehand and bind it to a variable so that it's still alive when you draw, you can solve that problem (notice also that the lambda needs to accept two parameters instead of one):. ```python. from ROOT import TF1. l = lambda x, p: x[0]. f = TF1('f', l, 0, 1). f.Draw(). ```. The fact that it was working with other versions of Python was by pure chance (the object was still not deleted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:290,modifiability,variab,variable,290,"The problem here is that the lambda you are passing to the constructor of `TF1` is a temporary that is (can be) garbage collected right after the constructor call of `TF1` returns. That's what the `callable was deleted` error is saying. If you define the lambda beforehand and bind it to a variable so that it's still alive when you draw, you can solve that problem (notice also that the lambda needs to accept two parameters instead of one):. ```python. from ROOT import TF1. l = lambda x, p: x[0]. f = TF1('f', l, 0, 1). f.Draw(). ```. The fact that it was working with other versions of Python was by pure chance (the object was still not deleted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:415,modifiability,paramet,parameters,415,"The problem here is that the lambda you are passing to the constructor of `TF1` is a temporary that is (can be) garbage collected right after the constructor call of `TF1` returns. That's what the `callable was deleted` error is saying. If you define the lambda beforehand and bind it to a variable so that it's still alive when you draw, you can solve that problem (notice also that the lambda needs to accept two parameters instead of one):. ```python. from ROOT import TF1. l = lambda x, p: x[0]. f = TF1('f', l, 0, 1). f.Draw(). ```. The fact that it was working with other versions of Python was by pure chance (the object was still not deleted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:578,modifiability,version,versions,578,"The problem here is that the lambda you are passing to the constructor of `TF1` is a temporary that is (can be) garbage collected right after the constructor call of `TF1` returns. That's what the `callable was deleted` error is saying. If you define the lambda beforehand and bind it to a variable so that it's still alive when you draw, you can solve that problem (notice also that the lambda needs to accept two parameters instead of one):. ```python. from ROOT import TF1. l = lambda x, p: x[0]. f = TF1('f', l, 0, 1). f.Draw(). ```. The fact that it was working with other versions of Python was by pure chance (the object was still not deleted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:220,performance,error,error,220,"The problem here is that the lambda you are passing to the constructor of `TF1` is a temporary that is (can be) garbage collected right after the constructor call of `TF1` returns. That's what the `callable was deleted` error is saying. If you define the lambda beforehand and bind it to a variable so that it's still alive when you draw, you can solve that problem (notice also that the lambda needs to accept two parameters instead of one):. ```python. from ROOT import TF1. l = lambda x, p: x[0]. f = TF1('f', l, 0, 1). f.Draw(). ```. The fact that it was working with other versions of Python was by pure chance (the object was still not deleted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:220,safety,error,error,220,"The problem here is that the lambda you are passing to the constructor of `TF1` is a temporary that is (can be) garbage collected right after the constructor call of `TF1` returns. That's what the `callable was deleted` error is saying. If you define the lambda beforehand and bind it to a variable so that it's still alive when you draw, you can solve that problem (notice also that the lambda needs to accept two parameters instead of one):. ```python. from ROOT import TF1. l = lambda x, p: x[0]. f = TF1('f', l, 0, 1). f.Draw(). ```. The fact that it was working with other versions of Python was by pure chance (the object was still not deleted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:220,usability,error,error,220,"The problem here is that the lambda you are passing to the constructor of `TF1` is a temporary that is (can be) garbage collected right after the constructor call of `TF1` returns. That's what the `callable was deleted` error is saying. If you define the lambda beforehand and bind it to a variable so that it's still alive when you draw, you can solve that problem (notice also that the lambda needs to accept two parameters instead of one):. ```python. from ROOT import TF1. l = lambda x, p: x[0]. f = TF1('f', l, 0, 1). f.Draw(). ```. The fact that it was working with other versions of Python was by pure chance (the object was still not deleted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9468:83,testability,understand,understand,83,"@guitargeek _curIndex should be of type `size_t`. It was like this before, I don't understand why it was changed to unsigned long. I don't think this was causing the streamer/warning mentioned in https://github.com/root-project/root/pull/9374 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:72,deployability,depend,dependent,72,"Hi, it was changed to `unsigned long` because `std::size_t` is platform dependent, as explained by @pcanal here: https://github.com/root-project/root/pull/9374#issuecomment-985770700. So actually it was causing the stream warnings. The issue here can be solved by using `std::numeric_limits<unsigned long>::max()` instead, I will fix that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:72,integrability,depend,dependent,72,"Hi, it was changed to `unsigned long` because `std::size_t` is platform dependent, as explained by @pcanal here: https://github.com/root-project/root/pull/9374#issuecomment-985770700. So actually it was causing the stream warnings. The issue here can be solved by using `std::numeric_limits<unsigned long>::max()` instead, I will fix that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:63,interoperability,platform,platform,63,"Hi, it was changed to `unsigned long` because `std::size_t` is platform dependent, as explained by @pcanal here: https://github.com/root-project/root/pull/9374#issuecomment-985770700. So actually it was causing the stream warnings. The issue here can be solved by using `std::numeric_limits<unsigned long>::max()` instead, I will fix that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:72,modifiability,depend,dependent,72,"Hi, it was changed to `unsigned long` because `std::size_t` is platform dependent, as explained by @pcanal here: https://github.com/root-project/root/pull/9374#issuecomment-985770700. So actually it was causing the stream warnings. The issue here can be solved by using `std::numeric_limits<unsigned long>::max()` instead, I will fix that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:72,safety,depend,dependent,72,"Hi, it was changed to `unsigned long` because `std::size_t` is platform dependent, as explained by @pcanal here: https://github.com/root-project/root/pull/9374#issuecomment-985770700. So actually it was causing the stream warnings. The issue here can be solved by using `std::numeric_limits<unsigned long>::max()` instead, I will fix that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:72,testability,depend,dependent,72,"Hi, it was changed to `unsigned long` because `std::size_t` is platform dependent, as explained by @pcanal here: https://github.com/root-project/root/pull/9374#issuecomment-985770700. So actually it was causing the stream warnings. The issue here can be solved by using `std::numeric_limits<unsigned long>::max()` instead, I will fix that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/pull/9470:38,interoperability,format,format,38,The force push was to apply the clang-format changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9472:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9472
https://github.com/root-project/root/pull/9472:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9472
https://github.com/root-project/root/pull/9472:20,safety,test,tests,20,"@couet rerunning PR tests because they will now pick up your new roottest branch making everything pass, ideally!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9472
https://github.com/root-project/root/pull/9472:20,testability,test,tests,20,"@couet rerunning PR tests because they will now pick up your new roottest branch making everything pass, ideally!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9472
https://github.com/root-project/root/pull/9472:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9472
https://github.com/root-project/root/pull/9473:11,deployability,build,build,11,"@phsft-bot build also on ROOT-debian10-i386/cxx14, ROOT-performance-centos8-multicore/default, ROOT-ubuntu16/nortcxxmod, ROOT-ubuntu2004/soversion, mac1015/python3, mac11/cxx17, windows10/cxx14 with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:56,performance,perform,performance-,56,"@phsft-bot build also on ROOT-debian10-i386/cxx14, ROOT-performance-centos8-multicore/default, ROOT-ubuntu16/nortcxxmod, ROOT-ubuntu2004/soversion, mac1015/python3, mac11/cxx17, windows10/cxx14 with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:56,usability,perform,performance-,56,"@phsft-bot build also on ROOT-debian10-i386/cxx14, ROOT-performance-centos8-multicore/default, ROOT-ubuntu16/nortcxxmod, ROOT-ubuntu2004/soversion, mac1015/python3, mac11/cxx17, windows10/cxx14 with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:18,availability,failur,failure,18,"The above centos8 failure is not related to this PR. The Windows failure is expected (roofit_multiprocess=ON is not supported on Windows). Other CI runs were successful:. ![Schermafbeelding 2021-12-20 om 20 40 21](https://user-images.githubusercontent.com/6146598/146823280-f0257eba-8dc3-4f22-b83b-f99d1d01e9a4.png). Will now do another CI run without the MultiProcess flags, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:65,availability,failur,failure,65,"The above centos8 failure is not related to this PR. The Windows failure is expected (roofit_multiprocess=ON is not supported on Windows). Other CI runs were successful:. ![Schermafbeelding 2021-12-20 om 20 40 21](https://user-images.githubusercontent.com/6146598/146823280-f0257eba-8dc3-4f22-b83b-f99d1d01e9a4.png). Will now do another CI run without the MultiProcess flags, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:18,deployability,fail,failure,18,"The above centos8 failure is not related to this PR. The Windows failure is expected (roofit_multiprocess=ON is not supported on Windows). Other CI runs were successful:. ![Schermafbeelding 2021-12-20 om 20 40 21](https://user-images.githubusercontent.com/6146598/146823280-f0257eba-8dc3-4f22-b83b-f99d1d01e9a4.png). Will now do another CI run without the MultiProcess flags, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:65,deployability,fail,failure,65,"The above centos8 failure is not related to this PR. The Windows failure is expected (roofit_multiprocess=ON is not supported on Windows). Other CI runs were successful:. ![Schermafbeelding 2021-12-20 om 20 40 21](https://user-images.githubusercontent.com/6146598/146823280-f0257eba-8dc3-4f22-b83b-f99d1d01e9a4.png). Will now do another CI run without the MultiProcess flags, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:18,performance,failur,failure,18,"The above centos8 failure is not related to this PR. The Windows failure is expected (roofit_multiprocess=ON is not supported on Windows). Other CI runs were successful:. ![Schermafbeelding 2021-12-20 om 20 40 21](https://user-images.githubusercontent.com/6146598/146823280-f0257eba-8dc3-4f22-b83b-f99d1d01e9a4.png). Will now do another CI run without the MultiProcess flags, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:65,performance,failur,failure,65,"The above centos8 failure is not related to this PR. The Windows failure is expected (roofit_multiprocess=ON is not supported on Windows). Other CI runs were successful:. ![Schermafbeelding 2021-12-20 om 20 40 21](https://user-images.githubusercontent.com/6146598/146823280-f0257eba-8dc3-4f22-b83b-f99d1d01e9a4.png). Will now do another CI run without the MultiProcess flags, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:18,reliability,fail,failure,18,"The above centos8 failure is not related to this PR. The Windows failure is expected (roofit_multiprocess=ON is not supported on Windows). Other CI runs were successful:. ![Schermafbeelding 2021-12-20 om 20 40 21](https://user-images.githubusercontent.com/6146598/146823280-f0257eba-8dc3-4f22-b83b-f99d1d01e9a4.png). Will now do another CI run without the MultiProcess flags, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:65,reliability,fail,failure,65,"The above centos8 failure is not related to this PR. The Windows failure is expected (roofit_multiprocess=ON is not supported on Windows). Other CI runs were successful:. ![Schermafbeelding 2021-12-20 om 20 40 21](https://user-images.githubusercontent.com/6146598/146823280-f0257eba-8dc3-4f22-b83b-f99d1d01e9a4.png). Will now do another CI run without the MultiProcess flags, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:116,usability,support,supported,116,"The above centos8 failure is not related to this PR. The Windows failure is expected (roofit_multiprocess=ON is not supported on Windows). Other CI runs were successful:. ![Schermafbeelding 2021-12-20 om 20 40 21](https://user-images.githubusercontent.com/6146598/146823280-f0257eba-8dc3-4f22-b83b-f99d1d01e9a4.png). Will now do another CI run without the MultiProcess flags, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:222,usability,user,user-images,222,"The above centos8 failure is not related to this PR. The Windows failure is expected (roofit_multiprocess=ON is not supported on Windows). Other CI runs were successful:. ![Schermafbeelding 2021-12-20 om 20 40 21](https://user-images.githubusercontent.com/6146598/146823280-f0257eba-8dc3-4f22-b83b-f99d1d01e9a4.png). Will now do another CI run without the MultiProcess flags, just to be sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:35,deployability,build,build,35,"Just realized now that the default build matrix already has `roofit_multiprocess` flags ON by default now (except Windows), so the above build results are all we need (except the Windows one, but I don't expect issues there). Ready for review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:137,deployability,build,build,137,"Just realized now that the default build matrix already has `roofit_multiprocess` flags ON by default now (except Windows), so the above build results are all we need (except the Windows one, but I don't expect issues there). Ready for review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:107,safety,except,except,107,"Just realized now that the default build matrix already has `roofit_multiprocess` flags ON by default now (except Windows), so the above build results are all we need (except the Windows one, but I don't expect issues there). Ready for review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:168,safety,except,except,168,"Just realized now that the default build matrix already has `roofit_multiprocess` flags ON by default now (except Windows), so the above build results are all we need (except the Windows one, but I don't expect issues there). Ready for review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:236,safety,review,review,236,"Just realized now that the default build matrix already has `roofit_multiprocess` flags ON by default now (except Windows), so the above build results are all we need (except the Windows one, but I don't expect issues there). Ready for review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:236,testability,review,review,236,"Just realized now that the default build matrix already has `roofit_multiprocess` flags ON by default now (except Windows), so the above build results are all we need (except the Windows one, but I don't expect issues there). Ready for review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:436,deployability,version,versioning,436,"Hi @guitargeek, thanks for reviving this PR :) It is still useful indeed; it solves a bug. As you can read in the discussion after @amadio's review, the implementation could be nicer, but I think it suffices for the minimal purpose it was meant for. I would be fine with merging to fix the bug, but of course the decision is up to you (plural) :) I cannot put more time into this right now, but if anyone else feels up to improving the versioning as @amadio suggested, of course that would be great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:436,integrability,version,versioning,436,"Hi @guitargeek, thanks for reviving this PR :) It is still useful indeed; it solves a bug. As you can read in the discussion after @amadio's review, the implementation could be nicer, but I think it suffices for the minimal purpose it was meant for. I would be fine with merging to fix the bug, but of course the decision is up to you (plural) :) I cannot put more time into this right now, but if anyone else feels up to improving the versioning as @amadio suggested, of course that would be great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:436,modifiability,version,versioning,436,"Hi @guitargeek, thanks for reviving this PR :) It is still useful indeed; it solves a bug. As you can read in the discussion after @amadio's review, the implementation could be nicer, but I think it suffices for the minimal purpose it was meant for. I would be fine with merging to fix the bug, but of course the decision is up to you (plural) :) I cannot put more time into this right now, but if anyone else feels up to improving the versioning as @amadio suggested, of course that would be great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:365,performance,time,time,365,"Hi @guitargeek, thanks for reviving this PR :) It is still useful indeed; it solves a bug. As you can read in the discussion after @amadio's review, the implementation could be nicer, but I think it suffices for the minimal purpose it was meant for. I would be fine with merging to fix the bug, but of course the decision is up to you (plural) :) I cannot put more time into this right now, but if anyone else feels up to improving the versioning as @amadio suggested, of course that would be great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:141,safety,review,review,141,"Hi @guitargeek, thanks for reviving this PR :) It is still useful indeed; it solves a bug. As you can read in the discussion after @amadio's review, the implementation could be nicer, but I think it suffices for the minimal purpose it was meant for. I would be fine with merging to fix the bug, but of course the decision is up to you (plural) :) I cannot put more time into this right now, but if anyone else feels up to improving the versioning as @amadio suggested, of course that would be great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:141,testability,review,review,141,"Hi @guitargeek, thanks for reviving this PR :) It is still useful indeed; it solves a bug. As you can read in the discussion after @amadio's review, the implementation could be nicer, but I think it suffices for the minimal purpose it was meant for. I would be fine with merging to fix the bug, but of course the decision is up to you (plural) :) I cannot put more time into this right now, but if anyone else feels up to improving the versioning as @amadio suggested, of course that would be great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:216,usability,minim,minimal,216,"Hi @guitargeek, thanks for reviving this PR :) It is still useful indeed; it solves a bug. As you can read in the discussion after @amadio's review, the implementation could be nicer, but I think it suffices for the minimal purpose it was meant for. I would be fine with merging to fix the bug, but of course the decision is up to you (plural) :) I cannot put more time into this right now, but if anyone else feels up to improving the versioning as @amadio suggested, of course that would be great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:115,deployability,continu,continue,115,"Closing in favor of another PR. https://github.com/root-project/root/pull/14003. @amadio and @egpbos, feel free to continue the discussion there and make comments! That would be very appreciated :pray:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:196,reliability,pra,pray,196,"Closing in favor of another PR. https://github.com/root-project/root/pull/14003. @amadio and @egpbos, feel free to continue the discussion there and make comments! That would be very appreciated :pray:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/issues/9474:224,deployability,manag,manage,224,"Ivan and I took a look and it looks like the culprit is `cling` getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:311,deployability,patch,patch,311,"Ivan and I took a look and it looks like the culprit is `cling` getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:224,energy efficiency,manag,manage,224,"Ivan and I took a look and it looks like the culprit is `cling` getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:1363,energy efficiency,current,current,1363,"a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. static global counter:2. static global counter:3. static global counter:2 // two again!? static global counter:4. ```. the output is wrong and different from what we get in a compiled program:. ```. $ g++ -g -Wall -Wextra -Wpedantic -o repro repro.cpp $(root-config --cflags --libs) && ./repro. setting counter to 1. static global counter:1. static global counter:1. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:1414,energy efficiency,adapt,adapted,1414,"dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. static global counter:2. static global counter:3. static global counter:2 // two again!? static global counter:4. ```. the output is wrong and different from what we get in a compiled program:. ```. $ g++ -g -Wall -Wextra -Wpedantic -o repro repro.cpp $(root-config --cflags --libs) && ./repro. setting counter to 1. static global counter:1. static global counter:1. static global counter:2. static global counter:3. s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:813,integrability,pub,public,813,"Ivan and I took a look and it looks like the culprit is `cling` getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:1414,integrability,adapt,adapted,1414,"dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. static global counter:2. static global counter:3. static global counter:2 // two again!? static global counter:4. ```. the output is wrong and different from what we get in a compiled program:. ```. $ g++ -g -Wall -Wextra -Wpedantic -o repro repro.cpp $(root-config --cflags --libs) && ./repro. setting counter to 1. static global counter:1. static global counter:1. static global counter:2. static global counter:3. s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:1414,interoperability,adapt,adapted,1414,"dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. static global counter:2. static global counter:3. static global counter:2 // two again!? static global counter:4. ```. the output is wrong and different from what we get in a compiled program:. ```. $ g++ -g -Wall -Wextra -Wpedantic -o repro repro.cpp $(root-config --cflags --libs) && ./repro. setting counter to 1. static global counter:1. static global counter:1. static global counter:2. static global counter:3. s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:1414,modifiability,adapt,adapted,1414,"dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. static global counter:2. static global counter:3. static global counter:2 // two again!? static global counter:4. ```. the output is wrong and different from what we get in a compiled program:. ```. $ g++ -g -Wall -Wextra -Wpedantic -o repro repro.cpp $(root-config --cflags --libs) && ./repro. setting counter to 1. static global counter:1. static global counter:1. static global counter:2. static global counter:3. s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:144,performance,time,times,144,"Ivan and I took a look and it looks like the culprit is `cling` getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:224,safety,manag,manage,224,"Ivan and I took a look and it looks like the culprit is `cling` getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:311,safety,patch,patch,311,"Ivan and I took a look and it looks like the culprit is `cling` getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:311,security,patch,patch,311,"Ivan and I took a look and it looks like the culprit is `cling` getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:270,testability,simpl,simplest,270,"Ivan and I took a look and it looks like the culprit is `cling` getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:270,usability,simpl,simplest,270,"Ivan and I took a look and it looks like the culprit is `cling` getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:1058,usability,Clear,ClearCounter,1058,"getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. static global counter:2. static global counter:3. static global ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:1133,usability,Clear,ClearCounter,1133,"iple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. index 9548c4adf0..3e39c80f33 100644. --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx. @@ -57,6 +57,7 @@ private:. static unsigned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. static global counter:2. static global counter:3. static global counter:2 // two again!? static global counter:4. ```. the output is wrong ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:2555,usability,person,person,2555,"ned int &GetStaticGlobalCounter(). {. static unsigned int sGlobalCounter = 1;. + printf(""static global counter:%u\n"", sGlobalCounter);. return sGlobalCounter;. }. @@ -68,7 +69,11 @@ public:. ////////////////////////////////////////////////////////////////////////////. /// \brief Resets the counter. /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result. - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }. + static void ClearCounter(). + {. + printf(""setting counter to 1\n"");. + GraphNode::GetStaticGlobalCounter() = 1;. + }. ////////////////////////////////////////////////////////////////////////////. /// \brief Appends a node on the head of the current node. ```. and execute the following code (adapted from Ivan's repro above):. ```cpp. // repro.cpp. #include <ROOT/RDFHelpers.hxx>. #include <ROOT/RDataFrame.hxx>. void repro() {. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""one"", ""1"").Count();. auto branch1_2 = rd1.Define(""two"", ""2"").Count();. ROOT::RDF::SaveGraph(rd1);. }. #ifndef __CLING__. int main() { repro(); }. #endif. ```. Running through the interpreter:. ```. $ root -l -b -q repro.cpp. Processing repro.cpp... setting counter to 1. static global counter:1. static global counter:1. static global counter:1 // one again!? this counter is always increased. static global counter:2. static global counter:3. static global counter:2 // two again!? static global counter:4. ```. the output is wrong and different from what we get in a compiled program:. ```. $ g++ -g -Wall -Wextra -Wpedantic -o repro repro.cpp $(root-config --cflags --libs) && ./repro. setting counter to 1. static global counter:1. static global counter:1. static global counter:2. static global counter:3. static global counter:4. static global counter:5. static global counter:6. ```. Assigning this to @Axel-Naumann as we need an interpreter person to figure out why the static global counter changes values like that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:13,energy efficiency,current,current,13,"Note that in current master the static global counter was removed in favor of a local variable so the issue is not reproducible anymore, at least with the code posted above (but the underlying interpreter issue might still be worth investigating).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:86,modifiability,variab,variable,86,"Note that in current master the static global counter was removed in favor of a local variable so the issue is not reproducible anymore, at least with the code posted above (but the underlying interpreter issue might still be worth investigating).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/pull/9478:76,deployability,log,log,76,"> is now used instead (see also adc78fa). Avoid using commit hash in commit log (*) (especially since we use rebase) as they are not stable, in particular if/when the commit is back ported. At the very least, I recommend adding (or using instead) the title of the commit in question.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9478:42,safety,Avoid,Avoid,42,"> is now used instead (see also adc78fa). Avoid using commit hash in commit log (*) (especially since we use rebase) as they are not stable, in particular if/when the commit is back ported. At the very least, I recommend adding (or using instead) the title of the commit in question.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9478:76,safety,log,log,76,"> is now used instead (see also adc78fa). Avoid using commit hash in commit log (*) (especially since we use rebase) as they are not stable, in particular if/when the commit is back ported. At the very least, I recommend adding (or using instead) the title of the commit in question.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9478:61,security,hash,hash,61,"> is now used instead (see also adc78fa). Avoid using commit hash in commit log (*) (especially since we use rebase) as they are not stable, in particular if/when the commit is back ported. At the very least, I recommend adding (or using instead) the title of the commit in question.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9478:76,security,log,log,76,"> is now used instead (see also adc78fa). Avoid using commit hash in commit log (*) (especially since we use rebase) as they are not stable, in particular if/when the commit is back ported. At the very least, I recommend adding (or using instead) the title of the commit in question.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9478:76,testability,log,log,76,"> is now used instead (see also adc78fa). Avoid using commit hash in commit log (*) (especially since we use rebase) as they are not stable, in particular if/when the commit is back ported. At the very least, I recommend adding (or using instead) the title of the commit in question.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9478:94,deployability,updat,updated,94,"Hi @pcanal, happy New Year! Sorry I missed your comment just before the holiday break. I have updated the last commit message to not only include the commit hash in `master`, but also the commit title. Is that okay now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9478:118,integrability,messag,message,118,"Hi @pcanal, happy New Year! Sorry I missed your comment just before the holiday break. I have updated the last commit message to not only include the commit hash in `master`, but also the commit title. Is that okay now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9478:118,interoperability,messag,message,118,"Hi @pcanal, happy New Year! Sorry I missed your comment just before the holiday break. I have updated the last commit message to not only include the commit hash in `master`, but also the commit title. Is that okay now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9478:94,safety,updat,updated,94,"Hi @pcanal, happy New Year! Sorry I missed your comment just before the holiday break. I have updated the last commit message to not only include the commit hash in `master`, but also the commit title. Is that okay now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9478:94,security,updat,updated,94,"Hi @pcanal, happy New Year! Sorry I missed your comment just before the holiday break. I have updated the last commit message to not only include the commit hash in `master`, but also the commit title. Is that okay now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9478:157,security,hash,hash,157,"Hi @pcanal, happy New Year! Sorry I missed your comment just before the holiday break. I have updated the last commit message to not only include the commit hash in `master`, but also the commit title. Is that okay now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9479:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:23,deployability,log,logic,23,Mmmh the outer if/else logic is wrong now (we need to take the `else` branch if `TFile::Cp` succeeds). I'm on it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:23,safety,log,logic,23,Mmmh the outer if/else logic is wrong now (we need to take the `else` branch if `TFile::Cp` succeeds). I'm on it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:23,security,log,logic,23,Mmmh the outer if/else logic is wrong now (we need to take the `else` branch if `TFile::Cp` succeeds). I'm on it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:23,testability,log,logic,23,Mmmh the outer if/else logic is wrong now (we need to take the `else` branch if `TFile::Cp` succeeds). I'm on it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:338,availability,failur,failure,338,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:214,deployability,fail,fails,214,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:338,deployability,fail,failure,338,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:371,deployability,fail,fails,371,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:96,performance,cach,cache,96,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:144,performance,time,time,144,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:234,performance,cach,cache,234,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:338,performance,failur,failure,338,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:391,performance,cach,cache,391,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:450,performance,cach,caching,450,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:214,reliability,fail,fails,214,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:262,reliability,doe,doesn,262,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:338,reliability,fail,failure,338,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:371,reliability,fail,fails,371,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:2,safety,test,tested,2,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:2,testability,test,tested,2,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
