id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/9244:1069,reliability,diagno,diagnostics,1069,"[tcling] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc; This pull-request suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc (see below). A TClingCallFunc wrapper function might look as the excerpt below, where the function denoted by `func` may have been annotated as `[[nodiscard]]`. Note that if `ret == nullptr` the result of the call is unused. ```c++. extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret) {. if (ret) {. new (ret) (return_type) ((class_name*)obj)->func(args...);. }. else {. ((class_name*)obj)->func(args...);. }. }. ```. In turn, this triggers warnings when used by cppyy/PyROOT, e.g. ```python. >>> import ROOT. >>> v = ROOT.std.vector(int)(). >>> v.empty(). input_line_34:10:7: warning; ignoring return value of function declared with 'nodiscard' attribute. [-Wunused-result]. ((const vector<int>*)obj)->empty();. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. True. >>>. ```. ## Changes or fixes:. - Given the above situation, this commit supresses `-Wunused-result` diagnostics only for TClingCallFunc wrapper functions. ## Checklist:. - [X] tested changes locally. This PR fixes #8622. Sibling PR in roottest: https://github.com/root-project/roottest/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9244
https://github.com/root-project/root/pull/9244:1145,safety,test,tested,1145,"[tcling] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc; This pull-request suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc (see below). A TClingCallFunc wrapper function might look as the excerpt below, where the function denoted by `func` may have been annotated as `[[nodiscard]]`. Note that if `ret == nullptr` the result of the call is unused. ```c++. extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret) {. if (ret) {. new (ret) (return_type) ((class_name*)obj)->func(args...);. }. else {. ((class_name*)obj)->func(args...);. }. }. ```. In turn, this triggers warnings when used by cppyy/PyROOT, e.g. ```python. >>> import ROOT. >>> v = ROOT.std.vector(int)(). >>> v.empty(). input_line_34:10:7: warning; ignoring return value of function declared with 'nodiscard' attribute. [-Wunused-result]. ((const vector<int>*)obj)->empty();. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. True. >>>. ```. ## Changes or fixes:. - Given the above situation, this commit supresses `-Wunused-result` diagnostics only for TClingCallFunc wrapper functions. ## Checklist:. - [X] tested changes locally. This PR fixes #8622. Sibling PR in roottest: https://github.com/root-project/roottest/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9244
https://github.com/root-project/root/pull/9244:36,testability,diagno,diagnostics,36,"[tcling] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc; This pull-request suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc (see below). A TClingCallFunc wrapper function might look as the excerpt below, where the function denoted by `func` may have been annotated as `[[nodiscard]]`. Note that if `ret == nullptr` the result of the call is unused. ```c++. extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret) {. if (ret) {. new (ret) (return_type) ((class_name*)obj)->func(args...);. }. else {. ((class_name*)obj)->func(args...);. }. }. ```. In turn, this triggers warnings when used by cppyy/PyROOT, e.g. ```python. >>> import ROOT. >>> v = ROOT.std.vector(int)(). >>> v.empty(). input_line_34:10:7: warning; ignoring return value of function declared with 'nodiscard' attribute. [-Wunused-result]. ((const vector<int>*)obj)->empty();. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. True. >>>. ```. ## Changes or fixes:. - Given the above situation, this commit supresses `-Wunused-result` diagnostics only for TClingCallFunc wrapper functions. ## Checklist:. - [X] tested changes locally. This PR fixes #8622. Sibling PR in roottest: https://github.com/root-project/roottest/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9244
https://github.com/root-project/root/pull/9244:136,testability,diagno,diagnostics,136,"[tcling] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc; This pull-request suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc (see below). A TClingCallFunc wrapper function might look as the excerpt below, where the function denoted by `func` may have been annotated as `[[nodiscard]]`. Note that if `ret == nullptr` the result of the call is unused. ```c++. extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret) {. if (ret) {. new (ret) (return_type) ((class_name*)obj)->func(args...);. }. else {. ((class_name*)obj)->func(args...);. }. }. ```. In turn, this triggers warnings when used by cppyy/PyROOT, e.g. ```python. >>> import ROOT. >>> v = ROOT.std.vector(int)(). >>> v.empty(). input_line_34:10:7: warning; ignoring return value of function declared with 'nodiscard' attribute. [-Wunused-result]. ((const vector<int>*)obj)->empty();. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. True. >>>. ```. ## Changes or fixes:. - Given the above situation, this commit supresses `-Wunused-result` diagnostics only for TClingCallFunc wrapper functions. ## Checklist:. - [X] tested changes locally. This PR fixes #8622. Sibling PR in roottest: https://github.com/root-project/roottest/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9244
https://github.com/root-project/root/pull/9244:1069,testability,diagno,diagnostics,1069,"[tcling] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc; This pull-request suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc (see below). A TClingCallFunc wrapper function might look as the excerpt below, where the function denoted by `func` may have been annotated as `[[nodiscard]]`. Note that if `ret == nullptr` the result of the call is unused. ```c++. extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret) {. if (ret) {. new (ret) (return_type) ((class_name*)obj)->func(args...);. }. else {. ((class_name*)obj)->func(args...);. }. }. ```. In turn, this triggers warnings when used by cppyy/PyROOT, e.g. ```python. >>> import ROOT. >>> v = ROOT.std.vector(int)(). >>> v.empty(). input_line_34:10:7: warning; ignoring return value of function declared with 'nodiscard' attribute. [-Wunused-result]. ((const vector<int>*)obj)->empty();. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. True. >>>. ```. ## Changes or fixes:. - Given the above situation, this commit supresses `-Wunused-result` diagnostics only for TClingCallFunc wrapper functions. ## Checklist:. - [X] tested changes locally. This PR fixes #8622. Sibling PR in roottest: https://github.com/root-project/roottest/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9244
https://github.com/root-project/root/pull/9244:1145,testability,test,tested,1145,"[tcling] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc; This pull-request suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc (see below). A TClingCallFunc wrapper function might look as the excerpt below, where the function denoted by `func` may have been annotated as `[[nodiscard]]`. Note that if `ret == nullptr` the result of the call is unused. ```c++. extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret) {. if (ret) {. new (ret) (return_type) ((class_name*)obj)->func(args...);. }. else {. ((class_name*)obj)->func(args...);. }. }. ```. In turn, this triggers warnings when used by cppyy/PyROOT, e.g. ```python. >>> import ROOT. >>> v = ROOT.std.vector(int)(). >>> v.empty(). input_line_34:10:7: warning; ignoring return value of function declared with 'nodiscard' attribute. [-Wunused-result]. ((const vector<int>*)obj)->empty();. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. True. >>>. ```. ## Changes or fixes:. - Given the above situation, this commit supresses `-Wunused-result` diagnostics only for TClingCallFunc wrapper functions. ## Checklist:. - [X] tested changes locally. This PR fixes #8622. Sibling PR in roottest: https://github.com/root-project/roottest/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9244
https://github.com/root-project/root/pull/9245:216,reliability,doe,does,216,"[cling] Remove unneed `assert()` in DynamicLookup.cpp; The case of `ExprAddresses == nullptr` seems to be naturally handled in the lines below this assertion, which suggests that it is okay if the asserted predicate does not hold. Therefore, removing this assertion -as discussed with @vgvassilev in the linked issue- [see here](https://github.com/root-project/root/issues/8389#issuecomment-958105156). ## Changes or fixes:. - Remove unneded `assert()`, as discussed above. ## Checklist:. - [X] tested changes locally. This PR fixes #8389.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9245
https://github.com/root-project/root/pull/9245:495,safety,test,tested,495,"[cling] Remove unneed `assert()` in DynamicLookup.cpp; The case of `ExprAddresses == nullptr` seems to be naturally handled in the lines below this assertion, which suggests that it is okay if the asserted predicate does not hold. Therefore, removing this assertion -as discussed with @vgvassilev in the linked issue- [see here](https://github.com/root-project/root/issues/8389#issuecomment-958105156). ## Changes or fixes:. - Remove unneded `assert()`, as discussed above. ## Checklist:. - [X] tested changes locally. This PR fixes #8389.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9245
https://github.com/root-project/root/pull/9245:23,testability,assert,assert,23,"[cling] Remove unneed `assert()` in DynamicLookup.cpp; The case of `ExprAddresses == nullptr` seems to be naturally handled in the lines below this assertion, which suggests that it is okay if the asserted predicate does not hold. Therefore, removing this assertion -as discussed with @vgvassilev in the linked issue- [see here](https://github.com/root-project/root/issues/8389#issuecomment-958105156). ## Changes or fixes:. - Remove unneded `assert()`, as discussed above. ## Checklist:. - [X] tested changes locally. This PR fixes #8389.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9245
https://github.com/root-project/root/pull/9245:148,testability,assert,assertion,148,"[cling] Remove unneed `assert()` in DynamicLookup.cpp; The case of `ExprAddresses == nullptr` seems to be naturally handled in the lines below this assertion, which suggests that it is okay if the asserted predicate does not hold. Therefore, removing this assertion -as discussed with @vgvassilev in the linked issue- [see here](https://github.com/root-project/root/issues/8389#issuecomment-958105156). ## Changes or fixes:. - Remove unneded `assert()`, as discussed above. ## Checklist:. - [X] tested changes locally. This PR fixes #8389.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9245
https://github.com/root-project/root/pull/9245:197,testability,assert,asserted,197,"[cling] Remove unneed `assert()` in DynamicLookup.cpp; The case of `ExprAddresses == nullptr` seems to be naturally handled in the lines below this assertion, which suggests that it is okay if the asserted predicate does not hold. Therefore, removing this assertion -as discussed with @vgvassilev in the linked issue- [see here](https://github.com/root-project/root/issues/8389#issuecomment-958105156). ## Changes or fixes:. - Remove unneded `assert()`, as discussed above. ## Checklist:. - [X] tested changes locally. This PR fixes #8389.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9245
https://github.com/root-project/root/pull/9245:256,testability,assert,assertion,256,"[cling] Remove unneed `assert()` in DynamicLookup.cpp; The case of `ExprAddresses == nullptr` seems to be naturally handled in the lines below this assertion, which suggests that it is okay if the asserted predicate does not hold. Therefore, removing this assertion -as discussed with @vgvassilev in the linked issue- [see here](https://github.com/root-project/root/issues/8389#issuecomment-958105156). ## Changes or fixes:. - Remove unneded `assert()`, as discussed above. ## Checklist:. - [X] tested changes locally. This PR fixes #8389.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9245
https://github.com/root-project/root/pull/9245:443,testability,assert,assert,443,"[cling] Remove unneed `assert()` in DynamicLookup.cpp; The case of `ExprAddresses == nullptr` seems to be naturally handled in the lines below this assertion, which suggests that it is okay if the asserted predicate does not hold. Therefore, removing this assertion -as discussed with @vgvassilev in the linked issue- [see here](https://github.com/root-project/root/issues/8389#issuecomment-958105156). ## Changes or fixes:. - Remove unneded `assert()`, as discussed above. ## Checklist:. - [X] tested changes locally. This PR fixes #8389.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9245
https://github.com/root-project/root/pull/9245:495,testability,test,tested,495,"[cling] Remove unneed `assert()` in DynamicLookup.cpp; The case of `ExprAddresses == nullptr` seems to be naturally handled in the lines below this assertion, which suggests that it is okay if the asserted predicate does not hold. Therefore, removing this assertion -as discussed with @vgvassilev in the linked issue- [see here](https://github.com/root-project/root/issues/8389#issuecomment-958105156). ## Changes or fixes:. - Remove unneded `assert()`, as discussed above. ## Checklist:. - [X] tested changes locally. This PR fixes #8389.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9245
https://github.com/root-project/root/issues/9246:1706,availability,Operat,Operating,1706,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1781,availability,down,download,1781,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:784,deployability,fail,fail,784,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1052,deployability,build,build,1052,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1573,deployability,modul,module,1573,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1694,deployability,version,version,1694,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1763,deployability,instal,install,1763,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1694,integrability,version,version,1694,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1573,modifiability,modul,module,1573,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1694,modifiability,version,version,1694,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:784,reliability,fail,fail,784,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1006,safety,input,input,1006,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1573,safety,modul,module,1573,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1509,testability,Trace,Traceback,1509,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1873,testability,context,context,1873,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1902,testability,context,context,1902,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:476,usability,clear,clear,476,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:524,usability,behavi,behavior,524,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:634,usability,behavi,behavior,634,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:652,usability,clear,clear,652,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:861,usability,behavi,behavior,861,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1006,usability,input,input,1006,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/issues/9246:1181,usability,help,help,1181,"Enums are not correctly resolved by PyROOT when using an alias within a class/struct; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```python. Python 3.9.6 (default, Sep 6 2021, 15:36:22) . [GCC 11.1.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> gROOT = ROOT.gROOT. >>> gROOT.ProcessLine('enum Enum { a,b,c }'). 0. >>> ROOT.Enum. <class 'ROOT._facade.Enum'>. >>> ROOT.Enum.a. 0. >>> ROOT.Enum.b. 1. >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'). 0. >>> ROOT.Track.Type.a. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. AttributeError: type object 'int' has no attribute 'a'. >>> ROOT.Enum.a. 0. >>> . ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9246
https://github.com/root-project/root/pull/9248:493,deployability,build,builds,493,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:724,deployability,Toolchain,Toolchains,724,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1569,deployability,build,build,1569,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1714,deployability,build,build,1714,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1879,deployability,updat,updated,1879,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:262,interoperability,specif,specific,262,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:705,performance,Content,Contents,705,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:8,safety,Avoid,Avoid,8,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1849,safety,test,tested,1849,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1879,safety,updat,updated,1879,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:137,security,hash,hash,137,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:224,security,hash,hash,224,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:243,security,ident,identical,243,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:369,security,hash,hash,369,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:428,security,hash,hash,428,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:629,security,hash,hash,629,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1879,security,updat,updated,1879,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:14,testability,assert,assert,14,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:63,testability,assert,assert,63,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:505,testability,assert,assertions,505,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1193,testability,simpl,simple,1193,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1292,testability,simpl,simple,1292,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1433,testability,simpl,simple,1433,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1479,testability,simpl,simple,1479,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1849,testability,test,tested,1849,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:724,usability,Tool,Toolchains,724,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1193,usability,simpl,simple,1193,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1292,usability,simpl,simple,1292,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1433,usability,simpl,simple,1433,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1479,usability,simpl,simple,1479,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1558,usability,User,Users,1558,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9248:1703,usability,User,Users,1703,"[cling] Avoid assert firing on ODRHash collisions:; We see the assert ""Specialization is already registered as lazy"" triggered. due to a hash collision of two sets of template arguments: the arguments. are different but the hash happens to be identical. Be more specific when. claiming that the specialization was already registered as lazy, by not. only comparing the hash, but also the template arguments we found under. that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:. $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C. where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition. |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init. | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr. | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveConstructor exists simple trivial needs_implicit. | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param. | |-MoveAssignment exists simple trivial needs_implicit. | `-Destructor simple irrelevant trivial needs_implicit. `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9248
https://github.com/root-project/root/pull/9249:324,deployability,Updat,Update,324,"[webgui] correctly handle --web=off arg; 1. When `root --web=off` started, do not try to load `libROOTWebGUI`. 2. Switch back to default `TBrowser` implementation. 3. Prevent `RWebWindow::Show` and starting correspondent `THttpServer`. 4. Fix problem with newest chromium 95 - `--app` no longer work with incognito mode. 5. Update JSROOT with fully redesigned TLatex parser",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9249
https://github.com/root-project/root/pull/9249:89,energy efficiency,load,load,89,"[webgui] correctly handle --web=off arg; 1. When `root --web=off` started, do not try to load `libROOTWebGUI`. 2. Switch back to default `TBrowser` implementation. 3. Prevent `RWebWindow::Show` and starting correspondent `THttpServer`. 4. Fix problem with newest chromium 95 - `--app` no longer work with incognito mode. 5. Update JSROOT with fully redesigned TLatex parser",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9249
https://github.com/root-project/root/pull/9249:89,performance,load,load,89,"[webgui] correctly handle --web=off arg; 1. When `root --web=off` started, do not try to load `libROOTWebGUI`. 2. Switch back to default `TBrowser` implementation. 3. Prevent `RWebWindow::Show` and starting correspondent `THttpServer`. 4. Fix problem with newest chromium 95 - `--app` no longer work with incognito mode. 5. Update JSROOT with fully redesigned TLatex parser",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9249
https://github.com/root-project/root/pull/9249:167,safety,Prevent,Prevent,167,"[webgui] correctly handle --web=off arg; 1. When `root --web=off` started, do not try to load `libROOTWebGUI`. 2. Switch back to default `TBrowser` implementation. 3. Prevent `RWebWindow::Show` and starting correspondent `THttpServer`. 4. Fix problem with newest chromium 95 - `--app` no longer work with incognito mode. 5. Update JSROOT with fully redesigned TLatex parser",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9249
https://github.com/root-project/root/pull/9249:324,safety,Updat,Update,324,"[webgui] correctly handle --web=off arg; 1. When `root --web=off` started, do not try to load `libROOTWebGUI`. 2. Switch back to default `TBrowser` implementation. 3. Prevent `RWebWindow::Show` and starting correspondent `THttpServer`. 4. Fix problem with newest chromium 95 - `--app` no longer work with incognito mode. 5. Update JSROOT with fully redesigned TLatex parser",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9249
https://github.com/root-project/root/pull/9249:167,security,Preven,Prevent,167,"[webgui] correctly handle --web=off arg; 1. When `root --web=off` started, do not try to load `libROOTWebGUI`. 2. Switch back to default `TBrowser` implementation. 3. Prevent `RWebWindow::Show` and starting correspondent `THttpServer`. 4. Fix problem with newest chromium 95 - `--app` no longer work with incognito mode. 5. Update JSROOT with fully redesigned TLatex parser",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9249
https://github.com/root-project/root/pull/9249:324,security,Updat,Update,324,"[webgui] correctly handle --web=off arg; 1. When `root --web=off` started, do not try to load `libROOTWebGUI`. 2. Switch back to default `TBrowser` implementation. 3. Prevent `RWebWindow::Show` and starting correspondent `THttpServer`. 4. Fix problem with newest chromium 95 - `--app` no longer work with incognito mode. 5. Update JSROOT with fully redesigned TLatex parser",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9249
https://github.com/root-project/root/pull/9250:271,availability,operat,operator,271,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:427,energy efficiency,model,model,427,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:449,energy efficiency,model,model,449,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:538,energy efficiency,model,model,538,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:607,energy efficiency,model,model,607,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:686,energy efficiency,model,model,686,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:717,energy efficiency,model,modelName,717,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:104,performance,memor,memory,104,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:115,performance,network,network,115,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:4,security,Session,Session,4,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:52,security,Session,Session,52,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:81,security,Session,Session,81,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:115,security,network,network,115,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:320,security,Session,Session,320,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:427,security,model,model,427,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:449,security,model,model,449,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:495,security,session,session,495,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:538,security,model,model,538,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:607,security,model,model,607,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:686,security,model,model,686,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:717,security,model,modelName,717,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:767,security,Session,Session,767,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/pull/9250:104,usability,memor,memory,104,"Add Session class in Sofie; This Pull request add a Session classs in Sofie. The Session class keeps in memory the network weights and temporary arrays used for inference. . The weights can be stored in a text file. This PR provides also several fixes to the Convolution operator. Here is the example code for using the Session class :. ```. using namespace TMVA::Experimental;. SOFIE::RModelParser_ONNX parser;. SOFIE::RModel model = parser.Parse(""model.onnx"");. // use true , true to generate session class and create weight data file. model.Generate(true, true);. // generate output header and weights . model.OutputGenerated();. ```. Here is the code for inference:. ```. #include ""model.hxx"". // by default uses modelName.dat for weight file . TMVA_SOFIE_model::Session s("""");. // do inference. std::vector<float> x = {....};. auto y = s.infer(x.data());. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9250
https://github.com/root-project/root/issues/9252:64,availability,slo,slow,64,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:345,availability,slo,slow,345,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:580,availability,slo,slow,580,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:132,deployability,version,version,132,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:43,integrability,schema,schema,43,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:132,integrability,version,version,132,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:597,integrability,coupl,couple,597,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:827,integrability,schema,schema,827,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:132,modifiability,version,version,132,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:597,modifiability,coupl,couple,597,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:154,performance,content,content,154,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:229,performance,content,content,229,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:736,performance,time,time,736,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:64,reliability,slo,slow,64,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:345,reliability,slo,slow,345,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:580,reliability,slo,slow,580,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:597,testability,coupl,couple,597,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:320,usability,behavi,behavior,320,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9252:645,usability,behavi,behavior,645,"`TTree::CloneTree` is incorrect in case of schema evolution and slow cloning; The problem is that `CloneTree` also copies the class version number of the content of the `TBranch` onto the new branch. In the case of fast cloning (content of the file is forwarded to the new file as is), this is the correct and necessary behavior. In the case of slow cloning (copy entry by entry, i.e. your case), this is the wrong thing (it uses the old StreamerInfo to write instead of the new one). There is some ambiguity on whether the result of CloneTree will be use for fast cloning or for slow cloning and couple of option on how to implement the proper behavior. In other words, it will take some thoughts on how to implement this. In the mean-time there is an (annoying but workable) work around. For each branch whose type underwent schema evolution you can run:. ```. const char *branchname = ""MCEventHeader."";. TBranchElement *be = dynamic_cast<TBranchElement*>(ctree->GetBranch(branchname));. if (be) {. auto ind = ctree->GetListOfBranches()->IndexOf(be);. TBranch *newbr = ctree->Branch(be->GetName(), be->GetClassName(), nullptr);. ctree->GetListOfBranches()->Remove(newbr);. ctree->GetListOfBranches()->AddAt(newbr, ind);. delete be;. ctree->GetListOfLeaves()->Compress(); // Work around missing protection in CopyAddresses. tree->CopyAddresses(ctree);. }. ```. If you have more than one branch to adjust, the Compress and CopyAddress can probably be run only once. (A similar issues could easily be present in`RNtuple`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9252
https://github.com/root-project/root/issues/9253:145,availability,error,error,145,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:222,availability,error,error,222,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1270,availability,error,error,1270,"tern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2427,availability,error,error-conflicting-types-alpine-linux,2427,"``. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this? Here's a [link](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193) to a ROOT forum thread which describes the same problem (but does not provide any more information than is stated above).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2578,availability,state,stated,2578,"``. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this? Here's a [link](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193) to a ROOT forum thread which describes the same problem (but does not provide any more information than is stated above).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:114,deployability,build,build,114,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:120,deployability,fail,fails,120,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:169,deployability,build,builddir,169,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:353,deployability,build,builddir,353,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:412,deployability,build,builddir,412,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1857,deployability,fail,fails,1857,"``. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this? Here's a [link](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193) to a ROOT forum thread which describes the same problem (but does not provide any more information than is stated above).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:191,energy efficiency,core,core,191,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:375,energy efficiency,core,core,375,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:434,energy efficiency,core,core,434,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1284,energy efficiency,core,core,1284,"etpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not kno",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:151,integrability,messag,message,151,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2578,integrability,state,stated,2578,"``. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this? Here's a [link](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193) to a ROOT forum thread which describes the same problem (but does not provide any more information than is stated above).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:151,interoperability,messag,message,151,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:229,interoperability,conflict,conflicting,229,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1069,interoperability,conflict,conflicts,1069," Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1225,interoperability,standard,standard,1225,"conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return val",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1490,interoperability,compatib,compatibility,1490," previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this? Here's a [link](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193) to a ROOT forum thread whi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2173,interoperability,platform,platforms,2173,"``. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this? Here's a [link](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193) to a ROOT forum thread which describes the same problem (but does not provide any more information than is stated above).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2433,interoperability,conflict,conflicting-types-alpine-linux,2433,"``. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this? Here's a [link](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193) to a ROOT forum thread which describes the same problem (but does not provide any more information than is stated above).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:145,performance,error,error,145,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:222,performance,error,error,222,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1270,performance,error,error,1270,"tern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2427,performance,error,error-conflicting-types-alpine-linux,2427,"``. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this? Here's a [link](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193) to a ROOT forum thread which describes the same problem (but does not provide any more information than is stated above).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5,reliability,doe,does,5,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:120,reliability,fail,fails,120,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:943,reliability,doe,doesn,943,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1857,reliability,fail,fails,1857,"``. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this? Here's a [link](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193) to a ROOT forum thread which describes the same problem (but does not provide any more information than is stated above).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2532,reliability,doe,does,2532,"``. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this? Here's a [link](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193) to a ROOT forum thread which describes the same problem (but does not provide any more information than is stated above).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:145,safety,error,error,145,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:222,safety,error,error,222,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1270,safety,error,error,1270,"tern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2427,safety,error,error-conflicting-types-alpine-linux,2427,"``. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this? Here's a [link](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193) to a ROOT forum thread which describes the same problem (but does not provide any more information than is stated above).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:913,testability,understand,understanding,913,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:145,usability,error,error,145,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:222,usability,error,error,222,"ROOT does not compile on musl libc; I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:. ```cc. /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'. 47 | extern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1270,usability,error,error,1270,"tern size_t getpagesize PARAMS ((void));. | ^~~~~~~~~~~. In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1340,usability,clear,clear,1340,"ded from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,. from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:. /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here. 163 | int getpagesize(void);. | ^~~~~~~~~~~. ```. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2136,usability,support,support,2136,"``. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this? Here's a [link](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193) to a ROOT forum thread which describes the same problem (but does not provide any more information than is stated above).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2427,usability,error,error-conflicting-types-alpine-linux,2427,"``. The relevant part of `mmapsup.c` is:. ```c. #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \. || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)). extern size_t getpagesize PARAMS ((void));. #else. extern int getpagesize PARAMS ((void));. #endif. ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this? Here's a [link](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193) to a ROOT forum thread which describes the same problem (but does not provide any more information than is stated above).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/pull/9255:26,availability,error,error,26,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9255:92,availability,error,error,92,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9255:165,availability,error,error,165,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9255:218,interoperability,format,format,218,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9255:26,performance,error,error,26,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9255:92,performance,error,error,92,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9255:165,performance,error,error,165,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9255:26,safety,error,error,26,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9255:92,safety,error,error,92,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9255:135,safety,test,test,135,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9255:165,safety,error,error,165,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9255:135,testability,test,test,135,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9255:26,usability,error,error,26,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9255:92,usability,error,error,92,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9255:165,usability,error,error,165,[skip-ci] Fix compilation error of constructors.cxx on Win64; Fix the following compilation error on Windows 64 bit:. ```. hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9255
https://github.com/root-project/root/pull/9257:16,energy efficiency,alloc,allocation,16,[RF] Avoid heap allocation of `RooArgSet` in `Roo(Abs)GenContext`; This change is done to avoid using the memory pool for `RooArgSets` in. toy dataset generation workflows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9257
https://github.com/root-project/root/pull/9257:106,performance,memor,memory,106,[RF] Avoid heap allocation of `RooArgSet` in `Roo(Abs)GenContext`; This change is done to avoid using the memory pool for `RooArgSets` in. toy dataset generation workflows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9257
https://github.com/root-project/root/pull/9257:5,safety,Avoid,Avoid,5,[RF] Avoid heap allocation of `RooArgSet` in `Roo(Abs)GenContext`; This change is done to avoid using the memory pool for `RooArgSets` in. toy dataset generation workflows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9257
https://github.com/root-project/root/pull/9257:90,safety,avoid,avoid,90,[RF] Avoid heap allocation of `RooArgSet` in `Roo(Abs)GenContext`; This change is done to avoid using the memory pool for `RooArgSets` in. toy dataset generation workflows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9257
https://github.com/root-project/root/pull/9257:106,usability,memor,memory,106,[RF] Avoid heap allocation of `RooArgSet` in `Roo(Abs)GenContext`; This change is done to avoid using the memory pool for `RooArgSets` in. toy dataset generation workflows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9257
https://github.com/root-project/root/pull/9257:162,usability,workflow,workflows,162,[RF] Avoid heap allocation of `RooArgSet` in `Roo(Abs)GenContext`; This change is done to avoid using the memory pool for `RooArgSets` in. toy dataset generation workflows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9257
https://github.com/root-project/root/pull/9258:62,deployability,releas,releases,62,"[DF] Use assert, not R__ASSERT when checks are unnecessary in releases; In particular, `RJitted{Action,Filter,Define}::Run` and similar functions. can be performance hotspots. Avoid the nullptr check there. Many thanks to Josh Bendavid for reporting the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9258
https://github.com/root-project/root/pull/9258:103,integrability,Filter,Filter,103,"[DF] Use assert, not R__ASSERT when checks are unnecessary in releases; In particular, `RJitted{Action,Filter,Define}::Run` and similar functions. can be performance hotspots. Avoid the nullptr check there. Many thanks to Josh Bendavid for reporting the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9258
https://github.com/root-project/root/pull/9258:154,performance,perform,performance,154,"[DF] Use assert, not R__ASSERT when checks are unnecessary in releases; In particular, `RJitted{Action,Filter,Define}::Run` and similar functions. can be performance hotspots. Avoid the nullptr check there. Many thanks to Josh Bendavid for reporting the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9258
https://github.com/root-project/root/pull/9258:166,safety,hot,hotspots,166,"[DF] Use assert, not R__ASSERT when checks are unnecessary in releases; In particular, `RJitted{Action,Filter,Define}::Run` and similar functions. can be performance hotspots. Avoid the nullptr check there. Many thanks to Josh Bendavid for reporting the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9258
https://github.com/root-project/root/pull/9258:176,safety,Avoid,Avoid,176,"[DF] Use assert, not R__ASSERT when checks are unnecessary in releases; In particular, `RJitted{Action,Filter,Define}::Run` and similar functions. can be performance hotspots. Avoid the nullptr check there. Many thanks to Josh Bendavid for reporting the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9258
https://github.com/root-project/root/pull/9258:9,testability,assert,assert,9,"[DF] Use assert, not R__ASSERT when checks are unnecessary in releases; In particular, `RJitted{Action,Filter,Define}::Run` and similar functions. can be performance hotspots. Avoid the nullptr check there. Many thanks to Josh Bendavid for reporting the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9258
https://github.com/root-project/root/pull/9258:154,usability,perform,performance,154,"[DF] Use assert, not R__ASSERT when checks are unnecessary in releases; In particular, `RJitted{Action,Filter,Define}::Run` and similar functions. can be performance hotspots. Avoid the nullptr check there. Many thanks to Josh Bendavid for reporting the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9258
https://github.com/root-project/root/pull/9259:43,safety,test,tests,43,[DF] Use different file names in different tests; These names collided with those in. tree/dataframe/test/dataframe_samplecallback.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9259
https://github.com/root-project/root/pull/9259:101,safety,test,test,101,[DF] Use different file names in different tests; These names collided with those in. tree/dataframe/test/dataframe_samplecallback.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9259
https://github.com/root-project/root/pull/9259:43,testability,test,tests,43,[DF] Use different file names in different tests; These names collided with those in. tree/dataframe/test/dataframe_samplecallback.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9259
https://github.com/root-project/root/pull/9259:101,testability,test,test,101,[DF] Use different file names in different tests; These names collided with those in. tree/dataframe/test/dataframe_samplecallback.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9259
https://github.com/root-project/root/pull/9260:248,deployability,fail,fail,248,"Fix ROOT for musl libc; It is not possible to compile ROOT with musl libc because in several places it relies on glibc and uses non-standard constructs. This PR aims to fix that, at least to such an extent so that compilation against musl does not fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9260
https://github.com/root-project/root/pull/9260:132,interoperability,standard,standard,132,"Fix ROOT for musl libc; It is not possible to compile ROOT with musl libc because in several places it relies on glibc and uses non-standard constructs. This PR aims to fix that, at least to such an extent so that compilation against musl does not fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9260
https://github.com/root-project/root/pull/9260:199,modifiability,exten,extent,199,"Fix ROOT for musl libc; It is not possible to compile ROOT with musl libc because in several places it relies on glibc and uses non-standard constructs. This PR aims to fix that, at least to such an extent so that compilation against musl does not fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9260
https://github.com/root-project/root/pull/9260:239,reliability,doe,does,239,"Fix ROOT for musl libc; It is not possible to compile ROOT with musl libc because in several places it relies on glibc and uses non-standard constructs. This PR aims to fix that, at least to such an extent so that compilation against musl does not fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9260
https://github.com/root-project/root/pull/9260:248,reliability,fail,fail,248,"Fix ROOT for musl libc; It is not possible to compile ROOT with musl libc because in several places it relies on glibc and uses non-standard constructs. This PR aims to fix that, at least to such an extent so that compilation against musl does not fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9260
https://github.com/root-project/root/issues/9261:48,availability,error,error,48,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:522,availability,error,error,522,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1263,availability,error,error,1263,"eports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)AT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1277,availability,error,error,1277," issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:2144,availability,slo,sloc,2144,". (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #3 0x00007f0bd0c99965 in TUnixSystem::DispatchSignals(ESignals) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #4 <signal handler called>. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:2227,availability,slo,sloc,2227,"= Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #3 0x00007f0bd0c99965 in TUnixSystem::DispatchSignals(ESignals) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #4 <signal handler called>. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transfo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10289,availability,error,error,10289,"OT::VecOps::RVec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NU",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10303,availability,error,error,10303,"ec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11156,availability,slo,sloc,11156," [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11239,availability,slo,sloc,11239,"uto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11573,availability,Operat,Operating,11573,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11945,availability,down,download,11945,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:573,deployability,version,version,573,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:590,deployability,releas,released,590,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:907,deployability,version,version,907,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1712,deployability,depend,dependent,1712,"guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1769,deployability,depend,dependent,1769,"ode in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1816,deployability,depend,dependent,1816,"r/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:2412,deployability,stack,stack,2412,"oid (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #3 0x00007f0bd0c99965 in TUnixSystem::DispatchSignals(ESignals) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #4 <signal handler called>. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:2768,deployability,Stack,StackTrace,2768,"ndent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #3 0x00007f0bd0c99965 in TUnixSystem::DispatchSignals(ESignals) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #4 <signal handler called>. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:6676,deployability,stack,stack,6676,a8c in TUnixSystem::CheckDescriptors() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #20 0x00007f0bd0c9a698 in TUnixSystem::DispatchOneEvent(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #21 0x00007f0bd0bafe29 in TSystem::Run() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #22 0x00007f0bd0b4a14f in TApplication::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #23 0x00007f0bd0e3e96e in TRint::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #24 0x000000000040110c in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalPar,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:9095,deployability,version,version,9095,"its<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #13 0x00007f0bcbde1df5 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #14 0x00007f0bcbea534d in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #15 0x00007f0bcbd35f7c in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. ===========================================================. Root >. ```. * On ROOT version 6.25/01 from the master branch. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v({2., 3., 1.});. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10736,deployability,depend,dependent,10736,"const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10793,deployability,depend,dependent,10793,"corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10840,deployability,depend,dependent,10840,"or::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11336,deployability,version,version,11336,"^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11366,deployability,Version,Version,11366,"ut_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs mas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11489,deployability,Version,Version,11489,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11774,deployability,version,version,11774,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11927,deployability,instal,install,11927,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:4304,energy efficiency,alloc,allocator,4304,"8/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #13 0x00007f0bcbde1df5 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #14 0x00007f0bcbea534d in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #15 0x00007f0bcbd35f7c in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #16 0x00007f0bcbd5127a in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /nix/store/1dsp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:4607,energy efficiency,alloc,allocator,4607,"wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #13 0x00007f0bcbde1df5 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #14 0x00007f0bcbea534d in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #15 0x00007f0bcbd35f7c in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #16 0x00007f0bcbd5127a in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #17 0x00007f0bd0e3d07a in TRint::ProcessLineNr(char const*, char const*, int*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #18 0x00007f0bd0e3d3e5 in TRint::HandleTermInput() () from /nix/store/1dspsr9mq9f5s2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:8115,energy efficiency,alloc,allocator,8115,"8/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #13 0x00007f0bcbde1df5 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #14 0x00007f0bcbea534d in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #15 0x00007f0bcbd35f7c in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. ===========================================================. Root >. ```. * On ROOT version 6.25/01 from the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:8418,energy efficiency,alloc,allocator,8418,"wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #13 0x00007f0bcbde1df5 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #14 0x00007f0bcbea534d in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #15 0x00007f0bcbd35f7c in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. ===========================================================. Root >. ```. * On ROOT version 6.25/01 from the master branch. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v({2., 3., 1.});. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15Lifetime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:9789,energy efficiency,load,load,9789,"00007f0bcbd35f7c in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. ===========================================================. Root >. ```. * On ROOT version 6.25/01 from the master branch. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v({2., 3., 1.});. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10115,energy efficiency,load,load,10115,"he master branch. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v({2., 3., 1.});. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11848,energy efficiency,profil,profiles,11848,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:573,integrability,version,version,573,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:907,integrability,version,version,907,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1712,integrability,depend,dependent,1712,"guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1769,integrability,depend,dependent,1769,"ode in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1816,integrability,depend,dependent,1816,"r/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:3222,integrability,Transform,Transform,3222,"sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #3 0x00007f0bd0c99965 in TUnixSystem::DispatchSignals(ESignals) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #4 <signal handler called>. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::Ev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:3375,integrability,Transform,TransformDecl,3375,"s a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #3 0x00007f0bd0c99965 in TUnixSystem::DispatchSignals(ESignals) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #4 <signal handler called>. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:3538,integrability,Transform,Transform,3538,"ix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #3 0x00007f0bd0c99965 in TUnixSystem::DispatchSignals(ESignals) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #4 <signal handler called>. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #13 0x00007f0bcbde1df5 in cling::Interpreter::proces",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:6607,integrability,sub,submit,6607,s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #19 0x00007f0bd0c98a8c in TUnixSystem::CheckDescriptors() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #20 0x00007f0bd0c9a698 in TUnixSystem::DispatchOneEvent(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #21 0x00007f0bd0bafe29 in TSystem::Run() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #22 0x00007f0bd0b4a14f in TApplication::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #23 0x00007f0bd0e3e96e in TRint::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #24 0x000000000040110c in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:7033,integrability,Transform,Transform,7033,"t-6.22.08/lib/libCore.so. #22 0x00007f0bd0b4a14f in TApplication::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #23 0x00007f0bd0e3e96e in TRint::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #24 0x000000000040110c in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::Ev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:7186,integrability,Transform,TransformDecl,7186,". #23 0x00007f0bd0e3e96e in TRint::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #24 0x000000000040110c in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:7349,integrability,Transform,Transform,7349,"===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #13 0x00007f0bcbde1df5 in cling::Interpreter::proces",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:9095,integrability,version,version,9095,"its<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #13 0x00007f0bcbde1df5 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #14 0x00007f0bcbea534d in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #15 0x00007f0bcbd35f7c in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. ===========================================================. Root >. ```. * On ROOT version 6.25/01 from the master branch. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v({2., 3., 1.});. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10736,integrability,depend,dependent,10736,"const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10793,integrability,depend,dependent,10793,"corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10840,integrability,depend,dependent,10840,"or::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11336,integrability,version,version,11336,"^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11366,integrability,Version,Version,11366,"ut_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs mas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11489,integrability,Version,Version,11489,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11774,integrability,version,version,11774,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:3222,interoperability,Transform,Transform,3222,"sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #3 0x00007f0bd0c99965 in TUnixSystem::DispatchSignals(ESignals) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #4 <signal handler called>. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::Ev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:3375,interoperability,Transform,TransformDecl,3375,"s a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #3 0x00007f0bd0c99965 in TUnixSystem::DispatchSignals(ESignals) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #4 <signal handler called>. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:3538,interoperability,Transform,Transform,3538,"ix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #3 0x00007f0bd0c99965 in TUnixSystem::DispatchSignals(ESignals) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #4 <signal handler called>. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #13 0x00007f0bcbde1df5 in cling::Interpreter::proces",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:7033,interoperability,Transform,Transform,7033,"t-6.22.08/lib/libCore.so. #22 0x00007f0bd0b4a14f in TApplication::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #23 0x00007f0bd0e3e96e in TRint::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #24 0x000000000040110c in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::Ev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:7186,interoperability,Transform,TransformDecl,7186,". #23 0x00007f0bd0e3e96e in TRint::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #24 0x000000000040110c in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:7349,interoperability,Transform,Transform,7349,"===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #12 0x00007f0bcbde19cb in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #13 0x00007f0bcbde1df5 in cling::Interpreter::proces",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:9812,interoperability,share,shared,9812,"leInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. ===========================================================. Root >. ```. * On ROOT version 6.25/01 from the master branch. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v({2., 3., 1.});. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10138,interoperability,share,shared,10138," root -l. root [0] ROOT::VecOps::RVec<double> v({2., 3., 1.});. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11606,interoperability,distribut,distribution,11606,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:573,modifiability,version,version,573,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:907,modifiability,version,version,907,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1712,modifiability,depend,dependent,1712,"guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1769,modifiability,depend,dependent,1769,"ode in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1816,modifiability,depend,dependent,1816,"r/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:9095,modifiability,version,version,9095,"its<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #13 0x00007f0bcbde1df5 in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #14 0x00007f0bcbea534d in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #15 0x00007f0bcbd35f7c in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. ===========================================================. Root >. ```. * On ROOT version 6.25/01 from the master branch. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v({2., 3., 1.});. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10736,modifiability,depend,dependent,10736,"const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10793,modifiability,depend,dependent,10793,"corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10840,modifiability,depend,dependent,10840,"or::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11336,modifiability,version,version,11336,"^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11366,modifiability,Version,Version,11366,"ut_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs mas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11489,modifiability,Version,Version,11489,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11774,modifiability,version,version,11774,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:48,performance,error,error,48,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:522,performance,error,error,522,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1263,performance,error,error,1263,"eports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)AT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1277,performance,error,error,1277," issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:9789,performance,load,load,9789,"00007f0bcbd35f7c in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. ===========================================================. Root >. ```. * On ROOT version 6.25/01 from the master branch. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v({2., 3., 1.});. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10115,performance,load,load,10115,"he master branch. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v({2., 3., 1.});. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10289,performance,error,error,10289,"OT::VecOps::RVec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NU",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10303,performance,error,error,10303,"ec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11848,performance,profil,profiles,11848,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:2144,reliability,slo,sloc,2144,". (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #3 0x00007f0bd0c99965 in TUnixSystem::DispatchSignals(ESignals) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #4 <signal handler called>. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:2227,reliability,slo,sloc,2227,"= Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #3 0x00007f0bd0c99965 in TUnixSystem::DispatchSignals(ESignals) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #4 <signal handler called>. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transfo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11156,reliability,slo,sloc,11156," [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11239,reliability,slo,sloc,11239,"uto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:48,safety,error,error,48,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:522,safety,error,error,522,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1263,safety,error,error,1263,"eports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)AT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1277,safety,error,error,1277," issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1712,safety,depend,dependent,1712,"guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1769,safety,depend,dependent,1769,"ode in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1816,safety,depend,dependent,1816,"r/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10289,safety,error,error,10289,"OT::VecOps::RVec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NU",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10303,safety,error,error,10303,"ec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10736,safety,depend,dependent,10736,"const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10793,safety,depend,dependent,10793,"corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10840,safety,depend,dependent,10840,"or::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:3011,security,sign,signal,3011,"<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #3 0x00007f0bd0c99965 in TUnixSystem::DispatchSignals(ESignals) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #4 <signal handler called>. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #11 0x00007f0bcbe6538d in cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11756,security,sandbox,sandbox,11756,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1712,testability,depend,dependent,1712,"guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1769,testability,depend,dependent,1769,"ode in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1816,testability,depend,dependent,1816,"r/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:2418,testability,trace,trace,2418,"oid *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6. #2 0x00007f0bd0c9c587 in TUnixSystem::StackTrace() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #3 0x00007f0bd0c99965 in TUnixSystem::DispatchSignals(ESignals) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #4 <signal handler called>. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:6682,testability,trace,trace,6682, TUnixSystem::CheckDescriptors() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #20 0x00007f0bd0c9a698 in TUnixSystem::DispatchOneEvent(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #21 0x00007f0bd0bafe29 in TSystem::Run() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #22 0x00007f0bd0b4a14f in TApplication::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #23 0x00007f0bd0e3e96e in TRint::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #24 0x000000000040110c in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::P,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10736,testability,depend,dependent,10736,"const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10793,testability,depend,dependent,10793,"corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10840,testability,depend,dependent,10840,"or::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:12414,testability,context,context,12414,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:12443,testability,context,context,12443,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:48,usability,error,error,48,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:522,usability,error,error,522,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:540,usability,interact,interactive,540,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:635,usability,behavi,behavior,635,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:679,usability,interact,interactive,679,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:747,usability,document,documented,747,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1263,usability,error,error,1263,"eports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)AT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:1277,usability,error,error,1277," issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ```C++. ROOT::VecOps::RVec v {2., 3., 1.};. auto firstTwo = Take(v, 2);. ```. causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior. The above expressions work in the interactive environment. It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce. * On ROOT version 6.22/08. ```. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] Take(v, 2). (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }. root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);. root [3] firstTwo. (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. root [4] auto firstTwo2 = Take(v, 2);. ROOT_prompt_4:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'. |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>. | |-DeclStmt 0x38829b8 <line:1:1, col:28>. | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'. | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2. | `-NullStmt 0x38829d0 <line:2:1>. |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:6437,usability,hint,hint,6437,", int*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #18 0x00007f0bd0e3d3e5 in TRint::HandleTermInput() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #19 0x00007f0bd0c98a8c in TUnixSystem::CheckDescriptors() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #20 0x00007f0bd0c9a698 in TUnixSystem::DispatchOneEvent(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #21 0x00007f0bd0bafe29 in TSystem::Run() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #22 0x00007f0bd0b4a14f in TApplication::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #23 0x00007f0bd0e3e96e in TRint::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #24 0x000000000040110c in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:6481,usability,help,help,6481,9fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #18 0x00007f0bd0e3d3e5 in TRint::HandleTermInput() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #19 0x00007f0bd0c98a8c in TUnixSystem::CheckDescriptors() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #20 0x00007f0bd0c9a698 in TUnixSystem::DispatchOneEvent(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #21 0x00007f0bd0bafe29 in TSystem::Run() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #22 0x00007f0bd0b4a14f in TApplication::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #23 0x00007f0bd0e3e96e in TRint::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #24 0x000000000040110c in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:6758,usability,help,help,6758,wnmx6cjr2-root-6.22.08/lib/libCore.so. #20 0x00007f0bd0c9a698 in TUnixSystem::DispatchOneEvent(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #21 0x00007f0bd0bafe29 in TSystem::Run() () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #22 0x00007f0bd0b4a14f in TApplication::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCore.so. #23 0x00007f0bd0e3e96e in TRint::Run(bool) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libRint.so. #24 0x000000000040110c in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f0bce4a9a6f in clang::Stmt::dump() const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #6 0x00007f0bcbea16b6 in cling::EvaluateTSynthesizer::Transform(clang::Decl*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #7 0x00007f0bcbe976d2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #8 0x00007f0bcbe97877 in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #9 0x00007f0bcbe97a11 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so. #10 0x00007f0bcbe64699 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10289,usability,error,error,10289,"OT::VecOps::RVec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NU",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:10303,usability,error,error,10303,"ec<double> firstTwo = Take(v, 2);. IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'! You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(). Maybe you need to load the corresponding shared library? root [3] .q. $ root -l. root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};. root [1] auto firstTwo2 = Take(v, 2);. ROOT_prompt_1:1:1: error: Syntax error. auto firstTwo2 = Take(v, 2);. ^. FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'. |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11740,usability,user,user,11740,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:11861,usability,user,user,11861,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:12246,usability,custom,custom,12246,"col:22, col:28> col:28 vpClingValue 'void *'. |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>. | |-DeclStmt 0x2b442a0 <line:1:1, col:28>. | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit. | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'. | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'. | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'. | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2. | `-NullStmt 0x2b442b8 <line:2:1>. |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". <<<NULL>>>. root [2] .q. ```. ### Setup. 1. ROOT version. * 6.22/08. ```. ROOT Version: 6.22/08. Built for linuxx8664gcc on Mar 10 2021, 14:20:04. From tags/v6-22-08@v6-22-08. ```. * 6.25/01. ```. ROOT Version: 6.25/01. Built for linuxx8664gcc on Jan 01 1980, 00:00:00. From @. ```. 2. Operating system: NixOS, a linux distribution. * `nix-info -m`. - system: `""x86_64-linux""`. - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`. - multi-user?: `yes`. - sandbox: `yes`. - version: `nix-env (Nix) 2.4pre20211006_53e4794`. - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf). * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/pull/9262:58,performance,disk,disk,58,[sqliteds] Prevent temporary tables from being written to disk; This PR fixes #9231.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9262
https://github.com/root-project/root/pull/9262:11,safety,Prevent,Prevent,11,[sqliteds] Prevent temporary tables from being written to disk; This PR fixes #9231.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9262
https://github.com/root-project/root/pull/9262:11,security,Preven,Prevent,11,[sqliteds] Prevent temporary tables from being written to disk; This PR fixes #9231.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9262
https://github.com/root-project/root/issues/9263:277,deployability,automat,automatically,277,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:320,deployability,updat,update,320,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:377,deployability,scale,scale,377,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:788,deployability,updat,updates,788,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1696,deployability,build,build,1696,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1768,deployability,Updat,Updating,1768,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1829,deployability,updat,update,1829,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:377,energy efficiency,scale,scale,377,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:901,energy efficiency,draw,drawn,901,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1635,energy efficiency,Draw,Draw,1635,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:398,interoperability,share,share,398,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:377,modifiability,scal,scale,377,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:377,performance,scale,scale,377,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:268,reliability,doe,does,268,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1060,reliability,doe,does,1060,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:320,safety,updat,update,320,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:788,safety,updat,updates,788,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1768,safety,Updat,Updating,1768,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1829,safety,updat,update,1829,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:320,security,updat,update,320,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:746,security,sign,signal,746,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:788,security,updat,updates,788,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1165,security,sign,signal,1165,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1364,security,sign,signal,1364,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1768,security,Updat,Updating,1768,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1829,security,updat,update,1829,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:277,testability,automat,automatically,277,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:991,testability,simpl,simply,991,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1390,testability,Simpl,Simple,1390,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1727,testability,context,context,1727,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:991,usability,simpl,simply,991,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1390,usability,Simpl,Simple,1390,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1918,usability,person,person,1918,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:1942,usability,behavi,behavior,1942,"TRatioPlot axes sync; Disclaimer: I'm new to this sort of thing but keen to contribute. Please let me know if I'm going about this the wrong way! ### Explain what you would like to see improved. At present, changing the x axis range on the lower panel of a TRatioPlot does not automatically zoom the top panel. The axes update but the histogram is not redrawn with the correct scale. ### Optional: share how it could be improved. As far as I can tell, what happens is this:. ```. THistPainter::Paint() is called. -> PaintInit() is called, this populates the Hparam structure with the old axis ranges. -> PaintFrame() is called. -> RecalculateRange() is called. -> gPad->RangeAxis() is called with the old ranges, and emits the RangeAxisChanged() signal. -> TRatioPlot::RangeAxisChanged() updates the axis ranges for the top panel. -> The frame is painted with the old axis ranges. -> The histogram is drawn with old ranges. ```. The most straightforward way that I can see to fix this is to simply call PaintInit() and PaintFrame() again, directly after. This does solve the problem but seems quite inelegant. . Another idea would be to emit the RangeAxisChanged() signal before PaintInit() so that all the painting proceeds with correct ranges. This could be done by overloading a TPad::RangeAxis() to have an implementation with no arguments that only emits the signal. ### To Reproduce. Simple macro - try zooming on the lower axis:. `. {. TH1D* hist = new TH1D(""hist"", ""hist"", 512, -10, 10);. hist->FillRandom(""gaus"", 10000);. TF1 *func = new TF1(""func"", ""gaus"");. hist->Fit(func);. TRatioPlot *plot = new TRatioPlot(hist);. plot->Draw();. }. `. ### Setup. 1. ROOT 6.25/01. 2. macOS 11.4. 3. build from git. ### Additional context. There is a comment . ""// @TODO: Updating is not working when zooming on the lower plot. Axes update, but upper hist only on resize"". in TRatioPlot.cxx so I assume at least one other person knows about this behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/pull/9264:216,availability,error,error,216,[test] Fix several tests on Win64; - Add the proper Win64 mangled symbol of `RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)`. - Add several explicit `delete hfile` to prevent the following kind of error:. ```. SysError in <TFile::TFile>: could not delete BulkApiSillyStruct.root (errno: 13) Permission denied. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9264
https://github.com/root-project/root/pull/9264:216,performance,error,error,216,[test] Fix several tests on Win64; - Add the proper Win64 mangled symbol of `RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)`. - Add several explicit `delete hfile` to prevent the following kind of error:. ```. SysError in <TFile::TFile>: could not delete BulkApiSillyStruct.root (errno: 13) Permission denied. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9264
https://github.com/root-project/root/pull/9264:1,safety,test,test,1,[test] Fix several tests on Win64; - Add the proper Win64 mangled symbol of `RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)`. - Add several explicit `delete hfile` to prevent the following kind of error:. ```. SysError in <TFile::TFile>: could not delete BulkApiSillyStruct.root (errno: 13) Permission denied. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9264
https://github.com/root-project/root/pull/9264:19,safety,test,tests,19,[test] Fix several tests on Win64; - Add the proper Win64 mangled symbol of `RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)`. - Add several explicit `delete hfile` to prevent the following kind of error:. ```. SysError in <TFile::TFile>: could not delete BulkApiSillyStruct.root (errno: 13) Permission denied. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9264
https://github.com/root-project/root/pull/9264:128,safety,Test,TestBody,128,[test] Fix several tests on Win64; - Add the proper Win64 mangled symbol of `RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)`. - Add several explicit `delete hfile` to prevent the following kind of error:. ```. SysError in <TFile::TFile>: could not delete BulkApiSillyStruct.root (errno: 13) Permission denied. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9264
https://github.com/root-project/root/pull/9264:186,safety,prevent,prevent,186,[test] Fix several tests on Win64; - Add the proper Win64 mangled symbol of `RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)`. - Add several explicit `delete hfile` to prevent the following kind of error:. ```. SysError in <TFile::TFile>: could not delete BulkApiSillyStruct.root (errno: 13) Permission denied. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9264
https://github.com/root-project/root/pull/9264:216,safety,error,error,216,[test] Fix several tests on Win64; - Add the proper Win64 mangled symbol of `RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)`. - Add several explicit `delete hfile` to prevent the following kind of error:. ```. SysError in <TFile::TFile>: could not delete BulkApiSillyStruct.root (errno: 13) Permission denied. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9264
https://github.com/root-project/root/pull/9264:310,safety,Permiss,Permission,310,[test] Fix several tests on Win64; - Add the proper Win64 mangled symbol of `RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)`. - Add several explicit `delete hfile` to prevent the following kind of error:. ```. SysError in <TFile::TFile>: could not delete BulkApiSillyStruct.root (errno: 13) Permission denied. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9264
https://github.com/root-project/root/pull/9264:186,security,preven,prevent,186,[test] Fix several tests on Win64; - Add the proper Win64 mangled symbol of `RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)`. - Add several explicit `delete hfile` to prevent the following kind of error:. ```. SysError in <TFile::TFile>: could not delete BulkApiSillyStruct.root (errno: 13) Permission denied. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9264
https://github.com/root-project/root/pull/9264:1,testability,test,test,1,[test] Fix several tests on Win64; - Add the proper Win64 mangled symbol of `RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)`. - Add several explicit `delete hfile` to prevent the following kind of error:. ```. SysError in <TFile::TFile>: could not delete BulkApiSillyStruct.root (errno: 13) Permission denied. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9264
https://github.com/root-project/root/pull/9264:19,testability,test,tests,19,[test] Fix several tests on Win64; - Add the proper Win64 mangled symbol of `RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)`. - Add several explicit `delete hfile` to prevent the following kind of error:. ```. SysError in <TFile::TFile>: could not delete BulkApiSillyStruct.root (errno: 13) Permission denied. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9264
https://github.com/root-project/root/pull/9264:128,testability,Test,TestBody,128,[test] Fix several tests on Win64; - Add the proper Win64 mangled symbol of `RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)`. - Add several explicit `delete hfile` to prevent the following kind of error:. ```. SysError in <TFile::TFile>: could not delete BulkApiSillyStruct.root (errno: 13) Permission denied. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9264
https://github.com/root-project/root/pull/9264:216,usability,error,error,216,[test] Fix several tests on Win64; - Add the proper Win64 mangled symbol of `RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)`. - Add several explicit `delete hfile` to prevent the following kind of error:. ```. SysError in <TFile::TFile>: could not delete BulkApiSillyStruct.root (errno: 13) Permission denied. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9264
https://github.com/root-project/root/pull/9265:4,deployability,automat,automatic,4,Fix automatic addition of TEfficiency to current directory; Fix using TDirectory::TContext in TEfficiency constructor. This PR fixes #9189 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9265
https://github.com/root-project/root/pull/9265:41,energy efficiency,current,current,41,Fix automatic addition of TEfficiency to current directory; Fix using TDirectory::TContext in TEfficiency constructor. This PR fixes #9189 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9265
https://github.com/root-project/root/pull/9265:4,testability,automat,automatic,4,Fix automatic addition of TEfficiency to current directory; Fix using TDirectory::TContext in TEfficiency constructor. This PR fixes #9189 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9265
https://github.com/root-project/root/pull/9266:156,deployability,updat,updated,156,Revert changes in TArrayL (use Long_t instead of Longptr_t); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9266
https://github.com/root-project/root/pull/9266:126,safety,test,tested,126,Revert changes in TArrayL (use Long_t instead of Longptr_t); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9266
https://github.com/root-project/root/pull/9266:156,safety,updat,updated,156,Revert changes in TArrayL (use Long_t instead of Longptr_t); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9266
https://github.com/root-project/root/pull/9266:156,security,updat,updated,156,Revert changes in TArrayL (use Long_t instead of Longptr_t); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9266
https://github.com/root-project/root/pull/9266:126,testability,test,tested,126,Revert changes in TArrayL (use Long_t instead of Longptr_t); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9266
https://github.com/root-project/root/pull/9267:97,availability,failur,failures,97,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:30,deployability,modul,module,30,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:97,deployability,fail,failures,97,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:152,deployability,instal,installed,152,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:167,deployability,version,versions,167,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:353,deployability,build,build,353,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:167,integrability,version,versions,167,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:30,modifiability,modul,module,30,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:167,modifiability,version,versions,167,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:294,modifiability,pac,package,294,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:97,performance,failur,failures,97,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:377,performance,content,content,377,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:97,reliability,fail,failures,97,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:30,safety,modul,module,30,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:371,safety,avoid,avoid,371,"Revert ""[cxxmodules] Enable a module if json is present.""; Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9268:166,deployability,log,logic,166,"[DF] Use `assert`, not `R__ASSERT` when we are checking for bugs; These usages of `R__ASSERT` were meant to check preconditions. that are guaranteed by the program's logic, i.e. are only. relevant for catching bugs in our code. Let's disable them. in production code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9268
https://github.com/root-project/root/pull/9268:166,safety,log,logic,166,"[DF] Use `assert`, not `R__ASSERT` when we are checking for bugs; These usages of `R__ASSERT` were meant to check preconditions. that are guaranteed by the program's logic, i.e. are only. relevant for catching bugs in our code. Let's disable them. in production code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9268
https://github.com/root-project/root/pull/9268:166,security,log,logic,166,"[DF] Use `assert`, not `R__ASSERT` when we are checking for bugs; These usages of `R__ASSERT` were meant to check preconditions. that are guaranteed by the program's logic, i.e. are only. relevant for catching bugs in our code. Let's disable them. in production code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9268
https://github.com/root-project/root/pull/9268:10,testability,assert,assert,10,"[DF] Use `assert`, not `R__ASSERT` when we are checking for bugs; These usages of `R__ASSERT` were meant to check preconditions. that are guaranteed by the program's logic, i.e. are only. relevant for catching bugs in our code. Let's disable them. in production code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9268
https://github.com/root-project/root/pull/9268:166,testability,log,logic,166,"[DF] Use `assert`, not `R__ASSERT` when we are checking for bugs; These usages of `R__ASSERT` were meant to check preconditions. that are guaranteed by the program's logic, i.e. are only. relevant for catching bugs in our code. Let's disable them. in production code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9268
https://github.com/root-project/root/pull/9270:128,integrability,messag,messages,128,"[RF] Cleanup `RooRealVar::_sharedPropList in RooRealVar` destructor and forbid copying of `RooSharedProperties`; See the commit messages for more details. The first commit in this PR partly fixes https://github.com/root-project/root/issues/9196. Simple code to reproduce the issue that this PR is fixing:. ```C++. #include ""RooRealVar.h"". #include ""TSystem.h"". void reproducer(). {. ProcInfo_t pinfo;. for(std::size_t i = 0; i < 10000; ++i) {. RooRealVar x(""x"",""x"",0);. RooRealVar y(x);. if(i % 500 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident. << "" "" << pinfo.fMemVirtual << std::endl;. }. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9270
https://github.com/root-project/root/pull/9270:128,interoperability,messag,messages,128,"[RF] Cleanup `RooRealVar::_sharedPropList in RooRealVar` destructor and forbid copying of `RooSharedProperties`; See the commit messages for more details. The first commit in this PR partly fixes https://github.com/root-project/root/issues/9196. Simple code to reproduce the issue that this PR is fixing:. ```C++. #include ""RooRealVar.h"". #include ""TSystem.h"". void reproducer(). {. ProcInfo_t pinfo;. for(std::size_t i = 0; i < 10000; ++i) {. RooRealVar x(""x"",""x"",0);. RooRealVar y(x);. if(i % 500 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident. << "" "" << pinfo.fMemVirtual << std::endl;. }. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9270
https://github.com/root-project/root/pull/9270:559,performance,memor,memory,559,"[RF] Cleanup `RooRealVar::_sharedPropList in RooRealVar` destructor and forbid copying of `RooSharedProperties`; See the commit messages for more details. The first commit in this PR partly fixes https://github.com/root-project/root/issues/9196. Simple code to reproduce the issue that this PR is fixing:. ```C++. #include ""RooRealVar.h"". #include ""TSystem.h"". void reproducer(). {. ProcInfo_t pinfo;. for(std::size_t i = 0; i < 10000; ++i) {. RooRealVar x(""x"",""x"",0);. RooRealVar y(x);. if(i % 500 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident. << "" "" << pinfo.fMemVirtual << std::endl;. }. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9270
https://github.com/root-project/root/pull/9270:246,testability,Simpl,Simple,246,"[RF] Cleanup `RooRealVar::_sharedPropList in RooRealVar` destructor and forbid copying of `RooSharedProperties`; See the commit messages for more details. The first commit in this PR partly fixes https://github.com/root-project/root/issues/9196. Simple code to reproduce the issue that this PR is fixing:. ```C++. #include ""RooRealVar.h"". #include ""TSystem.h"". void reproducer(). {. ProcInfo_t pinfo;. for(std::size_t i = 0; i < 10000; ++i) {. RooRealVar x(""x"",""x"",0);. RooRealVar y(x);. if(i % 500 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident. << "" "" << pinfo.fMemVirtual << std::endl;. }. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9270
https://github.com/root-project/root/pull/9270:246,usability,Simpl,Simple,246,"[RF] Cleanup `RooRealVar::_sharedPropList in RooRealVar` destructor and forbid copying of `RooSharedProperties`; See the commit messages for more details. The first commit in this PR partly fixes https://github.com/root-project/root/issues/9196. Simple code to reproduce the issue that this PR is fixing:. ```C++. #include ""RooRealVar.h"". #include ""TSystem.h"". void reproducer(). {. ProcInfo_t pinfo;. for(std::size_t i = 0; i < 10000; ++i) {. RooRealVar x(""x"",""x"",0);. RooRealVar y(x);. if(i % 500 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident. << "" "" << pinfo.fMemVirtual << std::endl;. }. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9270
https://github.com/root-project/root/pull/9270:559,usability,memor,memory,559,"[RF] Cleanup `RooRealVar::_sharedPropList in RooRealVar` destructor and forbid copying of `RooSharedProperties`; See the commit messages for more details. The first commit in this PR partly fixes https://github.com/root-project/root/issues/9196. Simple code to reproduce the issue that this PR is fixing:. ```C++. #include ""RooRealVar.h"". #include ""TSystem.h"". void reproducer(). {. ProcInfo_t pinfo;. for(std::size_t i = 0; i < 10000; ++i) {. RooRealVar x(""x"",""x"",0);. RooRealVar y(x);. if(i % 500 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident. << "" "" << pinfo.fMemVirtual << std::endl;. }. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9270
https://github.com/root-project/root/pull/9271:234,deployability,log,logic,234,"[RF][TMVA] Address -Wnonnull issues and further improvements; # This Pull request:. ## Changes or fixes:. - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance. - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference. - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:343,deployability,contain,container,343,"[RF][TMVA] Address -Wnonnull issues and further improvements; # This Pull request:. ## Changes or fixes:. - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance. - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference. - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:497,deployability,updat,updated,497,"[RF][TMVA] Address -Wnonnull issues and further improvements; # This Pull request:. ## Changes or fixes:. - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance. - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference. - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:268,energy efficiency,optim,optimise,268,"[RF][TMVA] Address -Wnonnull issues and further improvements; # This Pull request:. ## Changes or fixes:. - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance. - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference. - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:268,performance,optimise perform,optimise performance,268,"[RF][TMVA] Address -Wnonnull issues and further improvements; # This Pull request:. ## Changes or fixes:. - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance. - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference. - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:234,safety,log,logic,234,"[RF][TMVA] Address -Wnonnull issues and further improvements; # This Pull request:. ## Changes or fixes:. - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance. - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference. - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:467,safety,test,tested,467,"[RF][TMVA] Address -Wnonnull issues and further improvements; # This Pull request:. ## Changes or fixes:. - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance. - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference. - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:497,safety,updat,updated,497,"[RF][TMVA] Address -Wnonnull issues and further improvements; # This Pull request:. ## Changes or fixes:. - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance. - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference. - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:234,security,log,logic,234,"[RF][TMVA] Address -Wnonnull issues and further improvements; # This Pull request:. ## Changes or fixes:. - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance. - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference. - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:497,security,updat,updated,497,"[RF][TMVA] Address -Wnonnull issues and further improvements; # This Pull request:. ## Changes or fixes:. - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance. - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference. - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:234,testability,log,logic,234,"[RF][TMVA] Address -Wnonnull issues and further improvements; # This Pull request:. ## Changes or fixes:. - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance. - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference. - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:467,testability,test,tested,467,"[RF][TMVA] Address -Wnonnull issues and further improvements; # This Pull request:. ## Changes or fixes:. - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance. - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference. - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:277,usability,perform,performance,277,"[RF][TMVA] Address -Wnonnull issues and further improvements; # This Pull request:. ## Changes or fixes:. - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance. - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference. - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9274:122,availability,ping,ping,122,[DF] Avoid useless computation when we don't need its result.; This also fixes an unused variable warning. Thanks for the ping @couet !,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9274
https://github.com/root-project/root/pull/9274:89,modifiability,variab,variable,89,[DF] Avoid useless computation when we don't need its result.; This also fixes an unused variable warning. Thanks for the ping @couet !,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9274
https://github.com/root-project/root/pull/9274:5,safety,Avoid,Avoid,5,[DF] Avoid useless computation when we don't need its result.; This also fixes an unused variable warning. Thanks for the ping @couet !,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9274
https://github.com/root-project/root/pull/9275:44,modifiability,layer,layer,44,"[DF] Simplify MakeColumnReaders; Remove one layer of indirection by merging MakeColumnReadersHelper. and MakeColumnReader. Less code, we avoid some repeated checks,. and MakeColumnReader is not a bit simpler to call directly, which. we will need to implement RVariedColumnReaders for systematic variations. CC: @bendavid -- I think you are touching this code too, sorry! :sweat_smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9275
https://github.com/root-project/root/pull/9275:137,safety,avoid,avoid,137,"[DF] Simplify MakeColumnReaders; Remove one layer of indirection by merging MakeColumnReadersHelper. and MakeColumnReader. Less code, we avoid some repeated checks,. and MakeColumnReader is not a bit simpler to call directly, which. we will need to implement RVariedColumnReaders for systematic variations. CC: @bendavid -- I think you are touching this code too, sorry! :sweat_smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9275
https://github.com/root-project/root/pull/9275:5,testability,Simpl,Simplify,5,"[DF] Simplify MakeColumnReaders; Remove one layer of indirection by merging MakeColumnReadersHelper. and MakeColumnReader. Less code, we avoid some repeated checks,. and MakeColumnReader is not a bit simpler to call directly, which. we will need to implement RVariedColumnReaders for systematic variations. CC: @bendavid -- I think you are touching this code too, sorry! :sweat_smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9275
https://github.com/root-project/root/pull/9275:200,testability,simpl,simpler,200,"[DF] Simplify MakeColumnReaders; Remove one layer of indirection by merging MakeColumnReadersHelper. and MakeColumnReader. Less code, we avoid some repeated checks,. and MakeColumnReader is not a bit simpler to call directly, which. we will need to implement RVariedColumnReaders for systematic variations. CC: @bendavid -- I think you are touching this code too, sorry! :sweat_smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9275
https://github.com/root-project/root/pull/9275:5,usability,Simpl,Simplify,5,"[DF] Simplify MakeColumnReaders; Remove one layer of indirection by merging MakeColumnReadersHelper. and MakeColumnReader. Less code, we avoid some repeated checks,. and MakeColumnReader is not a bit simpler to call directly, which. we will need to implement RVariedColumnReaders for systematic variations. CC: @bendavid -- I think you are touching this code too, sorry! :sweat_smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9275
https://github.com/root-project/root/pull/9275:200,usability,simpl,simpler,200,"[DF] Simplify MakeColumnReaders; Remove one layer of indirection by merging MakeColumnReadersHelper. and MakeColumnReader. Less code, we avoid some repeated checks,. and MakeColumnReader is not a bit simpler to call directly, which. we will need to implement RVariedColumnReaders for systematic variations. CC: @bendavid -- I think you are touching this code too, sorry! :sweat_smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9275
https://github.com/root-project/root/pull/9276:9,deployability,patch,patches,9,v6-24-00-patches nonull backport; Backport for #9271 to v6-24-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:65,deployability,patch,patches,65,v6-24-00-patches nonull backport; Backport for #9271 to v6-24-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:9,safety,patch,patches,9,v6-24-00-patches nonull backport; Backport for #9271 to v6-24-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:65,safety,patch,patches,65,v6-24-00-patches nonull backport; Backport for #9271 to v6-24-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:9,security,patch,patches,9,v6-24-00-patches nonull backport; Backport for #9271 to v6-24-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:65,security,patch,patches,65,v6-24-00-patches nonull backport; Backport for #9271 to v6-24-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9277:421,deployability,updat,updated,421,[skip-ci][DF] Mild corrections on VecOps documentations; # This Pull request:. ## Changes or fixes:. Correct the format and example code problems in the file `math/vecops/inc/ROOT/RVec.hxx`. The corrected example code problems include:. * Expected/unexpected semicolons. * Expected/unexpected declarations. * Code output (rerun to get the correct and relevent outputs). ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9277
https://github.com/root-project/root/pull/9277:113,interoperability,format,format,113,[skip-ci][DF] Mild corrections on VecOps documentations; # This Pull request:. ## Changes or fixes:. Correct the format and example code problems in the file `math/vecops/inc/ROOT/RVec.hxx`. The corrected example code problems include:. * Expected/unexpected semicolons. * Expected/unexpected declarations. * Code output (rerun to get the correct and relevent outputs). ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9277
https://github.com/root-project/root/pull/9277:391,safety,test,tested,391,[skip-ci][DF] Mild corrections on VecOps documentations; # This Pull request:. ## Changes or fixes:. Correct the format and example code problems in the file `math/vecops/inc/ROOT/RVec.hxx`. The corrected example code problems include:. * Expected/unexpected semicolons. * Expected/unexpected declarations. * Code output (rerun to get the correct and relevent outputs). ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9277
https://github.com/root-project/root/pull/9277:421,safety,updat,updated,421,[skip-ci][DF] Mild corrections on VecOps documentations; # This Pull request:. ## Changes or fixes:. Correct the format and example code problems in the file `math/vecops/inc/ROOT/RVec.hxx`. The corrected example code problems include:. * Expected/unexpected semicolons. * Expected/unexpected declarations. * Code output (rerun to get the correct and relevent outputs). ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9277
https://github.com/root-project/root/pull/9277:421,security,updat,updated,421,[skip-ci][DF] Mild corrections on VecOps documentations; # This Pull request:. ## Changes or fixes:. Correct the format and example code problems in the file `math/vecops/inc/ROOT/RVec.hxx`. The corrected example code problems include:. * Expected/unexpected semicolons. * Expected/unexpected declarations. * Code output (rerun to get the correct and relevent outputs). ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9277
https://github.com/root-project/root/pull/9277:391,testability,test,tested,391,[skip-ci][DF] Mild corrections on VecOps documentations; # This Pull request:. ## Changes or fixes:. Correct the format and example code problems in the file `math/vecops/inc/ROOT/RVec.hxx`. The corrected example code problems include:. * Expected/unexpected semicolons. * Expected/unexpected declarations. * Code output (rerun to get the correct and relevent outputs). ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9277
https://github.com/root-project/root/pull/9277:41,usability,document,documentations,41,[skip-ci][DF] Mild corrections on VecOps documentations; # This Pull request:. ## Changes or fixes:. Correct the format and example code problems in the file `math/vecops/inc/ROOT/RVec.hxx`. The corrected example code problems include:. * Expected/unexpected semicolons. * Expected/unexpected declarations. * Code output (rerun to get the correct and relevent outputs). ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9277
https://github.com/root-project/root/pull/9278:69,deployability,modul,modules,69,Use forward decls for nlohmann/json types.; Works around issues with modules (alternative solution to https://github.com/root-project/root/pull/9267),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9278
https://github.com/root-project/root/pull/9278:69,modifiability,modul,modules,69,Use forward decls for nlohmann/json types.; Works around issues with modules (alternative solution to https://github.com/root-project/root/pull/9267),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9278
https://github.com/root-project/root/pull/9278:69,safety,modul,modules,69,Use forward decls for nlohmann/json types.; Works around issues with modules (alternative solution to https://github.com/root-project/root/pull/9267),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9278
https://github.com/root-project/root/pull/9282:359,interoperability,conflict,conflicts,359,[v622][RF] Cleanup `RooRealVar::_sharedPropList` in RooRealVar destructor; Backport of commit https://github.com/root-project/root/commit/f9eff417eea084261c3d27f4fb636f94db37138c from https://github.com/root-project/root/pull/9270. Includes also commit https://github.com/root-project/root/commit/8b216dec994bb9a963ec2006add3d3fe6976e877 to avoid backporting conflicts.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9282
https://github.com/root-project/root/pull/9282:341,safety,avoid,avoid,341,[v622][RF] Cleanup `RooRealVar::_sharedPropList` in RooRealVar destructor; Backport of commit https://github.com/root-project/root/commit/f9eff417eea084261c3d27f4fb636f94db37138c from https://github.com/root-project/root/pull/9270. Includes also commit https://github.com/root-project/root/commit/8b216dec994bb9a963ec2006add3d3fe6976e877 to avoid backporting conflicts.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9282
https://github.com/root-project/root/pull/9283:359,interoperability,conflict,conflicts,359,[v620][RF] Cleanup `RooRealVar::_sharedPropList` in RooRealVar destructor; Backport of commit https://github.com/root-project/root/commit/f9eff417eea084261c3d27f4fb636f94db37138c from https://github.com/root-project/root/pull/9270. Includes also commit https://github.com/root-project/root/commit/8b216dec994bb9a963ec2006add3d3fe6976e877 to avoid backporting conflicts.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9283
https://github.com/root-project/root/pull/9283:341,safety,avoid,avoid,341,[v620][RF] Cleanup `RooRealVar::_sharedPropList` in RooRealVar destructor; Backport of commit https://github.com/root-project/root/commit/f9eff417eea084261c3d27f4fb636f94db37138c from https://github.com/root-project/root/pull/9270. Includes also commit https://github.com/root-project/root/commit/8b216dec994bb9a963ec2006add3d3fe6976e877 to avoid backporting conflicts.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9283
https://github.com/root-project/root/pull/9284:11,performance,memor,memory,11,TClassEdit memory hoarding; . Addressed the valid-typename case of https://github.com/root-project/root/issues/9029,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9284
https://github.com/root-project/root/pull/9284:44,safety,valid,valid-typename,44,TClassEdit memory hoarding; . Addressed the valid-typename case of https://github.com/root-project/root/issues/9029,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9284
https://github.com/root-project/root/pull/9284:11,usability,memor,memory,11,TClassEdit memory hoarding; . Addressed the valid-typename case of https://github.com/root-project/root/issues/9029,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9284
https://github.com/root-project/root/issues/9285:8,availability,error,error,8,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:99,availability,error,error,99,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2778,availability,error,error,2778,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:235,deployability,BUILD,BUILD,235,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:254,deployability,build,build,254,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:356,deployability,BUILD,BUILD,356,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:375,deployability,build,build,375,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:422,deployability,BUILD,BUILD,422,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:441,deployability,build,build,441,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:559,deployability,BUILD,BUILD,559,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:578,deployability,build,build,578,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:680,deployability,BUILD,BUILD,680,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:748,deployability,BUILD,BUILD,748,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:767,deployability,build,build,767,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:834,deployability,BUILD,BUILD,834,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:853,deployability,build,build,853,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:918,deployability,BUILD,BUILD,918,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:937,deployability,build,build,937,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1020,deployability,BUILD,BUILD,1020," 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1039,deployability,build,build,1039,"X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1111,deployability,BUILD,BUILD,1111,"1. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1130,deployability,build,build,1130,"rating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1185,deployability,BUILD,BUILD,1185,ootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1262,deployability,BUILD,BUILD,1262,clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1342,deployability,BUILD,BUILD,1342,po/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1436,deployability,BUILD,BUILD,1436,6/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc va,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1511,deployability,BUILD,BUILD,1511,t.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clinguti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1582,deployability,BUILD,BUILD,1582,ib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In fil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1662,deployability,BUILD,BUILD,1662,ga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1733,deployability,BUILD,BUILD,1733,garepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/..,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1806,deployability,BUILD,BUILD,1806,l2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1877,deployability,BUILD,BUILD,1877,h /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1951,deployability,BUILD,BUILD,1951,ml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2022,deployability,BUILD,BUILD,2022,/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2095,deployability,BUILD,BUILD,2095,mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Exp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2168,deployability,BUILD,BUILD,2168,/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with lat,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2321,deployability,BUILD,BUILD,2321,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2482,deployability,BUILD,BUILD,2482,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2637,deployability,BUILD,BUILD,2637,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:260,energy efficiency,core,core,260,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:447,energy efficiency,core,core,447,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1204,energy efficiency,core,core,1204,oe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1281,energy efficiency,core,core,1281,/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1530,energy efficiency,core,core,1530,/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1601,energy efficiency,core,core,1601,.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /h,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1681,energy efficiency,core,core,1681,LD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarra,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1752,energy efficiency,core,core,1752,root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1825,energy efficiency,core,core,1825, /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration doe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1896,energy efficiency,core,core,1896,/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcep,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:1970,energy efficiency,core,core,1970,.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2041,energy efficiency,core,core,2041,d/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2114,energy efficiency,core,core,2114,/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. sh,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2187,energy efficiency,core,core,2187,D/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on magei,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2266,energy efficiency,core,core,2266,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2340,energy efficiency,core,core,2340,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2423,energy efficiency,core,core,2423,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2501,energy efficiency,core,core,2501,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2656,energy efficiency,core,core,2656,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2795,interoperability,specif,specification,2795,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:8,performance,error,error,8,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:99,performance,error,error,99,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2778,performance,error,error,2778,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2824,reliability,doe,does,2824,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:8,safety,error,error,8,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:99,safety,error,error,99,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2778,safety,error,error,2778,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2785,safety,except,exception,2785,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:3121,safety,compl,comple,3121,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:3121,security,compl,comple,3121,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:8,usability,error,error,8,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:99,usability,error,error,99,"compile error using gcc 11 on 6.24.06; - [X] Checked for duplicates. ### Describe the bug. compile error with gcc11. ```. [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap. cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\. t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\. ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\. repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\. /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\. ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\. de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:2778,usability,error,error,2778,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:3104,usability,behavi,behavior,3104,utils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\. s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\. ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\. n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\. joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\. nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\. ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\. LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\. D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h. In file included from input_line_6:1:. In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\. ration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. ```. ### Expected behavior. should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia. 6.24.04 seems to work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/pull/9286:488,deployability,updat,updated,488,"[DF] Add VecOps::StableArgsort and VecOps::StableSort; # This Pull request:. ## Changes or fixes:. Add function `ROOT::VecOps::StableSort` and `ROOT::VecOps::StableArgsort` as stable variants of `ROOT::VecOps::Sort` and `ROOT::VecOps::Argsort`, providing users with a choice of sorting stability. The implementation is simple: using the current implementation of `Sort` and `Argsort` while replacing `std::sort` with `std::stable_sort`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:337,energy efficiency,current,current,337,"[DF] Add VecOps::StableArgsort and VecOps::StableSort; # This Pull request:. ## Changes or fixes:. Add function `ROOT::VecOps::StableSort` and `ROOT::VecOps::StableArgsort` as stable variants of `ROOT::VecOps::Sort` and `ROOT::VecOps::Argsort`, providing users with a choice of sorting stability. The implementation is simple: using the current implementation of `Sort` and `Argsort` while replacing `std::sort` with `std::stable_sort`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:286,reliability,stabil,stability,286,"[DF] Add VecOps::StableArgsort and VecOps::StableSort; # This Pull request:. ## Changes or fixes:. Add function `ROOT::VecOps::StableSort` and `ROOT::VecOps::StableArgsort` as stable variants of `ROOT::VecOps::Sort` and `ROOT::VecOps::Argsort`, providing users with a choice of sorting stability. The implementation is simple: using the current implementation of `Sort` and `Argsort` while replacing `std::sort` with `std::stable_sort`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:458,safety,test,tested,458,"[DF] Add VecOps::StableArgsort and VecOps::StableSort; # This Pull request:. ## Changes or fixes:. Add function `ROOT::VecOps::StableSort` and `ROOT::VecOps::StableArgsort` as stable variants of `ROOT::VecOps::Sort` and `ROOT::VecOps::Argsort`, providing users with a choice of sorting stability. The implementation is simple: using the current implementation of `Sort` and `Argsort` while replacing `std::sort` with `std::stable_sort`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:488,safety,updat,updated,488,"[DF] Add VecOps::StableArgsort and VecOps::StableSort; # This Pull request:. ## Changes or fixes:. Add function `ROOT::VecOps::StableSort` and `ROOT::VecOps::StableArgsort` as stable variants of `ROOT::VecOps::Sort` and `ROOT::VecOps::Argsort`, providing users with a choice of sorting stability. The implementation is simple: using the current implementation of `Sort` and `Argsort` while replacing `std::sort` with `std::stable_sort`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:488,security,updat,updated,488,"[DF] Add VecOps::StableArgsort and VecOps::StableSort; # This Pull request:. ## Changes or fixes:. Add function `ROOT::VecOps::StableSort` and `ROOT::VecOps::StableArgsort` as stable variants of `ROOT::VecOps::Sort` and `ROOT::VecOps::Argsort`, providing users with a choice of sorting stability. The implementation is simple: using the current implementation of `Sort` and `Argsort` while replacing `std::sort` with `std::stable_sort`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:319,testability,simpl,simple,319,"[DF] Add VecOps::StableArgsort and VecOps::StableSort; # This Pull request:. ## Changes or fixes:. Add function `ROOT::VecOps::StableSort` and `ROOT::VecOps::StableArgsort` as stable variants of `ROOT::VecOps::Sort` and `ROOT::VecOps::Argsort`, providing users with a choice of sorting stability. The implementation is simple: using the current implementation of `Sort` and `Argsort` while replacing `std::sort` with `std::stable_sort`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:458,testability,test,tested,458,"[DF] Add VecOps::StableArgsort and VecOps::StableSort; # This Pull request:. ## Changes or fixes:. Add function `ROOT::VecOps::StableSort` and `ROOT::VecOps::StableArgsort` as stable variants of `ROOT::VecOps::Sort` and `ROOT::VecOps::Argsort`, providing users with a choice of sorting stability. The implementation is simple: using the current implementation of `Sort` and `Argsort` while replacing `std::sort` with `std::stable_sort`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:255,usability,user,users,255,"[DF] Add VecOps::StableArgsort and VecOps::StableSort; # This Pull request:. ## Changes or fixes:. Add function `ROOT::VecOps::StableSort` and `ROOT::VecOps::StableArgsort` as stable variants of `ROOT::VecOps::Sort` and `ROOT::VecOps::Argsort`, providing users with a choice of sorting stability. The implementation is simple: using the current implementation of `Sort` and `Argsort` while replacing `std::sort` with `std::stable_sort`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:319,usability,simpl,simple,319,"[DF] Add VecOps::StableArgsort and VecOps::StableSort; # This Pull request:. ## Changes or fixes:. Add function `ROOT::VecOps::StableSort` and `ROOT::VecOps::StableArgsort` as stable variants of `ROOT::VecOps::Sort` and `ROOT::VecOps::Argsort`, providing users with a choice of sorting stability. The implementation is simple: using the current implementation of `Sort` and `Argsort` while replacing `std::sort` with `std::stable_sort`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!--This PR fixes # -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9287:161,deployability,updat,updated,161,[dataframe] Silence RSqliteDS warning / var used only in assert.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9287
https://github.com/root-project/root/pull/9287:131,safety,test,tested,131,[dataframe] Silence RSqliteDS warning / var used only in assert.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9287
https://github.com/root-project/root/pull/9287:161,safety,updat,updated,161,[dataframe] Silence RSqliteDS warning / var used only in assert.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9287
https://github.com/root-project/root/pull/9287:161,security,updat,updated,161,[dataframe] Silence RSqliteDS warning / var used only in assert.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9287
https://github.com/root-project/root/pull/9287:57,testability,assert,assert,57,[dataframe] Silence RSqliteDS warning / var used only in assert.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9287
https://github.com/root-project/root/pull/9287:131,testability,test,tested,131,[dataframe] Silence RSqliteDS warning / var used only in assert.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9287
https://github.com/root-project/root/pull/9288:513,availability,avail,available,513,"Fix ROOT for musl libc - part 2; Continuation of #9260, closes #9253. Successfully compiles and launches with both musl and glibc, however the affected features were **not** specifically tested so please make sure to review carefully. With musl, compilation only succeeds without builtin XRootD and TBB and without SSL support - the former need to be fixed in the respective projects, the latter would probably require a little more effort as the `ruserok` function used by `net/rpdutils/src/rpdutils.cxx` is not available in musl - this implies `-Dxrootd=OFF -Dimt=OFF -Dssl=OFF` `cmake` options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:33,deployability,Continu,Continuation,33,"Fix ROOT for musl libc - part 2; Continuation of #9260, closes #9253. Successfully compiles and launches with both musl and glibc, however the affected features were **not** specifically tested so please make sure to review carefully. With musl, compilation only succeeds without builtin XRootD and TBB and without SSL support - the former need to be fixed in the respective projects, the latter would probably require a little more effort as the `ruserok` function used by `net/rpdutils/src/rpdutils.cxx` is not available in musl - this implies `-Dxrootd=OFF -Dimt=OFF -Dssl=OFF` `cmake` options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:174,interoperability,specif,specifically,174,"Fix ROOT for musl libc - part 2; Continuation of #9260, closes #9253. Successfully compiles and launches with both musl and glibc, however the affected features were **not** specifically tested so please make sure to review carefully. With musl, compilation only succeeds without builtin XRootD and TBB and without SSL support - the former need to be fixed in the respective projects, the latter would probably require a little more effort as the `ruserok` function used by `net/rpdutils/src/rpdutils.cxx` is not available in musl - this implies `-Dxrootd=OFF -Dimt=OFF -Dssl=OFF` `cmake` options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:513,reliability,availab,available,513,"Fix ROOT for musl libc - part 2; Continuation of #9260, closes #9253. Successfully compiles and launches with both musl and glibc, however the affected features were **not** specifically tested so please make sure to review carefully. With musl, compilation only succeeds without builtin XRootD and TBB and without SSL support - the former need to be fixed in the respective projects, the latter would probably require a little more effort as the `ruserok` function used by `net/rpdutils/src/rpdutils.cxx` is not available in musl - this implies `-Dxrootd=OFF -Dimt=OFF -Dssl=OFF` `cmake` options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:187,safety,test,tested,187,"Fix ROOT for musl libc - part 2; Continuation of #9260, closes #9253. Successfully compiles and launches with both musl and glibc, however the affected features were **not** specifically tested so please make sure to review carefully. With musl, compilation only succeeds without builtin XRootD and TBB and without SSL support - the former need to be fixed in the respective projects, the latter would probably require a little more effort as the `ruserok` function used by `net/rpdutils/src/rpdutils.cxx` is not available in musl - this implies `-Dxrootd=OFF -Dimt=OFF -Dssl=OFF` `cmake` options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:217,safety,review,review,217,"Fix ROOT for musl libc - part 2; Continuation of #9260, closes #9253. Successfully compiles and launches with both musl and glibc, however the affected features were **not** specifically tested so please make sure to review carefully. With musl, compilation only succeeds without builtin XRootD and TBB and without SSL support - the former need to be fixed in the respective projects, the latter would probably require a little more effort as the `ruserok` function used by `net/rpdutils/src/rpdutils.cxx` is not available in musl - this implies `-Dxrootd=OFF -Dimt=OFF -Dssl=OFF` `cmake` options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:513,safety,avail,available,513,"Fix ROOT for musl libc - part 2; Continuation of #9260, closes #9253. Successfully compiles and launches with both musl and glibc, however the affected features were **not** specifically tested so please make sure to review carefully. With musl, compilation only succeeds without builtin XRootD and TBB and without SSL support - the former need to be fixed in the respective projects, the latter would probably require a little more effort as the `ruserok` function used by `net/rpdutils/src/rpdutils.cxx` is not available in musl - this implies `-Dxrootd=OFF -Dimt=OFF -Dssl=OFF` `cmake` options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:315,security,SSL,SSL,315,"Fix ROOT for musl libc - part 2; Continuation of #9260, closes #9253. Successfully compiles and launches with both musl and glibc, however the affected features were **not** specifically tested so please make sure to review carefully. With musl, compilation only succeeds without builtin XRootD and TBB and without SSL support - the former need to be fixed in the respective projects, the latter would probably require a little more effort as the `ruserok` function used by `net/rpdutils/src/rpdutils.cxx` is not available in musl - this implies `-Dxrootd=OFF -Dimt=OFF -Dssl=OFF` `cmake` options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:513,security,availab,available,513,"Fix ROOT for musl libc - part 2; Continuation of #9260, closes #9253. Successfully compiles and launches with both musl and glibc, however the affected features were **not** specifically tested so please make sure to review carefully. With musl, compilation only succeeds without builtin XRootD and TBB and without SSL support - the former need to be fixed in the respective projects, the latter would probably require a little more effort as the `ruserok` function used by `net/rpdutils/src/rpdutils.cxx` is not available in musl - this implies `-Dxrootd=OFF -Dimt=OFF -Dssl=OFF` `cmake` options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:187,testability,test,tested,187,"Fix ROOT for musl libc - part 2; Continuation of #9260, closes #9253. Successfully compiles and launches with both musl and glibc, however the affected features were **not** specifically tested so please make sure to review carefully. With musl, compilation only succeeds without builtin XRootD and TBB and without SSL support - the former need to be fixed in the respective projects, the latter would probably require a little more effort as the `ruserok` function used by `net/rpdutils/src/rpdutils.cxx` is not available in musl - this implies `-Dxrootd=OFF -Dimt=OFF -Dssl=OFF` `cmake` options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:217,testability,review,review,217,"Fix ROOT for musl libc - part 2; Continuation of #9260, closes #9253. Successfully compiles and launches with both musl and glibc, however the affected features were **not** specifically tested so please make sure to review carefully. With musl, compilation only succeeds without builtin XRootD and TBB and without SSL support - the former need to be fixed in the respective projects, the latter would probably require a little more effort as the `ruserok` function used by `net/rpdutils/src/rpdutils.cxx` is not available in musl - this implies `-Dxrootd=OFF -Dimt=OFF -Dssl=OFF` `cmake` options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:56,usability,close,closes,56,"Fix ROOT for musl libc - part 2; Continuation of #9260, closes #9253. Successfully compiles and launches with both musl and glibc, however the affected features were **not** specifically tested so please make sure to review carefully. With musl, compilation only succeeds without builtin XRootD and TBB and without SSL support - the former need to be fixed in the respective projects, the latter would probably require a little more effort as the `ruserok` function used by `net/rpdutils/src/rpdutils.cxx` is not available in musl - this implies `-Dxrootd=OFF -Dimt=OFF -Dssl=OFF` `cmake` options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:319,usability,support,support,319,"Fix ROOT for musl libc - part 2; Continuation of #9260, closes #9253. Successfully compiles and launches with both musl and glibc, however the affected features were **not** specifically tested so please make sure to review carefully. With musl, compilation only succeeds without builtin XRootD and TBB and without SSL support - the former need to be fixed in the respective projects, the latter would probably require a little more effort as the `ruserok` function used by `net/rpdutils/src/rpdutils.cxx` is not available in musl - this implies `-Dxrootd=OFF -Dimt=OFF -Dssl=OFF` `cmake` options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9289:218,deployability,build,build,218,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:228,deployability,releas,release,228,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:380,deployability,build,build,380,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:390,deployability,releas,release,390,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:542,deployability,build,build,542,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:552,deployability,releas,release,552,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:701,deployability,build,build,701,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:711,deployability,releas,release,711,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:866,deployability,build,build,866,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:876,deployability,releas,release,876,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:1021,deployability,build,build,1021,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:1031,deployability,releas,release,1031,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:311,interoperability,incompatib,incompatible,311,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:473,interoperability,incompatib,incompatible,473,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:797,interoperability,incompatib,incompatible,797,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:160,modifiability,paramet,parameter,160,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:203,usability,User,Users,203,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:365,usability,User,Users,365,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:527,usability,User,Users,527,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:686,usability,User,Users,686,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:851,usability,User,Users,851,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/pull/9289:1006,usability,User,Users,1006,"Fix compilation warnings on Win64; Fix compilation warnings on Win64, as shown below, by using proper long types. ```. gcompletion.c(47): warning C4028: formal parameter 3 different from declaration [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(105): warning C4133: 'function': incompatible types - from 'gsize *' to 'size_t *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gconvert.c(460): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gdataset.c(552): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. giochannel.c(1238): warning C4133: 'function': incompatible types - from 'size_t *' to 'gsize *' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. gmem.c(662): warning C4311: 'type cast': pointer truncation from 'gpointer' to 'guint' [C:\Users\bellenot\build\x64\release\graf2d\win32gdk\glib.vcxproj]. ... ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9289
https://github.com/root-project/root/issues/9292:581,availability,cluster,cluster,581,"Integer overflow in TTreeCache::FillBuffer; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The `TTree::SetCacheSize()` method takes 64-byte integer as input, however the types of member `fBuffer` and `fBufferMin` in class `TTreeCache` are both 32-byte integer, so there will be an integer overflow if one tries to set the buffer size more than 512MB because in the line 1614 of `TTreeCache.cxx`:. ```c++. if (ntotCurrentBuf > 4 * fBufferSizeMin) . // Humm something wrong happened. Warning(""FillBuffer"", ""There is more data in this cluster (starting at entry %lld to %lld, "". ""current=%lld) than usual ... with %d %.3f%% of the branches we already have "". ""%d bytes (instead of %d)"",. fEntryCurrent, fEntryNext, entries[j], i, (100.0 * i) / ((float)fNbranches), ntotCurrentBuf,. fBufferSizeMin);. ```. so one will get weird warnings like:. ```shell. Warning in <TTreeCache::FillBuffer>: There is more data in this cluster (starting at entry 0 to 34020, current=31185) than usual ... with 700 42.067% of the branches we already have 458967692 bytes (instead of 1073741824). ```. even though every thing is fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9292
https://github.com/root-project/root/issues/9292:963,availability,cluster,cluster,963,"Integer overflow in TTreeCache::FillBuffer; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The `TTree::SetCacheSize()` method takes 64-byte integer as input, however the types of member `fBuffer` and `fBufferMin` in class `TTreeCache` are both 32-byte integer, so there will be an integer overflow if one tries to set the buffer size more than 512MB because in the line 1614 of `TTreeCache.cxx`:. ```c++. if (ntotCurrentBuf > 4 * fBufferSizeMin) . // Humm something wrong happened. Warning(""FillBuffer"", ""There is more data in this cluster (starting at entry %lld to %lld, "". ""current=%lld) than usual ... with %d %.3f%% of the branches we already have "". ""%d bytes (instead of %d)"",. fEntryCurrent, fEntryNext, entries[j], i, (100.0 * i) / ((float)fNbranches), ntotCurrentBuf,. fBufferSizeMin);. ```. so one will get weird warnings like:. ```shell. Warning in <TTreeCache::FillBuffer>: There is more data in this cluster (starting at entry 0 to 34020, current=31185) than usual ... with 700 42.067% of the branches we already have 458967692 bytes (instead of 1073741824). ```. even though every thing is fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9292
https://github.com/root-project/root/issues/9292:581,deployability,cluster,cluster,581,"Integer overflow in TTreeCache::FillBuffer; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The `TTree::SetCacheSize()` method takes 64-byte integer as input, however the types of member `fBuffer` and `fBufferMin` in class `TTreeCache` are both 32-byte integer, so there will be an integer overflow if one tries to set the buffer size more than 512MB because in the line 1614 of `TTreeCache.cxx`:. ```c++. if (ntotCurrentBuf > 4 * fBufferSizeMin) . // Humm something wrong happened. Warning(""FillBuffer"", ""There is more data in this cluster (starting at entry %lld to %lld, "". ""current=%lld) than usual ... with %d %.3f%% of the branches we already have "". ""%d bytes (instead of %d)"",. fEntryCurrent, fEntryNext, entries[j], i, (100.0 * i) / ((float)fNbranches), ntotCurrentBuf,. fBufferSizeMin);. ```. so one will get weird warnings like:. ```shell. Warning in <TTreeCache::FillBuffer>: There is more data in this cluster (starting at entry 0 to 34020, current=31185) than usual ... with 700 42.067% of the branches we already have 458967692 bytes (instead of 1073741824). ```. even though every thing is fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9292
https://github.com/root-project/root/issues/9292:963,deployability,cluster,cluster,963,"Integer overflow in TTreeCache::FillBuffer; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The `TTree::SetCacheSize()` method takes 64-byte integer as input, however the types of member `fBuffer` and `fBufferMin` in class `TTreeCache` are both 32-byte integer, so there will be an integer overflow if one tries to set the buffer size more than 512MB because in the line 1614 of `TTreeCache.cxx`:. ```c++. if (ntotCurrentBuf > 4 * fBufferSizeMin) . // Humm something wrong happened. Warning(""FillBuffer"", ""There is more data in this cluster (starting at entry %lld to %lld, "". ""current=%lld) than usual ... with %d %.3f%% of the branches we already have "". ""%d bytes (instead of %d)"",. fEntryCurrent, fEntryNext, entries[j], i, (100.0 * i) / ((float)fNbranches), ntotCurrentBuf,. fBufferSizeMin);. ```. so one will get weird warnings like:. ```shell. Warning in <TTreeCache::FillBuffer>: There is more data in this cluster (starting at entry 0 to 34020, current=31185) than usual ... with 700 42.067% of the branches we already have 458967692 bytes (instead of 1073741824). ```. even though every thing is fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9292
https://github.com/root-project/root/issues/9292:626,energy efficiency,current,current,626,"Integer overflow in TTreeCache::FillBuffer; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The `TTree::SetCacheSize()` method takes 64-byte integer as input, however the types of member `fBuffer` and `fBufferMin` in class `TTreeCache` are both 32-byte integer, so there will be an integer overflow if one tries to set the buffer size more than 512MB because in the line 1614 of `TTreeCache.cxx`:. ```c++. if (ntotCurrentBuf > 4 * fBufferSizeMin) . // Humm something wrong happened. Warning(""FillBuffer"", ""There is more data in this cluster (starting at entry %lld to %lld, "". ""current=%lld) than usual ... with %d %.3f%% of the branches we already have "". ""%d bytes (instead of %d)"",. fEntryCurrent, fEntryNext, entries[j], i, (100.0 * i) / ((float)fNbranches), ntotCurrentBuf,. fBufferSizeMin);. ```. so one will get weird warnings like:. ```shell. Warning in <TTreeCache::FillBuffer>: There is more data in this cluster (starting at entry 0 to 34020, current=31185) than usual ... with 700 42.067% of the branches we already have 458967692 bytes (instead of 1073741824). ```. even though every thing is fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9292
https://github.com/root-project/root/issues/9292:1002,energy efficiency,current,current,1002,"Integer overflow in TTreeCache::FillBuffer; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The `TTree::SetCacheSize()` method takes 64-byte integer as input, however the types of member `fBuffer` and `fBufferMin` in class `TTreeCache` are both 32-byte integer, so there will be an integer overflow if one tries to set the buffer size more than 512MB because in the line 1614 of `TTreeCache.cxx`:. ```c++. if (ntotCurrentBuf > 4 * fBufferSizeMin) . // Humm something wrong happened. Warning(""FillBuffer"", ""There is more data in this cluster (starting at entry %lld to %lld, "". ""current=%lld) than usual ... with %d %.3f%% of the branches we already have "". ""%d bytes (instead of %d)"",. fEntryCurrent, fEntryNext, entries[j], i, (100.0 * i) / ((float)fNbranches), ntotCurrentBuf,. fBufferSizeMin);. ```. so one will get weird warnings like:. ```shell. Warning in <TTreeCache::FillBuffer>: There is more data in this cluster (starting at entry 0 to 34020, current=31185) than usual ... with 700 42.067% of the branches we already have 458967692 bytes (instead of 1073741824). ```. even though every thing is fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9292
https://github.com/root-project/root/issues/9292:371,integrability,buffer,buffer,371,"Integer overflow in TTreeCache::FillBuffer; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The `TTree::SetCacheSize()` method takes 64-byte integer as input, however the types of member `fBuffer` and `fBufferMin` in class `TTreeCache` are both 32-byte integer, so there will be an integer overflow if one tries to set the buffer size more than 512MB because in the line 1614 of `TTreeCache.cxx`:. ```c++. if (ntotCurrentBuf > 4 * fBufferSizeMin) . // Humm something wrong happened. Warning(""FillBuffer"", ""There is more data in this cluster (starting at entry %lld to %lld, "". ""current=%lld) than usual ... with %d %.3f%% of the branches we already have "". ""%d bytes (instead of %d)"",. fEntryCurrent, fEntryNext, entries[j], i, (100.0 * i) / ((float)fNbranches), ntotCurrentBuf,. fBufferSizeMin);. ```. so one will get weird warnings like:. ```shell. Warning in <TTreeCache::FillBuffer>: There is more data in this cluster (starting at entry 0 to 34020, current=31185) than usual ... with 700 42.067% of the branches we already have 458967692 bytes (instead of 1073741824). ```. even though every thing is fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9292
https://github.com/root-project/root/issues/9292:200,safety,input,input,200,"Integer overflow in TTreeCache::FillBuffer; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The `TTree::SetCacheSize()` method takes 64-byte integer as input, however the types of member `fBuffer` and `fBufferMin` in class `TTreeCache` are both 32-byte integer, so there will be an integer overflow if one tries to set the buffer size more than 512MB because in the line 1614 of `TTreeCache.cxx`:. ```c++. if (ntotCurrentBuf > 4 * fBufferSizeMin) . // Humm something wrong happened. Warning(""FillBuffer"", ""There is more data in this cluster (starting at entry %lld to %lld, "". ""current=%lld) than usual ... with %d %.3f%% of the branches we already have "". ""%d bytes (instead of %d)"",. fEntryCurrent, fEntryNext, entries[j], i, (100.0 * i) / ((float)fNbranches), ntotCurrentBuf,. fBufferSizeMin);. ```. so one will get weird warnings like:. ```shell. Warning in <TTreeCache::FillBuffer>: There is more data in this cluster (starting at entry 0 to 34020, current=31185) than usual ... with 700 42.067% of the branches we already have 458967692 bytes (instead of 1073741824). ```. even though every thing is fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9292
https://github.com/root-project/root/issues/9292:74,usability,clear,clear,74,"Integer overflow in TTreeCache::FillBuffer; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The `TTree::SetCacheSize()` method takes 64-byte integer as input, however the types of member `fBuffer` and `fBufferMin` in class `TTreeCache` are both 32-byte integer, so there will be an integer overflow if one tries to set the buffer size more than 512MB because in the line 1614 of `TTreeCache.cxx`:. ```c++. if (ntotCurrentBuf > 4 * fBufferSizeMin) . // Humm something wrong happened. Warning(""FillBuffer"", ""There is more data in this cluster (starting at entry %lld to %lld, "". ""current=%lld) than usual ... with %d %.3f%% of the branches we already have "". ""%d bytes (instead of %d)"",. fEntryCurrent, fEntryNext, entries[j], i, (100.0 * i) / ((float)fNbranches), ntotCurrentBuf,. fBufferSizeMin);. ```. so one will get weird warnings like:. ```shell. Warning in <TTreeCache::FillBuffer>: There is more data in this cluster (starting at entry 0 to 34020, current=31185) than usual ... with 700 42.067% of the branches we already have 458967692 bytes (instead of 1073741824). ```. even though every thing is fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9292
https://github.com/root-project/root/issues/9292:122,usability,behavi,behavior,122,"Integer overflow in TTreeCache::FillBuffer; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The `TTree::SetCacheSize()` method takes 64-byte integer as input, however the types of member `fBuffer` and `fBufferMin` in class `TTreeCache` are both 32-byte integer, so there will be an integer overflow if one tries to set the buffer size more than 512MB because in the line 1614 of `TTreeCache.cxx`:. ```c++. if (ntotCurrentBuf > 4 * fBufferSizeMin) . // Humm something wrong happened. Warning(""FillBuffer"", ""There is more data in this cluster (starting at entry %lld to %lld, "". ""current=%lld) than usual ... with %d %.3f%% of the branches we already have "". ""%d bytes (instead of %d)"",. fEntryCurrent, fEntryNext, entries[j], i, (100.0 * i) / ((float)fNbranches), ntotCurrentBuf,. fBufferSizeMin);. ```. so one will get weird warnings like:. ```shell. Warning in <TTreeCache::FillBuffer>: There is more data in this cluster (starting at entry 0 to 34020, current=31185) than usual ... with 700 42.067% of the branches we already have 458967692 bytes (instead of 1073741824). ```. even though every thing is fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9292
https://github.com/root-project/root/issues/9292:200,usability,input,input,200,"Integer overflow in TTreeCache::FillBuffer; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The `TTree::SetCacheSize()` method takes 64-byte integer as input, however the types of member `fBuffer` and `fBufferMin` in class `TTreeCache` are both 32-byte integer, so there will be an integer overflow if one tries to set the buffer size more than 512MB because in the line 1614 of `TTreeCache.cxx`:. ```c++. if (ntotCurrentBuf > 4 * fBufferSizeMin) . // Humm something wrong happened. Warning(""FillBuffer"", ""There is more data in this cluster (starting at entry %lld to %lld, "". ""current=%lld) than usual ... with %d %.3f%% of the branches we already have "". ""%d bytes (instead of %d)"",. fEntryCurrent, fEntryNext, entries[j], i, (100.0 * i) / ((float)fNbranches), ntotCurrentBuf,. fBufferSizeMin);. ```. so one will get weird warnings like:. ```shell. Warning in <TTreeCache::FillBuffer>: There is more data in this cluster (starting at entry 0 to 34020, current=31185) than usual ... with 700 42.067% of the branches we already have 458967692 bytes (instead of 1073741824). ```. even though every thing is fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9292
https://github.com/root-project/root/pull/9293:366,deployability,updat,updated,366,Fix for TRatioPlot axes sync; # This Pull request:. ## Changes or fixes:. Fix for TRatioPlot axes sync:. - Added TPad::RangeAxis() which only emits the RangeAxisChanged() signal. - Call this before PaintInit() in THistPainter::Paint(). - This correctly syncs the histogram axes before the upper histogram is drawn. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9263,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9293
https://github.com/root-project/root/pull/9293:308,energy efficiency,draw,drawn,308,Fix for TRatioPlot axes sync; # This Pull request:. ## Changes or fixes:. Fix for TRatioPlot axes sync:. - Added TPad::RangeAxis() which only emits the RangeAxisChanged() signal. - Call this before PaintInit() in THistPainter::Paint(). - This correctly syncs the histogram axes before the upper histogram is drawn. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9263,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9293
https://github.com/root-project/root/pull/9293:336,safety,test,tested,336,Fix for TRatioPlot axes sync; # This Pull request:. ## Changes or fixes:. Fix for TRatioPlot axes sync:. - Added TPad::RangeAxis() which only emits the RangeAxisChanged() signal. - Call this before PaintInit() in THistPainter::Paint(). - This correctly syncs the histogram axes before the upper histogram is drawn. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9263,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9293
https://github.com/root-project/root/pull/9293:366,safety,updat,updated,366,Fix for TRatioPlot axes sync; # This Pull request:. ## Changes or fixes:. Fix for TRatioPlot axes sync:. - Added TPad::RangeAxis() which only emits the RangeAxisChanged() signal. - Call this before PaintInit() in THistPainter::Paint(). - This correctly syncs the histogram axes before the upper histogram is drawn. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9263,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9293
https://github.com/root-project/root/pull/9293:171,security,sign,signal,171,Fix for TRatioPlot axes sync; # This Pull request:. ## Changes or fixes:. Fix for TRatioPlot axes sync:. - Added TPad::RangeAxis() which only emits the RangeAxisChanged() signal. - Call this before PaintInit() in THistPainter::Paint(). - This correctly syncs the histogram axes before the upper histogram is drawn. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9263,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9293
https://github.com/root-project/root/pull/9293:366,security,updat,updated,366,Fix for TRatioPlot axes sync; # This Pull request:. ## Changes or fixes:. Fix for TRatioPlot axes sync:. - Added TPad::RangeAxis() which only emits the RangeAxisChanged() signal. - Call this before PaintInit() in THistPainter::Paint(). - This correctly syncs the histogram axes before the upper histogram is drawn. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9263,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9293
https://github.com/root-project/root/pull/9293:336,testability,test,tested,336,Fix for TRatioPlot axes sync; # This Pull request:. ## Changes or fixes:. Fix for TRatioPlot axes sync:. - Added TPad::RangeAxis() which only emits the RangeAxisChanged() signal. - Call this before PaintInit() in THistPainter::Paint(). - This correctly syncs the histogram axes before the upper histogram is drawn. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #9263,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9293
https://github.com/root-project/root/issues/9294:394,availability,error,error,394,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:406,availability,error,error,406,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:439,availability,error,error,439,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:837,availability,error,error,837,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1023,availability,error,error,1023,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:330,deployability,updat,update,330,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:572,energy efficiency,core,core,572,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:725,energy efficiency,core,core,725,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:776,interoperability,convers,conversion,776,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:927,interoperability,convers,conversion,927,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1218,interoperability,specif,specified,1218,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:5,performance,Lock,Lockguard,5,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:394,performance,error,error,394,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:406,performance,error,error,406,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:439,performance,error,error,439,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:837,performance,error,error,837,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1023,performance,error,error,1023,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:330,safety,updat,update,330,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:394,safety,error,error,394,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:406,safety,error,error,406,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:439,safety,error,error,439,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:837,safety,error,error,837,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1023,safety,error,error,1023,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:5,security,Lock,Lockguard,5,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:330,security,updat,update,330,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1494,security,Team,Team,1494,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:394,usability,error,error,394,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:406,usability,error,error,406,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:439,usability,error,error,439,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:837,usability,error,error,837,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1010,usability,behavi,behavior,1010,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1023,usability,error,error,1023,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1181,usability,document,documentation,1181,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1699,usability,help,help,1699,"Root Lockguard; - [x] Checked for duplicates. ### Describe the bug. I've been using in my programs these constructs:. ```. TMutex myMutex;. //... R__LOCKGUARD(myMutex). ```. (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```. error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’. R__LOCKGUARD(fGuiMutex) // scoped mutex. ^. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*). TLockGuard(TVirtualMutex *mutex). ^~~~~~~~~~. /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’. error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior. No error is produced as before. Or why are the others compiling well ? Should I change instead to R__LOCKGUARD(&myMutex); ? If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce. - Open a ROOT terminal. - TMutex fr. - R__LOCKGUARD(fr). ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |. | From heads/master@v6-25-01-1584-g068c20d159 |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/pull/9295:190,deployability,patch,patch,190,[cxxmodules] The top-level decl must be annotated as a part of a dictionary.; We should not descend into sub-declarations when the top-level declaration was not processed by rootcling. This patch should fix a recent regression in cmssw where we ask for a dictionary for tbb::detail::d1::concurrent_unordered_base<...>. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9295
https://github.com/root-project/root/pull/9295:105,integrability,sub,sub-declarations,105,[cxxmodules] The top-level decl must be annotated as a part of a dictionary.; We should not descend into sub-declarations when the top-level declaration was not processed by rootcling. This patch should fix a recent regression in cmssw where we ask for a dictionary for tbb::detail::d1::concurrent_unordered_base<...>. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9295
https://github.com/root-project/root/pull/9295:190,safety,patch,patch,190,[cxxmodules] The top-level decl must be annotated as a part of a dictionary.; We should not descend into sub-declarations when the top-level declaration was not processed by rootcling. This patch should fix a recent regression in cmssw where we ask for a dictionary for tbb::detail::d1::concurrent_unordered_base<...>. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9295
https://github.com/root-project/root/pull/9295:190,security,patch,patch,190,[cxxmodules] The top-level decl must be annotated as a part of a dictionary.; We should not descend into sub-declarations when the top-level declaration was not processed by rootcling. This patch should fix a recent regression in cmssw where we ask for a dictionary for tbb::detail::d1::concurrent_unordered_base<...>. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9295
https://github.com/root-project/root/pull/9295:216,testability,regress,regression,216,[cxxmodules] The top-level decl must be annotated as a part of a dictionary.; We should not descend into sub-declarations when the top-level declaration was not processed by rootcling. This patch should fix a recent regression in cmssw where we ask for a dictionary for tbb::detail::d1::concurrent_unordered_base<...>. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9295
https://github.com/root-project/root/pull/9296:278,energy efficiency,reduc,reducing,278,"[RF] Fix memory leak in RooMinimizerFcn constructor; The RooMinimizerFcn constructor used the `RooAbsArg::getParameters`. function that returns an owning pointer, but missed to delete that. pointer afterwards, causing a memory leak until this commit. This PR is another step in reducing the memory consumption increase reported in https://github.com/root-project/root/issues/9196.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9296
https://github.com/root-project/root/pull/9296:9,performance,memor,memory,9,"[RF] Fix memory leak in RooMinimizerFcn constructor; The RooMinimizerFcn constructor used the `RooAbsArg::getParameters`. function that returns an owning pointer, but missed to delete that. pointer afterwards, causing a memory leak until this commit. This PR is another step in reducing the memory consumption increase reported in https://github.com/root-project/root/issues/9196.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9296
https://github.com/root-project/root/pull/9296:220,performance,memor,memory,220,"[RF] Fix memory leak in RooMinimizerFcn constructor; The RooMinimizerFcn constructor used the `RooAbsArg::getParameters`. function that returns an owning pointer, but missed to delete that. pointer afterwards, causing a memory leak until this commit. This PR is another step in reducing the memory consumption increase reported in https://github.com/root-project/root/issues/9196.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9296
https://github.com/root-project/root/pull/9296:291,performance,memor,memory,291,"[RF] Fix memory leak in RooMinimizerFcn constructor; The RooMinimizerFcn constructor used the `RooAbsArg::getParameters`. function that returns an owning pointer, but missed to delete that. pointer afterwards, causing a memory leak until this commit. This PR is another step in reducing the memory consumption increase reported in https://github.com/root-project/root/issues/9196.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9296
https://github.com/root-project/root/pull/9296:9,usability,memor,memory,9,"[RF] Fix memory leak in RooMinimizerFcn constructor; The RooMinimizerFcn constructor used the `RooAbsArg::getParameters`. function that returns an owning pointer, but missed to delete that. pointer afterwards, causing a memory leak until this commit. This PR is another step in reducing the memory consumption increase reported in https://github.com/root-project/root/issues/9196.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9296
https://github.com/root-project/root/pull/9296:220,usability,memor,memory,220,"[RF] Fix memory leak in RooMinimizerFcn constructor; The RooMinimizerFcn constructor used the `RooAbsArg::getParameters`. function that returns an owning pointer, but missed to delete that. pointer afterwards, causing a memory leak until this commit. This PR is another step in reducing the memory consumption increase reported in https://github.com/root-project/root/issues/9196.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9296
https://github.com/root-project/root/pull/9296:291,usability,memor,memory,291,"[RF] Fix memory leak in RooMinimizerFcn constructor; The RooMinimizerFcn constructor used the `RooAbsArg::getParameters`. function that returns an owning pointer, but missed to delete that. pointer afterwards, causing a memory leak until this commit. This PR is another step in reducing the memory consumption increase reported in https://github.com/root-project/root/issues/9196.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9296
https://github.com/root-project/root/issues/9297:410,availability,error,error,410,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1139,availability,error,error,1139,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:16,deployability,build,build,16,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:22,deployability,fail,failed,22,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:399,deployability,fail,fails,399,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:426,deployability,log,log,426,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:466,deployability,build,buildlogs,466,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:768,deployability,build,build-any-ib,768,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:787,deployability,BUILD,BUILDROOT,787,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1032,deployability,build,build,1032,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1118,deployability,fail,failed,1118,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1128,deployability,build,build,1128,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1155,deployability,log,log,1155,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1195,deployability,artifact,artifacts,1195,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1205,deployability,build,build-any-ib,1205,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1330,deployability,log,log,1330,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1389,deployability,build,build-any-ib,1389,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1404,deployability,BUILD,BUILD,1404,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1718,deployability,fail,failed,1718,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:41,energy efficiency,Current,Currently,41,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:363,energy efficiency,load,load,363,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:363,performance,load,load,363,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:410,performance,error,error,410,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1139,performance,error,error,1139,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:22,reliability,fail,failed,22,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:399,reliability,fail,fails,399,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1118,reliability,fail,failed,1118,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1718,reliability,fail,failed,1718,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:410,safety,error,error,410,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:426,safety,log,log,426,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1139,safety,error,error,1139,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1155,safety,log,log,1155,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1330,safety,log,log,1330,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:426,security,log,log,426,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:559,security,sign,signal,559,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1155,security,log,log,1155,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1330,security,log,log,1330,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:426,testability,log,log,426,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1155,testability,log,log,1155,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1330,testability,log,log,1330,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1667,testability,Assert,Assertion,1667,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:128,usability,support,supported,128,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:410,usability,error,error,410,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1139,usability,error,error,1139,"ROOT 6.24 debug build failed on ppc64le; Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7. Compiler: GCC 9.3. ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math). ```. #8 <signal handler called>. #9 0x000010081a5b0038 in ?? (). #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so. #11 0x000001000c853a50 in ?? (). ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log). ```. root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed. ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/pull/9298:17,deployability,log,logic,17,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9298:104,deployability,log,logic,104,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9298:502,deployability,build,build,502,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9298:263,integrability,interfac,interface,263,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9298:263,interoperability,interfac,interface,263,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9298:588,interoperability,distribut,distributed,588,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9298:62,modifiability,refact,refactors,62,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9298:263,modifiability,interfac,interface,263,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9298:62,performance,refactor,refactors,62,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9298:17,safety,log,logic,17,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9298:104,safety,log,logic,104,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9298:17,security,log,logic,17,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9298:104,security,log,logic,104,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9298:17,testability,log,logic,17,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9298:104,testability,log,logic,104,"[DF] Move mapper logic to create RDF in headnode; This commit refactors the mapper function so that the logic responsible. for creating the correct RDataFrame instance based on the type of data. source is done in its corresponding HeadNode class. This makes the. interface more uniform and will contribute to adding new data sources in. the future more easily. In each HeadNode class there is now a method. called `generate_rdf_creator`, responsible for creating a function that. in turns knows how to build an RDataFrame instance from one metadata. range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9298
https://github.com/root-project/root/pull/9299:213,deployability,updat,updated,213,Add helper function to define color palette from ASCII file.; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/8098. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9299
https://github.com/root-project/root/pull/9299:183,safety,test,tested,183,Add helper function to define color palette from ASCII file.; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/8098. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9299
https://github.com/root-project/root/pull/9299:213,safety,updat,updated,213,Add helper function to define color palette from ASCII file.; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/8098. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9299
https://github.com/root-project/root/pull/9299:213,security,updat,updated,213,Add helper function to define color palette from ASCII file.; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/8098. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9299
https://github.com/root-project/root/pull/9299:183,testability,test,tested,183,Add helper function to define color palette from ASCII file.; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/8098. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9299
https://github.com/root-project/root/pull/9299:4,usability,help,helper,4,Add helper function to define color palette from ASCII file.; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/8098. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9299
https://github.com/root-project/root/pull/9300:237,deployability,updat,updated,237,"Reset to highest possible value when setting more than max-z-divisions; # This Pull request:. ## Changes or fixes:. When there is an overflow, go to closest value, not a very small one. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9300
https://github.com/root-project/root/pull/9300:207,safety,test,tested,207,"Reset to highest possible value when setting more than max-z-divisions; # This Pull request:. ## Changes or fixes:. When there is an overflow, go to closest value, not a very small one. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9300
https://github.com/root-project/root/pull/9300:237,safety,updat,updated,237,"Reset to highest possible value when setting more than max-z-divisions; # This Pull request:. ## Changes or fixes:. When there is an overflow, go to closest value, not a very small one. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9300
https://github.com/root-project/root/pull/9300:237,security,updat,updated,237,"Reset to highest possible value when setting more than max-z-divisions; # This Pull request:. ## Changes or fixes:. When there is an overflow, go to closest value, not a very small one. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9300
https://github.com/root-project/root/pull/9300:207,testability,test,tested,207,"Reset to highest possible value when setting more than max-z-divisions; # This Pull request:. ## Changes or fixes:. When there is an overflow, go to closest value, not a very small one. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9300
https://github.com/root-project/root/pull/9300:149,usability,close,closest,149,"Reset to highest possible value when setting more than max-z-divisions; # This Pull request:. ## Changes or fixes:. When there is an overflow, go to closest value, not a very small one. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9300
https://github.com/root-project/root/pull/9301:159,deployability,updat,updated,159,[metacling] Switch default cling optimization for ROOT to -O1.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:33,energy efficiency,optim,optimization,33,[metacling] Switch default cling optimization for ROOT to -O1.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:33,performance,optimiz,optimization,33,[metacling] Switch default cling optimization for ROOT to -O1.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:129,safety,test,tested,129,[metacling] Switch default cling optimization for ROOT to -O1.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:159,safety,updat,updated,159,[metacling] Switch default cling optimization for ROOT to -O1.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:159,security,updat,updated,159,[metacling] Switch default cling optimization for ROOT to -O1.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:129,testability,test,tested,129,[metacling] Switch default cling optimization for ROOT to -O1.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9303:228,availability,operat,operation,228,Fix Swap overload of RVec-s; . # This Pull request: Fix Swap overload of RVec-s. ## Changes or fixes:. Iterators are used to swap elements of RVecs. Previously swap was trying to access element by indexing. That was not a valid operation. Test cases were added to verify the swap. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes swap overload of RVec.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9303
https://github.com/root-project/root/pull/9303:332,deployability,updat,updated,332,Fix Swap overload of RVec-s; . # This Pull request: Fix Swap overload of RVec-s. ## Changes or fixes:. Iterators are used to swap elements of RVecs. Previously swap was trying to access element by indexing. That was not a valid operation. Test cases were added to verify the swap. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes swap overload of RVec.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9303
https://github.com/root-project/root/pull/9303:222,safety,valid,valid,222,Fix Swap overload of RVec-s; . # This Pull request: Fix Swap overload of RVec-s. ## Changes or fixes:. Iterators are used to swap elements of RVecs. Previously swap was trying to access element by indexing. That was not a valid operation. Test cases were added to verify the swap. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes swap overload of RVec.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9303
https://github.com/root-project/root/pull/9303:239,safety,Test,Test,239,Fix Swap overload of RVec-s; . # This Pull request: Fix Swap overload of RVec-s. ## Changes or fixes:. Iterators are used to swap elements of RVecs. Previously swap was trying to access element by indexing. That was not a valid operation. Test cases were added to verify the swap. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes swap overload of RVec.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9303
https://github.com/root-project/root/pull/9303:302,safety,test,tested,302,Fix Swap overload of RVec-s; . # This Pull request: Fix Swap overload of RVec-s. ## Changes or fixes:. Iterators are used to swap elements of RVecs. Previously swap was trying to access element by indexing. That was not a valid operation. Test cases were added to verify the swap. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes swap overload of RVec.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9303
https://github.com/root-project/root/pull/9303:332,safety,updat,updated,332,Fix Swap overload of RVec-s; . # This Pull request: Fix Swap overload of RVec-s. ## Changes or fixes:. Iterators are used to swap elements of RVecs. Previously swap was trying to access element by indexing. That was not a valid operation. Test cases were added to verify the swap. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes swap overload of RVec.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9303
https://github.com/root-project/root/pull/9303:179,security,access,access,179,Fix Swap overload of RVec-s; . # This Pull request: Fix Swap overload of RVec-s. ## Changes or fixes:. Iterators are used to swap elements of RVecs. Previously swap was trying to access element by indexing. That was not a valid operation. Test cases were added to verify the swap. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes swap overload of RVec.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9303
https://github.com/root-project/root/pull/9303:332,security,updat,updated,332,Fix Swap overload of RVec-s; . # This Pull request: Fix Swap overload of RVec-s. ## Changes or fixes:. Iterators are used to swap elements of RVecs. Previously swap was trying to access element by indexing. That was not a valid operation. Test cases were added to verify the swap. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes swap overload of RVec.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9303
https://github.com/root-project/root/pull/9303:239,testability,Test,Test,239,Fix Swap overload of RVec-s; . # This Pull request: Fix Swap overload of RVec-s. ## Changes or fixes:. Iterators are used to swap elements of RVecs. Previously swap was trying to access element by indexing. That was not a valid operation. Test cases were added to verify the swap. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes swap overload of RVec.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9303
https://github.com/root-project/root/pull/9303:264,testability,verif,verify,264,Fix Swap overload of RVec-s; . # This Pull request: Fix Swap overload of RVec-s. ## Changes or fixes:. Iterators are used to swap elements of RVecs. Previously swap was trying to access element by indexing. That was not a valid operation. Test cases were added to verify the swap. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes swap overload of RVec.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9303
https://github.com/root-project/root/pull/9303:302,testability,test,tested,302,Fix Swap overload of RVec-s; . # This Pull request: Fix Swap overload of RVec-s. ## Changes or fixes:. Iterators are used to swap elements of RVecs. Previously swap was trying to access element by indexing. That was not a valid operation. Test cases were added to verify the swap. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes swap overload of RVec.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9303
https://github.com/root-project/root/pull/9305:215,deployability,updat,updated,215,[skip-ci] clarify nature of the lockguard macro and difference to std; . # This Pull request:. ## Changes or fixes:. Clarifies documentation on R__LOCKGUARD macro. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/9294.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9305
https://github.com/root-project/root/pull/9305:32,performance,lock,lockguard,32,[skip-ci] clarify nature of the lockguard macro and difference to std; . # This Pull request:. ## Changes or fixes:. Clarifies documentation on R__LOCKGUARD macro. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/9294.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9305
https://github.com/root-project/root/pull/9305:185,safety,test,tested,185,[skip-ci] clarify nature of the lockguard macro and difference to std; . # This Pull request:. ## Changes or fixes:. Clarifies documentation on R__LOCKGUARD macro. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/9294.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9305
https://github.com/root-project/root/pull/9305:215,safety,updat,updated,215,[skip-ci] clarify nature of the lockguard macro and difference to std; . # This Pull request:. ## Changes or fixes:. Clarifies documentation on R__LOCKGUARD macro. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/9294.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9305
https://github.com/root-project/root/pull/9305:32,security,lock,lockguard,32,[skip-ci] clarify nature of the lockguard macro and difference to std; . # This Pull request:. ## Changes or fixes:. Clarifies documentation on R__LOCKGUARD macro. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/9294.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9305
https://github.com/root-project/root/pull/9305:215,security,updat,updated,215,[skip-ci] clarify nature of the lockguard macro and difference to std; . # This Pull request:. ## Changes or fixes:. Clarifies documentation on R__LOCKGUARD macro. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/9294.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9305
https://github.com/root-project/root/pull/9305:185,testability,test,tested,185,[skip-ci] clarify nature of the lockguard macro and difference to std; . # This Pull request:. ## Changes or fixes:. Clarifies documentation on R__LOCKGUARD macro. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/9294.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9305
https://github.com/root-project/root/pull/9305:127,usability,document,documentation,127,[skip-ci] clarify nature of the lockguard macro and difference to std; . # This Pull request:. ## Changes or fixes:. Clarifies documentation on R__LOCKGUARD macro. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/9294.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9305
https://github.com/root-project/root/pull/9307:38,availability,operat,operator,38,[TMVA][SOFIE] Add batch normalization operator; Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. . It includes also the test for Batch normalization operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:60,availability,operat,operator,60,[TMVA][SOFIE] Add batch normalization operator; Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. . It includes also the test for Batch normalization operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:220,availability,operat,operator,220,[TMVA][SOFIE] Add batch normalization operator; Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. . It includes also the test for Batch normalization operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:125,deployability,updat,updates,125,[TMVA][SOFIE] Add batch normalization operator; Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. . It includes also the test for Batch normalization operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:18,integrability,batch,batch,18,[TMVA][SOFIE] Add batch normalization operator; Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. . It includes also the test for Batch normalization operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:200,integrability,Batch,Batch,200,[TMVA][SOFIE] Add batch normalization operator; Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. . It includes also the test for Batch normalization operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:107,modifiability,exten,extends,107,[TMVA][SOFIE] Add batch normalization operator; Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. . It includes also the test for Batch normalization operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:18,performance,batch,batch,18,[TMVA][SOFIE] Add batch normalization operator; Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. . It includes also the test for Batch normalization operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:200,performance,Batch,Batch,200,[TMVA][SOFIE] Add batch normalization operator; Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. . It includes also the test for Batch normalization operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:125,safety,updat,updates,125,[TMVA][SOFIE] Add batch normalization operator; Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. . It includes also the test for Batch normalization operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:191,safety,test,test,191,[TMVA][SOFIE] Add batch normalization operator; Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. . It includes also the test for Batch normalization operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:125,security,updat,updates,125,[TMVA][SOFIE] Add batch normalization operator; Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. . It includes also the test for Batch normalization operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:144,security,Session,Session,144,[TMVA][SOFIE] Add batch normalization operator; Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. . It includes also the test for Batch normalization operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:191,testability,test,test,191,[TMVA][SOFIE] Add batch normalization operator; Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. . It includes also the test for Batch normalization operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9308:31,deployability,log,logic,31,"[DF] Remove unused ""unique ID"" logic in RDefineBase; It became unused when we started tracking defines in each branch. of the computation graph separately. We have no need for IDs to. distinguish separate Defines of the same column anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9308
https://github.com/root-project/root/pull/9308:31,safety,log,logic,31,"[DF] Remove unused ""unique ID"" logic in RDefineBase; It became unused when we started tracking defines in each branch. of the computation graph separately. We have no need for IDs to. distinguish separate Defines of the same column anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9308
https://github.com/root-project/root/pull/9308:31,security,log,logic,31,"[DF] Remove unused ""unique ID"" logic in RDefineBase; It became unused when we started tracking defines in each branch. of the computation graph separately. We have no need for IDs to. distinguish separate Defines of the same column anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9308
https://github.com/root-project/root/pull/9308:31,testability,log,logic,31,"[DF] Remove unused ""unique ID"" logic in RDefineBase; It became unused when we started tracking defines in each branch. of the computation graph separately. We have no need for IDs to. distinguish separate Defines of the same column anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9308
https://github.com/root-project/root/issues/9309:896,availability,Operat,Operating,896,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:971,availability,down,download,971,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:817,deployability,build,build,817,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:884,deployability,version,version,884,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:953,deployability,instal,install,953,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:884,integrability,version,version,884,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:884,modifiability,version,version,884,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:771,safety,input,input,771,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:1025,testability,context,context,1025,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:1054,testability,context,context,1054,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:415,usability,clear,clear,415,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:463,usability,behavi,behavior,463,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:494,usability,behavi,behavior,494,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:512,usability,clear,clear,512,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:626,usability,behavi,behavior,626,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9309:771,usability,input,input,771,"GDML Export Option ""f; - [ x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9309
https://github.com/root-project/root/issues/9310:576,availability,Error,Error,576,"GDML Export Option ""f"" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1356,availability,Error,Error,1356,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1708,availability,slo,slow,1708,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1803,deployability,contain,container,1803,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1863,deployability,Contain,Container,1863,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1884,deployability,instal,installed,1884,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1873,modifiability,maintain,maintainer,1873,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:576,performance,Error,Error,576,"GDML Export Option ""f"" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1356,performance,Error,Error,1356,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1495,reliability,doe,doesn,1495,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1708,reliability,slo,slow,1708,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:576,safety,Error,Error,576,"GDML Export Option ""f"" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:696,safety,test,tested,696,"GDML Export Option ""f"" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:811,safety,valid,valid,811,"GDML Export Option ""f"" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1125,safety,test,test,1125,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1179,safety,test,test,1179,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1251,safety,test,test,1251,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1356,safety,Error,Error,1356,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1561,safety,test,test,1561,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1873,safety,maintain,maintainer,1873,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1928,safety,test,test,1928,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:696,testability,test,tested,696,"GDML Export Option ""f"" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1125,testability,test,test,1125,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1179,testability,test,test,1179,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1251,testability,test,test,1251,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1561,testability,test,test,1561,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1629,testability,Simpl,Simple,1629,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1913,testability,context,context,1913,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1928,testability,test,test,1928,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:576,usability,Error,Error,576,"GDML Export Option ""f"" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:644,usability,behavi,behavior,644,"GDML Export Option ""f"" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:681,usability,usab,usable,681,"GDML Export Option ""f"" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1356,usability,Error,Error,1356,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:1629,usability,Simpl,Simple,1629,""" is bugged.; . - [ x ] Checked for duplicates. ### Describe the bug. After I write out (part of) a geometry with. ```. writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");. ```. the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says. ```. <world ref=""HcalBarrel""/>. ```. The result is that ROOT itself cannot read the file:. ```. Info in <TGeoManager::Import>: Reading geometry from file: [...]. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. ### Expected behavior. The function should return usable gdml. I tested that if I change by hand to . ```. <world ref=""HcalBarrel0x0x55d87ec06500""/>. ```. the file is woorking and valid. ### To Reproduce. ```. root -l $ROOTSYS/tutorials/geom/rootgeom.C. TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);. TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);. TGDMLWrite *writer = new TGDMLWrite;. writer->SetG4Compatibility(true);. writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");. .q. root -l. gGeoManager->Import(""test.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: test.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Error in <TGeoManager::Import>: Cannot open file. ```. A side bug, I cannot reproduce this with the Export option, and that. is because it doesn't recognize the f flag:. ```. root [1] gGeoManager->Export(""test.gdml"",""vgf""). Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code. Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set. ```. ### Setup. 1. 6.24.06. 2. singularity container running debian (on top of Scientific Linux 7). 3. Container maintainer installed it. ### Additional context. I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/pull/9311:25,availability,Operat,Operator,25,[TMVA][SOFIE] Add Concat Operator; This pull request adds the Concat Operator in TMVA SOFIE. - [x] Add the ROperator_Concat . - [x] Add functionality to parse Concat operator from ONNX files. - [ ] Add functionality to parse Concat opreator from Keras' `.h5` files. - [ ] Add functionality to parse Concat operator from PyTorch's `.pt` files. - [ ] Add tests for Concat operator. - [x] ONNX tests. - [ ] PyTorch Tests. - [ ] keras tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:69,availability,Operat,Operator,69,[TMVA][SOFIE] Add Concat Operator; This pull request adds the Concat Operator in TMVA SOFIE. - [x] Add the ROperator_Concat . - [x] Add functionality to parse Concat operator from ONNX files. - [ ] Add functionality to parse Concat opreator from Keras' `.h5` files. - [ ] Add functionality to parse Concat operator from PyTorch's `.pt` files. - [ ] Add tests for Concat operator. - [x] ONNX tests. - [ ] PyTorch Tests. - [ ] keras tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:166,availability,operat,operator,166,[TMVA][SOFIE] Add Concat Operator; This pull request adds the Concat Operator in TMVA SOFIE. - [x] Add the ROperator_Concat . - [x] Add functionality to parse Concat operator from ONNX files. - [ ] Add functionality to parse Concat opreator from Keras' `.h5` files. - [ ] Add functionality to parse Concat operator from PyTorch's `.pt` files. - [ ] Add tests for Concat operator. - [x] ONNX tests. - [ ] PyTorch Tests. - [ ] keras tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:306,availability,operat,operator,306,[TMVA][SOFIE] Add Concat Operator; This pull request adds the Concat Operator in TMVA SOFIE. - [x] Add the ROperator_Concat . - [x] Add functionality to parse Concat operator from ONNX files. - [ ] Add functionality to parse Concat opreator from Keras' `.h5` files. - [ ] Add functionality to parse Concat operator from PyTorch's `.pt` files. - [ ] Add tests for Concat operator. - [x] ONNX tests. - [ ] PyTorch Tests. - [ ] keras tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:370,availability,operat,operator,370,[TMVA][SOFIE] Add Concat Operator; This pull request adds the Concat Operator in TMVA SOFIE. - [x] Add the ROperator_Concat . - [x] Add functionality to parse Concat operator from ONNX files. - [ ] Add functionality to parse Concat opreator from Keras' `.h5` files. - [ ] Add functionality to parse Concat operator from PyTorch's `.pt` files. - [ ] Add tests for Concat operator. - [x] ONNX tests. - [ ] PyTorch Tests. - [ ] keras tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:353,safety,test,tests,353,[TMVA][SOFIE] Add Concat Operator; This pull request adds the Concat Operator in TMVA SOFIE. - [x] Add the ROperator_Concat . - [x] Add functionality to parse Concat operator from ONNX files. - [ ] Add functionality to parse Concat opreator from Keras' `.h5` files. - [ ] Add functionality to parse Concat operator from PyTorch's `.pt` files. - [ ] Add tests for Concat operator. - [x] ONNX tests. - [ ] PyTorch Tests. - [ ] keras tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:391,safety,test,tests,391,[TMVA][SOFIE] Add Concat Operator; This pull request adds the Concat Operator in TMVA SOFIE. - [x] Add the ROperator_Concat . - [x] Add functionality to parse Concat operator from ONNX files. - [ ] Add functionality to parse Concat opreator from Keras' `.h5` files. - [ ] Add functionality to parse Concat operator from PyTorch's `.pt` files. - [ ] Add tests for Concat operator. - [x] ONNX tests. - [ ] PyTorch Tests. - [ ] keras tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:412,safety,Test,Tests,412,[TMVA][SOFIE] Add Concat Operator; This pull request adds the Concat Operator in TMVA SOFIE. - [x] Add the ROperator_Concat . - [x] Add functionality to parse Concat operator from ONNX files. - [ ] Add functionality to parse Concat opreator from Keras' `.h5` files. - [ ] Add functionality to parse Concat operator from PyTorch's `.pt` files. - [ ] Add tests for Concat operator. - [x] ONNX tests. - [ ] PyTorch Tests. - [ ] keras tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:431,safety,test,tests,431,[TMVA][SOFIE] Add Concat Operator; This pull request adds the Concat Operator in TMVA SOFIE. - [x] Add the ROperator_Concat . - [x] Add functionality to parse Concat operator from ONNX files. - [ ] Add functionality to parse Concat opreator from Keras' `.h5` files. - [ ] Add functionality to parse Concat operator from PyTorch's `.pt` files. - [ ] Add tests for Concat operator. - [x] ONNX tests. - [ ] PyTorch Tests. - [ ] keras tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:353,testability,test,tests,353,[TMVA][SOFIE] Add Concat Operator; This pull request adds the Concat Operator in TMVA SOFIE. - [x] Add the ROperator_Concat . - [x] Add functionality to parse Concat operator from ONNX files. - [ ] Add functionality to parse Concat opreator from Keras' `.h5` files. - [ ] Add functionality to parse Concat operator from PyTorch's `.pt` files. - [ ] Add tests for Concat operator. - [x] ONNX tests. - [ ] PyTorch Tests. - [ ] keras tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:391,testability,test,tests,391,[TMVA][SOFIE] Add Concat Operator; This pull request adds the Concat Operator in TMVA SOFIE. - [x] Add the ROperator_Concat . - [x] Add functionality to parse Concat operator from ONNX files. - [ ] Add functionality to parse Concat opreator from Keras' `.h5` files. - [ ] Add functionality to parse Concat operator from PyTorch's `.pt` files. - [ ] Add tests for Concat operator. - [x] ONNX tests. - [ ] PyTorch Tests. - [ ] keras tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:412,testability,Test,Tests,412,[TMVA][SOFIE] Add Concat Operator; This pull request adds the Concat Operator in TMVA SOFIE. - [x] Add the ROperator_Concat . - [x] Add functionality to parse Concat operator from ONNX files. - [ ] Add functionality to parse Concat opreator from Keras' `.h5` files. - [ ] Add functionality to parse Concat operator from PyTorch's `.pt` files. - [ ] Add tests for Concat operator. - [x] ONNX tests. - [ ] PyTorch Tests. - [ ] keras tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:431,testability,test,tests,431,[TMVA][SOFIE] Add Concat Operator; This pull request adds the Concat Operator in TMVA SOFIE. - [x] Add the ROperator_Concat . - [x] Add functionality to parse Concat operator from ONNX files. - [ ] Add functionality to parse Concat opreator from Keras' `.h5` files. - [ ] Add functionality to parse Concat operator from PyTorch's `.pt` files. - [ ] Add tests for Concat operator. - [x] ONNX tests. - [ ] PyTorch Tests. - [ ] keras tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/issues/9312:9,energy efficiency,optim,optimizer,9,"Possible optimizer optimization; ### Explain what you would like to see improved. `-O1` for cling spends considerable time in stressGraphics:. test | opt | non-opt. -----|-----|--------. stressGraphics.cxx | 57.68 | 16.13. We need to. - verify that it's the optimizer taking so long. - find out which pass is causing it. - consider disabling that pass by default, or reproducing and discussing with upstream what we can do. See also https://github.com/root-project/root/pull/9301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:19,energy efficiency,optim,optimization,19,"Possible optimizer optimization; ### Explain what you would like to see improved. `-O1` for cling spends considerable time in stressGraphics:. test | opt | non-opt. -----|-----|--------. stressGraphics.cxx | 57.68 | 16.13. We need to. - verify that it's the optimizer taking so long. - find out which pass is causing it. - consider disabling that pass by default, or reproducing and discussing with upstream what we can do. See also https://github.com/root-project/root/pull/9301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:258,energy efficiency,optim,optimizer,258,"Possible optimizer optimization; ### Explain what you would like to see improved. `-O1` for cling spends considerable time in stressGraphics:. test | opt | non-opt. -----|-----|--------. stressGraphics.cxx | 57.68 | 16.13. We need to. - verify that it's the optimizer taking so long. - find out which pass is causing it. - consider disabling that pass by default, or reproducing and discussing with upstream what we can do. See also https://github.com/root-project/root/pull/9301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:9,performance,optimiz,optimizer,9,"Possible optimizer optimization; ### Explain what you would like to see improved. `-O1` for cling spends considerable time in stressGraphics:. test | opt | non-opt. -----|-----|--------. stressGraphics.cxx | 57.68 | 16.13. We need to. - verify that it's the optimizer taking so long. - find out which pass is causing it. - consider disabling that pass by default, or reproducing and discussing with upstream what we can do. See also https://github.com/root-project/root/pull/9301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:19,performance,optimiz,optimization,19,"Possible optimizer optimization; ### Explain what you would like to see improved. `-O1` for cling spends considerable time in stressGraphics:. test | opt | non-opt. -----|-----|--------. stressGraphics.cxx | 57.68 | 16.13. We need to. - verify that it's the optimizer taking so long. - find out which pass is causing it. - consider disabling that pass by default, or reproducing and discussing with upstream what we can do. See also https://github.com/root-project/root/pull/9301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:118,performance,time,time,118,"Possible optimizer optimization; ### Explain what you would like to see improved. `-O1` for cling spends considerable time in stressGraphics:. test | opt | non-opt. -----|-----|--------. stressGraphics.cxx | 57.68 | 16.13. We need to. - verify that it's the optimizer taking so long. - find out which pass is causing it. - consider disabling that pass by default, or reproducing and discussing with upstream what we can do. See also https://github.com/root-project/root/pull/9301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:258,performance,optimiz,optimizer,258,"Possible optimizer optimization; ### Explain what you would like to see improved. `-O1` for cling spends considerable time in stressGraphics:. test | opt | non-opt. -----|-----|--------. stressGraphics.cxx | 57.68 | 16.13. We need to. - verify that it's the optimizer taking so long. - find out which pass is causing it. - consider disabling that pass by default, or reproducing and discussing with upstream what we can do. See also https://github.com/root-project/root/pull/9301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:143,safety,test,test,143,"Possible optimizer optimization; ### Explain what you would like to see improved. `-O1` for cling spends considerable time in stressGraphics:. test | opt | non-opt. -----|-----|--------. stressGraphics.cxx | 57.68 | 16.13. We need to. - verify that it's the optimizer taking so long. - find out which pass is causing it. - consider disabling that pass by default, or reproducing and discussing with upstream what we can do. See also https://github.com/root-project/root/pull/9301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:143,testability,test,test,143,"Possible optimizer optimization; ### Explain what you would like to see improved. `-O1` for cling spends considerable time in stressGraphics:. test | opt | non-opt. -----|-----|--------. stressGraphics.cxx | 57.68 | 16.13. We need to. - verify that it's the optimizer taking so long. - find out which pass is causing it. - consider disabling that pass by default, or reproducing and discussing with upstream what we can do. See also https://github.com/root-project/root/pull/9301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:237,testability,verif,verify,237,"Possible optimizer optimization; ### Explain what you would like to see improved. `-O1` for cling spends considerable time in stressGraphics:. test | opt | non-opt. -----|-----|--------. stressGraphics.cxx | 57.68 | 16.13. We need to. - verify that it's the optimizer taking so long. - find out which pass is causing it. - consider disabling that pass by default, or reproducing and discussing with upstream what we can do. See also https://github.com/root-project/root/pull/9301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/pull/9313:993,deployability,updat,updated,993,Added description field to RNTupleDescriptor::PrintInfo output; # This Pull request:. Added description field to the output of `RNTupleDescriptor::PrintInfo` by passing `ENTupleInfo::kStorageDetails`. . Here is an example output in which `Vx` is description is set to `velocity in x direction`. `Vy` description is not set. The result is as follows:. ```. ............................................................ Vx[#0] -- Int32 {id:0}. Description: velocity in x direction . # Elements: 3354. # Pages: 1. Avg elements / page: 3354. Avg page size: 5773 B. Size on storage: 5773 B. Compression: 2.32. ............................................................ Vy [#0] -- Int32 {id:1}. # Elements: 3354. # Pages: 1. Avg elements / page: 3354. Avg page size: 3132 B. Size on storage: 3132 B. Compression: 4.28. ............................................................ ```. ## Changes or fixes:. Changes `RNTupleDescriptor::PrintInfo`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR closes #8377,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:963,safety,test,tested,963,Added description field to RNTupleDescriptor::PrintInfo output; # This Pull request:. Added description field to the output of `RNTupleDescriptor::PrintInfo` by passing `ENTupleInfo::kStorageDetails`. . Here is an example output in which `Vx` is description is set to `velocity in x direction`. `Vy` description is not set. The result is as follows:. ```. ............................................................ Vx[#0] -- Int32 {id:0}. Description: velocity in x direction . # Elements: 3354. # Pages: 1. Avg elements / page: 3354. Avg page size: 5773 B. Size on storage: 5773 B. Compression: 2.32. ............................................................ Vy [#0] -- Int32 {id:1}. # Elements: 3354. # Pages: 1. Avg elements / page: 3354. Avg page size: 3132 B. Size on storage: 3132 B. Compression: 4.28. ............................................................ ```. ## Changes or fixes:. Changes `RNTupleDescriptor::PrintInfo`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR closes #8377,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:993,safety,updat,updated,993,Added description field to RNTupleDescriptor::PrintInfo output; # This Pull request:. Added description field to the output of `RNTupleDescriptor::PrintInfo` by passing `ENTupleInfo::kStorageDetails`. . Here is an example output in which `Vx` is description is set to `velocity in x direction`. `Vy` description is not set. The result is as follows:. ```. ............................................................ Vx[#0] -- Int32 {id:0}. Description: velocity in x direction . # Elements: 3354. # Pages: 1. Avg elements / page: 3354. Avg page size: 5773 B. Size on storage: 5773 B. Compression: 2.32. ............................................................ Vy [#0] -- Int32 {id:1}. # Elements: 3354. # Pages: 1. Avg elements / page: 3354. Avg page size: 3132 B. Size on storage: 3132 B. Compression: 4.28. ............................................................ ```. ## Changes or fixes:. Changes `RNTupleDescriptor::PrintInfo`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR closes #8377,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:993,security,updat,updated,993,Added description field to RNTupleDescriptor::PrintInfo output; # This Pull request:. Added description field to the output of `RNTupleDescriptor::PrintInfo` by passing `ENTupleInfo::kStorageDetails`. . Here is an example output in which `Vx` is description is set to `velocity in x direction`. `Vy` description is not set. The result is as follows:. ```. ............................................................ Vx[#0] -- Int32 {id:0}. Description: velocity in x direction . # Elements: 3354. # Pages: 1. Avg elements / page: 3354. Avg page size: 5773 B. Size on storage: 5773 B. Compression: 2.32. ............................................................ Vy [#0] -- Int32 {id:1}. # Elements: 3354. # Pages: 1. Avg elements / page: 3354. Avg page size: 3132 B. Size on storage: 3132 B. Compression: 4.28. ............................................................ ```. ## Changes or fixes:. Changes `RNTupleDescriptor::PrintInfo`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR closes #8377,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:963,testability,test,tested,963,Added description field to RNTupleDescriptor::PrintInfo output; # This Pull request:. Added description field to the output of `RNTupleDescriptor::PrintInfo` by passing `ENTupleInfo::kStorageDetails`. . Here is an example output in which `Vx` is description is set to `velocity in x direction`. `Vy` description is not set. The result is as follows:. ```. ............................................................ Vx[#0] -- Int32 {id:0}. Description: velocity in x direction . # Elements: 3354. # Pages: 1. Avg elements / page: 3354. Avg page size: 5773 B. Size on storage: 5773 B. Compression: 2.32. ............................................................ Vy [#0] -- Int32 {id:1}. # Elements: 3354. # Pages: 1. Avg elements / page: 3354. Avg page size: 3132 B. Size on storage: 3132 B. Compression: 4.28. ............................................................ ```. ## Changes or fixes:. Changes `RNTupleDescriptor::PrintInfo`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR closes #8377,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:1034,usability,close,closes,1034,Added description field to RNTupleDescriptor::PrintInfo output; # This Pull request:. Added description field to the output of `RNTupleDescriptor::PrintInfo` by passing `ENTupleInfo::kStorageDetails`. . Here is an example output in which `Vx` is description is set to `velocity in x direction`. `Vy` description is not set. The result is as follows:. ```. ............................................................ Vx[#0] -- Int32 {id:0}. Description: velocity in x direction . # Elements: 3354. # Pages: 1. Avg elements / page: 3354. Avg page size: 5773 B. Size on storage: 5773 B. Compression: 2.32. ............................................................ Vy [#0] -- Int32 {id:1}. # Elements: 3354. # Pages: 1. Avg elements / page: 3354. Avg page size: 3132 B. Size on storage: 3132 B. Compression: 4.28. ............................................................ ```. ## Changes or fixes:. Changes `RNTupleDescriptor::PrintInfo`. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR closes #8377,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9314:154,deployability,updat,updated,154,macOS: handle the case of GUI without interactive session; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9314
https://github.com/root-project/root/pull/9314:124,safety,test,tested,124,macOS: handle the case of GUI without interactive session; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9314
https://github.com/root-project/root/pull/9314:154,safety,updat,updated,154,macOS: handle the case of GUI without interactive session; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9314
https://github.com/root-project/root/pull/9314:50,security,session,session,50,macOS: handle the case of GUI without interactive session; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9314
https://github.com/root-project/root/pull/9314:154,security,updat,updated,154,macOS: handle the case of GUI without interactive session; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9314
https://github.com/root-project/root/pull/9314:124,testability,test,tested,124,macOS: handle the case of GUI without interactive session; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9314
https://github.com/root-project/root/pull/9314:38,usability,interact,interactive,38,macOS: handle the case of GUI without interactive session; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9314
https://github.com/root-project/root/issues/9315:9,performance,Memor,Memory,9,"[PyROOT] Memory leak when iterating over std::map from Python; Reproducer taken from the forum (https://root-forum.cern.ch/t/memory-leak-using-root-std-map-int-t-float-t/47737):. ```python. import ROOT. allChannels = ROOT.std.map(’<Int_t,Float_t>’)(). allChannels[3]=5. N=0. for n in range(10000000):. for c in allChannels:. N+=1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9315
https://github.com/root-project/root/issues/9315:125,performance,memor,memory-leak-using-root-std-map-int-t-float-t,125,"[PyROOT] Memory leak when iterating over std::map from Python; Reproducer taken from the forum (https://root-forum.cern.ch/t/memory-leak-using-root-std-map-int-t-float-t/47737):. ```python. import ROOT. allChannels = ROOT.std.map(’<Int_t,Float_t>’)(). allChannels[3]=5. N=0. for n in range(10000000):. for c in allChannels:. N+=1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9315
https://github.com/root-project/root/issues/9315:9,usability,Memor,Memory,9,"[PyROOT] Memory leak when iterating over std::map from Python; Reproducer taken from the forum (https://root-forum.cern.ch/t/memory-leak-using-root-std-map-int-t-float-t/47737):. ```python. import ROOT. allChannels = ROOT.std.map(’<Int_t,Float_t>’)(). allChannels[3]=5. N=0. for n in range(10000000):. for c in allChannels:. N+=1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9315
https://github.com/root-project/root/issues/9315:125,usability,memor,memory-leak-using-root-std-map-int-t-float-t,125,"[PyROOT] Memory leak when iterating over std::map from Python; Reproducer taken from the forum (https://root-forum.cern.ch/t/memory-leak-using-root-std-map-int-t-float-t/47737):. ```python. import ROOT. allChannels = ROOT.std.map(’<Int_t,Float_t>’)(). allChannels[3]=5. N=0. for n in range(10000000):. for c in allChannels:. N+=1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9315
https://github.com/root-project/root/issues/9316:240,availability,Error,Error,240,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:445,availability,error,error,445,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:240,performance,Error,Error,240,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:445,performance,error,error,445,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:50,reliability,doe,does,50,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:159,reliability,doe,doesnotexist,159,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:275,reliability,doe,doesnotexist,275,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:293,reliability,doe,does,293,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:39,safety,input,input,39,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:240,safety,Error,Error,240,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:422,safety,except,exception,422,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:445,safety,error,error,445,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:389,security,access,accesses,389,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:39,usability,input,input,39,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:240,usability,Error,Error,240,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/issues/9316:445,usability,error,error,445,"[TMVA] Experimental::RBDT segfaults if input file does not exist; Running. ```cpp. // repro.C. void repro() {. TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");. }. ```. as. ```. root -l -b -q repro.C. ```. yields:. ```. Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation. ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9316
https://github.com/root-project/root/pull/9317:35,deployability,API,API,35,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:89,deployability,API,API,89,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:806,deployability,patch,patch,806,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:141,energy efficiency,model,models,141,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:180,energy efficiency,model,model,180,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:257,energy efficiency,model,model,257,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:390,energy efficiency,model,model,390,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:461,energy efficiency,model,model,461,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:486,energy efficiency,model,models,486,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:560,energy efficiency,model,models,560,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:596,energy efficiency,model,model,596,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:35,integrability,API,API,35,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:89,integrability,API,API,89,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:35,interoperability,API,API,35,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:89,interoperability,API,API,89,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:310,performance,disk,disk,310,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:248,safety,prevent,prevents,248,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:806,safety,patch,patch,806,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:141,security,model,models,141,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:180,security,model,model,180,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:248,security,preven,prevents,248,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:257,security,model,model,257,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:390,security,model,model,390,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:461,security,model,model,461,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:486,security,model,models,486,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:560,security,model,models,560,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:596,security,model,model,596,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:806,security,patch,patch,806,"[ntuple] Improvements to the write API; Provides the following improvements to the write API:. - Introduce the concept of freezing to ntuple models: Once all fields are added to a model, it must be frozen before it can be used with data sets. That prevents model from being changed after they are linked to on-disk data. - Links `REntry` instances to `RNTupleModel` instances through a new model ID, so that one cannot fill an ntuple with an entry of the wrong model. - Introduce ""bare models"" and ""bare entries"": for use within frameworks, allows creation of models without a default entry. The model can then create bare entries, and those bare entries can use `CaptureValueUnsafe` to link the fields to `void *` addresses. See ntpl003 tutorial for an example how to use it. Fixes #9069. Almost finished patch set from last week.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9318:20,modifiability,variab,variable,20,[DF] Silence unused variable warning in RSlotStack; Thanks Olivier!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9318
https://github.com/root-project/root/issues/9319:15,availability,cluster,clusters,15,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:37,availability,error,error,37,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:62,availability,cluster,clusters,62,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:123,availability,cluster,clusters,123,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:433,availability,Cluster,Cluster,433,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:487,availability,cluster,clusters,487,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:530,availability,cluster,clusters,530,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:597,availability,cluster,cluster,597,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:15,deployability,cluster,clusters,15,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:62,deployability,cluster,clusters,62,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:123,deployability,cluster,clusters,123,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:433,deployability,Cluster,Cluster,433,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:487,deployability,cluster,clusters,487,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:530,deployability,cluster,clusters,530,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:597,deployability,cluster,cluster,597,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:106,integrability,event,events,106,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:222,integrability,event,events,222,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:231,integrability,Event,Events,231,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:643,integrability,event,events,643,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:706,interoperability,share,share,706,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:37,performance,error,error,37,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:37,safety,error,error,37,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/issues/9319:37,usability,error,error,37,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters; ```. root [1] _file0->Get<TTree>(""events"")->Print(""clusters""). ******************************************************************************. *Tree :events : Events tree *. *Entries : 10000 : Total = 281851453 bytes File Size = 50814078 *. * : : Tree compression factor = 5.55 *. ******************************************************************************. Cluster Range # Entry Start Last Entry Size Number of clusters. 0 0 9999 5966 1. Total number of clusters: 1. ```. The file has 10k entries, TTree reports only one cluster of 5966 entries (`_file0->Get<TTree>(""events"")->GetAutoFlush()` prints `5966`. Unfortunately I can't share the file but this should be easy to reproduce.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9319
https://github.com/root-project/root/pull/9320:75,availability,error,errors,75,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:105,availability,Error,Error,105,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:160,deployability,build,build,160,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:166,deployability,releas,release,166,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:189,deployability,Releas,Release,189,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:422,deployability,build,build,422,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:428,deployability,releas,release,428,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:760,deployability,build,build,760,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:766,deployability,releas,release,766,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:123,energy efficiency,Load,LoadPCM,123,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:75,performance,error,errors,75,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:105,performance,Error,Error,105,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:123,performance,Load,LoadPCM,123,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:233,reliability,doe,does,233,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:18,safety,test,test,18,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:23,safety,test,testTOffsetGeneration,23,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:75,safety,error,errors,75,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:105,safety,Error,Error,105,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:184,safety,test,test,184,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:446,safety,test,test,446,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:487,safety,Permiss,Permission,487,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:784,safety,test,test,784,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:825,safety,Permiss,Permission,825,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:1004,safety,test,tests,1004,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:18,testability,test,test,18,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:23,testability,test,testTOffsetGeneration,23,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:184,testability,test,test,184,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:446,testability,test,test,446,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:784,testability,test,test,784,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:1004,testability,test,tests,1004,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:75,usability,error,errors,75,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:105,usability,Error,Error,105,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:145,usability,User,Users,145,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:407,usability,User,Users,407,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/pull/9320:745,usability,User,Users,745,Fix the tree/tree/test/testTOffsetGeneration on Windows; Fix the following errors on Windows:. ```. 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist. 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms). 362: [ RUN ] TOffsetGeneration.primitiveTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms). 362: [ RUN ] TOffsetGeneration.elementsTest. 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied. 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode. 362: [ OK ] TOffsetGeneration.elementsTest (136 ms). 362: [----------] 3 tests from TOffsetGeneration (3293 ms total). ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9320
https://github.com/root-project/root/issues/9321:770,availability,State,State,770,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:790,availability,State,State,790,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:1259,availability,state,state,1259,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:1077,deployability,build,build,1077,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:1105,deployability,modul,module,1105,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:1292,energy efficiency,Current,Current,1292,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:770,integrability,State,State,770,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:790,integrability,State,State,790,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:1259,integrability,state,state,1259,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:943,interoperability,Prox,Proxies,943,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:1105,modifiability,modul,module,1105,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:1083,safety,test,test,1083,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:1105,safety,modul,module,1105,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:1007,testability,Trace,Traceback,1007,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:1083,testability,test,test,1083,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/issues/9321:460,usability,behavi,behavior,460,"[RF] Segfault in RooProduct::Print(""v""); <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Verbose printout of RooProduct results in a segfault. ### Expected behavior. A printout occurs. ### To Reproduce. This script. ```. import ROOT. w = ROOT.RooWorkspace(). w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). p = w.factory(""RooProduct::p2({x,y})""). p.Print(""v""). ```. . results in a segfault:. ```. --- RooAbsArg ---. Value State: DIRTY. Shape State: DIRTY. Attributes: . Address: 0x558349efb310. Clients: . Servers: . (0x5583491baa20,V-) RooRealVar::x ""x"". (0x558349eb7d90,V-) RooRealVar::y ""y"". Proxies: . !compRSet -> . *** Break *** segmentation violation. Traceback (most recent call last):. File ""/home/cburgard/Physics/root/build/test.py"", line 7, in <module>. p.Print(""v""). cppyy.ll.SegmentationViolation: void RooAbsArg::Print(const char* options = 0) =>. SegmentationViolation: segfault in C++; program state was reset. ```. ### Setup. Current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9321
https://github.com/root-project/root/pull/9322:192,interoperability,convers,conversion,192,"[RF] Added `const` getter for `RooStats::HistFactory::Channel::fData`; Add `const` getter for `RooStats::HistFactory::Channel::fData`, which is a requirement for the RooWorkspace to JSON/YAML conversion PR https://github.com/root-project/root/pull/8944..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9322
https://github.com/root-project/root/pull/9323:204,availability,error,error,204,"[skip-ci] Windows: handle no interactive display mode (ssh); - Switch to batch mode when ssh to a Windows machine, like other platforms. - Protect against potential null GC values leading to the followin error:. ```. Gdk-CRITICAL **: file gdkgc.c: line 146: assertion `gc != NULL' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9323
https://github.com/root-project/root/pull/9323:281,deployability,fail,failed,281,"[skip-ci] Windows: handle no interactive display mode (ssh); - Switch to batch mode when ssh to a Windows machine, like other platforms. - Protect against potential null GC values leading to the followin error:. ```. Gdk-CRITICAL **: file gdkgc.c: line 146: assertion `gc != NULL' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9323
https://github.com/root-project/root/pull/9323:73,integrability,batch,batch,73,"[skip-ci] Windows: handle no interactive display mode (ssh); - Switch to batch mode when ssh to a Windows machine, like other platforms. - Protect against potential null GC values leading to the followin error:. ```. Gdk-CRITICAL **: file gdkgc.c: line 146: assertion `gc != NULL' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9323
https://github.com/root-project/root/pull/9323:126,interoperability,platform,platforms,126,"[skip-ci] Windows: handle no interactive display mode (ssh); - Switch to batch mode when ssh to a Windows machine, like other platforms. - Protect against potential null GC values leading to the followin error:. ```. Gdk-CRITICAL **: file gdkgc.c: line 146: assertion `gc != NULL' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9323
https://github.com/root-project/root/pull/9323:73,performance,batch,batch,73,"[skip-ci] Windows: handle no interactive display mode (ssh); - Switch to batch mode when ssh to a Windows machine, like other platforms. - Protect against potential null GC values leading to the followin error:. ```. Gdk-CRITICAL **: file gdkgc.c: line 146: assertion `gc != NULL' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9323
https://github.com/root-project/root/pull/9323:204,performance,error,error,204,"[skip-ci] Windows: handle no interactive display mode (ssh); - Switch to batch mode when ssh to a Windows machine, like other platforms. - Protect against potential null GC values leading to the followin error:. ```. Gdk-CRITICAL **: file gdkgc.c: line 146: assertion `gc != NULL' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9323
https://github.com/root-project/root/pull/9323:281,reliability,fail,failed,281,"[skip-ci] Windows: handle no interactive display mode (ssh); - Switch to batch mode when ssh to a Windows machine, like other platforms. - Protect against potential null GC values leading to the followin error:. ```. Gdk-CRITICAL **: file gdkgc.c: line 146: assertion `gc != NULL' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9323
https://github.com/root-project/root/pull/9323:204,safety,error,error,204,"[skip-ci] Windows: handle no interactive display mode (ssh); - Switch to batch mode when ssh to a Windows machine, like other platforms. - Protect against potential null GC values leading to the followin error:. ```. Gdk-CRITICAL **: file gdkgc.c: line 146: assertion `gc != NULL' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9323
https://github.com/root-project/root/pull/9323:55,security,ssh,ssh,55,"[skip-ci] Windows: handle no interactive display mode (ssh); - Switch to batch mode when ssh to a Windows machine, like other platforms. - Protect against potential null GC values leading to the followin error:. ```. Gdk-CRITICAL **: file gdkgc.c: line 146: assertion `gc != NULL' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9323
https://github.com/root-project/root/pull/9323:89,security,ssh,ssh,89,"[skip-ci] Windows: handle no interactive display mode (ssh); - Switch to batch mode when ssh to a Windows machine, like other platforms. - Protect against potential null GC values leading to the followin error:. ```. Gdk-CRITICAL **: file gdkgc.c: line 146: assertion `gc != NULL' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9323
https://github.com/root-project/root/pull/9323:258,testability,assert,assertion,258,"[skip-ci] Windows: handle no interactive display mode (ssh); - Switch to batch mode when ssh to a Windows machine, like other platforms. - Protect against potential null GC values leading to the followin error:. ```. Gdk-CRITICAL **: file gdkgc.c: line 146: assertion `gc != NULL' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9323
https://github.com/root-project/root/pull/9323:29,usability,interact,interactive,29,"[skip-ci] Windows: handle no interactive display mode (ssh); - Switch to batch mode when ssh to a Windows machine, like other platforms. - Protect against potential null GC values leading to the followin error:. ```. Gdk-CRITICAL **: file gdkgc.c: line 146: assertion `gc != NULL' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9323
https://github.com/root-project/root/pull/9323:204,usability,error,error,204,"[skip-ci] Windows: handle no interactive display mode (ssh); - Switch to batch mode when ssh to a Windows machine, like other platforms. - Protect against potential null GC values leading to the followin error:. ```. Gdk-CRITICAL **: file gdkgc.c: line 146: assertion `gc != NULL' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9323
https://github.com/root-project/root/pull/9324:18,integrability,Batch,BatchMode,18,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:81,integrability,Batch,BatchMode,81,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:183,integrability,batch,batch,183,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:258,integrability,batch,batch,258,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:349,integrability,Batch,BatchMode,349,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:430,integrability,batch,batch,430,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:595,integrability,Batch,BatchMode,595,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:801,integrability,batch,batch,801,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:503,modifiability,paramet,parameter,503,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:18,performance,Batch,BatchMode,18,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:81,performance,Batch,BatchMode,81,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:183,performance,batch,batch,183,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:258,performance,batch,batch,258,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:349,performance,Batch,BatchMode,349,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:430,performance,batch,batch,430,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:595,performance,Batch,BatchMode,595,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:801,performance,batch,batch,801,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:552,safety,test,tests,552,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:740,safety,review,review,740,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:552,testability,test,tests,552,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:740,testability,review,review,740,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:92,usability,command,command,92,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:297,usability,support,support,297,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/pull/9324:407,usability,indicat,indicate,407,"[RF] Add `RooFit::BatchMode(std::string const&)` overload; The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`. only takes a `bool` argument to either switch the batch mode on or off. In the future, we will have more options such as the batch mode with. CUDA computations. To support these new upcoming options, a new. `RooFit::BatchMode(std::string const&)` overload is introduced to. indicate the requested batch mode in a human- and. pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests. such that one can pass any possible BatchMode argument also after the. CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9324
https://github.com/root-project/root/issues/9325:340,energy efficiency,Draw,Draw,340,"x-axis limits of TGraph do not change after SetLimits; I would like to set a custom x axis limits of my plot. Consider the following script:. ```python. import ROOT. import numpy as np. arr = np.asarray([1,2], dtype=float). c = ROOT.TCanvas(""c"", """", 800, 800). g = ROOT.TGraph(2, arr, arr). g.GetXaxis().SetLimits(-1, 3) # expect change. g.Draw(). c.Draw(). c.SaveAs(""x_axis_did_not_change.png""). ```. Here, `g.GetXaxis().SetLimits(-1, 3)` takes no effect.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9325
https://github.com/root-project/root/issues/9325:350,energy efficiency,Draw,Draw,350,"x-axis limits of TGraph do not change after SetLimits; I would like to set a custom x axis limits of my plot. Consider the following script:. ```python. import ROOT. import numpy as np. arr = np.asarray([1,2], dtype=float). c = ROOT.TCanvas(""c"", """", 800, 800). g = ROOT.TGraph(2, arr, arr). g.GetXaxis().SetLimits(-1, 3) # expect change. g.Draw(). c.Draw(). c.SaveAs(""x_axis_did_not_change.png""). ```. Here, `g.GetXaxis().SetLimits(-1, 3)` takes no effect.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9325
https://github.com/root-project/root/issues/9325:77,usability,custom,custom,77,"x-axis limits of TGraph do not change after SetLimits; I would like to set a custom x axis limits of my plot. Consider the following script:. ```python. import ROOT. import numpy as np. arr = np.asarray([1,2], dtype=float). c = ROOT.TCanvas(""c"", """", 800, 800). g = ROOT.TGraph(2, arr, arr). g.GetXaxis().SetLimits(-1, 3) # expect change. g.Draw(). c.Draw(). c.SaveAs(""x_axis_did_not_change.png""). ```. Here, `g.GetXaxis().SetLimits(-1, 3)` takes no effect.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9325
https://github.com/root-project/root/pull/9326:92,deployability,patch,patches,92,Backport Fix OpenMP shadowing declaration of MnPrint print thread-local variable to 6-24-00-patches; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. Backport #9327 to 6-24-00-patches. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9326
https://github.com/root-project/root/pull/9326:283,deployability,patch,patches,283,Backport Fix OpenMP shadowing declaration of MnPrint print thread-local variable to 6-24-00-patches; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. Backport #9327 to 6-24-00-patches. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9326
https://github.com/root-project/root/pull/9326:343,deployability,updat,updated,343,Backport Fix OpenMP shadowing declaration of MnPrint print thread-local variable to 6-24-00-patches; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. Backport #9327 to 6-24-00-patches. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9326
https://github.com/root-project/root/pull/9326:72,modifiability,variab,variable,72,Backport Fix OpenMP shadowing declaration of MnPrint print thread-local variable to 6-24-00-patches; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. Backport #9327 to 6-24-00-patches. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9326
https://github.com/root-project/root/pull/9326:92,safety,patch,patches,92,Backport Fix OpenMP shadowing declaration of MnPrint print thread-local variable to 6-24-00-patches; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. Backport #9327 to 6-24-00-patches. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9326
https://github.com/root-project/root/pull/9326:283,safety,patch,patches,283,Backport Fix OpenMP shadowing declaration of MnPrint print thread-local variable to 6-24-00-patches; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. Backport #9327 to 6-24-00-patches. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9326
https://github.com/root-project/root/pull/9326:313,safety,test,tested,313,Backport Fix OpenMP shadowing declaration of MnPrint print thread-local variable to 6-24-00-patches; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. Backport #9327 to 6-24-00-patches. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9326
https://github.com/root-project/root/pull/9326:343,safety,updat,updated,343,Backport Fix OpenMP shadowing declaration of MnPrint print thread-local variable to 6-24-00-patches; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. Backport #9327 to 6-24-00-patches. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9326
https://github.com/root-project/root/pull/9326:92,security,patch,patches,92,Backport Fix OpenMP shadowing declaration of MnPrint print thread-local variable to 6-24-00-patches; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. Backport #9327 to 6-24-00-patches. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9326
https://github.com/root-project/root/pull/9326:283,security,patch,patches,283,Backport Fix OpenMP shadowing declaration of MnPrint print thread-local variable to 6-24-00-patches; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. Backport #9327 to 6-24-00-patches. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9326
https://github.com/root-project/root/pull/9326:343,security,updat,updated,343,Backport Fix OpenMP shadowing declaration of MnPrint print thread-local variable to 6-24-00-patches; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. Backport #9327 to 6-24-00-patches. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9326
https://github.com/root-project/root/pull/9326:313,testability,test,tested,313,Backport Fix OpenMP shadowing declaration of MnPrint print thread-local variable to 6-24-00-patches; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. Backport #9327 to 6-24-00-patches. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9326
https://github.com/root-project/root/pull/9327:280,deployability,updat,updated,280,Fix OpenMP shadowing declaration of MnPrint print thread-local variable; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:63,modifiability,variab,variable,63,Fix OpenMP shadowing declaration of MnPrint print thread-local variable; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:250,safety,test,tested,250,Fix OpenMP shadowing declaration of MnPrint print thread-local variable; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:280,safety,updat,updated,280,Fix OpenMP shadowing declaration of MnPrint print thread-local variable; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:280,security,updat,updated,280,Fix OpenMP shadowing declaration of MnPrint print thread-local variable; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:250,testability,test,tested,250,Fix OpenMP shadowing declaration of MnPrint print thread-local variable; # This Pull request:. ## Changes or fixes:. OpenMP thread-local instance of `MnPrint print()` was shadowing a previous definition. Rename to respect scope. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9328:56,availability,slo,slow,56,"[DF] Avoid jitting a very large function body, which is slow; Instead, split the code RDataFrame jits every 1k newlines and jit. in chunks. This avoids an explosion in the time required by. optimizer passes, which seem to not deal well with very large. function bodies. See https://github.com/root-project/root/issues/9312 and. https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:458,availability,down,down,458,"[DF] Avoid jitting a very large function body, which is slow; Instead, split the code RDataFrame jits every 1k newlines and jit. in chunks. This avoids an explosion in the time required by. optimizer passes, which seem to not deal well with very large. function bodies. See https://github.com/root-project/root/issues/9312 and. https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:190,energy efficiency,optim,optimizer,190,"[DF] Avoid jitting a very large function body, which is slow; Instead, split the code RDataFrame jits every 1k newlines and jit. in chunks. This avoids an explosion in the time required by. optimizer passes, which seem to not deal well with very large. function bodies. See https://github.com/root-project/root/issues/9312 and. https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:172,performance,time,time,172,"[DF] Avoid jitting a very large function body, which is slow; Instead, split the code RDataFrame jits every 1k newlines and jit. in chunks. This avoids an explosion in the time required by. optimizer passes, which seem to not deal well with very large. function bodies. See https://github.com/root-project/root/issues/9312 and. https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:190,performance,optimiz,optimizer,190,"[DF] Avoid jitting a very large function body, which is slow; Instead, split the code RDataFrame jits every 1k newlines and jit. in chunks. This avoids an explosion in the time required by. optimizer passes, which seem to not deal well with very large. function bodies. See https://github.com/root-project/root/issues/9312 and. https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:452,performance,time,times,452,"[DF] Avoid jitting a very large function body, which is slow; Instead, split the code RDataFrame jits every 1k newlines and jit. in chunks. This avoids an explosion in the time required by. optimizer passes, which seem to not deal well with very large. function bodies. See https://github.com/root-project/root/issues/9312 and. https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:482,performance,time,times,482,"[DF] Avoid jitting a very large function body, which is slow; Instead, split the code RDataFrame jits every 1k newlines and jit. in chunks. This avoids an explosion in the time required by. optimizer passes, which seem to not deal well with very large. function bodies. See https://github.com/root-project/root/issues/9312 and. https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:56,reliability,slo,slow,56,"[DF] Avoid jitting a very large function body, which is slow; Instead, split the code RDataFrame jits every 1k newlines and jit. in chunks. This avoids an explosion in the time required by. optimizer passes, which seem to not deal well with very large. function bodies. See https://github.com/root-project/root/issues/9312 and. https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:5,safety,Avoid,Avoid,5,"[DF] Avoid jitting a very large function body, which is slow; Instead, split the code RDataFrame jits every 1k newlines and jit. in chunks. This avoids an explosion in the time required by. optimizer passes, which seem to not deal well with very large. function bodies. See https://github.com/root-project/root/issues/9312 and. https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:145,safety,avoid,avoids,145,"[DF] Avoid jitting a very large function body, which is slow; Instead, split the code RDataFrame jits every 1k newlines and jit. in chunks. This avoids an explosion in the time required by. optimizer passes, which seem to not deal well with very large. function bodies. See https://github.com/root-project/root/issues/9312 and. https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:505,safety,test,tested,505,"[DF] Avoid jitting a very large function body, which is slow; Instead, split the code RDataFrame jits every 1k newlines and jit. in chunks. This avoids an explosion in the time required by. optimizer passes, which seem to not deal well with very large. function bodies. See https://github.com/root-project/root/issues/9312 and. https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:505,testability,test,tested,505,"[DF] Avoid jitting a very large function body, which is slow; Instead, split the code RDataFrame jits every 1k newlines and jit. in chunks. This avoids an explosion in the time required by. optimizer passes, which seem to not deal well with very large. function bodies. See https://github.com/root-project/root/issues/9312 and. https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:414,usability,confirm,confirm,414,"[DF] Avoid jitting a very large function body, which is slow; Instead, split the code RDataFrame jits every 1k newlines and jit. in chunks. This avoids an explosion in the time required by. optimizer passes, which seem to not deal well with very large. function bodies. See https://github.com/root-project/root/issues/9312 and. https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:427,usability,help,helps,427,"[DF] Avoid jitting a very large function body, which is slow; Instead, split the code RDataFrame jits every 1k newlines and jit. in chunks. This avoids an explosion in the time required by. optimizer passes, which seem to not deal well with very large. function bodies. See https://github.com/root-project/root/issues/9312 and. https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9329:153,deployability,stack,stack,153,"[DF] Avoid heap allocation for column names; Instead of passing a dynamically allocated array, pass an initializer list that the compiler can put on the stack. By removing the calls to new, this also helps the exploding compile times discussed in #9312.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:16,energy efficiency,alloc,allocation,16,"[DF] Avoid heap allocation for column names; Instead of passing a dynamically allocated array, pass an initializer list that the compiler can put on the stack. By removing the calls to new, this also helps the exploding compile times discussed in #9312.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:78,energy efficiency,alloc,allocated,78,"[DF] Avoid heap allocation for column names; Instead of passing a dynamically allocated array, pass an initializer list that the compiler can put on the stack. By removing the calls to new, this also helps the exploding compile times discussed in #9312.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:228,performance,time,times,228,"[DF] Avoid heap allocation for column names; Instead of passing a dynamically allocated array, pass an initializer list that the compiler can put on the stack. By removing the calls to new, this also helps the exploding compile times discussed in #9312.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:5,safety,Avoid,Avoid,5,"[DF] Avoid heap allocation for column names; Instead of passing a dynamically allocated array, pass an initializer list that the compiler can put on the stack. By removing the calls to new, this also helps the exploding compile times discussed in #9312.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:200,usability,help,helps,200,"[DF] Avoid heap allocation for column names; Instead of passing a dynamically allocated array, pass an initializer list that the compiler can put on the stack. By removing the calls to new, this also helps the exploding compile times discussed in #9312.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/issues/9330:178,availability,error,error,178,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:211,availability,Error,Error,211,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:294,availability,Error,Error,294,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:29,deployability,fail,fails,29,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:439,deployability,contain,containing,439,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:184,integrability,messag,message,184,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:269,integrability,interfac,interface,269,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:362,integrability,wrap,wrapper,362,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:136,interoperability,specif,specifying,136,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:184,interoperability,messag,message,184,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:269,interoperability,interfac,interface,269,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:362,interoperability,wrapper,wrapper,362,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:269,modifiability,interfac,interface,269,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:178,performance,error,error,178,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:211,performance,Error,Error,211,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:294,performance,Error,Error,294,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:29,reliability,fail,fails,29,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:178,safety,error,error,178,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:211,safety,Error,Error,211,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:294,safety,Error,Error,294,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:690,testability,context,context,690,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:178,usability,error,error,178,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:211,usability,Error,Error,211,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:294,usability,Error,Error,294,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:401,usability,behavi,behavior,401,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:583,usability,confirm,confirm,583,"TBrowser's SetShowProjection fails under CentOS 8; - [ y] Checked for duplicates. ### The bug. In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection. Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid. Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented! ### Expected behavior. It should open a new window containing the projection. ### To Reproduce. Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup. Root 6.24/04. CentOS 8.5.2111 . Built from source. ### Additional context. It worked fine under Redhat 7. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9331:40,deployability,contain,contains,40,TBranch::GetEntriesSerialized count_buf contains offsets in big endian ordering?; It looks like TBranch::GetEntriesSerialized() for the case of VLAs fills the count_buf TBuffer with bigendian ordered ints. Is that expected?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/pull/9332:441,deployability,patch,patches,441,"[RF] Bring back `RooAbsMinimizerFcn::NDim()` for backwards compatibility; In the past, the `getNDim` function was called just `NDim`. The funciton. was renamed to match the code convention (lower case for funciton. names), but we have to keep an overload with the old name to not break. existing user code. Here you can see where the old `RooAbsMinimizerFcn::NDim()` function was defined:. https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/inc/RooMinimizerFcn.h#L43. (it was in `RooMinimizerFcn` before, but after @egpbos refactoring it can be in `RooAbsMinimizerFcn`). FYI @cburgard",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9332
https://github.com/root-project/root/pull/9332:59,interoperability,compatib,compatibility,59,"[RF] Bring back `RooAbsMinimizerFcn::NDim()` for backwards compatibility; In the past, the `getNDim` function was called just `NDim`. The funciton. was renamed to match the code convention (lower case for funciton. names), but we have to keep an overload with the old name to not break. existing user code. Here you can see where the old `RooAbsMinimizerFcn::NDim()` function was defined:. https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/inc/RooMinimizerFcn.h#L43. (it was in `RooMinimizerFcn` before, but after @egpbos refactoring it can be in `RooAbsMinimizerFcn`). FYI @cburgard",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9332
https://github.com/root-project/root/pull/9332:549,modifiability,refact,refactoring,549,"[RF] Bring back `RooAbsMinimizerFcn::NDim()` for backwards compatibility; In the past, the `getNDim` function was called just `NDim`. The funciton. was renamed to match the code convention (lower case for funciton. names), but we have to keep an overload with the old name to not break. existing user code. Here you can see where the old `RooAbsMinimizerFcn::NDim()` function was defined:. https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/inc/RooMinimizerFcn.h#L43. (it was in `RooMinimizerFcn` before, but after @egpbos refactoring it can be in `RooAbsMinimizerFcn`). FYI @cburgard",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9332
https://github.com/root-project/root/pull/9332:549,performance,refactor,refactoring,549,"[RF] Bring back `RooAbsMinimizerFcn::NDim()` for backwards compatibility; In the past, the `getNDim` function was called just `NDim`. The funciton. was renamed to match the code convention (lower case for funciton. names), but we have to keep an overload with the old name to not break. existing user code. Here you can see where the old `RooAbsMinimizerFcn::NDim()` function was defined:. https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/inc/RooMinimizerFcn.h#L43. (it was in `RooMinimizerFcn` before, but after @egpbos refactoring it can be in `RooAbsMinimizerFcn`). FYI @cburgard",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9332
https://github.com/root-project/root/pull/9332:441,safety,patch,patches,441,"[RF] Bring back `RooAbsMinimizerFcn::NDim()` for backwards compatibility; In the past, the `getNDim` function was called just `NDim`. The funciton. was renamed to match the code convention (lower case for funciton. names), but we have to keep an overload with the old name to not break. existing user code. Here you can see where the old `RooAbsMinimizerFcn::NDim()` function was defined:. https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/inc/RooMinimizerFcn.h#L43. (it was in `RooMinimizerFcn` before, but after @egpbos refactoring it can be in `RooAbsMinimizerFcn`). FYI @cburgard",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9332
https://github.com/root-project/root/pull/9332:441,security,patch,patches,441,"[RF] Bring back `RooAbsMinimizerFcn::NDim()` for backwards compatibility; In the past, the `getNDim` function was called just `NDim`. The funciton. was renamed to match the code convention (lower case for funciton. names), but we have to keep an overload with the old name to not break. existing user code. Here you can see where the old `RooAbsMinimizerFcn::NDim()` function was defined:. https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/inc/RooMinimizerFcn.h#L43. (it was in `RooMinimizerFcn` before, but after @egpbos refactoring it can be in `RooAbsMinimizerFcn`). FYI @cburgard",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9332
https://github.com/root-project/root/pull/9332:296,usability,user,user,296,"[RF] Bring back `RooAbsMinimizerFcn::NDim()` for backwards compatibility; In the past, the `getNDim` function was called just `NDim`. The funciton. was renamed to match the code convention (lower case for funciton. names), but we have to keep an overload with the old name to not break. existing user code. Here you can see where the old `RooAbsMinimizerFcn::NDim()` function was defined:. https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/inc/RooMinimizerFcn.h#L43. (it was in `RooMinimizerFcn` before, but after @egpbos refactoring it can be in `RooAbsMinimizerFcn`). FYI @cburgard",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9332
https://github.com/root-project/root/pull/9333:22,availability,operat,operators,22,"[TMVA][SOFIE] Add new operators: MaxPool,AveragePool, Add, Reshape (Flattten) and faster Conv; This Pull requests adds new Pooling operators: MAxPool, AveragePool, GlobalAveragePool, Add, and Flatten. In addition it provides a new faster implementation of ROPerator_COnv using a faster im2col inplementation. After this PR Sofie is able to parse Resnet like models such as resnet18 (see https://github.com/onnx/models/blob/master/vision/classification/resnet/model/resnet18-v1-7.onnx ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9333
https://github.com/root-project/root/pull/9333:131,availability,operat,operators,131,"[TMVA][SOFIE] Add new operators: MaxPool,AveragePool, Add, Reshape (Flattten) and faster Conv; This Pull requests adds new Pooling operators: MAxPool, AveragePool, GlobalAveragePool, Add, and Flatten. In addition it provides a new faster implementation of ROPerator_COnv using a faster im2col inplementation. After this PR Sofie is able to parse Resnet like models such as resnet18 (see https://github.com/onnx/models/blob/master/vision/classification/resnet/model/resnet18-v1-7.onnx ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9333
https://github.com/root-project/root/pull/9333:358,energy efficiency,model,models,358,"[TMVA][SOFIE] Add new operators: MaxPool,AveragePool, Add, Reshape (Flattten) and faster Conv; This Pull requests adds new Pooling operators: MAxPool, AveragePool, GlobalAveragePool, Add, and Flatten. In addition it provides a new faster implementation of ROPerator_COnv using a faster im2col inplementation. After this PR Sofie is able to parse Resnet like models such as resnet18 (see https://github.com/onnx/models/blob/master/vision/classification/resnet/model/resnet18-v1-7.onnx ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9333
https://github.com/root-project/root/pull/9333:411,energy efficiency,model,models,411,"[TMVA][SOFIE] Add new operators: MaxPool,AveragePool, Add, Reshape (Flattten) and faster Conv; This Pull requests adds new Pooling operators: MAxPool, AveragePool, GlobalAveragePool, Add, and Flatten. In addition it provides a new faster implementation of ROPerator_COnv using a faster im2col inplementation. After this PR Sofie is able to parse Resnet like models such as resnet18 (see https://github.com/onnx/models/blob/master/vision/classification/resnet/model/resnet18-v1-7.onnx ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9333
https://github.com/root-project/root/pull/9333:459,energy efficiency,model,model,459,"[TMVA][SOFIE] Add new operators: MaxPool,AveragePool, Add, Reshape (Flattten) and faster Conv; This Pull requests adds new Pooling operators: MAxPool, AveragePool, GlobalAveragePool, Add, and Flatten. In addition it provides a new faster implementation of ROPerator_COnv using a faster im2col inplementation. After this PR Sofie is able to parse Resnet like models such as resnet18 (see https://github.com/onnx/models/blob/master/vision/classification/resnet/model/resnet18-v1-7.onnx ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9333
https://github.com/root-project/root/pull/9333:358,security,model,models,358,"[TMVA][SOFIE] Add new operators: MaxPool,AveragePool, Add, Reshape (Flattten) and faster Conv; This Pull requests adds new Pooling operators: MAxPool, AveragePool, GlobalAveragePool, Add, and Flatten. In addition it provides a new faster implementation of ROPerator_COnv using a faster im2col inplementation. After this PR Sofie is able to parse Resnet like models such as resnet18 (see https://github.com/onnx/models/blob/master/vision/classification/resnet/model/resnet18-v1-7.onnx ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9333
https://github.com/root-project/root/pull/9333:411,security,model,models,411,"[TMVA][SOFIE] Add new operators: MaxPool,AveragePool, Add, Reshape (Flattten) and faster Conv; This Pull requests adds new Pooling operators: MAxPool, AveragePool, GlobalAveragePool, Add, and Flatten. In addition it provides a new faster implementation of ROPerator_COnv using a faster im2col inplementation. After this PR Sofie is able to parse Resnet like models such as resnet18 (see https://github.com/onnx/models/blob/master/vision/classification/resnet/model/resnet18-v1-7.onnx ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9333
https://github.com/root-project/root/pull/9333:459,security,model,model,459,"[TMVA][SOFIE] Add new operators: MaxPool,AveragePool, Add, Reshape (Flattten) and faster Conv; This Pull requests adds new Pooling operators: MAxPool, AveragePool, GlobalAveragePool, Add, and Flatten. In addition it provides a new faster implementation of ROPerator_COnv using a faster im2col inplementation. After this PR Sofie is able to parse Resnet like models such as resnet18 (see https://github.com/onnx/models/blob/master/vision/classification/resnet/model/resnet18-v1-7.onnx ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9333
https://github.com/root-project/root/issues/9334:180,energy efficiency,core,core,180,Lack of size validation in ZSTD compression; - [x] Checked for duplicates. ### Describe the bug. The size validation is missing in https://github.com/root-project/root/blob/master/core/zstd/src/ZipZSTD.cxx line 47. This leads to invalid stream in case of sizes between 0x1000000 and 0xffffffff as only the 3 last bytes of the length are put in the encoded data. ### Expected behavior. The size should be checked as done in https://github.com/root-project/root/blob/master/core/lzma/src/ZipLZMA.c line 40 to 42. ### To Reproduce. Just try to deflate something of size > 0xffffff. ### Setup. ### Additional context.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9334
https://github.com/root-project/root/issues/9334:472,energy efficiency,core,core,472,Lack of size validation in ZSTD compression; - [x] Checked for duplicates. ### Describe the bug. The size validation is missing in https://github.com/root-project/root/blob/master/core/zstd/src/ZipZSTD.cxx line 47. This leads to invalid stream in case of sizes between 0x1000000 and 0xffffffff as only the 3 last bytes of the length are put in the encoded data. ### Expected behavior. The size should be checked as done in https://github.com/root-project/root/blob/master/core/lzma/src/ZipLZMA.c line 40 to 42. ### To Reproduce. Just try to deflate something of size > 0xffffff. ### Setup. ### Additional context.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9334
https://github.com/root-project/root/issues/9334:13,safety,valid,validation,13,Lack of size validation in ZSTD compression; - [x] Checked for duplicates. ### Describe the bug. The size validation is missing in https://github.com/root-project/root/blob/master/core/zstd/src/ZipZSTD.cxx line 47. This leads to invalid stream in case of sizes between 0x1000000 and 0xffffffff as only the 3 last bytes of the length are put in the encoded data. ### Expected behavior. The size should be checked as done in https://github.com/root-project/root/blob/master/core/lzma/src/ZipLZMA.c line 40 to 42. ### To Reproduce. Just try to deflate something of size > 0xffffff. ### Setup. ### Additional context.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9334
https://github.com/root-project/root/issues/9334:106,safety,valid,validation,106,Lack of size validation in ZSTD compression; - [x] Checked for duplicates. ### Describe the bug. The size validation is missing in https://github.com/root-project/root/blob/master/core/zstd/src/ZipZSTD.cxx line 47. This leads to invalid stream in case of sizes between 0x1000000 and 0xffffffff as only the 3 last bytes of the length are put in the encoded data. ### Expected behavior. The size should be checked as done in https://github.com/root-project/root/blob/master/core/lzma/src/ZipLZMA.c line 40 to 42. ### To Reproduce. Just try to deflate something of size > 0xffffff. ### Setup. ### Additional context.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9334
https://github.com/root-project/root/issues/9334:13,security,validat,validation,13,Lack of size validation in ZSTD compression; - [x] Checked for duplicates. ### Describe the bug. The size validation is missing in https://github.com/root-project/root/blob/master/core/zstd/src/ZipZSTD.cxx line 47. This leads to invalid stream in case of sizes between 0x1000000 and 0xffffffff as only the 3 last bytes of the length are put in the encoded data. ### Expected behavior. The size should be checked as done in https://github.com/root-project/root/blob/master/core/lzma/src/ZipLZMA.c line 40 to 42. ### To Reproduce. Just try to deflate something of size > 0xffffff. ### Setup. ### Additional context.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9334
https://github.com/root-project/root/issues/9334:106,security,validat,validation,106,Lack of size validation in ZSTD compression; - [x] Checked for duplicates. ### Describe the bug. The size validation is missing in https://github.com/root-project/root/blob/master/core/zstd/src/ZipZSTD.cxx line 47. This leads to invalid stream in case of sizes between 0x1000000 and 0xffffffff as only the 3 last bytes of the length are put in the encoded data. ### Expected behavior. The size should be checked as done in https://github.com/root-project/root/blob/master/core/lzma/src/ZipLZMA.c line 40 to 42. ### To Reproduce. Just try to deflate something of size > 0xffffff. ### Setup. ### Additional context.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9334
https://github.com/root-project/root/issues/9334:605,testability,context,context,605,Lack of size validation in ZSTD compression; - [x] Checked for duplicates. ### Describe the bug. The size validation is missing in https://github.com/root-project/root/blob/master/core/zstd/src/ZipZSTD.cxx line 47. This leads to invalid stream in case of sizes between 0x1000000 and 0xffffffff as only the 3 last bytes of the length are put in the encoded data. ### Expected behavior. The size should be checked as done in https://github.com/root-project/root/blob/master/core/lzma/src/ZipLZMA.c line 40 to 42. ### To Reproduce. Just try to deflate something of size > 0xffffff. ### Setup. ### Additional context.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9334
https://github.com/root-project/root/issues/9334:375,usability,behavi,behavior,375,Lack of size validation in ZSTD compression; - [x] Checked for duplicates. ### Describe the bug. The size validation is missing in https://github.com/root-project/root/blob/master/core/zstd/src/ZipZSTD.cxx line 47. This leads to invalid stream in case of sizes between 0x1000000 and 0xffffffff as only the 3 last bytes of the length are put in the encoded data. ### Expected behavior. The size should be checked as done in https://github.com/root-project/root/blob/master/core/lzma/src/ZipLZMA.c line 40 to 42. ### To Reproduce. Just try to deflate something of size > 0xffffff. ### Setup. ### Additional context.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9334
https://github.com/root-project/root/issues/9335:175,availability,error,error,175,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:333,availability,error,error,333,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:370,availability,error,errors,370,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:454,availability,error,error,454,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:546,availability,error,error,546,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:951,availability,error,errors,951,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:1035,availability,error,errors,1035,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:90,deployability,UPDAT,UPDATE,90,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:53,integrability,interfac,interface,53,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:864,integrability,interfac,interface,864,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:53,interoperability,interfac,interface,53,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:864,interoperability,interfac,interface,864,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:53,modifiability,interfac,interface,53,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:864,modifiability,interfac,interface,864,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:175,performance,error,error,175,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:333,performance,error,error,333,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:370,performance,error,errors,370,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:454,performance,error,error,454,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:546,performance,error,error,546,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:951,performance,error,errors,951,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:1035,performance,error,errors,1035,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:271,reliability,doe,does,271,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:90,safety,UPDAT,UPDATE,90,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:175,safety,error,error,175,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:333,safety,error,error,333,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:370,safety,error,errors,370,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:454,safety,error,error,454,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:546,safety,error,error,546,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:945,safety,input,input,945,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:951,safety,error,errors,951,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:1035,safety,error,errors,1035,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:1064,safety,input,input,1064,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:90,security,UPDAT,UPDATE,90,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:74,usability,document,documentation,74,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:175,usability,error,error,175,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:333,usability,error,error,333,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:370,usability,error,errors,370,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:426,usability,document,documentation,426,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:454,usability,error,error,454,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:546,usability,error,error,546,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:913,usability,clear,clear,913,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:945,usability,input,input,945,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:951,usability,error,errors,951,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:1014,usability,clear,clear,1014,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:1035,usability,error,errors,1035,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:1064,usability,input,input,1064,"[hist] TGraphMultiErrors: needs some improvements in interface and better documentation; [UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. . In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting. See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: . ```. TGraphMultiErrors g;. g.AddPoint(2,3);. double e1[1] = {1};. double e2[1] = {3}; . g.AddYError(1, e1, e1);. g.AddYError(1, e2, e2); . std::cout << g.GetEYlow()[0] << std::endl;. ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. . One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/pull/9336:26,deployability,version,version,26,[jsroot] production 6.3.1 version [skip-ci]; This should be code also for next ROOT 6.26 release. Next JSROOT version will have many changes and will be applied only after 6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9336
https://github.com/root-project/root/pull/9336:89,deployability,releas,release,89,[jsroot] production 6.3.1 version [skip-ci]; This should be code also for next ROOT 6.26 release. Next JSROOT version will have many changes and will be applied only after 6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9336
https://github.com/root-project/root/pull/9336:110,deployability,version,version,110,[jsroot] production 6.3.1 version [skip-ci]; This should be code also for next ROOT 6.26 release. Next JSROOT version will have many changes and will be applied only after 6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9336
https://github.com/root-project/root/pull/9336:26,integrability,version,version,26,[jsroot] production 6.3.1 version [skip-ci]; This should be code also for next ROOT 6.26 release. Next JSROOT version will have many changes and will be applied only after 6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9336
https://github.com/root-project/root/pull/9336:110,integrability,version,version,110,[jsroot] production 6.3.1 version [skip-ci]; This should be code also for next ROOT 6.26 release. Next JSROOT version will have many changes and will be applied only after 6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9336
https://github.com/root-project/root/pull/9336:26,modifiability,version,version,26,[jsroot] production 6.3.1 version [skip-ci]; This should be code also for next ROOT 6.26 release. Next JSROOT version will have many changes and will be applied only after 6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9336
https://github.com/root-project/root/pull/9336:110,modifiability,version,version,110,[jsroot] production 6.3.1 version [skip-ci]; This should be code also for next ROOT 6.26 release. Next JSROOT version will have many changes and will be applied only after 6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9336
https://github.com/root-project/root/pull/9337:28,deployability,updat,updates,28,"[RF] Minor RooFit interface updates; The interfaces of `RooPoisson` and `RooDataSet` are extended to support some of the new developments in other PRs:. * getters for `x` and `mean` of RooPoisson (needed by https://github.com/root-project/root/pull/8944). * `RooDataSet::weightVar()` to access weight variable if set (needed by https://github.com/root-project/root/pull/8944, https://github.com/root-project/root/pull/9004)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9337
https://github.com/root-project/root/pull/9337:18,integrability,interfac,interface,18,"[RF] Minor RooFit interface updates; The interfaces of `RooPoisson` and `RooDataSet` are extended to support some of the new developments in other PRs:. * getters for `x` and `mean` of RooPoisson (needed by https://github.com/root-project/root/pull/8944). * `RooDataSet::weightVar()` to access weight variable if set (needed by https://github.com/root-project/root/pull/8944, https://github.com/root-project/root/pull/9004)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9337
https://github.com/root-project/root/pull/9337:41,integrability,interfac,interfaces,41,"[RF] Minor RooFit interface updates; The interfaces of `RooPoisson` and `RooDataSet` are extended to support some of the new developments in other PRs:. * getters for `x` and `mean` of RooPoisson (needed by https://github.com/root-project/root/pull/8944). * `RooDataSet::weightVar()` to access weight variable if set (needed by https://github.com/root-project/root/pull/8944, https://github.com/root-project/root/pull/9004)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9337
https://github.com/root-project/root/pull/9337:18,interoperability,interfac,interface,18,"[RF] Minor RooFit interface updates; The interfaces of `RooPoisson` and `RooDataSet` are extended to support some of the new developments in other PRs:. * getters for `x` and `mean` of RooPoisson (needed by https://github.com/root-project/root/pull/8944). * `RooDataSet::weightVar()` to access weight variable if set (needed by https://github.com/root-project/root/pull/8944, https://github.com/root-project/root/pull/9004)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9337
https://github.com/root-project/root/pull/9337:41,interoperability,interfac,interfaces,41,"[RF] Minor RooFit interface updates; The interfaces of `RooPoisson` and `RooDataSet` are extended to support some of the new developments in other PRs:. * getters for `x` and `mean` of RooPoisson (needed by https://github.com/root-project/root/pull/8944). * `RooDataSet::weightVar()` to access weight variable if set (needed by https://github.com/root-project/root/pull/8944, https://github.com/root-project/root/pull/9004)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9337
https://github.com/root-project/root/pull/9337:18,modifiability,interfac,interface,18,"[RF] Minor RooFit interface updates; The interfaces of `RooPoisson` and `RooDataSet` are extended to support some of the new developments in other PRs:. * getters for `x` and `mean` of RooPoisson (needed by https://github.com/root-project/root/pull/8944). * `RooDataSet::weightVar()` to access weight variable if set (needed by https://github.com/root-project/root/pull/8944, https://github.com/root-project/root/pull/9004)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9337
https://github.com/root-project/root/pull/9337:41,modifiability,interfac,interfaces,41,"[RF] Minor RooFit interface updates; The interfaces of `RooPoisson` and `RooDataSet` are extended to support some of the new developments in other PRs:. * getters for `x` and `mean` of RooPoisson (needed by https://github.com/root-project/root/pull/8944). * `RooDataSet::weightVar()` to access weight variable if set (needed by https://github.com/root-project/root/pull/8944, https://github.com/root-project/root/pull/9004)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9337
https://github.com/root-project/root/pull/9337:89,modifiability,exten,extended,89,"[RF] Minor RooFit interface updates; The interfaces of `RooPoisson` and `RooDataSet` are extended to support some of the new developments in other PRs:. * getters for `x` and `mean` of RooPoisson (needed by https://github.com/root-project/root/pull/8944). * `RooDataSet::weightVar()` to access weight variable if set (needed by https://github.com/root-project/root/pull/8944, https://github.com/root-project/root/pull/9004)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9337
https://github.com/root-project/root/pull/9337:301,modifiability,variab,variable,301,"[RF] Minor RooFit interface updates; The interfaces of `RooPoisson` and `RooDataSet` are extended to support some of the new developments in other PRs:. * getters for `x` and `mean` of RooPoisson (needed by https://github.com/root-project/root/pull/8944). * `RooDataSet::weightVar()` to access weight variable if set (needed by https://github.com/root-project/root/pull/8944, https://github.com/root-project/root/pull/9004)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9337
https://github.com/root-project/root/pull/9337:28,safety,updat,updates,28,"[RF] Minor RooFit interface updates; The interfaces of `RooPoisson` and `RooDataSet` are extended to support some of the new developments in other PRs:. * getters for `x` and `mean` of RooPoisson (needed by https://github.com/root-project/root/pull/8944). * `RooDataSet::weightVar()` to access weight variable if set (needed by https://github.com/root-project/root/pull/8944, https://github.com/root-project/root/pull/9004)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9337
https://github.com/root-project/root/pull/9337:28,security,updat,updates,28,"[RF] Minor RooFit interface updates; The interfaces of `RooPoisson` and `RooDataSet` are extended to support some of the new developments in other PRs:. * getters for `x` and `mean` of RooPoisson (needed by https://github.com/root-project/root/pull/8944). * `RooDataSet::weightVar()` to access weight variable if set (needed by https://github.com/root-project/root/pull/8944, https://github.com/root-project/root/pull/9004)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9337
https://github.com/root-project/root/pull/9337:287,security,access,access,287,"[RF] Minor RooFit interface updates; The interfaces of `RooPoisson` and `RooDataSet` are extended to support some of the new developments in other PRs:. * getters for `x` and `mean` of RooPoisson (needed by https://github.com/root-project/root/pull/8944). * `RooDataSet::weightVar()` to access weight variable if set (needed by https://github.com/root-project/root/pull/8944, https://github.com/root-project/root/pull/9004)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9337
https://github.com/root-project/root/pull/9337:101,usability,support,support,101,"[RF] Minor RooFit interface updates; The interfaces of `RooPoisson` and `RooDataSet` are extended to support some of the new developments in other PRs:. * getters for `x` and `mean` of RooPoisson (needed by https://github.com/root-project/root/pull/8944). * `RooDataSet::weightVar()` to access weight variable if set (needed by https://github.com/root-project/root/pull/8944, https://github.com/root-project/root/pull/9004)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9337
https://github.com/root-project/root/pull/9338:407,deployability,updat,updated,407,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:41,energy efficiency,optim,optimization,41,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:145,energy efficiency,optim,optimization,145,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:309,energy efficiency,optim,optimization,309,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:62,integrability,compon,components,62,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:188,integrability,compon,components,188,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:345,integrability,compon,component,345,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:62,interoperability,compon,components,62,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:188,interoperability,compon,components,188,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:345,interoperability,compon,component,345,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:62,modifiability,compon,components,62,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:188,modifiability,compon,components,188,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:345,modifiability,compon,component,345,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:41,performance,optimiz,optimization,41,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:145,performance,optimiz,optimization,145,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:309,performance,optimiz,optimization,309,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:377,safety,test,tested,377,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:407,safety,updat,updated,407,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:407,security,updat,updated,407,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:377,testability,test,tested,377,Add option to selectively turn off const optimization for pdf components; # This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1. - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/issues/9339:241,safety,compl,completely,241,"TMap.IsFolder() should not be true; - [ ] Checked for duplicates. yes, not found. ### Describe the bug. I would argue that, given the conceptual identity of 'folder' == 'directory'. only a TDirectory can be IsFolder, but a TMap that behaves completely different than a TDirectory, is not.. . ### Expected behavior. TMap.IsFolder() == False.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9339
https://github.com/root-project/root/issues/9339:145,security,ident,identity,145,"TMap.IsFolder() should not be true; - [ ] Checked for duplicates. yes, not found. ### Describe the bug. I would argue that, given the conceptual identity of 'folder' == 'directory'. only a TDirectory can be IsFolder, but a TMap that behaves completely different than a TDirectory, is not.. . ### Expected behavior. TMap.IsFolder() == False.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9339
https://github.com/root-project/root/issues/9339:241,security,compl,completely,241,"TMap.IsFolder() should not be true; - [ ] Checked for duplicates. yes, not found. ### Describe the bug. I would argue that, given the conceptual identity of 'folder' == 'directory'. only a TDirectory can be IsFolder, but a TMap that behaves completely different than a TDirectory, is not.. . ### Expected behavior. TMap.IsFolder() == False.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9339
https://github.com/root-project/root/issues/9339:305,usability,behavi,behavior,305,"TMap.IsFolder() should not be true; - [ ] Checked for duplicates. yes, not found. ### Describe the bug. I would argue that, given the conceptual identity of 'folder' == 'directory'. only a TDirectory can be IsFolder, but a TMap that behaves completely different than a TDirectory, is not.. . ### Expected behavior. TMap.IsFolder() == False.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9339
https://github.com/root-project/root/pull/9340:183,availability,error,errors,183,Some classes do not inherit form TNamed; Some classes like TObjString do not inherit form TNamed and therefor do not have the. SetName method. This produces in the command line tools errors when such objects are. stored in ROOT files. This problem was seen in the forum post in the case of `rootcp`. https://root-forum.cern.ch/t/remove-directory/47733/31,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9340
https://github.com/root-project/root/pull/9340:20,modifiability,inherit,inherit,20,Some classes do not inherit form TNamed; Some classes like TObjString do not inherit form TNamed and therefor do not have the. SetName method. This produces in the command line tools errors when such objects are. stored in ROOT files. This problem was seen in the forum post in the case of `rootcp`. https://root-forum.cern.ch/t/remove-directory/47733/31,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9340
https://github.com/root-project/root/pull/9340:77,modifiability,inherit,inherit,77,Some classes do not inherit form TNamed; Some classes like TObjString do not inherit form TNamed and therefor do not have the. SetName method. This produces in the command line tools errors when such objects are. stored in ROOT files. This problem was seen in the forum post in the case of `rootcp`. https://root-forum.cern.ch/t/remove-directory/47733/31,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9340
https://github.com/root-project/root/pull/9340:183,performance,error,errors,183,Some classes do not inherit form TNamed; Some classes like TObjString do not inherit form TNamed and therefor do not have the. SetName method. This produces in the command line tools errors when such objects are. stored in ROOT files. This problem was seen in the forum post in the case of `rootcp`. https://root-forum.cern.ch/t/remove-directory/47733/31,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9340
https://github.com/root-project/root/pull/9340:183,safety,error,errors,183,Some classes do not inherit form TNamed; Some classes like TObjString do not inherit form TNamed and therefor do not have the. SetName method. This produces in the command line tools errors when such objects are. stored in ROOT files. This problem was seen in the forum post in the case of `rootcp`. https://root-forum.cern.ch/t/remove-directory/47733/31,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9340
https://github.com/root-project/root/pull/9340:164,usability,command,command,164,Some classes do not inherit form TNamed; Some classes like TObjString do not inherit form TNamed and therefor do not have the. SetName method. This produces in the command line tools errors when such objects are. stored in ROOT files. This problem was seen in the forum post in the case of `rootcp`. https://root-forum.cern.ch/t/remove-directory/47733/31,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9340
https://github.com/root-project/root/pull/9340:177,usability,tool,tools,177,Some classes do not inherit form TNamed; Some classes like TObjString do not inherit form TNamed and therefor do not have the. SetName method. This produces in the command line tools errors when such objects are. stored in ROOT files. This problem was seen in the forum post in the case of `rootcp`. https://root-forum.cern.ch/t/remove-directory/47733/31,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9340
https://github.com/root-project/root/pull/9340:183,usability,error,errors,183,Some classes do not inherit form TNamed; Some classes like TObjString do not inherit form TNamed and therefor do not have the. SetName method. This produces in the command line tools errors when such objects are. stored in ROOT files. This problem was seen in the forum post in the case of `rootcp`. https://root-forum.cern.ch/t/remove-directory/47733/31,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9340
https://github.com/root-project/root/pull/9341:104,availability,error,errors,104,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:285,availability,error,error,285,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:401,availability,avail,available,401,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:332,deployability,depend,depend,332,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:332,integrability,depend,depend,332,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:332,modifiability,depend,depend,332,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:353,modifiability,paramet,parameter,353,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:104,performance,error,errors,104,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:285,performance,error,error,285,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:401,reliability,availab,available,401,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:104,safety,error,errors,104,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:285,safety,error,error,285,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:332,safety,depend,depend,332,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:401,safety,avail,available,401,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:401,security,availab,available,401,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:319,testability,assert,assert,319,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:332,testability,depend,depend,332,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:385,testability,assert,assert,385,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:433,testability,assert,assert,433,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:104,usability,error,errors,104,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9341:285,usability,error,error,285,"[tmva] fix compilation warning in ROperator_Gemm.hxx; When compiled in with '-Ddev=ON', warning becomes errors. ```. In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:. tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]. 211 | assert(length == ConvertShapeToLength(fShapeC));. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9341
https://github.com/root-project/root/pull/9342:19,energy efficiency,optim,optimized,19,[metcling] Disable optimized register allocation; This brings RDF jitting times of large computation graphs almost back to the level it was with `-O0`. @eguiraud can you confirm this works / helps for other RDF examples as well?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:38,energy efficiency,alloc,allocation,38,[metcling] Disable optimized register allocation; This brings RDF jitting times of large computation graphs almost back to the level it was with `-O0`. @eguiraud can you confirm this works / helps for other RDF examples as well?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:19,performance,optimiz,optimized,19,[metcling] Disable optimized register allocation; This brings RDF jitting times of large computation graphs almost back to the level it was with `-O0`. @eguiraud can you confirm this works / helps for other RDF examples as well?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:74,performance,time,times,74,[metcling] Disable optimized register allocation; This brings RDF jitting times of large computation graphs almost back to the level it was with `-O0`. @eguiraud can you confirm this works / helps for other RDF examples as well?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:170,usability,confirm,confirm,170,[metcling] Disable optimized register allocation; This brings RDF jitting times of large computation graphs almost back to the level it was with `-O0`. @eguiraud can you confirm this works / helps for other RDF examples as well?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:191,usability,help,helps,191,[metcling] Disable optimized register allocation; This brings RDF jitting times of large computation graphs almost back to the level it was with `-O0`. @eguiraud can you confirm this works / helps for other RDF examples as well?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9344:93,deployability,log,logic,93,Introduce distributed RunGraphs; Second iteration of the distributed RunGraphs function. The logic is greatly simplified now. * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle. * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:269,integrability,sub,submitting,269,Introduce distributed RunGraphs; Second iteration of the distributed RunGraphs function. The logic is greatly simplified now. * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle. * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:10,interoperability,distribut,distributed,10,Introduce distributed RunGraphs; Second iteration of the distributed RunGraphs function. The logic is greatly simplified now. * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle. * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:57,interoperability,distribut,distributed,57,Introduce distributed RunGraphs; Second iteration of the distributed RunGraphs function. The logic is greatly simplified now. * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle. * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:220,interoperability,distribut,distributed,220,Introduce distributed RunGraphs; Second iteration of the distributed RunGraphs function. The logic is greatly simplified now. * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle. * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:454,interoperability,prox,proxy,454,Introduce distributed RunGraphs; Second iteration of the distributed RunGraphs function. The logic is greatly simplified now. * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle. * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:404,performance,time,time,404,Introduce distributed RunGraphs; Second iteration of the distributed RunGraphs function. The logic is greatly simplified now. * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle. * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:93,safety,log,logic,93,Introduce distributed RunGraphs; Second iteration of the distributed RunGraphs function. The logic is greatly simplified now. * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle. * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:93,security,log,logic,93,Introduce distributed RunGraphs; Second iteration of the distributed RunGraphs function. The logic is greatly simplified now. * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle. * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:93,testability,log,logic,93,Introduce distributed RunGraphs; Second iteration of the distributed RunGraphs function. The logic is greatly simplified now. * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle. * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:110,testability,simpl,simplified,110,Introduce distributed RunGraphs; Second iteration of the distributed RunGraphs function. The logic is greatly simplified now. * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle. * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:110,usability,simpl,simplified,110,Introduce distributed RunGraphs; Second iteration of the distributed RunGraphs function. The logic is greatly simplified now. * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle. * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:261,usability,support,support,261,Introduce distributed RunGraphs; Second iteration of the distributed RunGraphs function. The logic is greatly simplified now. * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle. * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9345:63,deployability,contain,contains,63,[RF] Follow up on RooFit multiprocessing developments; This PR contains some follow-up changes to https://github.com/root-project/root/pull/8700 and https://github.com/root-project/root/pull/9078:. * avoid using `std::shared_ptr` for return values. * change copyright of roofitcore/TestStatistics to `(c) CERN` (requested by @Axel-Naumann in https://github.com/root-project/root/pull/8700#discussion_r738407080). * I used now the same copyright headers from https://github.com/root-project/root/pull/9078 also for the TestStatistics. * fix a build warning in non-debug mode. * don't install zmq.hpp header from builtins .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9345
https://github.com/root-project/root/pull/9345:542,deployability,build,build,542,[RF] Follow up on RooFit multiprocessing developments; This PR contains some follow-up changes to https://github.com/root-project/root/pull/8700 and https://github.com/root-project/root/pull/9078:. * avoid using `std::shared_ptr` for return values. * change copyright of roofitcore/TestStatistics to `(c) CERN` (requested by @Axel-Naumann in https://github.com/root-project/root/pull/8700#discussion_r738407080). * I used now the same copyright headers from https://github.com/root-project/root/pull/9078 also for the TestStatistics. * fix a build warning in non-debug mode. * don't install zmq.hpp header from builtins .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9345
https://github.com/root-project/root/pull/9345:583,deployability,instal,install,583,[RF] Follow up on RooFit multiprocessing developments; This PR contains some follow-up changes to https://github.com/root-project/root/pull/8700 and https://github.com/root-project/root/pull/9078:. * avoid using `std::shared_ptr` for return values. * change copyright of roofitcore/TestStatistics to `(c) CERN` (requested by @Axel-Naumann in https://github.com/root-project/root/pull/8700#discussion_r738407080). * I used now the same copyright headers from https://github.com/root-project/root/pull/9078 also for the TestStatistics. * fix a build warning in non-debug mode. * don't install zmq.hpp header from builtins .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9345
https://github.com/root-project/root/pull/9345:200,safety,avoid,avoid,200,[RF] Follow up on RooFit multiprocessing developments; This PR contains some follow-up changes to https://github.com/root-project/root/pull/8700 and https://github.com/root-project/root/pull/9078:. * avoid using `std::shared_ptr` for return values. * change copyright of roofitcore/TestStatistics to `(c) CERN` (requested by @Axel-Naumann in https://github.com/root-project/root/pull/8700#discussion_r738407080). * I used now the same copyright headers from https://github.com/root-project/root/pull/9078 also for the TestStatistics. * fix a build warning in non-debug mode. * don't install zmq.hpp header from builtins .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9345
https://github.com/root-project/root/pull/9345:282,safety,Test,TestStatistics,282,[RF] Follow up on RooFit multiprocessing developments; This PR contains some follow-up changes to https://github.com/root-project/root/pull/8700 and https://github.com/root-project/root/pull/9078:. * avoid using `std::shared_ptr` for return values. * change copyright of roofitcore/TestStatistics to `(c) CERN` (requested by @Axel-Naumann in https://github.com/root-project/root/pull/8700#discussion_r738407080). * I used now the same copyright headers from https://github.com/root-project/root/pull/9078 also for the TestStatistics. * fix a build warning in non-debug mode. * don't install zmq.hpp header from builtins .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9345
https://github.com/root-project/root/pull/9345:518,safety,Test,TestStatistics,518,[RF] Follow up on RooFit multiprocessing developments; This PR contains some follow-up changes to https://github.com/root-project/root/pull/8700 and https://github.com/root-project/root/pull/9078:. * avoid using `std::shared_ptr` for return values. * change copyright of roofitcore/TestStatistics to `(c) CERN` (requested by @Axel-Naumann in https://github.com/root-project/root/pull/8700#discussion_r738407080). * I used now the same copyright headers from https://github.com/root-project/root/pull/9078 also for the TestStatistics. * fix a build warning in non-debug mode. * don't install zmq.hpp header from builtins .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9345
https://github.com/root-project/root/pull/9345:282,testability,Test,TestStatistics,282,[RF] Follow up on RooFit multiprocessing developments; This PR contains some follow-up changes to https://github.com/root-project/root/pull/8700 and https://github.com/root-project/root/pull/9078:. * avoid using `std::shared_ptr` for return values. * change copyright of roofitcore/TestStatistics to `(c) CERN` (requested by @Axel-Naumann in https://github.com/root-project/root/pull/8700#discussion_r738407080). * I used now the same copyright headers from https://github.com/root-project/root/pull/9078 also for the TestStatistics. * fix a build warning in non-debug mode. * don't install zmq.hpp header from builtins .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9345
https://github.com/root-project/root/pull/9345:518,testability,Test,TestStatistics,518,[RF] Follow up on RooFit multiprocessing developments; This PR contains some follow-up changes to https://github.com/root-project/root/pull/8700 and https://github.com/root-project/root/pull/9078:. * avoid using `std::shared_ptr` for return values. * change copyright of roofitcore/TestStatistics to `(c) CERN` (requested by @Axel-Naumann in https://github.com/root-project/root/pull/8700#discussion_r738407080). * I used now the same copyright headers from https://github.com/root-project/root/pull/9078 also for the TestStatistics. * fix a build warning in non-debug mode. * don't install zmq.hpp header from builtins .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9345
https://github.com/root-project/root/pull/9346:1033,deployability,infrastructur,infrastructure,1033,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:1163,deployability,Releas,Release,1163,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:1239,deployability,fail,fail,1239,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:1388,deployability,releas,release,1388,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:921,integrability,interfac,interface,921,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:31,interoperability,convers,conversion,31,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:188,interoperability,interoperab,interoperability,188,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:921,interoperability,interfac,interface,921,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:188,modifiability,interop,interoperability,188,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:921,modifiability,interfac,interface,921,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:1239,reliability,fail,fail,1239,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:666,safety,test,tests,666,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:707,safety,test,tests,707,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:760,safety,test,test,760,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:1199,safety,test,tests,1199,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:661,testability,Unit,Unit,661,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:666,testability,test,tests,666,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:707,testability,test,tests,707,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:760,testability,test,test,760,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:1199,testability,test,tests,1199,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:1269,testability,understand,understand,1269,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:772,usability,support,support,772,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:1051,usability,support,support,1051,"[RF][PyROOT] New functions for conversion between RooDataSet and NumPy arrays or Pandas dataframes; New member functions of RooFit classes were introduced exclusively to PyROOT for better interoperability between RooFit and Numpy and Pandas:. 1. `RooDataSet.from_numpy`: Import a RooDataSet from a dictionary of numpy arrays (static method). 2. `RooDataSet.to_numpy`: Export a RooDataSet to a dictionary of numpy arrays. 3. `RooDataSet.from_pandas`: Import a RooDataSet from a Pandas dataframe (static method). 4. `RooDataSet.to_pandas`: Export a RooDataSet to a Pandas dataframe. 5. `RooRealVar.bins`: Get bin boundaries for a `RooRealVar` as a NumPy array. - Unit tests were implemented that make closure tests for weighted and unweighted datasets, and also test if the support for `RooAbsCategory` works. - Besides implementing these functions as pythonizations, this PR makes some changes to the `RooVectorDataStore` interface to enable this data import/export functionality. - Some changes were made to the RooFit pythonization infrastructure to support static methods in the Python mirror classes. - A new tutorial was written to showcase these features. - Release notes were added. - Windows tests are disabled for now because they fail for reasons that I don't understand (see draft PR #8784). This is part of the feature set presented at ACAT 2021 and promised for the next ROOT release. The equivalent import/export functions for `RooDataHist` will follow later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/issues/9347:10,availability,Error,Error,10,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:221,availability,Error,Error,221,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:256,availability,error,error,256,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:492,availability,Error,Error,492,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:506,availability,Error,Error,506,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1144,availability,error,errors,1144,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1566,availability,Operat,Operating,1566,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:21,deployability,build,build,21,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:89,deployability,Build,Build,89,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:126,deployability,instal,install,126,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:135,deployability,build,build-from-source,135,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:157,deployability,build,build,157,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:233,deployability,build,building,233,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:300,deployability,log,log,300,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:329,deployability,log,log,329,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:358,deployability,log,log,358,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:437,deployability,log,log,437,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:596,deployability,Releas,Release,596,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:633,deployability,fail,failed,633,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1074,deployability,log,log,1074,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1117,deployability,build,build,1117,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1509,deployability,build,build,1509,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1526,deployability,Releas,Release,1526,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1543,deployability,instal,install,1543,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1613,deployability,version,version,1613,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:286,integrability,configur,configure-out,286,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:344,integrability,configur,configure-out,344,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:423,integrability,configur,configure-out,423,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:586,integrability,configur,configure-Release,586,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:614,integrability,messag,message,614,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1062,integrability,configur,configure,1062,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1613,integrability,version,version,1613,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:614,interoperability,messag,message,614,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:286,modifiability,configur,configure-out,286,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:344,modifiability,configur,configure-out,344,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:423,modifiability,configur,configure-out,423,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:586,modifiability,configur,configure-Release,586,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1062,modifiability,configur,configure,1062,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1613,modifiability,version,version,1613,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:10,performance,Error,Error,10,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:221,performance,Error,Error,221,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:256,performance,error,error,256,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:492,performance,Error,Error,492,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:506,performance,Error,Error,506,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1144,performance,error,errors,1144,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:633,reliability,fail,failed,633,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:10,safety,Error,Error,10,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:221,safety,Error,Error,221,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:256,safety,error,error,256,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:300,safety,log,log,300,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:329,safety,log,log,329,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:358,safety,log,log,358,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:437,safety,log,log,437,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:492,safety,Error,Error,492,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:506,safety,Error,Error,506,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1074,safety,log,log,1074,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1144,safety,error,errors,1144,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:286,security,configur,configure-out,286,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:300,security,log,log,300,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:329,security,log,log,329,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:344,security,configur,configure-out,344,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:358,security,log,log,358,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:423,security,configur,configure-out,423,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:437,security,log,log,437,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:586,security,configur,configure-Release,586,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1062,security,configur,configure,1062,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1074,security,log,log,1074,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:300,testability,log,log,300,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:329,testability,log,log,329,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:358,testability,log,log,358,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:437,testability,log,log,437,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1074,testability,log,log,1074,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:10,usability,Error,Error,10,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:221,usability,Error,Error,221,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:256,usability,error,error,256,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:460,usability,help,help,460,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:492,usability,Error,Error,492,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:506,usability,Error,Error,506,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:625,usability,Command,Command,625,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:691,usability,Visual,Visual,691,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:887,usability,Visual,Visual,887,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1094,usability,behavi,behavior,1094,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1144,usability,error,errors,1144,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1191,usability,Tool,Tools,1191,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1197,usability,Command,Command,1197,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1375,usability,Visual,Visual,1375,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:1599,usability,Visual,Visual,1599,"Hit CMake Error when build root with msvc; ### Describe the bug. Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log. [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log). Could you please help have a look? Thanks a lot! Error:. CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):. Command failed: 1. . 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'. . See also. . F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log. . ### Expected behavior. Successfully build root project without errors. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src. 3. mkdir root_build root_install && cd root_build. 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src. 5. cmake --build . --config Release --target install. ### Setup. 1. Operating system: Windows 10. 2. Visual studio version: 16.11.6. 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/pull/9348:68,deployability,version,version,68,"A new warning, -Wbidirectional, appeared on centos; With the latest version of the `centos` C++ compiler a new warning appeared in 20 years old code. The way to fix/deactivate it is to compile the files producing this warning with the option `-Wbidirectional=none` (found by @couet) . @bellenot found the way to set this option in the `CMakeLists.txt` files for the compilers having this option. Fix warning:. ```. warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9348
https://github.com/root-project/root/pull/9348:68,integrability,version,version,68,"A new warning, -Wbidirectional, appeared on centos; With the latest version of the `centos` C++ compiler a new warning appeared in 20 years old code. The way to fix/deactivate it is to compile the files producing this warning with the option `-Wbidirectional=none` (found by @couet) . @bellenot found the way to set this option in the `CMakeLists.txt` files for the compilers having this option. Fix warning:. ```. warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9348
https://github.com/root-project/root/pull/9348:68,modifiability,version,version,68,"A new warning, -Wbidirectional, appeared on centos; With the latest version of the `centos` C++ compiler a new warning appeared in 20 years old code. The way to fix/deactivate it is to compile the files producing this warning with the option `-Wbidirectional=none` (found by @couet) . @bellenot found the way to set this option in the `CMakeLists.txt` files for the compilers having this option. Fix warning:. ```. warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9348
https://github.com/root-project/root/pull/9348:463,safety,detect,detected,463,"A new warning, -Wbidirectional, appeared on centos; With the latest version of the `centos` C++ compiler a new warning appeared in 20 years old code. The way to fix/deactivate it is to compile the files producing this warning with the option `-Wbidirectional=none` (found by @couet) . @bellenot found the way to set this option in the `CMakeLists.txt` files for the compilers having this option. Fix warning:. ```. warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9348
https://github.com/root-project/root/pull/9348:463,security,detect,detected,463,"A new warning, -Wbidirectional, appeared on centos; With the latest version of the `centos` C++ compiler a new warning appeared in 20 years old code. The way to fix/deactivate it is to compile the files producing this warning with the option `-Wbidirectional=none` (found by @couet) . @bellenot found the way to set this option in the `CMakeLists.txt` files for the compilers having this option. Fix warning:. ```. warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9348
https://github.com/root-project/root/pull/9349:1060,availability,state,state,1060,"d TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1702,deployability,build,build,1702,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1789,deployability,build,building,1789,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1817,deployability,depend,depend,1817,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:2168,deployability,updat,update,2168,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1060,integrability,state,state,1060,"d TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1418,integrability,Wrap,Wrapper,1418,"h `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1817,integrability,depend,depend,1817,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1165,interoperability,socket,sockets,1165,"tJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1418,interoperability,Wrapper,Wrapper,1418,"h `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1817,modifiability,depend,depend,1817,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:2372,modifiability,refact,refactor,2372,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:247,performance,parallel,parallelize,247,"RooFit::MultiProcess & TestStatistics part 7: MultiProcess based TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:2372,performance,refactor,refactor,2372,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:23,safety,Test,TestStatistics,23,"RooFit::MultiProcess & TestStatistics part 7: MultiProcess based TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:65,safety,Test,TestStatistics,65,"RooFit::MultiProcess & TestStatistics part 7: MultiProcess based TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:215,safety,test,test-statistic,215,"RooFit::MultiProcess & TestStatistics part 7: MultiProcess based TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:760,safety,Test,TestStatistics,760,"RooFit::MultiProcess & TestStatistics part 7: MultiProcess based TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:822,safety,test,test,822,"RooFit::MultiProcess & TestStatistics part 7: MultiProcess based TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:868,safety,Test,TestStatistics,868,"RooFit::MultiProcess & TestStatistics part 7: MultiProcess based TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1644,safety,avoid,avoid,1644,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1817,safety,depend,depend,1817,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:2138,safety,test,tested,2138,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:2168,safety,updat,update,2168,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1165,security,soc,sockets,1165,"tJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:2168,security,updat,update,2168,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:23,testability,Test,TestStatistics,23,"RooFit::MultiProcess & TestStatistics part 7: MultiProcess based TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:65,testability,Test,TestStatistics,65,"RooFit::MultiProcess & TestStatistics part 7: MultiProcess based TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:215,testability,test,test-statistic,215,"RooFit::MultiProcess & TestStatistics part 7: MultiProcess based TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:760,testability,Test,TestStatistics,760,"RooFit::MultiProcess & TestStatistics part 7: MultiProcess based TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:822,testability,test,test,822,"RooFit::MultiProcess & TestStatistics part 7: MultiProcess based TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:868,testability,Test,TestStatistics,868,"RooFit::MultiProcess & TestStatistics part 7: MultiProcess based TestStatistics classes; In this PR, we introduce two new classes: `LikelihoodJob` and `LikelihoodGradientJob`. These are `RooFit::MultiProcess` based test-statistic calculators that parallelize likelihood and likelihood gradient calculation respectively over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second der",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1817,testability,depend,depend,1817,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:2138,testability,test,tested,2138,"l part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1313,usability,user,user,1313,"ely over multiple processes. These classes can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1620,usability,help,helper,1620,"final part of a split and clean-up of #8294. ## Changes or fixes:. - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace. - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252. - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets. - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free. - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication. - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed. - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally. - [x] update the docs (if necessary). - [x] unify copyright/license headers with previous commits. - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks. - [x] refactor member names: underscore suffix. - [x] remove commented out code and TODOs and other junk. - [x] clang-tidy up. - [ ] rebase into two commits (one for `KahanSum` and one for the rest). - [x] make Readme.md for developers with some examples to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9350:262,deployability,updat,updated,262,Prevent Tcolor palette being silently set by TGeoPainter; . # This Pull request:. ## Changes or fixes:. - Color palette being changed silently by TGeoPainter / TEve. - clarify all missing arguments in the docu. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8597,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9350
https://github.com/root-project/root/pull/9350:0,safety,Prevent,Prevent,0,Prevent Tcolor palette being silently set by TGeoPainter; . # This Pull request:. ## Changes or fixes:. - Color palette being changed silently by TGeoPainter / TEve. - clarify all missing arguments in the docu. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8597,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9350
https://github.com/root-project/root/pull/9350:232,safety,test,tested,232,Prevent Tcolor palette being silently set by TGeoPainter; . # This Pull request:. ## Changes or fixes:. - Color palette being changed silently by TGeoPainter / TEve. - clarify all missing arguments in the docu. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8597,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9350
https://github.com/root-project/root/pull/9350:262,safety,updat,updated,262,Prevent Tcolor palette being silently set by TGeoPainter; . # This Pull request:. ## Changes or fixes:. - Color palette being changed silently by TGeoPainter / TEve. - clarify all missing arguments in the docu. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8597,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9350
https://github.com/root-project/root/pull/9350:0,security,Preven,Prevent,0,Prevent Tcolor palette being silently set by TGeoPainter; . # This Pull request:. ## Changes or fixes:. - Color palette being changed silently by TGeoPainter / TEve. - clarify all missing arguments in the docu. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8597,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9350
https://github.com/root-project/root/pull/9350:262,security,updat,updated,262,Prevent Tcolor palette being silently set by TGeoPainter; . # This Pull request:. ## Changes or fixes:. - Color palette being changed silently by TGeoPainter / TEve. - clarify all missing arguments in the docu. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8597,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9350
https://github.com/root-project/root/pull/9350:232,testability,test,tested,232,Prevent Tcolor palette being silently set by TGeoPainter; . # This Pull request:. ## Changes or fixes:. - Color palette being changed silently by TGeoPainter / TEve. - clarify all missing arguments in the docu. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8597,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9350
https://github.com/root-project/root/pull/9351:331,integrability,translat,translation,331,[ntuple] RField: resolve typedefs to the underlying type; This pull-request modifies the implementation of RField `GetNormalizedType()` to resolve typedefs via `TClassEdit::ResolveTypedef()`. ## Changes or fixes:. - GetNormalizedType: use `TClassEdit::ResolveTypedef()` to resolve type aliases. - GetNormalizedType: move to a type translation map. ## Checklist:. - [x] tested changes locally. This PR fixes #9202.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9351
https://github.com/root-project/root/pull/9351:331,interoperability,translat,translation,331,[ntuple] RField: resolve typedefs to the underlying type; This pull-request modifies the implementation of RField `GetNormalizedType()` to resolve typedefs via `TClassEdit::ResolveTypedef()`. ## Changes or fixes:. - GetNormalizedType: use `TClassEdit::ResolveTypedef()` to resolve type aliases. - GetNormalizedType: move to a type translation map. ## Checklist:. - [x] tested changes locally. This PR fixes #9202.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9351
https://github.com/root-project/root/pull/9351:369,safety,test,tested,369,[ntuple] RField: resolve typedefs to the underlying type; This pull-request modifies the implementation of RField `GetNormalizedType()` to resolve typedefs via `TClassEdit::ResolveTypedef()`. ## Changes or fixes:. - GetNormalizedType: use `TClassEdit::ResolveTypedef()` to resolve type aliases. - GetNormalizedType: move to a type translation map. ## Checklist:. - [x] tested changes locally. This PR fixes #9202.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9351
https://github.com/root-project/root/pull/9351:76,security,modif,modifies,76,[ntuple] RField: resolve typedefs to the underlying type; This pull-request modifies the implementation of RField `GetNormalizedType()` to resolve typedefs via `TClassEdit::ResolveTypedef()`. ## Changes or fixes:. - GetNormalizedType: use `TClassEdit::ResolveTypedef()` to resolve type aliases. - GetNormalizedType: move to a type translation map. ## Checklist:. - [x] tested changes locally. This PR fixes #9202.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9351
https://github.com/root-project/root/pull/9351:369,testability,test,tested,369,[ntuple] RField: resolve typedefs to the underlying type; This pull-request modifies the implementation of RField `GetNormalizedType()` to resolve typedefs via `TClassEdit::ResolveTypedef()`. ## Changes or fixes:. - GetNormalizedType: use `TClassEdit::ResolveTypedef()` to resolve type aliases. - GetNormalizedType: move to a type translation map. ## Checklist:. - [x] tested changes locally. This PR fixes #9202.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9351
https://github.com/root-project/root/pull/9352:189,deployability,updat,updated,189,"[RF] Improve rf408 tutorial.; Simplify code, remove race condition. It didn't do much harm, but it's also not a good idea to show this in a tutorial ... - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:159,safety,test,tested,159,"[RF] Improve rf408 tutorial.; Simplify code, remove race condition. It didn't do much harm, but it's also not a good idea to show this in a tutorial ... - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:189,safety,updat,updated,189,"[RF] Improve rf408 tutorial.; Simplify code, remove race condition. It didn't do much harm, but it's also not a good idea to show this in a tutorial ... - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:189,security,updat,updated,189,"[RF] Improve rf408 tutorial.; Simplify code, remove race condition. It didn't do much harm, but it's also not a good idea to show this in a tutorial ... - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:30,testability,Simpl,Simplify,30,"[RF] Improve rf408 tutorial.; Simplify code, remove race condition. It didn't do much harm, but it's also not a good idea to show this in a tutorial ... - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:159,testability,test,tested,159,"[RF] Improve rf408 tutorial.; Simplify code, remove race condition. It didn't do much harm, but it's also not a good idea to show this in a tutorial ... - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:30,usability,Simpl,Simplify,30,"[RF] Improve rf408 tutorial.; Simplify code, remove race condition. It didn't do much harm, but it's also not a good idea to show this in a tutorial ... - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/issues/9353:137,deployability,version,version,137,"[RF] Streamer info warnings; On some platforms, there are streamer info warnings due to schema evolution without increments of the class version. One should check if it's possible to make root recognise that it's the same class, or increment the class version. 1. Revert d91509e24fe00844bf102fd7d20c22decda8f3ff. 2. Fix all warnings in google tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9353
https://github.com/root-project/root/issues/9353:252,deployability,version,version,252,"[RF] Streamer info warnings; On some platforms, there are streamer info warnings due to schema evolution without increments of the class version. One should check if it's possible to make root recognise that it's the same class, or increment the class version. 1. Revert d91509e24fe00844bf102fd7d20c22decda8f3ff. 2. Fix all warnings in google tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9353
https://github.com/root-project/root/issues/9353:88,integrability,schema,schema,88,"[RF] Streamer info warnings; On some platforms, there are streamer info warnings due to schema evolution without increments of the class version. One should check if it's possible to make root recognise that it's the same class, or increment the class version. 1. Revert d91509e24fe00844bf102fd7d20c22decda8f3ff. 2. Fix all warnings in google tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9353
https://github.com/root-project/root/issues/9353:137,integrability,version,version,137,"[RF] Streamer info warnings; On some platforms, there are streamer info warnings due to schema evolution without increments of the class version. One should check if it's possible to make root recognise that it's the same class, or increment the class version. 1. Revert d91509e24fe00844bf102fd7d20c22decda8f3ff. 2. Fix all warnings in google tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9353
https://github.com/root-project/root/issues/9353:252,integrability,version,version,252,"[RF] Streamer info warnings; On some platforms, there are streamer info warnings due to schema evolution without increments of the class version. One should check if it's possible to make root recognise that it's the same class, or increment the class version. 1. Revert d91509e24fe00844bf102fd7d20c22decda8f3ff. 2. Fix all warnings in google tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9353
https://github.com/root-project/root/issues/9353:37,interoperability,platform,platforms,37,"[RF] Streamer info warnings; On some platforms, there are streamer info warnings due to schema evolution without increments of the class version. One should check if it's possible to make root recognise that it's the same class, or increment the class version. 1. Revert d91509e24fe00844bf102fd7d20c22decda8f3ff. 2. Fix all warnings in google tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9353
https://github.com/root-project/root/issues/9353:137,modifiability,version,version,137,"[RF] Streamer info warnings; On some platforms, there are streamer info warnings due to schema evolution without increments of the class version. One should check if it's possible to make root recognise that it's the same class, or increment the class version. 1. Revert d91509e24fe00844bf102fd7d20c22decda8f3ff. 2. Fix all warnings in google tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9353
https://github.com/root-project/root/issues/9353:252,modifiability,version,version,252,"[RF] Streamer info warnings; On some platforms, there are streamer info warnings due to schema evolution without increments of the class version. One should check if it's possible to make root recognise that it's the same class, or increment the class version. 1. Revert d91509e24fe00844bf102fd7d20c22decda8f3ff. 2. Fix all warnings in google tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9353
https://github.com/root-project/root/issues/9353:343,safety,test,tests,343,"[RF] Streamer info warnings; On some platforms, there are streamer info warnings due to schema evolution without increments of the class version. One should check if it's possible to make root recognise that it's the same class, or increment the class version. 1. Revert d91509e24fe00844bf102fd7d20c22decda8f3ff. 2. Fix all warnings in google tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9353
https://github.com/root-project/root/issues/9353:343,testability,test,tests,343,"[RF] Streamer info warnings; On some platforms, there are streamer info warnings due to schema evolution without increments of the class version. One should check if it's possible to make root recognise that it's the same class, or increment the class version. 1. Revert d91509e24fe00844bf102fd7d20c22decda8f3ff. 2. Fix all warnings in google tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9353
https://github.com/root-project/root/issues/9354:157,deployability,fail,failing,157,[Win] Warnings about missing PCMs; Cling warns about missing PCMs on windows. 1. Revert e3f2ed26b7903ff540a37e77f6c026b8502db747. 2. Fix the warnings in the failing tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:157,reliability,fail,failing,157,[Win] Warnings about missing PCMs; Cling warns about missing PCMs on windows. 1. Revert e3f2ed26b7903ff540a37e77f6c026b8502db747. 2. Fix the warnings in the failing tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:165,safety,test,tests,165,[Win] Warnings about missing PCMs; Cling warns about missing PCMs on windows. 1. Revert e3f2ed26b7903ff540a37e77f6c026b8502db747. 2. Fix the warnings in the failing tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:165,testability,test,tests,165,[Win] Warnings about missing PCMs; Cling warns about missing PCMs on windows. 1. Revert e3f2ed26b7903ff540a37e77f6c026b8502db747. 2. Fix the warnings in the failing tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9355:61,deployability,stage,stage,61,"[RNT] Remove suppression of diagnostics when RNT leaves beta stage; Since RNT is warning that it's a beta, extra suppressions for diagnostics in google test had to be added. Remove those once RNT doesn't issue the warning. Revert 44f9863aaf0391f4e9867dcdbd6eab2ad9028e0c.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9355
https://github.com/root-project/root/issues/9355:28,reliability,diagno,diagnostics,28,"[RNT] Remove suppression of diagnostics when RNT leaves beta stage; Since RNT is warning that it's a beta, extra suppressions for diagnostics in google test had to be added. Remove those once RNT doesn't issue the warning. Revert 44f9863aaf0391f4e9867dcdbd6eab2ad9028e0c.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9355
https://github.com/root-project/root/issues/9355:130,reliability,diagno,diagnostics,130,"[RNT] Remove suppression of diagnostics when RNT leaves beta stage; Since RNT is warning that it's a beta, extra suppressions for diagnostics in google test had to be added. Remove those once RNT doesn't issue the warning. Revert 44f9863aaf0391f4e9867dcdbd6eab2ad9028e0c.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9355
https://github.com/root-project/root/issues/9355:196,reliability,doe,doesn,196,"[RNT] Remove suppression of diagnostics when RNT leaves beta stage; Since RNT is warning that it's a beta, extra suppressions for diagnostics in google test had to be added. Remove those once RNT doesn't issue the warning. Revert 44f9863aaf0391f4e9867dcdbd6eab2ad9028e0c.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9355
https://github.com/root-project/root/issues/9355:152,safety,test,test,152,"[RNT] Remove suppression of diagnostics when RNT leaves beta stage; Since RNT is warning that it's a beta, extra suppressions for diagnostics in google test had to be added. Remove those once RNT doesn't issue the warning. Revert 44f9863aaf0391f4e9867dcdbd6eab2ad9028e0c.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9355
https://github.com/root-project/root/issues/9355:28,testability,diagno,diagnostics,28,"[RNT] Remove suppression of diagnostics when RNT leaves beta stage; Since RNT is warning that it's a beta, extra suppressions for diagnostics in google test had to be added. Remove those once RNT doesn't issue the warning. Revert 44f9863aaf0391f4e9867dcdbd6eab2ad9028e0c.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9355
https://github.com/root-project/root/issues/9355:130,testability,diagno,diagnostics,130,"[RNT] Remove suppression of diagnostics when RNT leaves beta stage; Since RNT is warning that it's a beta, extra suppressions for diagnostics in google test had to be added. Remove those once RNT doesn't issue the warning. Revert 44f9863aaf0391f4e9867dcdbd6eab2ad9028e0c.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9355
https://github.com/root-project/root/issues/9355:152,testability,test,test,152,"[RNT] Remove suppression of diagnostics when RNT leaves beta stage; Since RNT is warning that it's a beta, extra suppressions for diagnostics in google test had to be added. Remove those once RNT doesn't issue the warning. Revert 44f9863aaf0391f4e9867dcdbd6eab2ad9028e0c.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9355
https://github.com/root-project/root/issues/9356:71,deployability,stage,stage,71,[DAOS] Remove suppression of diagnostics when daos leaves experimental stage; Revert e2405a7aff84830a2ce02fa77e331d26238c702e once the daos backend stops warning. Same for e946db94d7d31277e536b40c46cb0baed41ad1fd.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9356
https://github.com/root-project/root/issues/9356:29,reliability,diagno,diagnostics,29,[DAOS] Remove suppression of diagnostics when daos leaves experimental stage; Revert e2405a7aff84830a2ce02fa77e331d26238c702e once the daos backend stops warning. Same for e946db94d7d31277e536b40c46cb0baed41ad1fd.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9356
https://github.com/root-project/root/issues/9356:29,testability,diagno,diagnostics,29,[DAOS] Remove suppression of diagnostics when daos leaves experimental stage; Revert e2405a7aff84830a2ce02fa77e331d26238c702e once the daos backend stops warning. Same for e946db94d7d31277e536b40c46cb0baed41ad1fd.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9356
https://github.com/root-project/root/issues/9356:148,usability,stop,stops,148,[DAOS] Remove suppression of diagnostics when daos leaves experimental stage; Revert e2405a7aff84830a2ce02fa77e331d26238c702e once the daos backend stops warning. Same for e946db94d7d31277e536b40c46cb0baed41ad1fd.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9356
https://github.com/root-project/root/issues/9357:5,deployability,Fail,Failing,5,[RF] Failing tutorial when pandas not installed.; Add it to the black list here:. https://github.com/root-project/root/blob/e946db94d7d31277e536b40c46cb0baed41ad1fd/tutorials/CMakeLists.txt#L682-L684. The same goes for things that require numpy.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9357
https://github.com/root-project/root/issues/9357:38,deployability,instal,installed,38,[RF] Failing tutorial when pandas not installed.; Add it to the black list here:. https://github.com/root-project/root/blob/e946db94d7d31277e536b40c46cb0baed41ad1fd/tutorials/CMakeLists.txt#L682-L684. The same goes for things that require numpy.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9357
https://github.com/root-project/root/issues/9357:5,reliability,Fail,Failing,5,[RF] Failing tutorial when pandas not installed.; Add it to the black list here:. https://github.com/root-project/root/blob/e946db94d7d31277e536b40c46cb0baed41ad1fd/tutorials/CMakeLists.txt#L682-L684. The same goes for things that require numpy.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9357
https://github.com/root-project/root/pull/9358:30,deployability,integr,integration,30,[RF] Helper functions for bin integration for simultaneous fits; This is a placeholder PR to be referenced in the ACAT 2021 presentation. More detailed description will follow.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9358
https://github.com/root-project/root/pull/9358:30,integrability,integr,integration,30,[RF] Helper functions for bin integration for simultaneous fits; This is a placeholder PR to be referenced in the ACAT 2021 presentation. More detailed description will follow.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9358
https://github.com/root-project/root/pull/9358:30,interoperability,integr,integration,30,[RF] Helper functions for bin integration for simultaneous fits; This is a placeholder PR to be referenced in the ACAT 2021 presentation. More detailed description will follow.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9358
https://github.com/root-project/root/pull/9358:30,modifiability,integr,integration,30,[RF] Helper functions for bin integration for simultaneous fits; This is a placeholder PR to be referenced in the ACAT 2021 presentation. More detailed description will follow.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9358
https://github.com/root-project/root/pull/9358:30,reliability,integr,integration,30,[RF] Helper functions for bin integration for simultaneous fits; This is a placeholder PR to be referenced in the ACAT 2021 presentation. More detailed description will follow.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9358
https://github.com/root-project/root/pull/9358:30,security,integr,integration,30,[RF] Helper functions for bin integration for simultaneous fits; This is a placeholder PR to be referenced in the ACAT 2021 presentation. More detailed description will follow.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9358
https://github.com/root-project/root/pull/9358:30,testability,integr,integration,30,[RF] Helper functions for bin integration for simultaneous fits; This is a placeholder PR to be referenced in the ACAT 2021 presentation. More detailed description will follow.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9358
https://github.com/root-project/root/pull/9358:46,testability,simul,simultaneous,46,[RF] Helper functions for bin integration for simultaneous fits; This is a placeholder PR to be referenced in the ACAT 2021 presentation. More detailed description will follow.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9358
https://github.com/root-project/root/pull/9358:5,usability,Help,Helper,5,[RF] Helper functions for bin integration for simultaneous fits; This is a placeholder PR to be referenced in the ACAT 2021 presentation. More detailed description will follow.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9358
https://github.com/root-project/root/pull/9359:4,performance,memor,memory,4,"Fix memory leak in candle plot; Projection histogram, which is created in candle plot, was not properly deleted. Also prevent to add temporary histogram, created by TCandle, to gDirectory",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9359
https://github.com/root-project/root/pull/9359:118,safety,prevent,prevent,118,"Fix memory leak in candle plot; Projection histogram, which is created in candle plot, was not properly deleted. Also prevent to add temporary histogram, created by TCandle, to gDirectory",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9359
https://github.com/root-project/root/pull/9359:118,security,preven,prevent,118,"Fix memory leak in candle plot; Projection histogram, which is created in candle plot, was not properly deleted. Also prevent to add temporary histogram, created by TCandle, to gDirectory",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9359
https://github.com/root-project/root/pull/9359:4,usability,memor,memory,4,"Fix memory leak in candle plot; Projection histogram, which is created in candle plot, was not properly deleted. Also prevent to add temporary histogram, created by TCandle, to gDirectory",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9359
https://github.com/root-project/root/issues/9360:5,deployability,Updat,Update,5,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/issues/9360:19,deployability,version,version,19,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/issues/9360:87,deployability,updat,updated,87,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/issues/9360:19,integrability,version,version,19,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/issues/9360:64,integrability,translat,translation,64,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/issues/9360:64,interoperability,translat,translation,64,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/issues/9360:19,modifiability,version,version,19,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/issues/9360:117,performance,time,time,117,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/issues/9360:48,reliability,Doe,Does,48,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/issues/9360:5,safety,Updat,Update,5,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/issues/9360:87,safety,updat,updated,87,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/issues/9360:5,security,Updat,Update,5,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/issues/9360:87,security,updat,updated,87,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/issues/9360:133,security,access,accesses,133,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/issues/9360:169,testability,context,context,169,"[RF] Update Python version of rf408 tutorial; > Does the Python translation need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function. _Originally posted by @hageboeck in https://github.com/root-project/root/issues/9352#issuecomment-982680071_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9360
https://github.com/root-project/root/pull/9361:104,integrability,repositor,repository,104,[DF][NFC] Move Spark unittests to roottest; This was the only test file for Spark backend in the `root` repository. It is better suited in `roottest`. In the sibling PR I also added the corresponding Dask unittests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9361
https://github.com/root-project/root/pull/9361:104,interoperability,repositor,repository,104,[DF][NFC] Move Spark unittests to roottest; This was the only test file for Spark backend in the `root` repository. It is better suited in `roottest`. In the sibling PR I also added the corresponding Dask unittests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9361
https://github.com/root-project/root/pull/9361:62,safety,test,test,62,[DF][NFC] Move Spark unittests to roottest; This was the only test file for Spark backend in the `root` repository. It is better suited in `roottest`. In the sibling PR I also added the corresponding Dask unittests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9361
https://github.com/root-project/root/pull/9361:21,testability,unit,unittests,21,[DF][NFC] Move Spark unittests to roottest; This was the only test file for Spark backend in the `root` repository. It is better suited in `roottest`. In the sibling PR I also added the corresponding Dask unittests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9361
https://github.com/root-project/root/pull/9361:62,testability,test,test,62,[DF][NFC] Move Spark unittests to roottest; This was the only test file for Spark backend in the `root` repository. It is better suited in `roottest`. In the sibling PR I also added the corresponding Dask unittests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9361
https://github.com/root-project/root/pull/9361:205,testability,unit,unittests,205,[DF][NFC] Move Spark unittests to roottest; This was the only test file for Spark backend in the `root` repository. It is better suited in `roottest`. In the sibling PR I also added the corresponding Dask unittests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9361
https://github.com/root-project/root/issues/9362:248,energy efficiency,Draw,Draw,248,"Candle plot with low statistic histograms makes strange output; Can be reproduced with following macro:. ```. TFile::Open(""https://root.cern/js/files/hsimple.root"");. hpxpy->GetXaxis()->SetRange(0, 5);. hpxpy->GetYaxis()->SetRange(14, 26);. hpxpy->Draw(""candle2"");. ```. ![candle_bad](https://user-images.githubusercontent.com/4936580/144286427-c18d03d5-caf2-4879-b1d9-af224ac0a1e6.png). For the first bins full interval drawn wrongly. . Rectangle around 50% of counts shown ok, but lines which should show 99.9% of existing values are absolutely wrong - they are drawn inside of 50% rectangle. . This happens while center of bin is used when searching for that interval. . If there is only non-empty bin in the histogram,. interval is 0. If one uses lower and upper bin, picture will look:. ![candle_new](https://user-images.githubusercontent.com/4936580/144287268-a9fb5eb6-c8d5-46e5-b899-25a29d6395cd.png). PR will follow soon.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:421,energy efficiency,draw,drawn,421,"Candle plot with low statistic histograms makes strange output; Can be reproduced with following macro:. ```. TFile::Open(""https://root.cern/js/files/hsimple.root"");. hpxpy->GetXaxis()->SetRange(0, 5);. hpxpy->GetYaxis()->SetRange(14, 26);. hpxpy->Draw(""candle2"");. ```. ![candle_bad](https://user-images.githubusercontent.com/4936580/144286427-c18d03d5-caf2-4879-b1d9-af224ac0a1e6.png). For the first bins full interval drawn wrongly. . Rectangle around 50% of counts shown ok, but lines which should show 99.9% of existing values are absolutely wrong - they are drawn inside of 50% rectangle. . This happens while center of bin is used when searching for that interval. . If there is only non-empty bin in the histogram,. interval is 0. If one uses lower and upper bin, picture will look:. ![candle_new](https://user-images.githubusercontent.com/4936580/144287268-a9fb5eb6-c8d5-46e5-b899-25a29d6395cd.png). PR will follow soon.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:564,energy efficiency,draw,drawn,564,"Candle plot with low statistic histograms makes strange output; Can be reproduced with following macro:. ```. TFile::Open(""https://root.cern/js/files/hsimple.root"");. hpxpy->GetXaxis()->SetRange(0, 5);. hpxpy->GetYaxis()->SetRange(14, 26);. hpxpy->Draw(""candle2"");. ```. ![candle_bad](https://user-images.githubusercontent.com/4936580/144286427-c18d03d5-caf2-4879-b1d9-af224ac0a1e6.png). For the first bins full interval drawn wrongly. . Rectangle around 50% of counts shown ok, but lines which should show 99.9% of existing values are absolutely wrong - they are drawn inside of 50% rectangle. . This happens while center of bin is used when searching for that interval. . If there is only non-empty bin in the histogram,. interval is 0. If one uses lower and upper bin, picture will look:. ![candle_new](https://user-images.githubusercontent.com/4936580/144287268-a9fb5eb6-c8d5-46e5-b899-25a29d6395cd.png). PR will follow soon.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:293,usability,user,user-images,293,"Candle plot with low statistic histograms makes strange output; Can be reproduced with following macro:. ```. TFile::Open(""https://root.cern/js/files/hsimple.root"");. hpxpy->GetXaxis()->SetRange(0, 5);. hpxpy->GetYaxis()->SetRange(14, 26);. hpxpy->Draw(""candle2"");. ```. ![candle_bad](https://user-images.githubusercontent.com/4936580/144286427-c18d03d5-caf2-4879-b1d9-af224ac0a1e6.png). For the first bins full interval drawn wrongly. . Rectangle around 50% of counts shown ok, but lines which should show 99.9% of existing values are absolutely wrong - they are drawn inside of 50% rectangle. . This happens while center of bin is used when searching for that interval. . If there is only non-empty bin in the histogram,. interval is 0. If one uses lower and upper bin, picture will look:. ![candle_new](https://user-images.githubusercontent.com/4936580/144287268-a9fb5eb6-c8d5-46e5-b899-25a29d6395cd.png). PR will follow soon.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:814,usability,user,user-images,814,"Candle plot with low statistic histograms makes strange output; Can be reproduced with following macro:. ```. TFile::Open(""https://root.cern/js/files/hsimple.root"");. hpxpy->GetXaxis()->SetRange(0, 5);. hpxpy->GetYaxis()->SetRange(14, 26);. hpxpy->Draw(""candle2"");. ```. ![candle_bad](https://user-images.githubusercontent.com/4936580/144286427-c18d03d5-caf2-4879-b1d9-af224ac0a1e6.png). For the first bins full interval drawn wrongly. . Rectangle around 50% of counts shown ok, but lines which should show 99.9% of existing values are absolutely wrong - they are drawn inside of 50% rectangle. . This happens while center of bin is used when searching for that interval. . If there is only non-empty bin in the histogram,. interval is 0. If one uses lower and upper bin, picture will look:. ![candle_new](https://user-images.githubusercontent.com/4936580/144287268-a9fb5eb6-c8d5-46e5-b899-25a29d6395cd.png). PR will follow soon.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9364:153,energy efficiency,Draw,Draw,153,"TH1::GetQuantiles provide wrong results for some usecases; Example:. ```. auto h1 = new TH1I(""h1"",""h1"", 100, -10, 10);. h1->Fill(-5);. h1->Fill(5);. h1->Draw();. Double_t quantiles[3], prob[3] = { 0.25, 0.5, 0.75 };. h1->GetQuantiles(3, quantiles, prob);. for (int n=0;n<3;n++). printf(""prob %5.2f quantile %6.3f\n"", prob[n], quantiles[n]);. ```. Output is:. ```. prob 0.25 quantile -4.900. prob 0.50 quantile 4.800. prob 0.75 quantile 5.100. ```. I would expect that for probability `0.5` quantile is near `0.0`. . Function used in candle plot and because of this feature produces confusing output.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9364
https://github.com/root-project/root/pull/9365:130,availability,failur,failure,130,"[PyROOT] Make pythonization module internal, now that ROOT.pythonizat…; …ion is the decorator. This should fix the doc generation failure for RooFit pythonizations in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2536/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9365
https://github.com/root-project/root/pull/9365:182,availability,servic,services,182,"[PyROOT] Make pythonization module internal, now that ROOT.pythonizat…; …ion is the decorator. This should fix the doc generation failure for RooFit pythonizations in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2536/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9365
https://github.com/root-project/root/pull/9365:28,deployability,modul,module,28,"[PyROOT] Make pythonization module internal, now that ROOT.pythonizat…; …ion is the decorator. This should fix the doc generation failure for RooFit pythonizations in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2536/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9365
https://github.com/root-project/root/pull/9365:130,deployability,fail,failure,130,"[PyROOT] Make pythonization module internal, now that ROOT.pythonizat…; …ion is the decorator. This should fix the doc generation failure for RooFit pythonizations in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2536/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9365
https://github.com/root-project/root/pull/9365:182,deployability,servic,services,182,"[PyROOT] Make pythonization module internal, now that ROOT.pythonizat…; …ion is the decorator. This should fix the doc generation failure for RooFit pythonizations in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2536/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9365
https://github.com/root-project/root/pull/9365:182,integrability,servic,services,182,"[PyROOT] Make pythonization module internal, now that ROOT.pythonizat…; …ion is the decorator. This should fix the doc generation failure for RooFit pythonizations in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2536/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9365
https://github.com/root-project/root/pull/9365:28,modifiability,modul,module,28,"[PyROOT] Make pythonization module internal, now that ROOT.pythonizat…; …ion is the decorator. This should fix the doc generation failure for RooFit pythonizations in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2536/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9365
https://github.com/root-project/root/pull/9365:84,modifiability,deco,decorator,84,"[PyROOT] Make pythonization module internal, now that ROOT.pythonizat…; …ion is the decorator. This should fix the doc generation failure for RooFit pythonizations in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2536/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9365
https://github.com/root-project/root/pull/9365:182,modifiability,servic,services,182,"[PyROOT] Make pythonization module internal, now that ROOT.pythonizat…; …ion is the decorator. This should fix the doc generation failure for RooFit pythonizations in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2536/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9365
https://github.com/root-project/root/pull/9365:130,performance,failur,failure,130,"[PyROOT] Make pythonization module internal, now that ROOT.pythonizat…; …ion is the decorator. This should fix the doc generation failure for RooFit pythonizations in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2536/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9365
https://github.com/root-project/root/pull/9365:130,reliability,fail,failure,130,"[PyROOT] Make pythonization module internal, now that ROOT.pythonizat…; …ion is the decorator. This should fix the doc generation failure for RooFit pythonizations in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2536/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9365
https://github.com/root-project/root/pull/9365:28,safety,modul,module,28,"[PyROOT] Make pythonization module internal, now that ROOT.pythonizat…; …ion is the decorator. This should fix the doc generation failure for RooFit pythonizations in https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/2536/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9365
https://github.com/root-project/root/issues/9366:734,availability,error,errors,734,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:743,availability,Error,Error,743,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:898,availability,avail,available,898,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:940,availability,error,error,940,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:2212,availability,failur,failure,2212,"ssing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files). 3.Is it possible to develop a method for snapshot to store only the required branches and not all. It can help with saving plenty of space on the servers. Thank you in advance for looking into this issue and sorry about the wordy description. Github links:. **RDF opening the TTree datasets**: https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1464. **RDF opening the TChain datasets**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1486. **Snapshot**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1753 ,. https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L2249.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1391,deployability,version,version,1391,"the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files). 3.Is it possible to develop a method for snapshot to store only the required branches and not all. It can help with saving plenty of spa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:2212,deployability,fail,failure,2212,"ssing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files). 3.Is it possible to develop a method for snapshot to store only the required branches and not all. It can help with saving plenty of space on the servers. Thank you in advance for looking into this issue and sorry about the wordy description. Github links:. **RDF opening the TTree datasets**: https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1464. **RDF opening the TChain datasets**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1486. **Snapshot**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1753 ,. https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L2249.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:21,integrability,event,event,21,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:607,integrability,event,events,607,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1196,integrability,event,events,1196," my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1233,integrability,filter,filters,1233,"ng** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing bra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1322,integrability,event,events,1322,"ethod and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files). 3.Is it possible to develop a method for snapshot to store only th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1391,integrability,version,version,1391,"the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files). 3.Is it possible to develop a method for snapshot to store only the required branches and not all. It can help with saving plenty of spa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1768,integrability,event,events,1768,"se::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files). 3.Is it possible to develop a method for snapshot to store only the required branches and not all. It can help with saving plenty of space on the servers. Thank you in advance for looking into this issue and sorry about the wordy description. Github links:. **RDF opening the TTree datasets**: https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1464. **RDF opening the TChain datasets**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1391,modifiability,version,version,1391,"the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files). 3.Is it possible to develop a method for snapshot to store only the required branches and not all. It can help with saving plenty of spa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:734,performance,error,errors,734,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:743,performance,Error,Error,743,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:940,performance,error,error,940,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:2212,performance,failur,failure,2212,"ssing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files). 3.Is it possible to develop a method for snapshot to store only the required branches and not all. It can help with saving plenty of space on the servers. Thank you in advance for looking into this issue and sorry about the wordy description. Github links:. **RDF opening the TTree datasets**: https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1464. **RDF opening the TChain datasets**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1486. **Snapshot**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1753 ,. https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L2249.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:800,reliability,doe,does,800,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:898,reliability,availab,available,898,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:2212,reliability,fail,failure,2212,"ssing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files). 3.Is it possible to develop a method for snapshot to store only the required branches and not all. It can help with saving plenty of space on the servers. Thank you in advance for looking into this issue and sorry about the wordy description. Github links:. **RDF opening the TTree datasets**: https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1464. **RDF opening the TChain datasets**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1486. **Snapshot**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1753 ,. https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L2249.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:734,safety,error,errors,734,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:743,safety,Error,Error,743,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:898,safety,avail,available,898,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:940,safety,error,error,940,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:585,security,sign,significant,585,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:898,security,availab,available,898,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:734,usability,error,errors,734,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:743,usability,Error,Error,743,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:940,usability,error,error,940,"Snapshot can't store event affected by missing ""TBranch"" across different.; Dear all,. **Description :**. I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis. I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1297,usability,behavi,behaviour,1297,"es**. . I changed the method and started storing the results using snapshot. **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots. Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets. I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files). 3.Is it possible to develop a method for sn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1844,usability,help,help,1844,"ilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files). 3.Is it possible to develop a method for snapshot to store only the required branches and not all. It can help with saving plenty of space on the servers. Thank you in advance for looking into this issue and sorry about the wordy description. Github links:. **RDF opening the TTree datasets**: https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1464. **RDF opening the TChain datasets**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1486. **Snapshot**:https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1887,usability,behavi,behaviour,1887,") for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files). 3.Is it possible to develop a method for snapshot to store only the required branches and not all. It can help with saving plenty of space on the servers. Thank you in advance for looking into this issue and sorry about the wordy description. Github links:. **RDF opening the TTree datasets**: https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1464. **RDF opening the TChain datasets**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1486. **Snapshot**:https://github.com/brunel-physics/Shirin-Codes/blob/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1954,usability,behavi,behaviour,1954,"ted across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files). 3.Is it possible to develop a method for snapshot to store only the required branches and not all. It can help with saving plenty of space on the servers. Thank you in advance for looking into this issue and sorry about the wordy description. Github links:. **RDF opening the TTree datasets**: https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1464. **RDF opening the TChain datasets**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1486. **Snapshot**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1753 ,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:2365,usability,help,help,2365,"ssing TBranches"" in my analysis** nor am trying to plot them. When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:. 1. Reading events TTree/TChain. 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF. 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**. Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)? Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches? **Expected behaviour:**. 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches. 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files). 3.Is it possible to develop a method for snapshot to store only the required branches and not all. It can help with saving plenty of space on the servers. Thank you in advance for looking into this issue and sorry about the wordy description. Github links:. **RDF opening the TTree datasets**: https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1464. **RDF opening the TChain datasets**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1486. **Snapshot**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1753 ,. https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L2249.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/pull/9367:5,safety,Test,Test,5,[RF] Test developments in the CI; This is just for testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9367
https://github.com/root-project/root/pull/9367:51,safety,test,testing,51,[RF] Test developments in the CI; This is just for testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9367
https://github.com/root-project/root/pull/9367:5,testability,Test,Test,5,[RF] Test developments in the CI; This is just for testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9367
https://github.com/root-project/root/pull/9367:51,testability,test,testing,51,[RF] Test developments in the CI; This is just for testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9367
https://github.com/root-project/root/pull/9368:184,availability,state,statement,184,Fix warning of unused variable in roofit; . # This Pull request:. Casted variable rc to void in roofit/multiprocess/src/Messenger.cxx to disable the warning. It is used only in assert statement besides the cast. ## Changes or fixes: roofit/multiprocess/src/Messenger.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9368
https://github.com/root-project/root/pull/9368:323,deployability,updat,updated,323,Fix warning of unused variable in roofit; . # This Pull request:. Casted variable rc to void in roofit/multiprocess/src/Messenger.cxx to disable the warning. It is used only in assert statement besides the cast. ## Changes or fixes: roofit/multiprocess/src/Messenger.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9368
https://github.com/root-project/root/pull/9368:184,integrability,state,statement,184,Fix warning of unused variable in roofit; . # This Pull request:. Casted variable rc to void in roofit/multiprocess/src/Messenger.cxx to disable the warning. It is used only in assert statement besides the cast. ## Changes or fixes: roofit/multiprocess/src/Messenger.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9368
https://github.com/root-project/root/pull/9368:22,modifiability,variab,variable,22,Fix warning of unused variable in roofit; . # This Pull request:. Casted variable rc to void in roofit/multiprocess/src/Messenger.cxx to disable the warning. It is used only in assert statement besides the cast. ## Changes or fixes: roofit/multiprocess/src/Messenger.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9368
https://github.com/root-project/root/pull/9368:73,modifiability,variab,variable,73,Fix warning of unused variable in roofit; . # This Pull request:. Casted variable rc to void in roofit/multiprocess/src/Messenger.cxx to disable the warning. It is used only in assert statement besides the cast. ## Changes or fixes: roofit/multiprocess/src/Messenger.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9368
https://github.com/root-project/root/pull/9368:293,safety,test,tested,293,Fix warning of unused variable in roofit; . # This Pull request:. Casted variable rc to void in roofit/multiprocess/src/Messenger.cxx to disable the warning. It is used only in assert statement besides the cast. ## Changes or fixes: roofit/multiprocess/src/Messenger.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9368
https://github.com/root-project/root/pull/9368:323,safety,updat,updated,323,Fix warning of unused variable in roofit; . # This Pull request:. Casted variable rc to void in roofit/multiprocess/src/Messenger.cxx to disable the warning. It is used only in assert statement besides the cast. ## Changes or fixes: roofit/multiprocess/src/Messenger.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9368
https://github.com/root-project/root/pull/9368:323,security,updat,updated,323,Fix warning of unused variable in roofit; . # This Pull request:. Casted variable rc to void in roofit/multiprocess/src/Messenger.cxx to disable the warning. It is used only in assert statement besides the cast. ## Changes or fixes: roofit/multiprocess/src/Messenger.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9368
https://github.com/root-project/root/pull/9368:177,testability,assert,assert,177,Fix warning of unused variable in roofit; . # This Pull request:. Casted variable rc to void in roofit/multiprocess/src/Messenger.cxx to disable the warning. It is used only in assert statement besides the cast. ## Changes or fixes: roofit/multiprocess/src/Messenger.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9368
https://github.com/root-project/root/pull/9368:293,testability,test,tested,293,Fix warning of unused variable in roofit; . # This Pull request:. Casted variable rc to void in roofit/multiprocess/src/Messenger.cxx to disable the warning. It is used only in assert statement besides the cast. ## Changes or fixes: roofit/multiprocess/src/Messenger.cxx. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9368
https://github.com/root-project/root/pull/9369:18,availability,operat,operators,18,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:29,availability,SLi,SLice,29,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:213,availability,operat,operators,213,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:232,availability,Sli,Slice,232,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:132,deployability,contain,containing,132,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:153,modifiability,layer,layers,153,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:190,modifiability,layer,layer,190,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:66,performance,network,networks,66,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:123,performance,network,networks,123,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:29,reliability,SLi,SLice,29,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:232,reliability,Sli,Slice,232,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:66,security,network,networks,66,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:123,security,network,networks,123,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:106,testability,simpl,simple,106,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:48,usability,support,support,48,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/pull/9369:106,usability,simpl,simple,106,"[TMVA][SOFIE] New operators (SLice, Squeeze) to support recurrent networks ; With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. . The new added operators are: . - Slice. - Squeeze/Unsqueeze .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/issues/9370:1185,availability,error,error,1185," sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a pa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1448,availability,error,error,1448,"ld-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with oth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1697,availability,error,error,1697,"ct_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1932,availability,avail,available,1932,"ers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: sourc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2813,availability,Operat,Operating,2813," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2898,availability,down,download,2898," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:44,deployability,fail,fails,44,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:53,deployability,build,build,53,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:171,deployability,fail,fails,171,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:180,deployability,build,build,180,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:282,deployability,build,build-release,282,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:448,deployability,build,build-release,448,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:594,deployability,build,build-release,594,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:729,deployability,build,build-release,729,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:854,deployability,build,build-release,854,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1088,deployability,build,build-release,1088,"icates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1351,deployability,build,build-release,1351,"rnal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1600,deployability,build,build-release,1600,"/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dmi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1880,deployability,version,version,1880,"x/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2024,deployability,version,versions,2024," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2317,deployability,build,build,2317," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2460,deployability,version,versions,2460," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2495,deployability,build,build,2495," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2686,deployability,Build,Build,2686," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2734,deployability,log,logs,2734," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2793,deployability,version,version,2793," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2880,deployability,instal,install,2880," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2939,deployability,build,build,2939," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:199,integrability,messag,messages,199,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1880,integrability,version,version,1880,"x/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1994,integrability,configur,configure,1994," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2024,integrability,version,versions,2024," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2046,integrability,configur,configuring,2046," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2460,integrability,version,versions,2460," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2476,integrability,configur,configure,2476," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2551,integrability,configur,configuring,2551," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2764,integrability,messag,messages,2764," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2793,integrability,version,version,2793," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:199,interoperability,messag,messages,199,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2764,interoperability,messag,messages,2764," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1880,modifiability,version,version,1880,"x/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1994,modifiability,configur,configure,1994," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2024,modifiability,version,versions,2024," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2046,modifiability,configur,configuring,2046," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2460,modifiability,version,versions,2460," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2476,modifiability,configur,configure,2476," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2551,modifiability,configur,configuring,2551," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2793,modifiability,version,version,2793," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1185,performance,error,error,1185," sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a pa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1448,performance,error,error,1448,"ld-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with oth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1697,performance,error,error,1697,"ct_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:44,reliability,fail,fails,44,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:171,reliability,fail,fails,171,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1932,reliability,availab,available,1932,"ers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: sourc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:32,safety,test,testing,32,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:375,safety,test,test-internal,375,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:532,safety,test,test,532,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:993,safety,test,testing,993,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1185,safety,error,error,1185," sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a pa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1448,safety,error,error,1448,"ld-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with oth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1697,safety,error,error,1697,"ct_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1932,safety,avail,available,1932,"ers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: sourc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2271,safety,input,input,2271," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2734,safety,log,logs,2734," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1494,security,token,token,1494,"ogletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1932,security,availab,available,1932,"ers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: sourc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1994,security,configur,configure,1994," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2046,security,configur,configuring,2046," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2476,security,configur,configure,2476," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2551,security,configur,configuring,2551," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2734,security,log,logs,2734," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:32,testability,test,testing,32,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:375,testability,test,test-internal,375,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:532,testability,test,test,532,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:993,testability,test,testing,993,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2734,testability,log,logs,2734," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2973,testability,context,context,2973," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:238,usability,user,user,238,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:404,usability,user,user,404,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:550,usability,user,user,550,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:685,usability,user,user,685,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:810,usability,user,user,810,"GoogleTest (and hence ROOT with testing on) fails to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not config",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1044,usability,user,user,1044,"ils to build on GCC 4.8.5; - [x] Checked for duplicates. ### Describe the bug. When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1185,usability,error,error,1185," sample of messages:. ```. In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a pa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1307,usability,user,user,1307,"efix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1448,usability,error,error,1448,"ld-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with oth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1556,usability,user,user,1556,"s/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,. from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1697,usability,error,error,1697,"ct_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1836,usability,indicat,indicates,1836,"211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:1967,usability,behavi,behavior,1967,"static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additiona",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2126,usability,behavi,behavior,2126," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:2271,usability,input,input,2271," bool testing::internal::MatcherBase<T>::IsInlined()’:. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token. std::is_trivially_copy_constructible<M>::value &&. ^. /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared. std::is_trivially_copy_constructible<M>::value &&. ^. ```. There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior. CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup. 1. ROOT version: master. 2. Operating system: CentOS 7. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9371:1303,deployability,Build,Build,1303,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1429,deployability,Build,Build,1429,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:442,integrability,pub,public,442,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:613,integrability,pub,public,613,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1215,interoperability,share,shared,1215,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:199,safety,prevent,prevent,199,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:434,safety,Test,Test,434,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:651,safety,test,testio,651,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:663,safety,Test,Test,663,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:741,safety,test,test,741,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:869,safety,test,test,869,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:907,safety,Test,Test,907,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1126,safety,test,testio,1126,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1161,safety,test,testio,1161,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1311,safety,Test,Test,1311,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:199,security,preven,prevent,199,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:434,testability,Test,Test,434,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:651,testability,test,testio,651,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:663,testability,Test,Test,663,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:741,testability,test,test,741,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:869,testability,test,test,869,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:907,testability,Test,Test,907,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1126,testability,test,testio,1126,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1161,testability,test,testio,1161,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:1311,testability,Test,Test,1311,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:833,usability,Close,Close,833,"Spurious(?) warnings persisting interpreted classes; In some cases when trying to persist classes from ACLIC or the interpreter, there are warnings about missing dictionaries, which apparently don't prevent correctly persisting the class. Real use case is persisting boost histogram templates instantiated with PyROOT, but a standalone example is included below. ```. #include ""TFile.h"". #include <atomic>. #include <iostream>. class Test {. public:. std::atomic<double> &data() { return data_; }. const std::atomic<double> &data() const { return data_; }. private:. std::atomic<double> data_;. };. class Test2 : public std::atomic<double> {. };. int testio() {. Test t;. t.data() = 5.;. Test2 t2;. t2.store(5.);. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObject(&t, ""t"");. fout->WriteObject(&t2, ""t2"");. fout->Close();. TFile *fin = TFile::Open(""test.root"");. auto &tread = *fin->Get<Test>(""t"");. auto &tread2 = *fin->Get<Test2>(""t2"");. std::cout << tread.data() << std::endl;. std::cout << tread2 << std::endl;. return 0;. }. ```. The output is:. ```. [bendavid@docker@lxplus8s10 boostiotest]$ root -l testio.cpp+. root [0] . Processing testio.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /home/b/bendavid/boostiotest/./testio_cpp.so. Warning in <TStreamerInfo::Build>: Test: atomic<double> has no streamer or dictionary, data member ""data_"" will not be saved. Warning in <TStreamerInfo::Build>: Test2: base class atomic<double> has no streamer or dictionary it will not be saved. 5. 5. (int) 0. ```. So apparently both classes (and the std::atomic<double> data member and/or base class) are persisted just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9372:299,deployability,releas,release,299,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1915,deployability,fail,fail,1915,"ltaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:180,energy efficiency,model,models,180,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:698,energy efficiency,load,loadExportKeys,698,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:794,energy efficiency,load,loadFactoryExpressions,794,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:903,energy efficiency,model,model,903,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1241,energy efficiency,model,model,1241,"l significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1248,energy efficiency,model,model,1248,"ficant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1257,energy efficiency,model,model,1257,"gs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1505,energy efficiency,model,model,1505," mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:2078,energy efficiency,model,model,2078,"RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:2129,energy efficiency,model,model,2129,"RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:2355,energy efficiency,model,model,2355,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:2406,energy efficiency,model,model,2406,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:3046,energy efficiency,model,model,3046,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:3257,energy efficiency,model,model,3257,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:947,integrability,compon,component,947,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:947,interoperability,compon,component,947,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:947,modifiability,compon,component,947,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:2720,modifiability,Paramet,Parameter,2720,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:698,performance,load,loadExportKeys,698,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:794,performance,load,loadFactoryExpressions,794,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1915,reliability,fail,fail,1915,"ltaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:898,safety,test,test,898,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:3211,safety,test,test,3211,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:180,security,model,models,180,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:246,security,sign,significant,246,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:903,security,model,model,903,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1241,security,model,model,1241,"l significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1248,security,model,model,1248,"ficant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1257,security,model,model,1257,"gs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1411,security,control,control,1411,"oSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1505,security,model,model,1505," mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1551,security,control,control,1551," keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:2078,security,model,model,2078,"RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:2129,security,model,model,2129,"RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:2355,security,model,model,2355,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:2406,security,model,model,2406,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:3010,security,control,control,3010,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:3046,security,model,model,3046,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:3257,security,model,model,3257,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:197,testability,simpl,simple,197,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:898,testability,test,test,898,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1411,testability,control,control,1411,"oSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1462,testability,simul,simultaneous,1462,"""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfpr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1551,testability,control,control,1551," keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:2642,testability,simul,simultaneous,2642,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:3010,testability,control,control,3010,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:3094,testability,simul,simultaneous,3094,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:3206,testability,unit,unit,3206,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:3211,testability,test,test,3211,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:3239,testability,verif,verifies,3239,"l"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children of the RooSimultaneous). They should only be in the top level, while the RooSimultaneous only has the names, e.g.:. ```json. ""simPdf"": {. ""channels"": {. ""control"": ""model_ctl"",. ""physics"": ""model"". },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. ```. 3. The pdfs `g1` and `g2` are missing in the JSON. These problems need to be fixed and a unit test should be written that verifies that the model above can be successfully serialized and de-serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:31,usability,tool,tool,31,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:197,usability,simpl,simple,197,"[RF] Known bugs in RooFit JSON tool; PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++. #include ""RooRealVar.h"". #include ""RooSimultaneous.h"". #include ""RooCategory.h"". #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(). {. using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool. std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1657,usability,tool,tool,1657,"env(""ROOTSYS"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1668,usability,tool,tool,1668,"S"");. RooJSONFactoryWSTool::loadExportKeys(. rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1754,usability,tool,tool,1754,"rtkeys.json"");. RooJSONFactoryWSTool::loadFactoryExpressions(. rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1844,usability,tool,tool,1844,"oFitHS3_wsfactoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/issues/9372:1855,usability,tool,tool,1855,"actoryexpressions.json"". );. // Create a test model: RooSimultaneous with Gaussian in one component, and. // product of two Gaussians in the other. RooRealVar x(""x"", ""x"", -8, 8);. RooRealVar mean(""mean"", ""mean"", 0, -8, 8);. RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);. RooGaussian g1(""g1"", ""g1"", x, mean, sigma);. RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));. RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});. RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);. RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});. RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);. simPdf.addPdf(model, ""physics"");. simPdf.addPdf(model_ctl, ""control"");. // Export to JSON. {. RooWorkspace ws{""workspace""};. ws.import(simPdf);. RooJSONFactoryWSTool tool{ws};. tool.exportJSON(""simPdf.json"");. // Output can be pretty-printed with `python -m json.tool simPdf.json`. }. // Import JSON. RooWorkspace ws{""workspace""};. RooJSONFactoryWSTool tool{ws};. tool.importJSON(""simPdf.json"");. // At the moment this will fail, because the Gaussians in the product are. // missing in the JSON dump! }. ```. The JSON dump will look like this:. ```json. {. ""functions"": {},. ""pdfs"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". },. ""simPdf"": {. ""channels"": {. ""model"": {. ""factors"": [. ""g1"",. ""g2"". ],. ""name"": ""model"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""pdfprod"". },. ""model_ctl"": {. ""mean"": ""mean"",. ""sigma"": ""sigma"",. ""tags"": [. ""SnapShot_ExtRefClone"". ],. ""type"": ""Gaussian"",. ""x"": ""x"". }. },. ""tags"": [. ""toplevel"". ],. ""type"": ""simultaneous"". }. }. }. ```. Here are the problems that need to be fixed:. 1. Parameter definition (in particular with ranges) is missing. 2. `mode` and `model_ctl` are duplicate (both in pdf level and as children o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9372
https://github.com/root-project/root/pull/9373:52,deployability,depend,depends,52,[RF] Tell CMake that `rf409_NumPyPandasToRooFit.py` depends on NumPy/Pandas; This closes GitHub issue #9357.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9373
https://github.com/root-project/root/pull/9373:52,integrability,depend,depends,52,[RF] Tell CMake that `rf409_NumPyPandasToRooFit.py` depends on NumPy/Pandas; This closes GitHub issue #9357.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9373
https://github.com/root-project/root/pull/9373:52,modifiability,depend,depends,52,[RF] Tell CMake that `rf409_NumPyPandasToRooFit.py` depends on NumPy/Pandas; This closes GitHub issue #9357.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9373
https://github.com/root-project/root/pull/9373:52,safety,depend,depends,52,[RF] Tell CMake that `rf409_NumPyPandasToRooFit.py` depends on NumPy/Pandas; This closes GitHub issue #9357.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9373
https://github.com/root-project/root/pull/9373:52,testability,depend,depends,52,[RF] Tell CMake that `rf409_NumPyPandasToRooFit.py` depends on NumPy/Pandas; This closes GitHub issue #9357.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9373
https://github.com/root-project/root/pull/9373:82,usability,close,closes,82,[RF] Tell CMake that `rf409_NumPyPandasToRooFit.py` depends on NumPy/Pandas; This closes GitHub issue #9357.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9373
https://github.com/root-project/root/pull/9374:184,availability,failur,failures,184,"[RF] Fix streamer info warnings in RooFit; This PR is to address GitHub issue https://github.com/root-project/root/issues/9353. So far, it is only a revert of d91509e so I can see the failures in the CI (on my system, the RooFit tests are still passing even after reverting said commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:184,deployability,fail,failures,184,"[RF] Fix streamer info warnings in RooFit; This PR is to address GitHub issue https://github.com/root-project/root/issues/9353. So far, it is only a revert of d91509e so I can see the failures in the CI (on my system, the RooFit tests are still passing even after reverting said commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:184,performance,failur,failures,184,"[RF] Fix streamer info warnings in RooFit; This PR is to address GitHub issue https://github.com/root-project/root/issues/9353. So far, it is only a revert of d91509e so I can see the failures in the CI (on my system, the RooFit tests are still passing even after reverting said commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:184,reliability,fail,failures,184,"[RF] Fix streamer info warnings in RooFit; This PR is to address GitHub issue https://github.com/root-project/root/issues/9353. So far, it is only a revert of d91509e so I can see the failures in the CI (on my system, the RooFit tests are still passing even after reverting said commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:229,safety,test,tests,229,"[RF] Fix streamer info warnings in RooFit; This PR is to address GitHub issue https://github.com/root-project/root/issues/9353. So far, it is only a revert of d91509e so I can see the failures in the CI (on my system, the RooFit tests are still passing even after reverting said commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9374:229,testability,test,tests,229,"[RF] Fix streamer info warnings in RooFit; This PR is to address GitHub issue https://github.com/root-project/root/issues/9353. So far, it is only a revert of d91509e so I can see the failures in the CI (on my system, the RooFit tests are still passing even after reverting said commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9374
https://github.com/root-project/root/pull/9375:103,deployability,releas,release,103,[relnotes] Add RooFit::MultiProcess and TestStatistics; Add RooFit::MultiProcess and TestStatistics to release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9375
https://github.com/root-project/root/pull/9375:40,safety,Test,TestStatistics,40,[relnotes] Add RooFit::MultiProcess and TestStatistics; Add RooFit::MultiProcess and TestStatistics to release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9375
https://github.com/root-project/root/pull/9375:85,safety,Test,TestStatistics,85,[relnotes] Add RooFit::MultiProcess and TestStatistics; Add RooFit::MultiProcess and TestStatistics to release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9375
https://github.com/root-project/root/pull/9375:40,testability,Test,TestStatistics,40,[relnotes] Add RooFit::MultiProcess and TestStatistics; Add RooFit::MultiProcess and TestStatistics to release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9375
https://github.com/root-project/root/pull/9375:85,testability,Test,TestStatistics,85,[relnotes] Add RooFit::MultiProcess and TestStatistics; Add RooFit::MultiProcess and TestStatistics to release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9375
https://github.com/root-project/root/pull/9376:45,availability,operat,operator,45,"[VecOps] Remove expensive asserts from RVec::operator[]; As RVec is a class template, even if ROOT is compiled with -DNDEBUG. these asserts might be compiled in user code depending on whether or. not they remember to include `-DNDEBUG` in their debug flags. I think the performance penalty is too high w.r.t. the benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9376
https://github.com/root-project/root/pull/9376:171,deployability,depend,depending,171,"[VecOps] Remove expensive asserts from RVec::operator[]; As RVec is a class template, even if ROOT is compiled with -DNDEBUG. these asserts might be compiled in user code depending on whether or. not they remember to include `-DNDEBUG` in their debug flags. I think the performance penalty is too high w.r.t. the benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9376
https://github.com/root-project/root/pull/9376:171,integrability,depend,depending,171,"[VecOps] Remove expensive asserts from RVec::operator[]; As RVec is a class template, even if ROOT is compiled with -DNDEBUG. these asserts might be compiled in user code depending on whether or. not they remember to include `-DNDEBUG` in their debug flags. I think the performance penalty is too high w.r.t. the benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9376
https://github.com/root-project/root/pull/9376:171,modifiability,depend,depending,171,"[VecOps] Remove expensive asserts from RVec::operator[]; As RVec is a class template, even if ROOT is compiled with -DNDEBUG. these asserts might be compiled in user code depending on whether or. not they remember to include `-DNDEBUG` in their debug flags. I think the performance penalty is too high w.r.t. the benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9376
https://github.com/root-project/root/pull/9376:270,performance,perform,performance,270,"[VecOps] Remove expensive asserts from RVec::operator[]; As RVec is a class template, even if ROOT is compiled with -DNDEBUG. these asserts might be compiled in user code depending on whether or. not they remember to include `-DNDEBUG` in their debug flags. I think the performance penalty is too high w.r.t. the benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9376
https://github.com/root-project/root/pull/9376:171,safety,depend,depending,171,"[VecOps] Remove expensive asserts from RVec::operator[]; As RVec is a class template, even if ROOT is compiled with -DNDEBUG. these asserts might be compiled in user code depending on whether or. not they remember to include `-DNDEBUG` in their debug flags. I think the performance penalty is too high w.r.t. the benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9376
https://github.com/root-project/root/pull/9376:205,safety,reme,remember,205,"[VecOps] Remove expensive asserts from RVec::operator[]; As RVec is a class template, even if ROOT is compiled with -DNDEBUG. these asserts might be compiled in user code depending on whether or. not they remember to include `-DNDEBUG` in their debug flags. I think the performance penalty is too high w.r.t. the benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9376
https://github.com/root-project/root/pull/9376:26,testability,assert,asserts,26,"[VecOps] Remove expensive asserts from RVec::operator[]; As RVec is a class template, even if ROOT is compiled with -DNDEBUG. these asserts might be compiled in user code depending on whether or. not they remember to include `-DNDEBUG` in their debug flags. I think the performance penalty is too high w.r.t. the benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9376
https://github.com/root-project/root/pull/9376:132,testability,assert,asserts,132,"[VecOps] Remove expensive asserts from RVec::operator[]; As RVec is a class template, even if ROOT is compiled with -DNDEBUG. these asserts might be compiled in user code depending on whether or. not they remember to include `-DNDEBUG` in their debug flags. I think the performance penalty is too high w.r.t. the benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9376
https://github.com/root-project/root/pull/9376:171,testability,depend,depending,171,"[VecOps] Remove expensive asserts from RVec::operator[]; As RVec is a class template, even if ROOT is compiled with -DNDEBUG. these asserts might be compiled in user code depending on whether or. not they remember to include `-DNDEBUG` in their debug flags. I think the performance penalty is too high w.r.t. the benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9376
https://github.com/root-project/root/pull/9376:161,usability,user,user,161,"[VecOps] Remove expensive asserts from RVec::operator[]; As RVec is a class template, even if ROOT is compiled with -DNDEBUG. these asserts might be compiled in user code depending on whether or. not they remember to include `-DNDEBUG` in their debug flags. I think the performance penalty is too high w.r.t. the benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9376
https://github.com/root-project/root/pull/9376:270,usability,perform,performance,270,"[VecOps] Remove expensive asserts from RVec::operator[]; As RVec is a class template, even if ROOT is compiled with -DNDEBUG. these asserts might be compiled in user code depending on whether or. not they remember to include `-DNDEBUG` in their debug flags. I think the performance penalty is too high w.r.t. the benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9376
https://github.com/root-project/root/pull/9378:13,energy efficiency,alloc,allocate,13,[VecOps] Pre-allocate vectors of the appropriate size in Combinations; That's better than calling emplace_back a bunch of times.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/pull/9378:122,performance,time,times,122,[VecOps] Pre-allocate vectors of the appropriate size in Combinations; That's better than calling emplace_back a bunch of times.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9378
https://github.com/root-project/root/issues/9379:80,energy efficiency,current,current,80,"Make sure cling also adds `-DNDEBUG` to the compilation flags besides `-O1`; In current master, cling's default switched to `-O1`. We probably also want `-DNDEBUG` as a compilation flag for the same reasons and we are currently not 100% sure that's the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9379
https://github.com/root-project/root/issues/9379:218,energy efficiency,current,currently,218,"Make sure cling also adds `-DNDEBUG` to the compilation flags besides `-O1`; In current master, cling's default switched to `-O1`. We probably also want `-DNDEBUG` as a compilation flag for the same reasons and we are currently not 100% sure that's the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9379
https://github.com/root-project/root/pull/9380:7,availability,Restor,Restore,7,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297. cc: @smuzaffar,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:64,deployability,patch,patch,64,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297. cc: @smuzaffar,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:7,reliability,Restor,Restore,7,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297. cc: @smuzaffar,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:64,safety,patch,patch,64,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297. cc: @smuzaffar,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:97,safety,review,reviews,97,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297. cc: @smuzaffar,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:64,security,patch,patch,64,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297. cc: @smuzaffar,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:97,testability,review,reviews,97,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297. cc: @smuzaffar,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/pull/9380:27,usability,support,support,27,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297. cc: @smuzaffar,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9380
https://github.com/root-project/root/issues/9381:490,availability,slo,slot,490,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:1186,availability,error,error,1186,"ssue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using the LCG view hides the problem, because the needed header is part if the generic include directory of the view. ### Setup. ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:28,deployability,fail,fails,28,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:37,deployability,build,build,37,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:454,deployability,Build,Building,454,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:479,deployability,stack,stack,479,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:525,deployability,log,logs,525,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:565,deployability,build,buildid,565,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:593,deployability,Build,Building,593,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:692,deployability,Build,Building,692,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:777,deployability,Build,Building,777,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:871,deployability,Build,Building,871,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:966,deployability,Build,Building,966,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:1060,deployability,build,build,1060,"nn-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:1105,deployability,build,build,1105,"Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using the LCG view hides the problem, because the ne",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:1667,deployability,releas,releases,1667,"). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using the LCG view hides the problem, because the needed header is part if the generic include directory of the view. ### Setup. ROOT master. cmake ... -Dbuiltin_nlohmannjson=OFF .... centos7 centos 8, ubuntu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:1778,deployability,build,build,1778,"). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using the LCG view hides the problem, because the needed header is part if the generic include directory of the view. ### Setup. ROOT master. cmake ... -Dbuiltin_nlohmannjson=OFF .... centos7 centos 8, ubuntu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:1850,deployability,build,build,1850,"). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using the LCG view hides the problem, because the needed header is part if the generic include directory of the view. ### Setup. ROOT master. cmake ... -Dbuiltin_nlohmannjson=OFF .... centos7 centos 8, ubuntu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:2028,deployability,instal,installed,2028,"). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using the LCG view hides the problem, because the needed header is part if the generic include directory of the view. ### Setup. ROOT master. cmake ... -Dbuiltin_nlohmannjson=OFF .... centos7 centos 8, ubuntu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:1186,performance,error,error,1186,"ssue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using the LCG view hides the problem, because the needed header is part if the generic include directory of the view. ### Setup. ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:28,reliability,fail,fails,28,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:490,reliability,slo,slot,490,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:525,safety,log,logs,525,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:1186,safety,error,error,1186,"ssue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using the LCG view hides the problem, because the needed header is part if the generic include directory of the view. ### Setup. ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:1741,safety,test,testrootjson,1741,"). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using the LCG view hides the problem, because the needed header is part if the generic include directory of the view. ### Setup. ROOT master. cmake ... -Dbuiltin_nlohmannjson=OFF .... centos7 centos 8, ubuntu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:1758,safety,test,testrootjson,1758,"). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using the LCG view hides the problem, because the needed header is part if the generic include directory of the view. ### Setup. ROOT master. cmake ... -Dbuiltin_nlohmannjson=OFF .... centos7 centos 8, ubuntu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
