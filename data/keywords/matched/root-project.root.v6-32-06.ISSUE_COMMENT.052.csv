id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/9253:1091,energy efficiency,core,core,1091,"/builddir/root-6.24.06/core/unix/inc -I/builddir/root-6.24.06/core/clib/res -I/builddir/root-6.24.06/core/foundation/res -I/builddir/root-6.24.06/core/base/inc -I/builddir/roo. t-6.24.06/core/clib/inc -I/builddir/root-6.24.06/core/meta/inc -I/builddir/root-6.24.06/core/cont/inc -I/builddir/root-6.24.06/core/thread/inc -I/builddir/root-6.24.06/core/textinput/inc -I/b. uilddir/root-6.24.06/core/gui/inc -I/builddir/root-6.24.06/core/foundation/inc -I/builddir/root-6.24.06/build/ginclude -DNDEBUG -fstack-clash-protection -D_FORTIFY_SOURCE=2 -mtune=generic -O2. -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1219,energy efficiency,core,core,1219,"ddir/root-6.24.06/core/base/inc -I/builddir/roo. t-6.24.06/core/clib/inc -I/builddir/root-6.24.06/core/meta/inc -I/builddir/root-6.24.06/core/cont/inc -I/builddir/root-6.24.06/core/thread/inc -I/builddir/root-6.24.06/core/textinput/inc -I/b. uilddir/root-6.24.06/core/gui/inc -I/builddir/root-6.24.06/core/foundation/inc -I/builddir/root-6.24.06/build/ginclude -DNDEBUG -fstack-clash-protection -D_FORTIFY_SOURCE=2 -mtune=generic -O2. -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1472,energy efficiency,core,core,1472,"t-6.24.06/core/gui/inc -I/builddir/root-6.24.06/core/foundation/inc -I/builddir/root-6.24.06/build/ginclude -DNDEBUG -fstack-clash-protection -D_FORTIFY_SOURCE=2 -mtune=generic -O2. -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1753,energy efficiency,core,core,1753,"Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1881,energy efficiency,core,core,1881,"ystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2134,energy efficiency,core,core,2134,"tion 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSyst",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2415,energy efficiency,core,core,2415," | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSys",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2544,energy efficiency,core,core,2544,"e: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2829,energy efficiency,core,core,2829,"ystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3113,energy efficiency,core,core,3113,"lddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3395,energy efficiency,core,core,3395,"ddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockop",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3678,energy efficiency,core,core,3678,"| if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3963,energy efficiency,core,core,3963,"id*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockop",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4246,energy efficiency,core,core,4246," | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4531,energy efficiency,core,core,4531,"*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockop",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4814,energy efficiency,core,core,4814,"if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5099,energy efficiency,core,core,5099,"*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) ||",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5382,energy efficiency,core,core,5382,"if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5667,energy efficiency,core,core,5667,"*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:6945,energy efficiency,model,models,6945,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:6472,integrability,pub,pubs,6472," {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:6706,integrability,buffer,buffer,6706,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:6865,integrability,interfac,interfaces,6865,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:7055,integrability,interfac,interfaces,7055,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:7213,integrability,standardiz,standardization,7213,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1273,interoperability,convers,conversion,1273,"6/core/clib/inc -I/builddir/root-6.24.06/core/meta/inc -I/builddir/root-6.24.06/core/cont/inc -I/builddir/root-6.24.06/core/thread/inc -I/builddir/root-6.24.06/core/textinput/inc -I/b. uilddir/root-6.24.06/core/gui/inc -I/builddir/root-6.24.06/core/foundation/inc -I/builddir/root-6.24.06/build/ginclude -DNDEBUG -fstack-clash-protection -D_FORTIFY_SOURCE=2 -mtune=generic -O2. -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1526,interoperability,socket,socket,1526,"undation/inc -I/builddir/root-6.24.06/build/ginclude -DNDEBUG -fstack-clash-protection -D_FORTIFY_SOURCE=2 -mtune=generic -O2. -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1935,interoperability,convers,conversion,1935,"stem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int get",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2188,interoperability,socket,socket,2188,")':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2598,interoperability,convers,conversion,2598,"ddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2882,interoperability,socket,socket,2882,"/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3167,interoperability,convers,conversion,3167,"usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3448,interoperability,socket,socket,3448,"mber function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3732,interoperability,convers,conversion,3732," &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4016,interoperability,socket,socket,4016,", void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4300,interoperability,convers,conversion,4300,", &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4584,interoperability,socket,socket,4584,"void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4868,interoperability,convers,conversion,4868,", &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5152,interoperability,socket,socket,5152,"void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5436,interoperability,convers,conversion,5436,", &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5720,interoperability,socket,socket,5720,"void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:6865,interoperability,interfac,interfaces,6865,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:7055,interoperability,interfac,interfaces,7055,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:7213,interoperability,standard,standardization,7213,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:7483,interoperability,compatib,compatibility,7483,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:6865,modifiability,interfac,interfaces,6865,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:7055,modifiability,interfac,interfaces,7055,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1258,performance,error,error,1258,"dir/roo. t-6.24.06/core/clib/inc -I/builddir/root-6.24.06/core/meta/inc -I/builddir/root-6.24.06/core/cont/inc -I/builddir/root-6.24.06/core/thread/inc -I/builddir/root-6.24.06/core/textinput/inc -I/b. uilddir/root-6.24.06/core/gui/inc -I/builddir/root-6.24.06/core/foundation/inc -I/builddir/root-6.24.06/build/ginclude -DNDEBUG -fstack-clash-protection -D_FORTIFY_SOURCE=2 -mtune=generic -O2. -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1920,performance,error,error,1920,"x.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2583,performance,error,error,2583,"ckname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3152,performance,error,error,3152,"stem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3717,performance,error,error,3717,"DBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4285,performance,error,error,4285,"CVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4853,performance,error,error,4853,"NLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5421,performance,error,error,5421,"ALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5944,performance,error,error,5944,"19 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 mo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:7,reliability,FAIL,FAILED,7,"```cc. FAILED: core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o [87/1897]. /usr/bin/g++ -I/builddir/root-6.24.06/core/unix/inc -I/builddir/root-6.24.06/core/clib/res -I/builddir/root-6.24.06/core/foundation/res -I/builddir/root-6.24.06/core/base/inc -I/builddir/roo. t-6.24.06/core/clib/inc -I/builddir/root-6.24.06/core/meta/inc -I/builddir/root-6.24.06/core/cont/inc -I/builddir/root-6.24.06/core/thread/inc -I/builddir/root-6.24.06/core/textinput/inc -I/b. uilddir/root-6.24.06/core/gui/inc -I/builddir/root-6.24.06/core/foundation/inc -I/builddir/root-6.24.06/build/ginclude -DNDEBUG -fstack-clash-protection -D_FORTIFY_SOURCE=2 -mtune=generic -O2. -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1258,safety,error,error,1258,"dir/roo. t-6.24.06/core/clib/inc -I/builddir/root-6.24.06/core/meta/inc -I/builddir/root-6.24.06/core/cont/inc -I/builddir/root-6.24.06/core/thread/inc -I/builddir/root-6.24.06/core/textinput/inc -I/b. uilddir/root-6.24.06/core/gui/inc -I/builddir/root-6.24.06/core/foundation/inc -I/builddir/root-6.24.06/build/ginclude -DNDEBUG -fstack-clash-protection -D_FORTIFY_SOURCE=2 -mtune=generic -O2. -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1920,safety,error,error,1920,"x.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2583,safety,error,error,2583,"ckname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3152,safety,error,error,3152,"stem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3717,safety,error,error,3717,"DBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4285,safety,error,error,4285,"CVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4853,safety,error,error,4853,"NLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5421,safety,error,error,5421,"ALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5944,safety,error,error,5944,"19 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 mo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:6846,safety,compl,complicated,6846,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:6990,safety,except,except,6990,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:7286,safety,avoid,avoiding,7286,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1373,security,soc,sock,1373,"builddir/root-6.24.06/core/thread/inc -I/builddir/root-6.24.06/core/textinput/inc -I/b. uilddir/root-6.24.06/core/gui/inc -I/builddir/root-6.24.06/core/foundation/inc -I/builddir/root-6.24.06/build/ginclude -DNDEBUG -fstack-clash-protection -D_FORTIFY_SOURCE=2 -mtune=generic -O2. -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1526,security,soc,socket,1526,"undation/inc -I/builddir/root-6.24.06/build/ginclude -DNDEBUG -fstack-clash-protection -D_FORTIFY_SOURCE=2 -mtune=generic -O2. -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1598,security,soc,sockaddr,1598,"sh-protection -D_FORTIFY_SOURCE=2 -mtune=generic -O2. -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1658,security,soc,sockaddr,1658,"nostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2035,security,soc,sock,2035,". e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2188,security,soc,socket,2188,")':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2260,security,soc,sockaddr,2260," invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockop",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2320,security,soc,sockaddr,2320,"ed int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2697,security,soc,sock,2697,"ct);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2882,security,soc,socket,2882,"/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3266,security,soc,sock,3266,"*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSys",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3448,security,soc,socket,3448,"mber function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3831,security,soc,sock,3831,"/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnix",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4016,security,soc,socket,4016,", void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4399,security,soc,sock,4399,"nix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnix",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4584,security,soc,socket,4584,"void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4967,security,soc,sock,4967,"nix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5152,security,soc,socket,5152,"void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5535,security,soc,sock,5535,"nix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5720,security,soc,socket,5720,"void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:6846,security,compl,complicated,6846,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:6945,security,model,models,6945,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:6562,testability,context,context,6562,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:7333,testability,simpl,simply,7333,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:7412,testability,simpl,simpler,7412,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:463,usability,ui,uilddir,463,"```cc. FAILED: core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o [87/1897]. /usr/bin/g++ -I/builddir/root-6.24.06/core/unix/inc -I/builddir/root-6.24.06/core/clib/res -I/builddir/root-6.24.06/core/foundation/res -I/builddir/root-6.24.06/core/base/inc -I/builddir/roo. t-6.24.06/core/clib/inc -I/builddir/root-6.24.06/core/meta/inc -I/builddir/root-6.24.06/core/cont/inc -I/builddir/root-6.24.06/core/thread/inc -I/builddir/root-6.24.06/core/textinput/inc -I/b. uilddir/root-6.24.06/core/gui/inc -I/builddir/root-6.24.06/core/foundation/inc -I/builddir/root-6.24.06/build/ginclude -DNDEBUG -fstack-clash-protection -D_FORTIFY_SOURCE=2 -mtune=generic -O2. -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1258,usability,error,error,1258,"dir/roo. t-6.24.06/core/clib/inc -I/builddir/root-6.24.06/core/meta/inc -I/builddir/root-6.24.06/core/cont/inc -I/builddir/root-6.24.06/core/thread/inc -I/builddir/root-6.24.06/core/textinput/inc -I/b. uilddir/root-6.24.06/core/gui/inc -I/builddir/root-6.24.06/core/foundation/inc -I/builddir/root-6.24.06/build/ginclude -DNDEBUG -fstack-clash-protection -D_FORTIFY_SOURCE=2 -mtune=generic -O2. -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -fPIC -std=c++14 -MD -MT cor. e/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -MF core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:1920,usability,error,error,1920,"x.dir/src/TUnixSystem.cxx.o.d -o core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o -c /builddir/root-6.24.06/cor. e/unix/src/TUnixSystem.cxx . /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetSockName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3085:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3085 | if (getsockname(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:338:52: note: initializing argument 3 of 'int getsockname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:2583,usability,error,error,2583,"ckname(int, sockaddr*, socklen_t*)'. 338 | int getsockname (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual TInetAddress TUnixSystem::GetPeerName(int)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3121:33: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3121 | if (getpeername(sock, &addr, &len) == -1) { . | ^~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3152,usability,error,error,3152,"stem.cxx:101: . /usr/include/sys/socket.h:339:52: note: initializing argument 3 of 'int getpeername(int, sockaddr*, socklen_t*)'. 339 | int getpeername (int, struct sockaddr *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx: In member function 'virtual int TUnixSystem::GetSockOpt(int, int, int*)':. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3495:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3495 | if (getsockopt(sock, SOL_SOCKET, SO_SNDBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:3717,usability,error,error,3717,"DBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~ . | | . | int* . In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict); . | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3501:63: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3501 | if (getsockopt(sock, SOL_SOCKET, SO_RCVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4285,usability,error,error,4285,"CVBUF, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3507:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3507 | if (getsockopt(sock, SOL_SOCKET, SO_OOBINLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:4853,usability,error,error,4853,"NLINE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3513:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3513 | if (getsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5421,usability,error,error,5421,"ALIVE, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3519:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3519 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:5944,usability,error,error,5944,"19 | if (getsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:3525:66: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]. 3525 | if (getsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 mo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:7333,usability,simpl,simply,7333,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/issues/9253:7412,usability,simpl,simpler,7412,"TCP_NODELAY, (char*)val, &optlen) == -1) {. | ^~~~~~~. | |. | int*. In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:. /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'. 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);. | ^~~~~~~~~~~~~~~~~~~~~. ```. is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:. ```c. #if (defined(R__AIX) && !defined(_AIX43)) || \. (defined(R__SUNGCC3) && !defined(__arch64__)). # define USE_SIZE_T. #elif defined(R__GLIBC) || defined(R__FBSD) || \. (defined(R__SUNGCC3) && defined(__arch64__)) || \. defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \. (defined(R__AIX) && defined(_AIX43)) || \. (defined(R__SOLARIS) && defined(_SOCKLEN_T)). # define USE_SOCKLEN_T. #endif. ```. [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:. > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9253
https://github.com/root-project/root/pull/9257:15,deployability,version,version,15,"Correct, class version zero means the classes don't support I/O and we don't have to worry about changing the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9257
https://github.com/root-project/root/pull/9257:15,integrability,version,version,15,"Correct, class version zero means the classes don't support I/O and we don't have to worry about changing the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9257
https://github.com/root-project/root/pull/9257:15,modifiability,version,version,15,"Correct, class version zero means the classes don't support I/O and we don't have to worry about changing the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9257
https://github.com/root-project/root/pull/9257:60,performance,I/O,I/O,60,"Correct, class version zero means the classes don't support I/O and we don't have to worry about changing the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9257
https://github.com/root-project/root/pull/9257:52,usability,support,support,52,"Correct, class version zero means the classes don't support I/O and we don't have to worry about changing the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9257
https://github.com/root-project/root/pull/9260:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9260
https://github.com/root-project/root/pull/9260:94,deployability,build,build,94,"@Axel-Naumann Actually, this was not meant to be merged yet, I still haven't resolved all the build issues so it's still not possible to successfully compile with musl (glibc should be fine). I imagined you would just review the proposed changes and let me know if there was anything problematic. But if you think these changes were fine, I will open another pull request once I have identified and found a potential solution to all the remaining issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9260
https://github.com/root-project/root/pull/9260:218,safety,review,review,218,"@Axel-Naumann Actually, this was not meant to be merged yet, I still haven't resolved all the build issues so it's still not possible to successfully compile with musl (glibc should be fine). I imagined you would just review the proposed changes and let me know if there was anything problematic. But if you think these changes were fine, I will open another pull request once I have identified and found a potential solution to all the remaining issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9260
https://github.com/root-project/root/pull/9260:384,security,ident,identified,384,"@Axel-Naumann Actually, this was not meant to be merged yet, I still haven't resolved all the build issues so it's still not possible to successfully compile with musl (glibc should be fine). I imagined you would just review the proposed changes and let me know if there was anything problematic. But if you think these changes were fine, I will open another pull request once I have identified and found a potential solution to all the remaining issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9260
https://github.com/root-project/root/pull/9260:218,testability,review,review,218,"@Axel-Naumann Actually, this was not meant to be merged yet, I still haven't resolved all the build issues so it's still not possible to successfully compile with musl (glibc should be fine). I imagined you would just review the proposed changes and let me know if there was anything problematic. But if you think these changes were fine, I will open another pull request once I have identified and found a potential solution to all the remaining issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9260
https://github.com/root-project/root/pull/9260:33,deployability,build,builds,33,"Ha sorry :-) It works for our PR builds, it's certainly an improvement, and we're used to working incrementally. I hope I didn't cause too much trouble on your side! So yes, please keep them coming, especially if they are as nice as this one: removing code!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9260
https://github.com/root-project/root/issues/9261:0,deployability,Updat,Update,0,Update: the issue is not reproduceable on LXPLUS 7 ROOT 6.24/04. Maybe it's platform specific.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:76,interoperability,platform,platform,76,Update: the issue is not reproduceable on LXPLUS 7 ROOT 6.24/04. Maybe it's platform specific.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:85,interoperability,specif,specific,85,Update: the issue is not reproduceable on LXPLUS 7 ROOT 6.24/04. Maybe it's platform specific.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:0,safety,Updat,Update,0,Update: the issue is not reproduceable on LXPLUS 7 ROOT 6.24/04. Maybe it's platform specific.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:0,security,Updat,Update,0,Update: the issue is not reproduceable on LXPLUS 7 ROOT 6.24/04. Maybe it's platform specific.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:472,availability,avail,available,472,"> `root [1] auto firstTwo2 = Take(v, 2);`. This resolves correctly to `ROOT::VecOps::Take()` after a `using namespace ROOT::VecOps;`, which is what appears in the example referenced above. Thus, the following works:. ```c++. root [0] ROOT::VecOps::RVec v{2., 3., 1.};. root [1] using namespace ROOT::VecOps;. root [2] auto firstTwo = Take(v, 2). (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. ```. I cannot tell whether the names in `ROOT::VecOps` were directly available for unqualified lookup in the past. @Axel-Naumann? . Anyways, I agree that the interpreter should be more clear about unresolved names (instead of partially dumping the AST). I can dedicate some spare cycles in the first week of December for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:472,reliability,availab,available,472,"> `root [1] auto firstTwo2 = Take(v, 2);`. This resolves correctly to `ROOT::VecOps::Take()` after a `using namespace ROOT::VecOps;`, which is what appears in the example referenced above. Thus, the following works:. ```c++. root [0] ROOT::VecOps::RVec v{2., 3., 1.};. root [1] using namespace ROOT::VecOps;. root [2] auto firstTwo = Take(v, 2). (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. ```. I cannot tell whether the names in `ROOT::VecOps` were directly available for unqualified lookup in the past. @Axel-Naumann? . Anyways, I agree that the interpreter should be more clear about unresolved names (instead of partially dumping the AST). I can dedicate some spare cycles in the first week of December for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:472,safety,avail,available,472,"> `root [1] auto firstTwo2 = Take(v, 2);`. This resolves correctly to `ROOT::VecOps::Take()` after a `using namespace ROOT::VecOps;`, which is what appears in the example referenced above. Thus, the following works:. ```c++. root [0] ROOT::VecOps::RVec v{2., 3., 1.};. root [1] using namespace ROOT::VecOps;. root [2] auto firstTwo = Take(v, 2). (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. ```. I cannot tell whether the names in `ROOT::VecOps` were directly available for unqualified lookup in the past. @Axel-Naumann? . Anyways, I agree that the interpreter should be more clear about unresolved names (instead of partially dumping the AST). I can dedicate some spare cycles in the first week of December for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:472,security,availab,available,472,"> `root [1] auto firstTwo2 = Take(v, 2);`. This resolves correctly to `ROOT::VecOps::Take()` after a `using namespace ROOT::VecOps;`, which is what appears in the example referenced above. Thus, the following works:. ```c++. root [0] ROOT::VecOps::RVec v{2., 3., 1.};. root [1] using namespace ROOT::VecOps;. root [2] auto firstTwo = Take(v, 2). (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. ```. I cannot tell whether the names in `ROOT::VecOps` were directly available for unqualified lookup in the past. @Axel-Naumann? . Anyways, I agree that the interpreter should be more clear about unresolved names (instead of partially dumping the AST). I can dedicate some spare cycles in the first week of December for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/issues/9261:588,usability,clear,clear,588,"> `root [1] auto firstTwo2 = Take(v, 2);`. This resolves correctly to `ROOT::VecOps::Take()` after a `using namespace ROOT::VecOps;`, which is what appears in the example referenced above. Thus, the following works:. ```c++. root [0] ROOT::VecOps::RVec v{2., 3., 1.};. root [1] using namespace ROOT::VecOps;. root [2] auto firstTwo = Take(v, 2). (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }. ```. I cannot tell whether the names in `ROOT::VecOps` were directly available for unqualified lookup in the past. @Axel-Naumann? . Anyways, I agree that the interpreter should be more clear about unresolved names (instead of partially dumping the AST). I can dedicate some spare cycles in the first week of December for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9261
https://github.com/root-project/root/pull/9262:67,integrability,messag,message,67,"> Hi, I trust you, but maybe can you elaborate a bit in the commit message about what's going on here? smile. Yep, done in a code comment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9262
https://github.com/root-project/root/pull/9262:67,interoperability,messag,message,67,"> Hi, I trust you, but maybe can you elaborate a bit in the commit message about what's going on here? smile. Yep, done in a code comment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9262
https://github.com/root-project/root/pull/9262:8,security,trust,trust,8,"> Hi, I trust you, but maybe can you elaborate a bit in the commit message about what's going on here? smile. Yep, done in a code comment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9262
https://github.com/root-project/root/issues/9263:59,deployability,updat,updated,59,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:130,deployability,updat,updated,130,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:161,deployability,Updat,Update,161,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:265,deployability,updat,updated,265,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:281,deployability,Updat,Update,281,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:59,safety,updat,updated,59,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:130,safety,updat,updated,130,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:161,safety,Updat,Update,161,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:265,safety,updat,updated,265,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:281,safety,Updat,Update,281,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:59,security,updat,updated,59,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:130,security,updat,updated,130,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:161,security,Updat,Update,161,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:265,security,updat,updated,265,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:281,security,Updat,Update,281,"- When I zoom on the X axis of the top plot both plots are updated. <-- OK. - When I zoom on the bottom plot, the top plot is not updated but it seems an `gPad->Update()` is missing because if I enlarge the window or click on the top plot then the top plot is also updated. <-- an Update might be missing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:15,deployability,Updat,Update,15,calling `gPad->Update()` from the prompt after zooming does update the upper plot. However I'm not sure where the appropriate place to call this in the TRatioPlot class would be. I have tried. - at the end of TRatioPlot::Paint(). - at the end of TRatioPlot::RangeAxisChanged(). - at the end of TRatioPlot::CreateVisualAxes(). and none of these have the desired effect.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:60,deployability,updat,update,60,calling `gPad->Update()` from the prompt after zooming does update the upper plot. However I'm not sure where the appropriate place to call this in the TRatioPlot class would be. I have tried. - at the end of TRatioPlot::Paint(). - at the end of TRatioPlot::RangeAxisChanged(). - at the end of TRatioPlot::CreateVisualAxes(). and none of these have the desired effect.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:55,reliability,doe,does,55,calling `gPad->Update()` from the prompt after zooming does update the upper plot. However I'm not sure where the appropriate place to call this in the TRatioPlot class would be. I have tried. - at the end of TRatioPlot::Paint(). - at the end of TRatioPlot::RangeAxisChanged(). - at the end of TRatioPlot::CreateVisualAxes(). and none of these have the desired effect.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:15,safety,Updat,Update,15,calling `gPad->Update()` from the prompt after zooming does update the upper plot. However I'm not sure where the appropriate place to call this in the TRatioPlot class would be. I have tried. - at the end of TRatioPlot::Paint(). - at the end of TRatioPlot::RangeAxisChanged(). - at the end of TRatioPlot::CreateVisualAxes(). and none of these have the desired effect.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:60,safety,updat,update,60,calling `gPad->Update()` from the prompt after zooming does update the upper plot. However I'm not sure where the appropriate place to call this in the TRatioPlot class would be. I have tried. - at the end of TRatioPlot::Paint(). - at the end of TRatioPlot::RangeAxisChanged(). - at the end of TRatioPlot::CreateVisualAxes(). and none of these have the desired effect.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:15,security,Updat,Update,15,calling `gPad->Update()` from the prompt after zooming does update the upper plot. However I'm not sure where the appropriate place to call this in the TRatioPlot class would be. I have tried. - at the end of TRatioPlot::Paint(). - at the end of TRatioPlot::RangeAxisChanged(). - at the end of TRatioPlot::CreateVisualAxes(). and none of these have the desired effect.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:60,security,updat,update,60,calling `gPad->Update()` from the prompt after zooming does update the upper plot. However I'm not sure where the appropriate place to call this in the TRatioPlot class would be. I have tried. - at the end of TRatioPlot::Paint(). - at the end of TRatioPlot::RangeAxisChanged(). - at the end of TRatioPlot::CreateVisualAxes(). and none of these have the desired effect.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:31,deployability,Updat,Update,31,"I put `gPad->Modified(); gPad->Update()` in all possible places and none of them worked. I guess for the time being we keep that a ""feature"" as the workaround is simple: it is enough to zoom on the X top Axis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:105,performance,time,time,105,"I put `gPad->Modified(); gPad->Update()` in all possible places and none of them worked. I guess for the time being we keep that a ""feature"" as the workaround is simple: it is enough to zoom on the X top Axis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:31,safety,Updat,Update,31,"I put `gPad->Modified(); gPad->Update()` in all possible places and none of them worked. I guess for the time being we keep that a ""feature"" as the workaround is simple: it is enough to zoom on the X top Axis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:13,security,Modif,Modified,13,"I put `gPad->Modified(); gPad->Update()` in all possible places and none of them worked. I guess for the time being we keep that a ""feature"" as the workaround is simple: it is enough to zoom on the X top Axis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:31,security,Updat,Update,31,"I put `gPad->Modified(); gPad->Update()` in all possible places and none of them worked. I guess for the time being we keep that a ""feature"" as the workaround is simple: it is enough to zoom on the X top Axis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:162,testability,simpl,simple,162,"I put `gPad->Modified(); gPad->Update()` in all possible places and none of them worked. I guess for the time being we keep that a ""feature"" as the workaround is simple: it is enough to zoom on the X top Axis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:162,usability,simpl,simple,162,"I put `gPad->Modified(); gPad->Update()` in all possible places and none of them worked. I guess for the time being we keep that a ""feature"" as the workaround is simple: it is enough to zoom on the X top Axis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:141,reliability,doe,does,141,Emitting the RangeAxisChanged() signal at line [4751](https://root.cern/doc/master/THistPainter_8cxx_source.html#l04571) of THistPainter.cxx does fix the behavior. The axes need to be synced before the call to PaintInit() and PaintFrame(),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:32,security,sign,signal,32,Emitting the RangeAxisChanged() signal at line [4751](https://root.cern/doc/master/THistPainter_8cxx_source.html#l04571) of THistPainter.cxx does fix the behavior. The axes need to be synced before the call to PaintInit() and PaintFrame(),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:154,usability,behavi,behavior,154,Emitting the RangeAxisChanged() signal at line [4751](https://root.cern/doc/master/THistPainter_8cxx_source.html#l04571) of THistPainter.cxx does fix the behavior. The axes need to be synced before the call to PaintInit() and PaintFrame(),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:180,reliability,doe,does,180,"Nice ! What’s the code exactly ? > Le 12 nov. 2021 à 18:15, Timothy Gray ***@***.***> a écrit :. > . > ﻿. > Emitting the RangeAxisChanged() signal at line 4751 of THistPainter.cxx does fix the behavior. The axes need to be synced before the call to PaintInit() and PaintFrame(). > . > —. > You are receiving this because you were assigned. > Reply to this email directly, view it on GitHub, or unsubscribe. > Triage notifications on the go with GitHub Mobile for iOS or Android. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:140,security,sign,signal,140,"Nice ! What’s the code exactly ? > Le 12 nov. 2021 à 18:15, Timothy Gray ***@***.***> a écrit :. > . > ﻿. > Emitting the RangeAxisChanged() signal at line 4751 of THistPainter.cxx does fix the behavior. The axes need to be synced before the call to PaintInit() and PaintFrame(). > . > —. > You are receiving this because you were assigned. > Reply to this email directly, view it on GitHub, or unsubscribe. > Triage notifications on the go with GitHub Mobile for iOS or Android. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:409,security,Triag,Triage,409,"Nice ! What’s the code exactly ? > Le 12 nov. 2021 à 18:15, Timothy Gray ***@***.***> a écrit :. > . > ﻿. > Emitting the RangeAxisChanged() signal at line 4751 of THistPainter.cxx does fix the behavior. The axes need to be synced before the call to PaintInit() and PaintFrame(). > . > —. > You are receiving this because you were assigned. > Reply to this email directly, view it on GitHub, or unsubscribe. > Triage notifications on the go with GitHub Mobile for iOS or Android. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:193,usability,behavi,behavior,193,"Nice ! What’s the code exactly ? > Le 12 nov. 2021 à 18:15, Timothy Gray ***@***.***> a écrit :. > . > ﻿. > Emitting the RangeAxisChanged() signal at line 4751 of THistPainter.cxx does fix the behavior. The axes need to be synced before the call to PaintInit() and PaintFrame(). > . > —. > You are receiving this because you were assigned. > Reply to this email directly, view it on GitHub, or unsubscribe. > Triage notifications on the go with GitHub Mobile for iOS or Android. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:30,integrability,repositor,repository,30,Can you make a PR on the ROOT repository with this code ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/issues/9263:30,interoperability,repositor,repository,30,Can you make a PR on the ROOT repository with this code ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9263
https://github.com/root-project/root/pull/9267:125,deployability,modul,modules,125,"@osschar we really need to replace the JSON include in the eve header with a forward declaration, it's causing problems with modules. If that cannot be done, can we be more selective on the supported versions of nlohmann, to either still use fwd decls, or do be sure to have json_fwd.h?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:200,deployability,version,versions,200,"@osschar we really need to replace the JSON include in the eve header with a forward declaration, it's causing problems with modules. If that cannot be done, can we be more selective on the supported versions of nlohmann, to either still use fwd decls, or do be sure to have json_fwd.h?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:200,integrability,version,versions,200,"@osschar we really need to replace the JSON include in the eve header with a forward declaration, it's causing problems with modules. If that cannot be done, can we be more selective on the supported versions of nlohmann, to either still use fwd decls, or do be sure to have json_fwd.h?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:125,modifiability,modul,modules,125,"@osschar we really need to replace the JSON include in the eve header with a forward declaration, it's causing problems with modules. If that cannot be done, can we be more selective on the supported versions of nlohmann, to either still use fwd decls, or do be sure to have json_fwd.h?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:200,modifiability,version,versions,200,"@osschar we really need to replace the JSON include in the eve header with a forward declaration, it's causing problems with modules. If that cannot be done, can we be more selective on the supported versions of nlohmann, to either still use fwd decls, or do be sure to have json_fwd.h?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:125,safety,modul,modules,125,"@osschar we really need to replace the JSON include in the eve header with a forward declaration, it's causing problems with modules. If that cannot be done, can we be more selective on the supported versions of nlohmann, to either still use fwd decls, or do be sure to have json_fwd.h?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:190,usability,support,supported,190,"@osschar we really need to replace the JSON include in the eve header with a forward declaration, it's causing problems with modules. If that cannot be done, can we be more selective on the supported versions of nlohmann, to either still use fwd decls, or do be sure to have json_fwd.h?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:182,deployability,version,versions,182,"Let's see what https://github.com/root-project/root/pull/9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:210,deployability,version,version,210,"Let's see what https://github.com/root-project/root/pull/9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:182,integrability,version,versions,182,"Let's see what https://github.com/root-project/root/pull/9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:210,integrability,version,version,210,"Let's see what https://github.com/root-project/root/pull/9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:218,interoperability,specif,specific,218,"Let's see what https://github.com/root-project/root/pull/9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:182,modifiability,version,versions,182,"Let's see what https://github.com/root-project/root/pull/9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:210,modifiability,version,version,210,"Let's see what https://github.com/root-project/root/pull/9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:85,usability,prefer,preferred,85,"Let's see what https://github.com/root-project/root/pull/9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:140,usability,support,support,140,"Let's see what https://github.com/root-project/root/pull/9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:143,deployability,version,versions,143,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:171,deployability,version,version,171,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:276,deployability,version,versions,276,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:349,deployability,version,versions,349,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:143,integrability,version,versions,143,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:171,integrability,version,version,171,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:276,integrability,version,versions,276,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:349,integrability,version,versions,349,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:179,interoperability,specif,specific,179,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:143,modifiability,version,versions,143,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:171,modifiability,version,version,171,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:276,modifiability,version,versions,276,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:349,modifiability,version,versions,349,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:307,safety,safe,safe,307,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:46,usability,prefer,preferred,46,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:101,usability,support,support,101,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:336,usability,support,support,336,"> Let's see what #9278 says - that's still my preferred solution, even if it'd mean that we can only support a restricted set of nlohmann_json versions. Or have multiple, version specific fwd decls. That presumes the underlying template forward declaration is the same across versions and I am not sure how safe is that. We should just support json versions that have this header and that is it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:30,deployability,version,versions,30,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:100,deployability,version,versions,100,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:231,deployability,version,versions,231,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:362,deployability,version,versions,362,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:30,integrability,version,versions,30,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:100,integrability,version,versions,100,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:231,integrability,version,versions,231,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:362,integrability,version,versions,362,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:30,modifiability,version,versions,30,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:100,modifiability,version,versions,100,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:129,modifiability,pac,packages,129,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:231,modifiability,version,versions,231,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:362,modifiability,version,versions,362,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:17,usability,support,support,17,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:349,usability,support,support,349,"> We should just support json versions that have this header and that is it. It's not a question of versions, it's a question of packages, and some distros don't have it. And I am happy to add fwd decls for different nlohmann_json versions if needed - right now we don't know whether that's actually needed or a theoretical issue. We can also ""just support json versions"" that match the fwd decls ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:196,deployability,manag,manageable,196,"@amadio I am aware but I don't think this helps in any way, as we can see from the current situation. FYI that fwd decl (`basic_json`) changes +/- never, so a fwd declare as in #9278 seems indeed manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:83,energy efficiency,current,current,83,"@amadio I am aware but I don't think this helps in any way, as we can see from the current situation. FYI that fwd decl (`basic_json`) changes +/- never, so a fwd declare as in #9278 seems indeed manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:196,energy efficiency,manag,manageable,196,"@amadio I am aware but I don't think this helps in any way, as we can see from the current situation. FYI that fwd decl (`basic_json`) changes +/- never, so a fwd declare as in #9278 seems indeed manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:196,safety,manag,manageable,196,"@amadio I am aware but I don't think this helps in any way, as we can see from the current situation. FYI that fwd decl (`basic_json`) changes +/- never, so a fwd declare as in #9278 seems indeed manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:42,usability,help,helps,42,"@amadio I am aware but I don't think this helps in any way, as we can see from the current situation. FYI that fwd decl (`basic_json`) changes +/- never, so a fwd declare as in #9278 seems indeed manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:23,reliability,doe,doesn,23,"Yes, any solution that doesn't use the json_fwd.h header should be ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9267:6,usability,close,close,6,I can close that now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9267
https://github.com/root-project/root/pull/9268:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9268
https://github.com/root-project/root/pull/9269:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9269
https://github.com/root-project/root/pull/9270:11,deployability,build,build,11,@phsft-bot build on ROOT-debian10-i386/cxx14 with flags -DCMAKE_BUILD_TYPE=RelWithDebInfo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9270
https://github.com/root-project/root/pull/9271:111,deployability,build,build,111,"The latest change should address all comments. `clang-format` is applied, and commits are squashed. @phsft-bot build. **EDIT**: I guess I can't do the above :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:54,interoperability,format,format,54,"The latest change should address all comments. `clang-format` is applied, and commits are squashed. @phsft-bot build. **EDIT**: I guess I can't do the above :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:480,availability,replic,replicate,480,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:83,deployability,fail,failed,83,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:103,deployability,log,log,103,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:427,deployability,log,login,427,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:449,deployability,log,logs,449,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:527,deployability,depend,depend,527,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:527,integrability,depend,depend,527,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:527,modifiability,depend,depend,527,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:256,performance,time,time,256,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:83,reliability,fail,failed,83,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:34,safety,test,tests,34,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:103,safety,log,log,103,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:156,safety,test,test,156,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:427,safety,log,login,427,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:444,safety,test,test,444,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:449,safety,log,logs,449,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:494,safety,test,tests,494,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:527,safety,depend,depend,527,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:103,security,log,log,103,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:427,security,log,login,427,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:449,security,log,logs,449,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:34,testability,test,tests,34,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:103,testability,log,log,103,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:156,testability,test,test,156,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:427,testability,log,login,427,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:444,testability,test,test,444,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:449,testability,log,logs,449,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:494,testability,test,tests,494,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:527,testability,depend,depend,527,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:232,usability,clear,clear,232,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:406,availability,failur,failures,406,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:692,availability,replic,replicate,692,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:989,availability,consist,consistent,989,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:85,deployability,fail,failed,85,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:105,deployability,log,log,105,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:281,deployability,log,logs,281,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:406,deployability,fail,failures,406,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:639,deployability,log,login,639,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:661,deployability,log,logs,661,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:739,deployability,depend,depend,739,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:901,deployability,log,login,901,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:739,integrability,depend,depend,739,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:739,modifiability,depend,depend,739,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:406,performance,failur,failures,406,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:468,performance,time,time,468,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:85,reliability,fail,failed,85,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:406,reliability,fail,failures,406,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1291,reliability,Doe,Does,1291,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:36,safety,test,tests,36,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:105,safety,log,log,105,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:158,safety,test,test,158,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:281,safety,log,logs,281,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:314,safety,test,test,314,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:639,safety,log,login,639,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:656,safety,test,test,656,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:661,safety,log,logs,661,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:706,safety,test,tests,706,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:739,safety,depend,depend,739,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:901,safety,log,login,901,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:968,safety,test,tests,968,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1171,safety,test,test,1171,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1300,safety,test,test,1300,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:105,security,log,log,105,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:281,security,log,logs,281,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:639,security,log,login,639,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:661,security,log,logs,661,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:901,security,log,login,901,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:943,security,secur,secure,943,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:36,testability,test,tests,36,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:105,testability,log,log,105,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:158,testability,test,test,158,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:281,testability,log,logs,281,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:314,testability,test,test,314,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:639,testability,log,login,639,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:656,testability,test,test,656,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:661,testability,log,logs,661,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:706,testability,test,tests,706,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:739,testability,depend,depend,739,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:901,testability,log,login,901,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:968,testability,test,tests,968,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1171,testability,test,test,1171,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1300,testability,test,test,1300,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:234,usability,clear,clear,234,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:989,usability,consist,consistent,989,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around? Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:109,deployability,version,version,109,"I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? Also note that RooFit was merged into ROOT after the projects had been living separately for a while. ROOT uses 3 spaces to indent, but RF has always been using 2. ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:109,integrability,version,version,109,"I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? Also note that RooFit was merged into ROOT after the projects had been living separately for a while. ROOT uses 3 spaces to indent, but RF has always been using 2. ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:368,interoperability,format,format,368,"I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? Also note that RooFit was merged into ROOT after the projects had been living separately for a while. ROOT uses 3 spaces to indent, but RF has always been using 2. ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:109,modifiability,version,version,109,"I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? Also note that RooFit was merged into ROOT after the projects had been living separately for a while. ROOT uses 3 spaces to indent, but RF has always been using 2. ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:162,performance,time,time,162,"I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? Also note that RooFit was merged into ROOT after the projects had been living separately for a while. ROOT uses 3 spaces to indent, but RF has always been using 2. ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:161,availability,failur,failures,161,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:700,availability,consist,consistent,700,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1702,availability,consist,consistent,1702,"ee from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with what you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1867,availability,state,statements,1867,"ee from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with what you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:36,deployability,log,logs,36,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:161,deployability,fail,failures,161,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:378,deployability,log,log,378,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:612,deployability,log,login,612,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1170,deployability,version,version,1170,"ee from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with what you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1170,integrability,version,version,1170,"ee from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with what you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1867,integrability,state,statements,1867,"ee from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with what you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1274,interoperability,format,format,1274,"ee from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with what you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1544,interoperability,format,format,1544,"ee from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with what you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1170,modifiability,version,version,1170,"ee from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with what you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1507,modifiability,exten,extent,1507,"ee from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with what you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:161,performance,failur,failures,161,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:365,performance,time,times,365,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1223,performance,time,time,1223,"ee from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with what you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:161,reliability,fail,failures,161,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1002,reliability,Doe,Does,1002,"ich one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:36,safety,log,logs,36,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:69,safety,test,test,69,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:251,safety,test,test,251,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:334,safety,test,test,334,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:378,safety,log,log,378,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:612,safety,log,login,612,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:679,safety,test,tests,679,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:882,safety,test,test,882,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1011,safety,test,test,1011,"xactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with what you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:36,security,log,logs,36,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:378,security,log,log,378,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:612,security,log,login,612,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:654,security,secur,secure,654,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:36,testability,log,logs,36,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:69,testability,test,test,69,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:251,testability,test,test,251,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:334,testability,test,test,334,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:378,testability,log,log,378,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:612,testability,log,login,612,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:679,testability,test,tests,679,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:882,testability,test,test,882,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1011,testability,test,test,1011,"xactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with what you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:700,usability,consist,consistent,700,"> Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1560,usability,help,help,1560,"ee from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with what you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:1702,usability,consist,consistent,1702,"ee from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. Sorry, I meant that I could not find the test definition in the source. Maybe I'm not looking in the right place. Also, the test in question is quoted two times in the log, once successful and one unsuccessful. In any case, I do know something is going on and wanted to have a look, but because of the above, I'm not sure where and how. > Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake. Does the test pass locally? Alright, I will have a look. > I wanted to have a look at where the crash happens, but all commits are now squashed into one. Do you have a version where the commits are separated as the first time when you put up the PR? (...). > ROOT's clang-format file will therefore introduce a lot of indentation changes, which makes the diffs hard to read. Unfortunately, not. I rebased and force-pushed. But for what it's worth, I think the function in question is rewritten to such an extent that old history before clang-format will not help much. But you can easily use a text editor to switch back to the original indentation. Bear in mind that the original code did not use a consistent indentation - some lines used spaces, others tabs, and the size was different in all places. On top of that, lots of the code was improperly spaced where statements belonging to loops or if's were indented shorter than the scope. In any case, I will try next week to see what's going on with what you suggested.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9271:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9271
https://github.com/root-project/root/pull/9272:116,usability,help,helps,116,Fixes https://github.com/root-project/cling/issues/364. Fixes https://github.com/root-project/cling/issues/419. and helps for https://github.com/jupyter-xeus/xeus-cling/issues/404,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:56,safety,test,tests,56,"> LGTM! Thanks! By the way I have no idea how the cling-tests worked, so I just tried to copy what I saw in the lines above with the comment doing the ""CHECK"" I hope.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:56,testability,test,tests,56,"> LGTM! Thanks! By the way I have no idea how the cling-tests worked, so I just tried to copy what I saw in the lines above with the comment doing the ""CHECK"" I hope.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:203,integrability,configur,configure,203,"> > LGTM! > . > Thanks! By the way I have no idea how the cling-tests worked, so I just tried to copy what I saw in the lines above with the comment doing the ""CHECK"" I hope. The easiest way would be to configure ROOT with `-Dclingtest=On -Dtesting=On` and run it within ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:203,modifiability,configur,configure,203,"> > LGTM! > . > Thanks! By the way I have no idea how the cling-tests worked, so I just tried to copy what I saw in the lines above with the comment doing the ""CHECK"" I hope. The easiest way would be to configure ROOT with `-Dclingtest=On -Dtesting=On` and run it within ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:64,safety,test,tests,64,"> > LGTM! > . > Thanks! By the way I have no idea how the cling-tests worked, so I just tried to copy what I saw in the lines above with the comment doing the ""CHECK"" I hope. The easiest way would be to configure ROOT with `-Dclingtest=On -Dtesting=On` and run it within ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:203,security,configur,configure,203,"> > LGTM! > . > Thanks! By the way I have no idea how the cling-tests worked, so I just tried to copy what I saw in the lines above with the comment doing the ""CHECK"" I hope. The easiest way would be to configure ROOT with `-Dclingtest=On -Dtesting=On` and run it within ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:64,testability,test,tests,64,"> > LGTM! > . > Thanks! By the way I have no idea how the cling-tests worked, so I just tried to copy what I saw in the lines above with the comment doing the ""CHECK"" I hope. The easiest way would be to configure ROOT with `-Dclingtest=On -Dtesting=On` and run it within ctest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:119,safety,test,test,119,"> run it within ctest. I get the following result when running ctest clingtest-check-cling, but I see no sign that the test under question is being run? [clingtest.txt](https://github.com/root-project/root/files/14982001/clingtest.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:105,security,sign,sign,105,"> run it within ctest. I get the following result when running ctest clingtest-check-cling, but I see no sign that the test under question is being run? [clingtest.txt](https://github.com/root-project/root/files/14982001/clingtest.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:119,testability,test,test,119,"> run it within ctest. I get the following result when running ctest clingtest-check-cling, but I see no sign that the test under question is being run? [clingtest.txt](https://github.com/root-project/root/files/14982001/clingtest.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:127,safety,test,test,127,"> > run it within ctest. > . > I get the following result when running ctest clingtest-check-cling, but I see no sign that the test under question is being run? > . > [clingtest.txt](https://github.com/root-project/root/files/14982001/clingtest.txt). Is it in the source tree under interpreter/cling/test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:300,safety,test,test,300,"> > run it within ctest. > . > I get the following result when running ctest clingtest-check-cling, but I see no sign that the test under question is being run? > . > [clingtest.txt](https://github.com/root-project/root/files/14982001/clingtest.txt). Is it in the source tree under interpreter/cling/test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:113,security,sign,sign,113,"> > run it within ctest. > . > I get the following result when running ctest clingtest-check-cling, but I see no sign that the test under question is being run? > . > [clingtest.txt](https://github.com/root-project/root/files/14982001/clingtest.txt). Is it in the source tree under interpreter/cling/test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:127,testability,test,test,127,"> > run it within ctest. > . > I get the following result when running ctest clingtest-check-cling, but I see no sign that the test under question is being run? > . > [clingtest.txt](https://github.com/root-project/root/files/14982001/clingtest.txt). Is it in the source tree under interpreter/cling/test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:300,testability,test,test,300,"> > run it within ctest. > . > I get the following result when running ctest clingtest-check-cling, but I see no sign that the test under question is being run? > . > [clingtest.txt](https://github.com/root-project/root/files/14982001/clingtest.txt). Is it in the source tree under interpreter/cling/test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:139,safety,test,test,139,"> > > run it within ctest. > > . > > . > > I get the following result when running ctest clingtest-check-cling, but I see no sign that the test under question is being run? > > [clingtest.txt](https://github.com/root-project/root/files/14982001/clingtest.txt). > . > Is it in the source tree under interpreter/cling/test? Yes, and then Driver/C.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:316,safety,test,test,316,"> > > run it within ctest. > > . > > . > > I get the following result when running ctest clingtest-check-cling, but I see no sign that the test under question is being run? > > [clingtest.txt](https://github.com/root-project/root/files/14982001/clingtest.txt). > . > Is it in the source tree under interpreter/cling/test? Yes, and then Driver/C.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:125,security,sign,sign,125,"> > > run it within ctest. > > . > > . > > I get the following result when running ctest clingtest-check-cling, but I see no sign that the test under question is being run? > > [clingtest.txt](https://github.com/root-project/root/files/14982001/clingtest.txt). > . > Is it in the source tree under interpreter/cling/test? Yes, and then Driver/C.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:139,testability,test,test,139,"> > > run it within ctest. > > . > > . > > I get the following result when running ctest clingtest-check-cling, but I see no sign that the test under question is being run? > > [clingtest.txt](https://github.com/root-project/root/files/14982001/clingtest.txt). > . > Is it in the source tree under interpreter/cling/test? Yes, and then Driver/C.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:316,testability,test,test,316,"> > > run it within ctest. > > . > > . > > I get the following result when running ctest clingtest-check-cling, but I see no sign that the test under question is being run? > > [clingtest.txt](https://github.com/root-project/root/files/14982001/clingtest.txt). > . > Is it in the source tree under interpreter/cling/test? Yes, and then Driver/C.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:60,availability,error,error,60,Should have ran. If you want to make sure just introduce an error in the test and see if it starts to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:102,deployability,fail,fail,102,Should have ran. If you want to make sure just introduce an error in the test and see if it starts to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:60,performance,error,error,60,Should have ran. If you want to make sure just introduce an error in the test and see if it starts to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:102,reliability,fail,fail,102,Should have ran. If you want to make sure just introduce an error in the test and see if it starts to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:60,safety,error,error,60,Should have ran. If you want to make sure just introduce an error in the test and see if it starts to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:73,safety,test,test,73,Should have ran. If you want to make sure just introduce an error in the test and see if it starts to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:73,testability,test,test,73,Should have ran. If you want to make sure just introduce an error in the test and see if it starts to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9272:60,usability,error,error,60,Should have ran. If you want to make sure just introduce an error in the test and see if it starts to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9272
https://github.com/root-project/root/pull/9276:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:52,deployability,patch,patches,52,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:75,deployability,fail,fail,75,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:130,deployability,patch,patches-nonull-backport,130,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:171,deployability,patch,patches,171,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:307,deployability,patch,patches,307,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:332,deployability,patch,patches-nonull-backport,332,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:377,deployability,build,build,377,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:411,deployability,build,build,411,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:674,deployability,continu,continue,674,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:767,deployability,build,build,767,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:801,deployability,build,build,801,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:422,performance,TIME,TIMEOUT,422,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:75,reliability,fail,fail,75,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:52,safety,patch,patches,52,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:130,safety,patch,patches-nonull-backport,130,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:171,safety,patch,patches,171,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:307,safety,patch,patches,307,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:332,safety,patch,patches-nonull-backport,332,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:422,safety,TIMEOUT,TIMEOUT,422,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:52,security,patch,patches,52,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:130,security,patch,patches-nonull-backport,130,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:171,security,patch,patches,171,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:307,security,patch,patches,307,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:332,security,patch,patches-nonull-backport,332,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:191,usability,COMMAND,COMMAND,191,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:235,usability,user,user,235,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:257,usability,user,user,257,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9276:864,usability,stop,stopping,864,"I don't get it, this branch is rebased on `v6-24-00-patches`. Why would it fail with:. ```. 11:04:06 -- Rebasing kgizdov-v6-24-00-patches-nonull-backport against v6-24-00-patches: [Executing COMMAND;C:/Program Files/Git/cmd/git.exe;-c;user.name=sftnight;-c;user.email=sftnight@cern.ch;rebase;-f;-v;v6-24-00-patches;kgizdov-v6-24-00-patches-nonull-backport;WORKING_DIRECTORY;C:/build/workspace/root-pullrequests-build/root;TIMEOUT;300]. 11:04:07 stdout: . 11:04:07 stderr: . 11:04:07 It seems that there is already a rebase-apply directory, and. 11:04:07 I wonder if you are in the middle of another rebase. If that is the. 11:04:07 case, please try. 11:04:07 	git rebase (--continue | --abort | --skip). 11:04:07 If that is not the case, please. 11:04:07 	rm -fr ""C:/build/workspace/root-pullrequests-build/root/.git/rebase-apply"". 11:04:07 and run me again. I am stopping in case you still have something. 11:04:07 valuable there. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9276
https://github.com/root-project/root/pull/9278:148,deployability,version,version,148,"FYI, https://github.com/nlohmann/json/blame/develop/include/nlohmann/json_fwd.hpp#L27 shows how rarely this changes and demonstrates that (possibly version protected / restricted) fwd decls are viable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9278
https://github.com/root-project/root/pull/9278:148,integrability,version,version,148,"FYI, https://github.com/nlohmann/json/blame/develop/include/nlohmann/json_fwd.hpp#L27 shows how rarely this changes and demonstrates that (possibly version protected / restricted) fwd decls are viable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9278
https://github.com/root-project/root/pull/9278:148,modifiability,version,version,148,"FYI, https://github.com/nlohmann/json/blame/develop/include/nlohmann/json_fwd.hpp#L27 shows how rarely this changes and demonstrates that (possibly version protected / restricted) fwd decls are viable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9278
https://github.com/root-project/root/pull/9278:5,availability,failur,failure,5,Test failure is unrelated (according to @eguiraud ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9278
https://github.com/root-project/root/pull/9278:5,deployability,fail,failure,5,Test failure is unrelated (according to @eguiraud ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9278
https://github.com/root-project/root/pull/9278:5,performance,failur,failure,5,Test failure is unrelated (according to @eguiraud ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9278
https://github.com/root-project/root/pull/9278:5,reliability,fail,failure,5,Test failure is unrelated (according to @eguiraud ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9278
https://github.com/root-project/root/pull/9278:0,safety,Test,Test,0,Test failure is unrelated (according to @eguiraud ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9278
https://github.com/root-project/root/pull/9278:0,testability,Test,Test,0,Test failure is unrelated (according to @eguiraud ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9278
https://github.com/root-project/root/pull/9284:23,availability,error,errors,23,No sure what is wrong (errors are new/related) but one important missing feature is the invalidation of (some of) the cache upon transaction/file unloading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9284
https://github.com/root-project/root/pull/9284:146,deployability,unload,unloading,146,No sure what is wrong (errors are new/related) but one important missing feature is the invalidation of (some of) the cache upon transaction/file unloading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9284
https://github.com/root-project/root/pull/9284:23,performance,error,errors,23,No sure what is wrong (errors are new/related) but one important missing feature is the invalidation of (some of) the cache upon transaction/file unloading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9284
https://github.com/root-project/root/pull/9284:118,performance,cach,cache,118,No sure what is wrong (errors are new/related) but one important missing feature is the invalidation of (some of) the cache upon transaction/file unloading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9284
https://github.com/root-project/root/pull/9284:23,safety,error,errors,23,No sure what is wrong (errors are new/related) but one important missing feature is the invalidation of (some of) the cache upon transaction/file unloading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9284
https://github.com/root-project/root/pull/9284:23,usability,error,errors,23,No sure what is wrong (errors are new/related) but one important missing feature is the invalidation of (some of) the cache upon transaction/file unloading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9284
https://github.com/root-project/root/issues/9285:15,deployability,fail,fails,15,"Correction. It fails to compile on 6.24.02. . The gcc version that it fails on is. (base) [joe@big-apple buildbot (master)]$ gcc --version. gcc (Mageia 11.2.1-0.20211106.1.mga9) 11.2.1 20211106. Copyright (C) 2021 Free Software Foundation, Inc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:54,deployability,version,version,54,"Correction. It fails to compile on 6.24.02. . The gcc version that it fails on is. (base) [joe@big-apple buildbot (master)]$ gcc --version. gcc (Mageia 11.2.1-0.20211106.1.mga9) 11.2.1 20211106. Copyright (C) 2021 Free Software Foundation, Inc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:70,deployability,fail,fails,70,"Correction. It fails to compile on 6.24.02. . The gcc version that it fails on is. (base) [joe@big-apple buildbot (master)]$ gcc --version. gcc (Mageia 11.2.1-0.20211106.1.mga9) 11.2.1 20211106. Copyright (C) 2021 Free Software Foundation, Inc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:105,deployability,build,buildbot,105,"Correction. It fails to compile on 6.24.02. . The gcc version that it fails on is. (base) [joe@big-apple buildbot (master)]$ gcc --version. gcc (Mageia 11.2.1-0.20211106.1.mga9) 11.2.1 20211106. Copyright (C) 2021 Free Software Foundation, Inc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:131,deployability,version,version,131,"Correction. It fails to compile on 6.24.02. . The gcc version that it fails on is. (base) [joe@big-apple buildbot (master)]$ gcc --version. gcc (Mageia 11.2.1-0.20211106.1.mga9) 11.2.1 20211106. Copyright (C) 2021 Free Software Foundation, Inc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:54,integrability,version,version,54,"Correction. It fails to compile on 6.24.02. . The gcc version that it fails on is. (base) [joe@big-apple buildbot (master)]$ gcc --version. gcc (Mageia 11.2.1-0.20211106.1.mga9) 11.2.1 20211106. Copyright (C) 2021 Free Software Foundation, Inc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:131,integrability,version,version,131,"Correction. It fails to compile on 6.24.02. . The gcc version that it fails on is. (base) [joe@big-apple buildbot (master)]$ gcc --version. gcc (Mageia 11.2.1-0.20211106.1.mga9) 11.2.1 20211106. Copyright (C) 2021 Free Software Foundation, Inc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:54,modifiability,version,version,54,"Correction. It fails to compile on 6.24.02. . The gcc version that it fails on is. (base) [joe@big-apple buildbot (master)]$ gcc --version. gcc (Mageia 11.2.1-0.20211106.1.mga9) 11.2.1 20211106. Copyright (C) 2021 Free Software Foundation, Inc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:131,modifiability,version,version,131,"Correction. It fails to compile on 6.24.02. . The gcc version that it fails on is. (base) [joe@big-apple buildbot (master)]$ gcc --version. gcc (Mageia 11.2.1-0.20211106.1.mga9) 11.2.1 20211106. Copyright (C) 2021 Free Software Foundation, Inc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:15,reliability,fail,fails,15,"Correction. It fails to compile on 6.24.02. . The gcc version that it fails on is. (base) [joe@big-apple buildbot (master)]$ gcc --version. gcc (Mageia 11.2.1-0.20211106.1.mga9) 11.2.1 20211106. Copyright (C) 2021 Free Software Foundation, Inc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:70,reliability,fail,fails,70,"Correction. It fails to compile on 6.24.02. . The gcc version that it fails on is. (base) [joe@big-apple buildbot (master)]$ gcc --version. gcc (Mageia 11.2.1-0.20211106.1.mga9) 11.2.1 20211106. Copyright (C) 2021 Free Software Foundation, Inc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:50,deployability,version,version,50,This turned out to be a problem in the prerelease version of gcc 11.2 and was fixed by an internal patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:99,deployability,patch,patch,99,This turned out to be a problem in the prerelease version of gcc 11.2 and was fixed by an internal patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:50,integrability,version,version,50,This turned out to be a problem in the prerelease version of gcc 11.2 and was fixed by an internal patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:50,modifiability,version,version,50,This turned out to be a problem in the prerelease version of gcc 11.2 and was fixed by an internal patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:99,safety,patch,patch,99,This turned out to be a problem in the prerelease version of gcc 11.2 and was fixed by an internal patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/issues/9285:99,security,patch,patch,99,This turned out to be a problem in the prerelease version of gcc 11.2 and was fixed by an internal patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9285
https://github.com/root-project/root/pull/9286:31,safety,test,tests,31,Oops! I forgot to add the unit tests! Added.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:26,testability,unit,unit,26,Oops! I forgot to add the unit tests! Added.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:31,testability,test,tests,31,Oops! I forgot to add the unit tests! Added.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:25,deployability,patch,patches,25,"Applied most part of the patches suggested by the git-clang-format CI. However, I'm not sure if we would break the lines of the example code, since they are meant to be typed into the ROOT REPL. It also seems inappropriate to break the ROOT REPL output into lines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:60,interoperability,format,format,60,"Applied most part of the patches suggested by the git-clang-format CI. However, I'm not sure if we would break the lines of the example code, since they are meant to be typed into the ROOT REPL. It also seems inappropriate to break the ROOT REPL output into lines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:25,safety,patch,patches,25,"Applied most part of the patches suggested by the git-clang-format CI. However, I'm not sure if we would break the lines of the example code, since they are meant to be typed into the ROOT REPL. It also seems inappropriate to break the ROOT REPL output into lines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:25,security,patch,patches,25,"Applied most part of the patches suggested by the git-clang-format CI. However, I'm not sure if we would break the lines of the example code, since they are meant to be typed into the ROOT REPL. It also seems inappropriate to break the ROOT REPL output into lines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:340,integrability,wrap,wrap,340,"> However, I'm not sure if we would break the lines of the example code, since they are meant to be typed into the ROOT REPL. > It also seems inappropriate to break the ROOT REPL output into lines. Absolutely, feel free to ignore the suggestions of clang-format w.r.t. formatted comments when your formatting makes more sense. You can also wrap the comments with `// clang-format off` and `// clang-format off` to explicitly tell clang-format to ignore that part of the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:255,interoperability,format,format,255,"> However, I'm not sure if we would break the lines of the example code, since they are meant to be typed into the ROOT REPL. > It also seems inappropriate to break the ROOT REPL output into lines. Absolutely, feel free to ignore the suggestions of clang-format w.r.t. formatted comments when your formatting makes more sense. You can also wrap the comments with `// clang-format off` and `// clang-format off` to explicitly tell clang-format to ignore that part of the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:269,interoperability,format,formatted,269,"> However, I'm not sure if we would break the lines of the example code, since they are meant to be typed into the ROOT REPL. > It also seems inappropriate to break the ROOT REPL output into lines. Absolutely, feel free to ignore the suggestions of clang-format w.r.t. formatted comments when your formatting makes more sense. You can also wrap the comments with `// clang-format off` and `// clang-format off` to explicitly tell clang-format to ignore that part of the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:298,interoperability,format,formatting,298,"> However, I'm not sure if we would break the lines of the example code, since they are meant to be typed into the ROOT REPL. > It also seems inappropriate to break the ROOT REPL output into lines. Absolutely, feel free to ignore the suggestions of clang-format w.r.t. formatted comments when your formatting makes more sense. You can also wrap the comments with `// clang-format off` and `// clang-format off` to explicitly tell clang-format to ignore that part of the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:373,interoperability,format,format,373,"> However, I'm not sure if we would break the lines of the example code, since they are meant to be typed into the ROOT REPL. > It also seems inappropriate to break the ROOT REPL output into lines. Absolutely, feel free to ignore the suggestions of clang-format w.r.t. formatted comments when your formatting makes more sense. You can also wrap the comments with `// clang-format off` and `// clang-format off` to explicitly tell clang-format to ignore that part of the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:399,interoperability,format,format,399,"> However, I'm not sure if we would break the lines of the example code, since they are meant to be typed into the ROOT REPL. > It also seems inappropriate to break the ROOT REPL output into lines. Absolutely, feel free to ignore the suggestions of clang-format w.r.t. formatted comments when your formatting makes more sense. You can also wrap the comments with `// clang-format off` and `// clang-format off` to explicitly tell clang-format to ignore that part of the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:436,interoperability,format,format,436,"> However, I'm not sure if we would break the lines of the example code, since they are meant to be typed into the ROOT REPL. > It also seems inappropriate to break the ROOT REPL output into lines. Absolutely, feel free to ignore the suggestions of clang-format w.r.t. formatted comments when your formatting makes more sense. You can also wrap the comments with `// clang-format off` and `// clang-format off` to explicitly tell clang-format to ignore that part of the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:126,availability,error,error,126,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:205,availability,operat,operator,205,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:503,availability,error,error,503,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:43,deployability,build,build,43,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:77,deployability,build,build,77,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:405,deployability,Updat,Update,405,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:436,deployability,version,version,436,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:428,energy efficiency,current,current,428,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:195,integrability,sub,subscript,195,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:436,integrability,version,version,436,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:258,interoperability,platform,platform,258,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:267,interoperability,specif,specific,267,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:436,modifiability,version,version,436,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:126,performance,error,error,126,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:503,performance,error,error,503,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:176,reliability,doe,does,176,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:126,safety,error,error,126,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:405,safety,Updat,Update,405,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:503,safety,error,error,503,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:405,security,Updat,Update,405,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:126,usability,error,error,126,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:503,usability,error,error,503,"> [2021-11-15T12:21:02.692Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RVec.hxx:926:17: error: type 'ROOT::Detail::VecOps::RVecImpl<int>' does not provide a subscript operator. That's quite strange. I had thougt it were platform specific and #9261 related when seeing it on my machine. Replacing `MyFunction` with `ROOT::VecOps::MyFunction` should solve the problem. Update: Just tried the current version (without `ROOT::VecOps::`) on LXPLUS, and it works without error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:19,availability,error,error,19,"I don't know.. The error shown by Jenkins also appears on the ROOT interactive environment on NixOS, but not on LXPLUS or other platforms I have tested. It happens not only to the new `StableSort`, but also `Sort`, as they are almost identical. @eguiraud Do you have any idea?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:128,interoperability,platform,platforms,128,"I don't know.. The error shown by Jenkins also appears on the ROOT interactive environment on NixOS, but not on LXPLUS or other platforms I have tested. It happens not only to the new `StableSort`, but also `Sort`, as they are almost identical. @eguiraud Do you have any idea?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:19,performance,error,error,19,"I don't know.. The error shown by Jenkins also appears on the ROOT interactive environment on NixOS, but not on LXPLUS or other platforms I have tested. It happens not only to the new `StableSort`, but also `Sort`, as they are almost identical. @eguiraud Do you have any idea?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:19,safety,error,error,19,"I don't know.. The error shown by Jenkins also appears on the ROOT interactive environment on NixOS, but not on LXPLUS or other platforms I have tested. It happens not only to the new `StableSort`, but also `Sort`, as they are almost identical. @eguiraud Do you have any idea?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:145,safety,test,tested,145,"I don't know.. The error shown by Jenkins also appears on the ROOT interactive environment on NixOS, but not on LXPLUS or other platforms I have tested. It happens not only to the new `StableSort`, but also `Sort`, as they are almost identical. @eguiraud Do you have any idea?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:234,security,ident,identical,234,"I don't know.. The error shown by Jenkins also appears on the ROOT interactive environment on NixOS, but not on LXPLUS or other platforms I have tested. It happens not only to the new `StableSort`, but also `Sort`, as they are almost identical. @eguiraud Do you have any idea?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:145,testability,test,tested,145,"I don't know.. The error shown by Jenkins also appears on the ROOT interactive environment on NixOS, but not on LXPLUS or other platforms I have tested. It happens not only to the new `StableSort`, but also `Sort`, as they are almost identical. @eguiraud Do you have any idea?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:19,usability,error,error,19,"I don't know.. The error shown by Jenkins also appears on the ROOT interactive environment on NixOS, but not on LXPLUS or other platforms I have tested. It happens not only to the new `StableSort`, but also `Sort`, as they are almost identical. @eguiraud Do you have any idea?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:67,usability,interact,interactive,67,"I don't know.. The error shown by Jenkins also appears on the ROOT interactive environment on NixOS, but not on LXPLUS or other platforms I have tested. It happens not only to the new `StableSort`, but also `Sort`, as they are almost identical. @eguiraud Do you have any idea?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:490,availability,error,error,490,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:511,availability,operat,operator,511,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:751,availability,error,error,751,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:772,availability,operat,operator,772,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:24,deployability,patch,patch,24,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:490,performance,error,error,490,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:751,performance,error,error,751,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:1117,performance,time,time,1117,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:30,reliability,doe,does,30,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:24,safety,patch,patch,24,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:297,safety,Test,TestBody,297,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:400,safety,test,test,400,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:490,safety,error,error,490,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:751,safety,error,error,751,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:24,security,patch,patch,24,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:297,testability,Test,TestBody,297,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:400,testability,test,test,400,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:490,usability,error,error,490,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:751,usability,error,error,751,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:1004,usability,behavi,behavior,1004,"Hi @ShamrockLee ,. this patch does not compile for me:. ```. ../math/vecops/inc/ROOT/RVec.hxx:2401:20: required from ‘ROOT::VecOps::RVec<T> ROOT::VecOps::StableSort(const ROOT::VecOps::RVec<T>&, Compare&&) [with T = ROOT::VecOps::RVec<int>; Compare = VecOps_StableSortWithComparisonOperator_Test::TestBody()::<lambda(const ROOT::VecOps::RVec<int>&, const ROOT::VecOps::RVec<int>&)>]’. ../math/vecops/test/vecops_rvec.cxx:873:31: required from here. ../math/vecops/inc/ROOT/RVec.hxx:926:24: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~~~~~^. ../math/vecops/inc/ROOT/RVec.hxx:926:32: error: no match for ‘operator[]’ (operand types are ‘ROOT::Detail::VecOps::RVecImpl<int>’ and ‘ROOT::Detail::VecOps::RVecImpl<int>::size_type’ {aka long unsigned int’}). 926 | std::swap((*this)[i], RHS[i]);. | ~~~^. ```. but the problem might be in the behavior of our implementation of `std::swap` of RVecs when the elements are RVecs themselves. I don't have much time to further debug at the moment, I'll get back to this as soon as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:165,deployability,build,build,165,"@eguiraud Then I'll drop the corresponding test and example code, and use something else (e.g. vector of `std::string`, `std::pair`, `int`, etc.) instead. It should build afterward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:43,safety,test,test,43,"@eguiraud Then I'll drop the corresponding test and example code, and use something else (e.g. vector of `std::string`, `std::pair`, `int`, etc.) instead. It should build afterward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:43,testability,test,test,43,"@eguiraud Then I'll drop the corresponding test and example code, and use something else (e.g. vector of `std::string`, `std::pair`, `int`, etc.) instead. It should build afterward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:226,usability,help,helped,226,"We have a solution for that compilation issue related to swap at #9303 thanks to @ikabadzhov , it was a bug in the swap implementation we had in the master branch (unreleased). I just merged the fix in master, let's see if it helped",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:17,deployability,updat,update,17,Just undo-ed the update. Hope that nothing breaks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:17,safety,updat,update,17,Just undo-ed the update. Hope that nothing breaks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:17,security,updat,update,17,Just undo-ed the update. Hope that nothing breaks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:5,usability,undo,undo-ed,5,Just undo-ed the update. Hope that nothing breaks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:11,deployability,Updat,Updated,11,Thank you! Updated and rebased onto the master branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:11,safety,Updat,Updated,11,Thank you! Updated and rebased onto the master branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:11,security,Updat,Updated,11,Thank you! Updated and rebased onto the master branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:0,availability,Failur,Failure,0,"Failure is unrelated, merging. Thank you very much @ShamrockLee !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:0,deployability,Fail,Failure,0,"Failure is unrelated, merging. Thank you very much @ShamrockLee !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:0,performance,Failur,Failure,0,"Failure is unrelated, merging. Thank you very much @ShamrockLee !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9286:0,reliability,Fail,Failure,0,"Failure is unrelated, merging. Thank you very much @ShamrockLee !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9286
https://github.com/root-project/root/pull/9288:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:267,deployability,build,build,267,"@Axel-Naumann Just to make sure: is anything required of me right now or will you review and diagnose the problems yourself when you have the time? If the former, would you please inform me how to get a CERN account which seems to be mandatory in order to access the build logs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:273,deployability,log,logs,273,"@Axel-Naumann Just to make sure: is anything required of me right now or will you review and diagnose the problems yourself when you have the time? If the former, would you please inform me how to get a CERN account which seems to be mandatory in order to access the build logs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:142,performance,time,time,142,"@Axel-Naumann Just to make sure: is anything required of me right now or will you review and diagnose the problems yourself when you have the time? If the former, would you please inform me how to get a CERN account which seems to be mandatory in order to access the build logs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:93,reliability,diagno,diagnose,93,"@Axel-Naumann Just to make sure: is anything required of me right now or will you review and diagnose the problems yourself when you have the time? If the former, would you please inform me how to get a CERN account which seems to be mandatory in order to access the build logs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:82,safety,review,review,82,"@Axel-Naumann Just to make sure: is anything required of me right now or will you review and diagnose the problems yourself when you have the time? If the former, would you please inform me how to get a CERN account which seems to be mandatory in order to access the build logs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:273,safety,log,logs,273,"@Axel-Naumann Just to make sure: is anything required of me right now or will you review and diagnose the problems yourself when you have the time? If the former, would you please inform me how to get a CERN account which seems to be mandatory in order to access the build logs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:256,security,access,access,256,"@Axel-Naumann Just to make sure: is anything required of me right now or will you review and diagnose the problems yourself when you have the time? If the former, would you please inform me how to get a CERN account which seems to be mandatory in order to access the build logs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:273,security,log,logs,273,"@Axel-Naumann Just to make sure: is anything required of me right now or will you review and diagnose the problems yourself when you have the time? If the former, would you please inform me how to get a CERN account which seems to be mandatory in order to access the build logs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:82,testability,review,review,82,"@Axel-Naumann Just to make sure: is anything required of me right now or will you review and diagnose the problems yourself when you have the time? If the former, would you please inform me how to get a CERN account which seems to be mandatory in order to access the build logs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:93,testability,diagno,diagnose,93,"@Axel-Naumann Just to make sure: is anything required of me right now or will you review and diagnose the problems yourself when you have the time? If the former, would you please inform me how to get a CERN account which seems to be mandatory in order to access the build logs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:273,testability,log,logs,273,"@Axel-Naumann Just to make sure: is anything required of me right now or will you review and diagnose the problems yourself when you have the time? If the former, would you please inform me how to get a CERN account which seems to be mandatory in order to access the build logs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:14,performance,Network,Network,14,@Axel-Naumann Network issues again?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:14,security,Network,Network,14,@Axel-Naumann Network issues again?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:19,deployability,instal,install,19,"No, Python / macOS install issues this time :-/ This is good to go!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9288:39,performance,time,time,39,"No, Python / macOS install issues this time :-/ This is good to go!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9288
https://github.com/root-project/root/pull/9293:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9293
https://github.com/root-project/root/issues/9294:1033,availability,error,error,1033,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:696,deployability,version,version,696,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:776,deployability,version,version,776,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:170,energy efficiency,core,core,170,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:696,integrability,version,version,696,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:776,integrability,version,version,776,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:696,modifiability,version,version,696,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:776,modifiability,version,version,776,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:629,performance,lock,lock-program-freezes,629,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:750,performance,lock,lockguard,750,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1033,performance,error,error,1033,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:767,reliability,doe,does,767,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:316,safety,reme,remember,316,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1033,safety,error,error,1033,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:629,security,lock,lock-program-freezes,629,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:750,security,lock,lockguard,750,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:729,usability,support,supported,729,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1011,usability,behavi,behaviour,1011,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1033,usability,error,error,1033,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu. https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365). Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:. - Why is the version with the non-pointer not supported as in std::lockguard? - Why does one version need "";"" at the end, but not the other one? - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:75,performance,time,time,75,I am not sure who can look at this. I assigned it to @Axel-Naumann for the time being.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1012,availability,error,error,1012,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:13,deployability,version,version,13,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:387,deployability,version,version,387,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:554,energy efficiency,current,current,554,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:13,integrability,version,version,13,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:387,integrability,version,version,387,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:514,integrability,sub,submit,514,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:622,integrability,interfac,interface,622,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:622,interoperability,interfac,interface,622,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1185,interoperability,convers,conversion,1185,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:13,modifiability,version,version,13,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:387,modifiability,version,version,387,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:622,modifiability,interfac,interface,622,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:67,performance,lock,lockguard,67,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:903,performance,lock,locking,903,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1012,performance,error,error,1012,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:378,reliability,doe,does,378,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1012,safety,error,error,1012,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:67,security,lock,lockguard,67,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:903,security,lock,locking,903,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1107,security,auth,authoritative,1107,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:46,usability,support,supported,46,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:188,usability,minim,minimal,188,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:610,usability,user,user,610,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:862,usability,support,support,862,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:990,usability,behavi,behaviour,990,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:1012,usability,error,error,1012,"> Why is the version with the non-pointer not supported as in std::lockguard? Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR! > Why does one version need "";"" at the end, but not the other one? Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package? You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both? That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:13,deployability,version,version,13,"> Why is the version with the non-pointer not supported as in std::lockguard? In addition to what @Axel-Naumann mentioned, ROOT supports a run-time switch where no lock is taken ('thread safety is not enabled') and this is indicated by the pointer being ```nullptr``` (thus avoid even the construction of the mutex when they are not needed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:13,integrability,version,version,13,"> Why is the version with the non-pointer not supported as in std::lockguard? In addition to what @Axel-Naumann mentioned, ROOT supports a run-time switch where no lock is taken ('thread safety is not enabled') and this is indicated by the pointer being ```nullptr``` (thus avoid even the construction of the mutex when they are not needed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:13,modifiability,version,version,13,"> Why is the version with the non-pointer not supported as in std::lockguard? In addition to what @Axel-Naumann mentioned, ROOT supports a run-time switch where no lock is taken ('thread safety is not enabled') and this is indicated by the pointer being ```nullptr``` (thus avoid even the construction of the mutex when they are not needed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:67,performance,lock,lockguard,67,"> Why is the version with the non-pointer not supported as in std::lockguard? In addition to what @Axel-Naumann mentioned, ROOT supports a run-time switch where no lock is taken ('thread safety is not enabled') and this is indicated by the pointer being ```nullptr``` (thus avoid even the construction of the mutex when they are not needed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:143,performance,time,time,143,"> Why is the version with the non-pointer not supported as in std::lockguard? In addition to what @Axel-Naumann mentioned, ROOT supports a run-time switch where no lock is taken ('thread safety is not enabled') and this is indicated by the pointer being ```nullptr``` (thus avoid even the construction of the mutex when they are not needed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:164,performance,lock,lock,164,"> Why is the version with the non-pointer not supported as in std::lockguard? In addition to what @Axel-Naumann mentioned, ROOT supports a run-time switch where no lock is taken ('thread safety is not enabled') and this is indicated by the pointer being ```nullptr``` (thus avoid even the construction of the mutex when they are not needed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:187,safety,safe,safety,187,"> Why is the version with the non-pointer not supported as in std::lockguard? In addition to what @Axel-Naumann mentioned, ROOT supports a run-time switch where no lock is taken ('thread safety is not enabled') and this is indicated by the pointer being ```nullptr``` (thus avoid even the construction of the mutex when they are not needed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:274,safety,avoid,avoid,274,"> Why is the version with the non-pointer not supported as in std::lockguard? In addition to what @Axel-Naumann mentioned, ROOT supports a run-time switch where no lock is taken ('thread safety is not enabled') and this is indicated by the pointer being ```nullptr``` (thus avoid even the construction of the mutex when they are not needed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:67,security,lock,lockguard,67,"> Why is the version with the non-pointer not supported as in std::lockguard? In addition to what @Axel-Naumann mentioned, ROOT supports a run-time switch where no lock is taken ('thread safety is not enabled') and this is indicated by the pointer being ```nullptr``` (thus avoid even the construction of the mutex when they are not needed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:164,security,lock,lock,164,"> Why is the version with the non-pointer not supported as in std::lockguard? In addition to what @Axel-Naumann mentioned, ROOT supports a run-time switch where no lock is taken ('thread safety is not enabled') and this is indicated by the pointer being ```nullptr``` (thus avoid even the construction of the mutex when they are not needed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:46,usability,support,supported,46,"> Why is the version with the non-pointer not supported as in std::lockguard? In addition to what @Axel-Naumann mentioned, ROOT supports a run-time switch where no lock is taken ('thread safety is not enabled') and this is indicated by the pointer being ```nullptr``` (thus avoid even the construction of the mutex when they are not needed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:128,usability,support,supports,128,"> Why is the version with the non-pointer not supported as in std::lockguard? In addition to what @Axel-Naumann mentioned, ROOT supports a run-time switch where no lock is taken ('thread safety is not enabled') and this is indicated by the pointer being ```nullptr``` (thus avoid even the construction of the mutex when they are not needed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9294:223,usability,indicat,indicated,223,"> Why is the version with the non-pointer not supported as in std::lockguard? In addition to what @Axel-Naumann mentioned, ROOT supports a run-time switch where no lock is taken ('thread safety is not enabled') and this is indicated by the pointer being ```nullptr``` (thus avoid even the construction of the mutex when they are not needed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9294
https://github.com/root-project/root/issues/9297:122,deployability,build,build,122,"@smuzaffar, the major difference is the llvm9 which ships with v6.24. Do we have access to ppc64le machine so that we can build ROOT and LLVM in debug mode to investigate? cc: @davidlange6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:81,security,access,access,81,"@smuzaffar, the major difference is the llvm9 which ships with v6.24. Do we have access to ppc64le machine so that we can build ROOT and LLVM in debug mode to investigate? cc: @davidlange6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:22,deployability,build,build,22,is there no root test build on ppc?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:17,safety,test,test,17,is there no root test build on ppc?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:17,testability,test,test,17,is there no root test build on ppc?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:22,safety,test,testing,22,"thanks @hahnjo , I am testing fb3367f on top of v6.24 here ( https://github.com/cms-sw/root/pull/160 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:22,testability,test,testing,22,"thanks @hahnjo , I am testing fb3367f on top of v6.24 here ( https://github.com/cms-sw/root/pull/160 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:48,availability,error,error,48,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:18,deployability,build,build,18,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:37,deployability,fail,fails,37,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:98,deployability,artifact,artifacts,98,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:121,deployability,integr,integration,121,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:199,deployability,log,log,199,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:445,deployability,BUILD,BUILD,445,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:519,deployability,build,build,519,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:561,deployability,stack,stack,561,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:884,deployability,Stack,StackTrace,884,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:972,deployability,BUILD,BUILD,972,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1046,deployability,build,build,1046,"rror [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1207,deployability,BUILD,BUILD,1207,"oot.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1281,deployability,build,build,1281,"===================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1424,deployability,BUILD,BUILD,1424,"ests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1498,deployability,build,build,1498,"2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1636,deployability,BUILD,BUILD,1636,"==========. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1710,deployability,build,build,1710,"c.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1998,deployability,BUILD,BUILD,1998,"oot/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2072,deployability,build,build,2072,"001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2224,deployability,BUILD,BUILD,2224,"cc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2298,deployability,build,build,2298,". #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2458,deployability,BUILD,BUILD,2458,".07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2532,deployability,build,build,2532,"45da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2802,deployability,BUILD,BUILD,2802,"rom /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2876,deployability,build,build,2876,"(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3075,deployability,BUILD,BUILD,3075,"lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3149,deployability,build,build,3149,"from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3477,deployability,BUILD,BUILD,3477,"9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3551,deployability,build,build,3551,"#12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3755,deployability,BUILD,BUILD,3755,"ns_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterExceptio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3829,deployability,build,build,3829,"ot/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4030,deployability,BUILD,BUILD,4030,"_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4104,deployability,build,build,4104,"/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4304,deployability,BUILD,BUILD,4304,"char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4378,deployability,build,build,4378,"on**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4610,deployability,BUILD,BUILD,4610,"ma::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4684,deployability,build,build,4684," /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4926,deployability,BUILD,BUILD,4926,"onResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5000,deployability,build,build,5000,"-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5184,deployability,BUILD,BUILD,5184,"::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5258,deployability,build,build,5258,"s_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f1571",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5447,deployability,BUILD,BUILD,5447,"rocess(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5521,deployability,build,build,5521,"ue*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5716,deployability,BUILD,BUILD,5716,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5790,deployability,build,build,5790,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5964,deployability,BUILD,BUILD,5964,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6038,deployability,build,build,6038,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6214,deployability,BUILD,BUILD,6214,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6288,deployability,build,build,6288,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6428,deployability,BUILD,BUILD,6428,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6502,deployability,build,build,6502,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3297,energy efficiency,alloc,allocator,3297,"d/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:121,integrability,integr,integration,121,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:121,interoperability,integr,integration,121,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:121,modifiability,integr,integration,121,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1864,modifiability,Deco,DecodeNameCycle,1864,"UnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:48,performance,error,error,48,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:37,reliability,fail,fails,37,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:121,reliability,integr,integration,121,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:48,safety,error,error,48,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:199,safety,log,log,199,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:426,safety,test,tests,426,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:432,safety,test,testBuildDir,432,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:953,safety,test,tests,953,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:959,safety,test,testBuildDir,959,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1188,safety,test,tests,1188,"df4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/worksp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1194,safety,test,testBuildDir,1194,"og. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-ru",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1405,safety,test,tests,1405,"rkspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1411,safety,test,testBuildDir,1411,"b-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1617,safety,test,tests,1617,"=============================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1623,safety,test,testBuildDir,1623,"====================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1979,safety,test,tests,1979,"_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1985,safety,test,testBuildDir,1985,"gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2205,safety,test,tests,2205,"UILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2211,safety,test,testBuildDir,2211,"_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2439,safety,test,tests,2439,"_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2445,safety,test,testBuildDir,2445,"/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2783,safety,test,tests,2783,"_strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2789,safety,test,testBuildDir,2789,"ower7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3056,safety,test,tests,3056,"c700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3062,safety,test,testBuildDir,3062,"55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3458,safety,test,tests,3458,"LD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3464,safety,test,testBuildDir,3464,"pc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3736,safety,test,tests,3736,"atch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in Handle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3742,safety,test,testBuildDir,3742,"uild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4011,safety,test,tests,4011,"ch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4017,safety,test,testBuildDir,4017,"ld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4285,safety,test,tests,4285,"r>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4291,safety,test,testBuildDir,4291,"allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4591,safety,test,tests,4591,"24 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4597,safety,test,testBuildDir,4597,"ng::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4907,safety,test,tests,4907,"ing::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4913,safety,test,testBuildDir,4913,"Sema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenk",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5165,safety,test,tests,5165,"er::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5171,safety,test,testBuildDir,5171,"mand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/wo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5428,safety,test,tests,5428,"g::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5434,safety,test,testBuildDir,5434,"ocessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5697,safety,test,tests,5697,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5703,safety,test,testBuildDir,5703,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5945,safety,test,tests,5945,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5951,safety,test,testBuildDir,5951,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6195,safety,test,tests,6195,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6201,safety,test,testBuildDir,6201,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6409,safety,test,tests,6409,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6415,safety,test,testBuildDir,6415,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:121,security,integr,integration,121,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:199,security,log,log,199,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1736,security,sign,signal,1736,"d3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:121,testability,integr,integration,121,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:199,testability,log,log,199,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:426,testability,test,tests,426,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:432,testability,test,testBuildDir,432,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:567,testability,trace,trace,567,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:953,testability,test,tests,953,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:959,testability,test,testBuildDir,959,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1188,testability,test,tests,1188,"df4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/worksp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1194,testability,test,testBuildDir,1194,"og. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-ru",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1405,testability,test,tests,1405,"rkspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1411,testability,test,testBuildDir,1411,"b-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1617,testability,test,tests,1617,"=============================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1623,testability,test,testBuildDir,1623,"====================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1979,testability,test,tests,1979,"_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1985,testability,test,testBuildDir,1985,"gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2205,testability,test,tests,2205,"UILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2211,testability,test,testBuildDir,2211,"_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2439,testability,test,tests,2439,"_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2445,testability,test,testBuildDir,2445,"/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2783,testability,test,tests,2783,"_strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2789,testability,test,testBuildDir,2789,"ower7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3056,testability,test,tests,3056,"c700ddf4b55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3062,testability,test,testBuildDir,3062,"55e/build/lib/libCore.so. #10 0x000010000028f938 in TDirectory::Get(char const*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #11 0x0000100000255e74 in TROOT::FindObject(char const*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3458,testability,test,tests,3458,"LD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3464,testability,test,testBuildDir,3464,"pc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #12 0x0000100007c20610 in ?? (). #13 0x0000100007c20050 in ?? (). #14 0x0000100001cc2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3736,testability,test,tests,3736,"atch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in Handle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3742,testability,test,testBuildDir,3742,"uild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #15 0x0000100001c0eb18 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4011,testability,test,tests,4011,"ch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4017,testability,test,testBuildDir,4017,"ld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #16 0x0000100001c12774 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4285,testability,test,tests,4285,"r>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4291,testability,test,testBuildDir,4291,"allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #17 0x0000100001d4b624 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4591,testability,test,tests,4591,"24 in cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4597,testability,test,testBuildDir,4597,"ng::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #18 0x0000100001d5d774 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4907,testability,test,tests,4907,"ing::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4913,testability,test,testBuildDir,4913,"Sema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #19 0x0000100001d5fe0c in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenk",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5165,testability,test,tests,5165,"er::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5171,testability,test,testBuildDir,5171,"mand(cling::MetaSema::ActionResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #20 0x0000100001d43000 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/wo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5428,testability,test,tests,5428,"g::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5434,testability,test,testBuildDir,5434,"ocessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5697,testability,test,tests,5697,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5703,testability,test,testBuildDir,5703,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5945,testability,test,tests,5945,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5951,testability,test,testBuildDir,5951,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6195,testability,test,tests,6195,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6201,testability,test,testBuildDir,6201,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6409,testability,test,tests,6409,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6415,testability,test,testBuildDir,6415,"enkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #21 0x0000100001ac7010 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #22 0x0000100001ae6b0c in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #23 0x0000100001ae72b0 in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCling.so. #24 0x000010000026a504 in TApplication::ExecuteFile(char const*, int*, bool) [clone .localalias] () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #25 0x000010000026ba78 in TApplication::ProcessLine(char const*, bool, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #26 0x000010000008399c in TRint::ProcessLineNr(char const*, char const*, int*) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #27 0x0000100000085c58 in TRint::Run(bool) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libRint.so. #28 0x0000000010000af8 in main (). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:48,usability,error,error,48,"with fb3367f root build ( non-debug) fails with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20675/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/log. ```. root.exe -l -q -b -n -x hsimple.C. ===========================================================. There was a crash (#5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000100000b7e488 in __waitpid_nocancel () from /lib64/libc.so.6. #1 0x0000100000aefd3c in do_system () from /lib64/libc.so.6. #2 0x0000100000a75348 in system () from /lib64/libpthread.so.0. #3 0x0000100000468a30 in TUnixSystem::StackTrace() () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #4 0x00001000004643b4 in TUnixSystem::DispatchSignals(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #5 0x0000100000464490 in SigHandler(ESignals) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #6 0x000010000045da00 in sighandler(int) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-8f15712a8ca095b2e7ecc700ddf4b55e/build/lib/libCore.so. #7 <signal handler called>. #8 0x0000100000b58414 in __strchr_power7 () from /lib64/libc.so.6. #9 0x000010000028f724 in TDirectory::DecodeNameCycle(char const*, char*, short&, unsigned long) () from /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:92,safety,test,test,92,@vgvassilev I had sent you instruction to access ppc64le machine. Were you able connect and test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:42,security,access,access,42,@vgvassilev I had sent you instruction to access ppc64le machine. Were you able connect and test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:92,testability,test,test,92,@vgvassilev I had sent you instruction to access ppc64le machine. Were you able connect and test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:40,modifiability,maintain,maintainer,40,"@smuzaffar, I've contacted the llvm jit maintainer to get more insights. I have not yet started looking at this as I have some pressing deadlines. How urgent is that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:40,safety,maintain,maintainer,40,"@smuzaffar, I've contacted the llvm jit maintainer to get more insights. I have not yet started looking at this as I have some pressing deadlines. How urgent is that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:97,deployability,releas,release,97,kind of urgent as this is blocking us moving to root v6.24 . Next week we are opening next CMSSW release cycle (12.3.X) where we want to include this,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:213,availability,error,error,213,"The current valgrind report hints at the jit relocation:. ```. bash-4.2$ ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ valgrind root.exe -l -b -q tutorials/hsimple.C . ==92602== Memcheck, a memory error detector. ==92602== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==92602== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info. ==92602== Command: root.exe -l -b -q tutorials/hsimple.C. ==92602== . Disabling gnu++: clang has no __float128 support on this target! ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12). ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so). ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1310,availability,operat,operator,1310,"sing Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info. ==92602== Command: root.exe -l -b -q tutorials/hsimple.C. ==92602== . Disabling gnu++: clang has no __float128 support on this target! ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12). ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so). ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1594). ==92602== by 0x1772C99B: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1409,availability,operat,operator,1409,"b -q tutorials/hsimple.C. ==92602== . Disabling gnu++: clang has no __float128 support on this target! ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12). ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so). ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1594). ==92602== by 0x1772C99B: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:11785,availability,operat,operator,11785," clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:854). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678). ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659). ==92602== by 0x116F260B: clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x1157",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:14411,availability,operat,operator,14411," clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:853). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678). ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659). ==92602== by 0x116F260B: clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x1157",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:17037,availability,operat,operator,17037," clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:855). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678). ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659). ==92602== by 0x116F260B: clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x1157",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:24561,availability,operat,operator,24561,"by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_dele",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:25855,availability,operat,operator,25855,"ager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:26119,availability,operat,operator,26119,"asic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::Asynchronou",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:26807,availability,operat,operator,26807,"eMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27649,availability,operat,operator,27649,"bda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(clin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28365,availability,operat,operator,28365,"argetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolString",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:30741,availability,operat,operator,30741,"m::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:31241,availability,operat,operator,31241,"thMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::funct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:31704,availability,operat,operator,31704,"llocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:32284,availability,operat,operator,32284,"2== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolSt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:32835,availability,operat,operator,32835,"c::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:33099,availability,operat,operator,33099,"Layer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::Asynchronou",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:33787,availability,operat,operator,33787,"eMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34629,availability,operat,operator,34629,"bda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(clin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35345,availability,operat,operator,35345,"argetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolString",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:37721,availability,operat,operator,37721,"m::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:38221,availability,operat,operator,38221,"thMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::funct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:38684,availability,operat,operator,38684,"llocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (IncrementalJIT.h:191). ==92602== by 0x1188809F: cling::IncrementalExecutor::ExecutionResult cling::IncrementalExecutor::jitInitOrWrapper<void (*)(voi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:39264,availability,operat,operator,39264,"2== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (IncrementalJIT.h:191). ==92602== by 0x1188809F: cling::IncrementalExecutor::ExecutionResult cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)>(llvm::StringRef, void (*&)(void*)) const (IncrementalExecutor.h:287). ==92602== by 0x1188109F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:377). ==92602== by 0x116B01DB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1162). ==92602== by 0x116B1027: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:40322,availability,echo,echo,40322,"2BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (IncrementalJIT.h:191). ==92602== by 0x1188809F: cling::IncrementalExecutor::ExecutionResult cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)>(llvm::StringRef, void (*&)(void*)) const (IncrementalExecutor.h:287). ==92602== by 0x1188109F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:377). ==92602== by 0x116B01DB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1162). ==92602== by 0x116B1027: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1414). ==92602== by 0x116AF7DB: cling::Interpreter::echo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*) (Interpreter.cpp:1064). ==92602== by 0x11A291DF: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*)::{lambda(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::StringRef, cling::Value*)#1}::operator()(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::StringRef, cling::Value*) const (MetaSema.cpp:141). ==92602== by 0x11A29483: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==92602== by 0x11A44703: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:40706,availability,operat,operator,40706,"void (*&)(void*)) const (IncrementalExecutor.h:287). ==92602== by 0x1188109F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:377). ==92602== by 0x116B01DB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1162). ==92602== by 0x116B1027: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1414). ==92602== by 0x116AF7DB: cling::Interpreter::echo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*) (Interpreter.cpp:1064). ==92602== by 0x11A291DF: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*)::{lambda(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::StringRef, cling::Value*)#1}::operator()(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::StringRef, cling::Value*) const (MetaSema.cpp:141). ==92602== by 0x11A29483: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==92602== by 0x11A44703: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3094,deployability,depend,depends,3094,"m::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3163,deployability,Updat,UpdateIsOnHeap,3163,"delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== . ==92602== Conditional jump or move depends on unini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4154,deployability,depend,depends,4154,"age::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4223,deployability,Updat,UpdateIsOnHeap,4223,") (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialise",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5207,deployability,depend,depends,5207,": TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDir",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5276,deployability,Updat,UpdateIsOnHeap,5276,"latile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5885,deployability,depend,depends,5885," ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5954,deployability,Updat,UpdateIsOnHeap,5954,"x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:7704,deployability,depend,depends,7704,"r const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:7773,deployability,Updat,UpdateIsOnHeap,7773,"(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::Register",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:9550,deployability,depend,depends,9550,"tor<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633). ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241). ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157). ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501). ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:9619,deployability,Updat,UpdateIsOnHeap,9619,"har, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633). ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241). ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157). ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501). ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== by 0x4549833: THashTable::Add(TObject*) (THashTable.cxx:96). ==92602== by",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:10730,deployability,depend,depends,10730,"ect::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241). ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157). ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501). ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== by 0x4549833: THashTable::Add(TObject*) (THashTable.cxx:96). ==92602== by 0x4558607: TMap::Add(TObject*, TObject*) (TMap.cxx:66). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AD8C: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:854). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:13356,deployability,depend,depends,13356,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293ADB4: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:853). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:15982,deployability,depend,depends,15982,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AE04: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:855). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:18608,deployability,depend,depends,18608,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:18677,deployability,Updat,UpdateIsOnHeap,18677,"st*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:21559,deployability,fail,failed,21559,"dress range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (noaccess). valgrind: m_debuginfo/debuginfo.c:916 (truncate_DebugInfoMapping_overlaps): Assertion '!overlap' failed. host stacktrace:. ==92602== at 0x5805BDE8: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x5805BF8F: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x5805C10B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580A65A7: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580E6B4B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580F79D3: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580DFD1B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580DB027: ??? (in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:21572,deployability,stack,stacktrace,21572,"ms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (noaccess). valgrind: m_debuginfo/debuginfo.c:916 (truncate_DebugInfoMapping_overlaps): Assertion '!overlap' failed. host stacktrace:. ==92602== at 0x5805BDE8: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x5805BF8F: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x5805C10B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580A65A7: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580E6B4B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580F79D3: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580DFD1B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580DB027: ??? (in /cvmfs/cms.cer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:25649,deployability,Modul,Module,25649,"const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{la",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:25683,deployability,Modul,Module,25683,"=92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::As",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:26601,deployability,Modul,Module,26601,"n<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::Den",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:26635,deployability,Modul,Module,26635,"_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27443,deployability,Modul,Module,27443,"mentalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<ll",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27477,deployability,Modul,Module,27477,"lvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28159,deployability,Modul,Module,28159,"::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::uniq",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28193,deployability,Modul,Module,28193,"nfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28816,deployability,Modul,Module,28816,"a(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28850,deployability,Modul,Module,28850," std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:29175,deployability,Modul,Module,29175,"t_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:29209,deployability,Modul,Module,29209,"da(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:32629,deployability,Modul,Module,32629,"emovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{la",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:32663,deployability,Modul,Module,32663,"orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::As",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:33581,deployability,Modul,Module,33581,"n<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::Den",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:33615,deployability,Modul,Module,33615,"_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34423,deployability,Modul,Module,34423,"mentalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<ll",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34457,deployability,Modul,Module,34457,"lvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35139,deployability,Modul,Module,35139,"::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::uniq",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35173,deployability,Modul,Module,35173,"nfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35796,deployability,Modul,Module,35796,"a(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35830,deployability,Modul,Module,35830," std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:36155,deployability,Modul,Module,36155,"t_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:36189,deployability,Modul,Module,36189,"da(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:42413,deployability,stack,stack,42413,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:42488,deployability,stack,stack,42488,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:42612,deployability,contain,contains,42612,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:43017,deployability,version,version,43017,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:43042,deployability,version,version,43042,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4,energy efficiency,current,current,4,"The current valgrind report hints at the jit relocation:. ```. bash-4.2$ ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ valgrind root.exe -l -b -q tutorials/hsimple.C . ==92602== Memcheck, a memory error detector. ==92602== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==92602== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info. ==92602== Command: root.exe -l -b -q tutorials/hsimple.C. ==92602== . Disabling gnu++: clang has no __float128 support on this target! ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12). ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so). ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2523,energy efficiency,alloc,allocator,2523,"ntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1594). ==92602== by 0x1772C99B: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4643,energy efficiency,Load,LoadLibraryMap,4643,"st*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6549,energy efficiency,Load,LoadPCM,6549,") (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6619,energy efficiency,alloc,allocator,6619,"ation(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictIni",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6868,energy efficiency,alloc,allocator,6868,"ump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6898,energy efficiency,alloc,allocator,6898,"alised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6980,energy efficiency,alloc,allocator,6980,"st volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:7270,energy efficiency,alloc,allocator,7270,"ryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:7300,energy efficiency,alloc,allocator,7300,"1). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::alloca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:7382,energy efficiency,alloc,allocator,7382,"t) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:8229,energy efficiency,Load,LoadPCM,8229,"g<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:8299,energy efficiency,alloc,allocator,8299,"cator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictIni",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:8548,energy efficiency,alloc,allocator,8548,"_Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633). ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637). ==92602== . ==92602== Conditional jump or move dep",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:8578,energy efficiency,alloc,allocator,8578,"x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633). ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:8660,energy efficiency,alloc,allocator,8660,"= . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633). ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:8950,energy efficiency,alloc,allocator,8950,"char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633). ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:8980,energy efficiency,alloc,allocator,8980,"6). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633). ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:9062,energy efficiency,alloc,allocator,9062,"t) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633). ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:19424,energy efficiency,Load,LoadPCM,19424," char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== . Processing tutorials/hsimple.C... ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (defined). ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:19494,energy efficiency,alloc,allocator,19494,"2== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== . Processing tutorials/hsimple.C... ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (defined). ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:19743,energy efficiency,alloc,allocator,19743,"Storage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== . Processing tutorials/hsimple.C... ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (defined). ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (noaccess). ==92602== Warning: set add",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:19773,energy efficiency,alloc,allocator,19773,"x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== . Processing tutorials/hsimple.C... ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (defined). ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (noaccess). ==92602== Warning: set address range perms: large range ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:19855,energy efficiency,alloc,allocator,19855,":TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== . Processing tutorials/hsimple.C... ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (defined). ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: la",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:23747,energy efficiency,alloc,allocator,23747,"nd/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x58134CF7: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). sched status:. running_tid=1. Thread 1: status = VgTs_Runnable syscall 90 (lwpid 92602). ==92602== at 0x4024310: mmap (in /usr/lib64/ld-2.17.so). ==92602== by 0x4007E9B: _dl_map_object_from_fd (in /usr/lib64/ld-2.17.so). ==92602== by 0x401D5EF: dl_open_worker (in /usr/lib64/ld-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:23835,energy efficiency,alloc,allocator,23835,"cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). sched status:. running_tid=1. Thread 1: status = VgTs_Runnable syscall 90 (lwpid 92602). ==92602== at 0x4024310: mmap (in /usr/lib64/ld-2.17.so). ==92602== by 0x4007E9B: _dl_map_object_from_fd (in /usr/lib64/ld-2.17.so). ==92602== by 0x401D5EF: dl_open_worker (in /usr/lib64/ld-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:23935,energy efficiency,load,loadLibrary,23935,"status:. running_tid=1. Thread 1: status = VgTs_Runnable syscall 90 (lwpid 92602). ==92602== at 0x4024310: mmap (in /usr/lib64/ld-2.17.so). ==92602== by 0x4007E9B: _dl_map_object_from_fd (in /usr/lib64/ld-2.17.so). ==92602== by 0x401D5EF: dl_open_worker (in /usr/lib64/ld-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:24042,energy efficiency,Load,Load,24042,"10: mmap (in /usr/lib64/ld-2.17.so). ==92602== by 0x4007E9B: _dl_map_object_from_fd (in /usr/lib64/ld-2.17.so). ==92602== by 0x401D5EF: dl_open_worker (in /usr/lib64/ld-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:24118,energy efficiency,Load,Load,24118,"from_fd (in /usr/lib64/ld-2.17.so). ==92602== by 0x401D5EF: dl_open_worker (in /usr/lib64/ld-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:24212,energy efficiency,Load,Load,24212,".17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:24397,energy efficiency,alloc,allocator,24397,"/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalEx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:24531,energy efficiency,alloc,allocator,24531,"64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::Tar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:24634,energy efficiency,alloc,allocator,24634,"by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:24809,energy efficiency,alloc,allocator,24809,"r_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:25014,energy efficiency,alloc,allocator,25014,"by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:25170,energy efficiency,alloc,allocator,25170,"==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_tr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:25356,energy efficiency,alloc,allocator,25356,"<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:26089,energy efficiency,alloc,allocator,26089,"nctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:26192,energy efficiency,alloc,allocator,26192,"TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapIn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27041,energy efficiency,alloc,allocator,27041,"_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::Tar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27883,energy efficiency,alloc,allocator,27883,"vm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:29661,energy efficiency,alloc,allocator,29661,"lExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:29818,energy efficiency,alloc,allocator,29818," std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:30707,energy efficiency,alloc,allocator,30707,"void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:31077,energy efficiency,alloc,allocator,31077,"ntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:33069,energy efficiency,alloc,allocator,33069,"alJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:33172,energy efficiency,alloc,allocator,33172,"ta const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapIn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34021,energy efficiency,alloc,allocator,34021,"_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::Tar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34863,energy efficiency,alloc,allocator,34863,"vm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:36641,energy efficiency,alloc,allocator,36641,"lExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:36798,energy efficiency,alloc,allocator,36798," std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:37687,energy efficiency,alloc,allocator,37687,"void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:38057,energy efficiency,alloc,allocator,38057,"ntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:39506,energy efficiency,alloc,allocator,39506,"nDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (IncrementalJIT.h:191). ==92602== by 0x1188809F: cling::IncrementalExecutor::ExecutionResult cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)>(llvm::StringRef, void (*&)(void*)) const (IncrementalExecutor.h:287). ==92602== by 0x1188109F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:377). ==92602== by 0x116B01DB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1162). ==92602== by 0x116B1027: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1414). ==92602== by 0x116AF7DB: cling::Interpreter::echo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*) (Interpreter.cpp:1064). ==92602== by 0x11A291DF: cling::MetaSema::actOnxCommand(l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:40148,energy efficiency,alloc,allocator,40148,"y_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (IncrementalJIT.h:191). ==92602== by 0x1188809F: cling::IncrementalExecutor::ExecutionResult cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)>(llvm::StringRef, void (*&)(void*)) const (IncrementalExecutor.h:287). ==92602== by 0x1188109F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:377). ==92602== by 0x116B01DB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1162). ==92602== by 0x116B1027: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1414). ==92602== by 0x116AF7DB: cling::Interpreter::echo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*) (Interpreter.cpp:1064). ==92602== by 0x11A291DF: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*)::{lambda(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::StringRef, cling::Value*)#1}::operator()(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::StringRef, cling::Value*) const (MetaSema.cpp:141). ==92602== by 0x11A29483: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==92602== by 0x11A44703: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:40389,energy efficiency,alloc,allocator,40389,"11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (IncrementalJIT.h:191). ==92602== by 0x1188809F: cling::IncrementalExecutor::ExecutionResult cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)>(llvm::StringRef, void (*&)(void*)) const (IncrementalExecutor.h:287). ==92602== by 0x1188109F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:377). ==92602== by 0x116B01DB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1162). ==92602== by 0x116B1027: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1414). ==92602== by 0x116AF7DB: cling::Interpreter::echo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*) (Interpreter.cpp:1064). ==92602== by 0x11A291DF: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*)::{lambda(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::StringRef, cling::Value*)#1}::operator()(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::StringRef, cling::Value*) const (MetaSema.cpp:141). ==92602== by 0x11A29483: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==92602== by 0x11A44703: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:40651,energy efficiency,alloc,allocator,40651,"r::jitInitOrWrapper<void (*)(void*)>(llvm::StringRef, void (*&)(void*)) const (IncrementalExecutor.h:287). ==92602== by 0x1188109F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:377). ==92602== by 0x116B01DB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1162). ==92602== by 0x116B1027: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1414). ==92602== by 0x116AF7DB: cling::Interpreter::echo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*) (Interpreter.cpp:1064). ==92602== by 0x11A291DF: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*)::{lambda(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::StringRef, cling::Value*)#1}::operator()(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::StringRef, cling::Value*) const (MetaSema.cpp:141). ==92602== by 0x11A29483: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==92602== by 0x11A44703: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:40800,energy efficiency,alloc,allocator,40800,"lExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:377). ==92602== by 0x116B01DB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1162). ==92602== by 0x116B1027: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1414). ==92602== by 0x116AF7DB: cling::Interpreter::echo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*) (Interpreter.cpp:1064). ==92602== by 0x11A291DF: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*)::{lambda(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::StringRef, cling::Value*)#1}::operator()(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::StringRef, cling::Value*) const (MetaSema.cpp:141). ==92602== by 0x11A29483: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==92602== by 0x11A44703: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==9260",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3094,integrability,depend,depends,3094,"m::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4154,integrability,depend,depends,4154,"age::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5207,integrability,depend,depends,5207,": TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDir",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5885,integrability,depend,depends,5885," ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:7704,integrability,depend,depends,7704,"r const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:9550,integrability,depend,depends,9550,"tor<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633). ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241). ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157). ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501). ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:10730,integrability,depend,depends,10730,"ect::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241). ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157). ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501). ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== by 0x4549833: THashTable::Add(TObject*) (THashTable.cxx:96). ==92602== by 0x4558607: TMap::Add(TObject*, TObject*) (TMap.cxx:66). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AD8C: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:854). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:13356,integrability,depend,depends,13356,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293ADB4: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:853). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:15982,integrability,depend,depends,15982,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AE04: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:855). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:18608,integrability,depend,depends,18608,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:25732,integrability,Asynchron,AsynchronousSymbolQuery,25732,"le(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolSt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:25893,integrability,Asynchron,AsynchronousSymbolQuery,25893,"x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolSt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:26684,integrability,Asynchron,AsynchronousSymbolQuery,26684,":{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::Asynchron",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:26845,integrability,Asynchron,AsynchronousSymbolQuery,26845,"erator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27112,integrability,Asynchron,AsynchronousSymbolQuery,27112,"tor()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (un",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27526,integrability,Asynchron,AsynchronousSymbolQuery,27526,"e> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (Increment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27687,integrability,Asynchron,AsynchronousSymbolQuery,27687,"bolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28242,integrability,Asynchron,AsynchronousSymbolQuery,28242,"alJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28403,integrability,Asynchron,AsynchronousSymbolQuery,28403,"long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSym",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:29258,integrability,Asynchron,AsynchronousSymbolQuery,29258,"vm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:29400,integrability,Asynchron,AsynchronousSymbolQuery,29400,"ousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::Runtime",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:32712,integrability,Asynchron,AsynchronousSymbolQuery,32712,"LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolSt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:32873,integrability,Asynchron,AsynchronousSymbolQuery,32873,"eLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolSt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:33664,integrability,Asynchron,AsynchronousSymbolQuery,33664,":{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::Asynchron",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:33825,integrability,Asynchron,AsynchronousSymbolQuery,33825,"erator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34092,integrability,Asynchron,AsynchronousSymbolQuery,34092,"tor()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (un",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34506,integrability,Asynchron,AsynchronousSymbolQuery,34506,"e> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (Increment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34667,integrability,Asynchron,AsynchronousSymbolQuery,34667,"bolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35222,integrability,Asynchron,AsynchronousSymbolQuery,35222,"alJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35383,integrability,Asynchron,AsynchronousSymbolQuery,35383,"long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSym",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:36238,integrability,Asynchron,AsynchronousSymbolQuery,36238,"vm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:36380,integrability,Asynchron,AsynchronousSymbolQuery,36380,"ousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::Runtime",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:43017,integrability,version,version,43017,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:43042,integrability,version,version,43042,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:23668,interoperability,platform,platform,23668,"== by 0x580DD49B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x58134CF7: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). sched status:. running_tid=1. Thread 1: status = VgTs_Runnable syscall 90 (lwpid 92602). ==92602== at 0x4024310: mmap (in /usr/lib64/ld-2.17.so). ==92602== by 0x4007E9B: _dl_map_object_from_fd (in /usr/lib64/ld-2.17.so). ==92602== by 0x401D5EF: dl_open_worker (in /usr/lib64/ld-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TClin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:23856,interoperability,Platform,PlatformPosix,23856,"e_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). sched status:. running_tid=1. Thread 1: status = VgTs_Runnable syscall 90 (lwpid 92602). ==92602== at 0x4024310: mmap (in /usr/lib64/ld-2.17.so). ==92602== by 0x4007E9B: _dl_map_object_from_fd (in /usr/lib64/ld-2.17.so). ==92602== by 0x401D5EF: dl_open_worker (in /usr/lib64/ld-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:42595,interoperability,distribut,distribution,42595,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3094,modifiability,depend,depends,3094,"m::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4154,modifiability,depend,depends,4154,"age::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5207,modifiability,depend,depends,5207,": TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDir",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5885,modifiability,depend,depends,5885," ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:7704,modifiability,depend,depends,7704,"r const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:9550,modifiability,depend,depends,9550,"tor<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633). ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241). ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157). ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501). ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:10730,modifiability,depend,depends,10730,"ect::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241). ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157). ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501). ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== by 0x4549833: THashTable::Add(TObject*) (THashTable.cxx:96). ==92602== by 0x4558607: TMap::Add(TObject*, TObject*) (TMap.cxx:66). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AD8C: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:854). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:13356,modifiability,depend,depends,13356,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293ADB4: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:853). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:15982,modifiability,depend,depends,15982,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AE04: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:855). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:18608,modifiability,depend,depends,18608,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:25649,modifiability,Modul,Module,25649,"const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{la",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:25683,modifiability,Modul,Module,25683,"=92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::As",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:26601,modifiability,Modul,Module,26601,"n<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::Den",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:26635,modifiability,Modul,Module,26635,"_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27443,modifiability,Modul,Module,27443,"mentalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<ll",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27477,modifiability,Modul,Module,27477,"lvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28159,modifiability,Modul,Module,28159,"::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::uniq",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28193,modifiability,Modul,Module,28193,"nfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28816,modifiability,Modul,Module,28816,"a(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28850,modifiability,Modul,Module,28850," std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:29175,modifiability,Modul,Module,29175,"t_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:29209,modifiability,Modul,Module,29209,"da(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:32629,modifiability,Modul,Module,32629,"emovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{la",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:32663,modifiability,Modul,Module,32663,"orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::As",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:33581,modifiability,Modul,Module,33581,"n<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::Den",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:33615,modifiability,Modul,Module,33615,"_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34423,modifiability,Modul,Module,34423,"mentalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<ll",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34457,modifiability,Modul,Module,34457,"lvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35139,modifiability,Modul,Module,35139,"::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::uniq",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35173,modifiability,Modul,Module,35173,"nfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35796,modifiability,Modul,Module,35796,"a(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35830,modifiability,Modul,Module,35830," std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:36155,modifiability,Modul,Module,36155,"t_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:36189,modifiability,Modul,Module,36189,"da(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:43017,modifiability,version,version,43017,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:43042,modifiability,version,version,43042,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:206,performance,memor,memory,206,"The current valgrind report hints at the jit relocation:. ```. bash-4.2$ ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ valgrind root.exe -l -b -q tutorials/hsimple.C . ==92602== Memcheck, a memory error detector. ==92602== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==92602== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info. ==92602== Command: root.exe -l -b -q tutorials/hsimple.C. ==92602== . Disabling gnu++: clang has no __float128 support on this target! ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12). ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so). ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:213,performance,error,error,213,"The current valgrind report hints at the jit relocation:. ```. bash-4.2$ ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ valgrind root.exe -l -b -q tutorials/hsimple.C . ==92602== Memcheck, a memory error detector. ==92602== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==92602== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info. ==92602== Command: root.exe -l -b -q tutorials/hsimple.C. ==92602== . Disabling gnu++: clang has no __float128 support on this target! ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12). ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so). ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1866,performance,Memor,MemoryBuffer,1866," char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1594). ==92602== by 0x1772C99B: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1906,performance,Memor,MemoryBuffer,1906,":is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1594). ==92602== by 0x1772C99B: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2143,performance,Memor,MemoryBuffer,2143,"by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1594). ==92602== by 0x1772C99B: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0F",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2183,performance,Memor,MemoryBuffer,2183,"6u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1594). ==92602== by 0x1772C99B: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4643,performance,Load,LoadLibraryMap,4643,"st*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:6549,performance,Load,LoadPCM,6549,") (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:8229,performance,Load,LoadPCM,8229,"g<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:19424,performance,Load,LoadPCM,19424," char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== . Processing tutorials/hsimple.C... ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (defined). ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:23935,performance,load,loadLibrary,23935,"status:. running_tid=1. Thread 1: status = VgTs_Runnable syscall 90 (lwpid 92602). ==92602== at 0x4024310: mmap (in /usr/lib64/ld-2.17.so). ==92602== by 0x4007E9B: _dl_map_object_from_fd (in /usr/lib64/ld-2.17.so). ==92602== by 0x401D5EF: dl_open_worker (in /usr/lib64/ld-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:24042,performance,Load,Load,24042,"10: mmap (in /usr/lib64/ld-2.17.so). ==92602== by 0x4007E9B: _dl_map_object_from_fd (in /usr/lib64/ld-2.17.so). ==92602== by 0x401D5EF: dl_open_worker (in /usr/lib64/ld-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:24118,performance,Load,Load,24118,"from_fd (in /usr/lib64/ld-2.17.so). ==92602== by 0x401D5EF: dl_open_worker (in /usr/lib64/ld-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:24212,performance,Load,Load,24212,".17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372). ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464). ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942). ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777). ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:25732,performance,Asynch,AsynchronousSymbolQuery,25732,"le(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolSt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:25893,performance,Asynch,AsynchronousSymbolQuery,25893,"x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolSt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:26684,performance,Asynch,AsynchronousSymbolQuery,26684,":{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::Asynchron",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:26845,performance,Asynch,AsynchronousSymbolQuery,26845,"erator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27112,performance,Asynch,AsynchronousSymbolQuery,27112,"tor()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (un",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27526,performance,Asynch,AsynchronousSymbolQuery,27526,"e> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (Increment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27687,performance,Asynch,AsynchronousSymbolQuery,27687,"bolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28242,performance,Asynch,AsynchronousSymbolQuery,28242,"alJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28403,performance,Asynch,AsynchronousSymbolQuery,28403,"long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSym",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:29258,performance,Asynch,AsynchronousSymbolQuery,29258,"vm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:29400,performance,Asynch,AsynchronousSymbolQuery,29400,"ousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::Runtime",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:30418,performance,Memor,MemoryManager,30418,"llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::Lega",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:30605,performance,Memor,MemoryManager,30605,"lvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<clin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:30975,performance,Memor,MemoryManager,30975,"s() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::Emission",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:32712,performance,Asynch,AsynchronousSymbolQuery,32712,"LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolSt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:32873,performance,Asynch,AsynchronousSymbolQuery,32873,"eLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolSt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:33664,performance,Asynch,AsynchronousSymbolQuery,33664,":{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::Asynchron",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:33825,performance,Asynch,AsynchronousSymbolQuery,33825,"erator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34092,performance,Asynch,AsynchronousSymbolQuery,34092,"tor()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (un",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34506,performance,Asynch,AsynchronousSymbolQuery,34506,"e> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (Increment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34667,performance,Asynch,AsynchronousSymbolQuery,34667,"bolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35222,performance,Asynch,AsynchronousSymbolQuery,35222,"alJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35383,performance,Asynch,AsynchronousSymbolQuery,35383,"long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSym",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:36238,performance,Asynch,AsynchronousSymbolQuery,36238,"vm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:36380,performance,Asynch,AsynchronousSymbolQuery,36380,"ousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::Runtime",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:37398,performance,Memor,MemoryManager,37398,"llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::Lega",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:37585,performance,Memor,MemoryManager,37585,"lvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<clin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:37955,performance,Memor,MemoryManager,37955,"s() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::Emission",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:21559,reliability,fail,failed,21559,"dress range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (noaccess). valgrind: m_debuginfo/debuginfo.c:916 (truncate_DebugInfoMapping_overlaps): Assertion '!overlap' failed. host stacktrace:. ==92602== at 0x5805BDE8: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x5805BF8F: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x5805C10B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580A65A7: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580E6B4B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580F79D3: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580DFD1B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580DB027: ??? (in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:42900,reliability,doe,doesn,42900,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:213,safety,error,error,213,"The current valgrind report hints at the jit relocation:. ```. bash-4.2$ ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ valgrind root.exe -l -b -q tutorials/hsimple.C . ==92602== Memcheck, a memory error detector. ==92602== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==92602== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info. ==92602== Command: root.exe -l -b -q tutorials/hsimple.C. ==92602== . Disabling gnu++: clang has no __float128 support on this target! ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12). ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so). ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:219,safety,detect,detector,219,"The current valgrind report hints at the jit relocation:. ```. bash-4.2$ ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ valgrind root.exe -l -b -q tutorials/hsimple.C . ==92602== Memcheck, a memory error detector. ==92602== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==92602== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info. ==92602== Command: root.exe -l -b -q tutorials/hsimple.C. ==92602== . Disabling gnu++: clang has no __float128 support on this target! ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12). ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so). ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3094,safety,depend,depends,3094,"m::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3163,safety,Updat,UpdateIsOnHeap,3163,"delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== . ==92602== Conditional jump or move depends on unini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4154,safety,depend,depends,4154,"age::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4223,safety,Updat,UpdateIsOnHeap,4223,") (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialise",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5207,safety,depend,depends,5207,": TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDir",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5276,safety,Updat,UpdateIsOnHeap,5276,"latile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5885,safety,depend,depends,5885," ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5954,safety,Updat,UpdateIsOnHeap,5954,"x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:7704,safety,depend,depends,7704,"r const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:7773,safety,Updat,UpdateIsOnHeap,7773,"(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::Register",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:9550,safety,depend,depends,9550,"tor<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633). ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241). ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157). ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501). ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:9619,safety,Updat,UpdateIsOnHeap,9619,"har, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633). ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241). ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157). ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501). ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== by 0x4549833: THashTable::Add(TObject*) (THashTable.cxx:96). ==92602== by",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:10730,safety,depend,depends,10730,"ect::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241). ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157). ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501). ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== by 0x4549833: THashTable::Add(TObject*) (THashTable.cxx:96). ==92602== by 0x4558607: TMap::Add(TObject*, TObject*) (TMap.cxx:66). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AD8C: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:854). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:13356,safety,depend,depends,13356,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293ADB4: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:853). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:15982,safety,depend,depends,15982,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AE04: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:855). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:18608,safety,depend,depends,18608,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:18677,safety,Updat,UpdateIsOnHeap,18677,"st*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:25649,safety,Modul,Module,25649,"const&) const (TCling.cxx:6488). ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{la",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:25683,safety,Modul,Module,25683,"=92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514). ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526). ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689). ==92602== by 0x118807CF: cling::IncrementalExecutor::NotifyLazyFunctionCreators(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (IncrementalExecutor.cpp:195). ==92602== by 0x118A03F3: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::As",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:26601,safety,Modul,Module,26601,"n<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::Den",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:26635,safety,Modul,Module,26635,"_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:330). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27443,safety,Modul,Module,27443,"mentalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<ll",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:27477,safety,Modul,Module,27477,"lvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28159,safety,Modul,Module,28159,"::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::uniq",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28193,safety,Modul,Module,28193,"nfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28816,safety,Modul,Module,28816,"a(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28850,safety,Modul,Module,28850," std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:29175,safety,Modul,Module,29175,"t_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:29209,safety,Modul,Module,29209,"da(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:32629,safety,Modul,Module,32629,"emovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{la",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:32663,safety,Modul,Module,32663,"orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::As",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:33581,safety,Modul,Module,33581,"n<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::Den",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:33615,safety,Modul,Module,33615,"_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const) const (IncrementalJIT.cpp:297). ==92602== by 0x118A18C3: llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > llvm::orc::lookupWithLegacyFn<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34423,safety,Modul,Module,34423,"mentalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<ll",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:34457,safety,Modul,Module,34457,"lvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35139,safety,Modul,Module,35139,"::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::uniq",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35173,safety,Modul,Module,35173,"nfo<llvm::orc::SymbolStringPtr> > const&, cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35796,safety,Modul,Module,35796,"a(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:35830,safety,Modul,Module,35830," std::char_traits<char>, std::allocator<char> > const&)#1}) (Legacy.h:149). ==92602== by 0x118A05B7: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:36155,safety,Modul,Module,36155,"t_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:36189,safety,Modul,Module,36189,"da(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const (IncrementalJIT.cpp:334). ==92602== by 0x118A51FF: llvm::orc::LambdaSymbolResolver<cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}>::lookup(llvm::orc::AsynchronousSymbolQuery, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:42807,safety,prevent,prevent,42807,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:219,security,detect,detector,219,"The current valgrind report hints at the jit relocation:. ```. bash-4.2$ ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ valgrind root.exe -l -b -q tutorials/hsimple.C . ==92602== Memcheck, a memory error detector. ==92602== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==92602== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info. ==92602== Command: root.exe -l -b -q tutorials/hsimple.C. ==92602== . Disabling gnu++: clang has no __float128 support on this target! ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12). ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so). ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1997,security,Intrus,IntrusiveRefCntPtr,1997," ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1594). ==92602== by 0x1772C99B: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range per",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2274,security,Intrus,IntrusiveRefCntPtr,2274,": llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1594). ==92602== by 0x1772C99B: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3163,security,Updat,UpdateIsOnHeap,3163,"delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== . ==92602== Conditional jump or move depends on unini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4223,security,Updat,UpdateIsOnHeap,4223,") (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialise",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5276,security,Updat,UpdateIsOnHeap,5276,"latile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5954,security,Updat,UpdateIsOnHeap,5954,"x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:7773,security,Updat,UpdateIsOnHeap,7773,"(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::Register",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:9619,security,Updat,UpdateIsOnHeap,9619,"har, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633). ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241). ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157). ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501). ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== by 0x4549833: THashTable::Add(TObject*) (THashTable.cxx:96). ==92602== by",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:11048,security,Access,AccessSpecifier,11048,"cy.h:241). ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157). ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501). ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== by 0x4549833: THashTable::Add(TObject*) (THashTable.cxx:96). ==92602== by 0x4558607: TMap::Add(TObject*, TObject*) (TMap.cxx:66). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AD8C: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:854). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678). ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659). ==92602== by 0x116F260B: clang::FunctionDecl const* cling::execFindFunctio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:11248,security,Access,AccessSpecifier,11248,"asConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== by 0x4549833: THashTable::Add(TObject*) (THashTable.cxx:96). ==92602== by 0x4558607: TMap::Add(TObject*, TObject*) (TMap.cxx:66). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AD8C: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:854). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678). ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659). ==92602== by 0x116F260B: clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::Funct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:11427,security,Access,AccessSpecifier,11427,"(TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== by 0x4549833: THashTable::Add(TObject*) (THashTable.cxx:96). ==92602== by 0x4558607: TMap::Add(TObject*, TObject*) (TMap.cxx:66). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AD8C: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:854). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678). ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659). ==92602== by 0x116F260B: clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:13674,security,Access,AccessSpecifier,13674,"llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293ADB4: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:853). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678). ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659). ==92602== by 0x116F260B: clang::FunctionDecl const* cling::execFindFunctio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:13874,security,Access,AccessSpecifier,13874,"ode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293ADB4: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:853). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678). ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659). ==92602== by 0x116F260B: clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::Funct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:14053,security,Access,AccessSpecifier,14053,"OT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293ADB4: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:853). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678). ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659). ==92602== by 0x116F260B: clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:16300,security,Access,AccessSpecifier,16300,"llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AE04: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:855). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678). ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659). ==92602== by 0x116F260B: clang::FunctionDecl const* cling::execFindFunctio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:16500,security,Access,AccessSpecifier,16500,"ode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AE04: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:855). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678). ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659). ==92602== by 0x116F260B: clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::Funct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:16679,security,Access,AccessSpecifier,16679,"OT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AE04: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:855). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678). ==92602== by 0x116EEB8F: cling::ParseProto::operator()(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1659). ==92602== by 0x116F260B: clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:18677,security,Updat,UpdateIsOnHeap,18677,"st*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:42714,security,ident,identifying,42714,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:42807,security,preven,prevent,42807,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:3094,testability,depend,depends,3094,"m::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:4154,testability,depend,depends,4154,"age::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34). ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966). ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506). ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354). ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880). ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758). ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817). ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5207,testability,depend,depends,5207,": TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760). ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350). ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680). ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665). ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102). ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383). ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDir",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:5885,testability,depend,depends,5885," ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465). ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483). ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177). ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147). ==92602== by 0x100011BF: main (rmain.cxx:80). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36). ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47). ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61). ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:7704,testability,depend,depends,7704,"r const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76). ==92602== by 0x6005F37: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317). ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114). ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:9550,testability,depend,depends,9550,"tor<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558). ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623). ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631). ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633). ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241). ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157). ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501). ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:10730,testability,depend,depends,10730,"ect::TObject() (TObject.h:245). ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53). ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241). ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157). ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501). ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321). ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124). ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326). ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95). ==92602== by 0x4549833: THashTable::Add(TObject*) (THashTable.cxx:96). ==92602== by 0x4558607: TMap::Add(TObject*, TObject*) (TMap.cxx:66). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AD8C: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:854). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:13356,testability,depend,depends,13356,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293ADB4: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:853). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:15982,testability,depend,depends,15982,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x1293AE04: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:855). ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312). ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455). ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55). ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:18608,testability,depend,depends,18608,"esult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583). ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869). ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374). ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:21538,testability,Assert,Assertion,21538,"2== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x3d430000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (noaccess). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (defined). ==92602== Warning: set address range perms: large range [0x20f90000, 0x31a70000) (noaccess). valgrind: m_debuginfo/debuginfo.c:916 (truncate_DebugInfoMapping_overlaps): Assertion '!overlap' failed. host stacktrace:. ==92602== at 0x5805BDE8: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x5805BF8F: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x5805C10B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580A65A7: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580E6B4B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580F79D3: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580DFD1B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:31505,testability,Simpl,SimpleCompiler,31505,"orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:31671,testability,Simpl,SimpleCompiler,31671,"std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:31955,testability,Simpl,SimpleCompiler,31955,"RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:32121,testability,Simpl,SimpleCompiler,32121,"Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:38485,testability,Simpl,SimpleCompiler,38485,"orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_trait",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:38651,testability,Simpl,SimpleCompiler,38651,"std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (IncrementalJIT.h:191). ==92602== by 0x1188809F: cling::IncrementalExecutor::ExecutionResult cling::IncrementalExecutor:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:38935,testability,Simpl,SimpleCompiler,38935,"RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (IncrementalJIT.h:191). ==92602== by 0x1188809F: cling::IncrementalExecutor::ExecutionResult cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)>(llvm::StringRef, void (*&)(void*)) const (IncrementalExecutor.h:287). ==92602== by 0x1188109F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:377). ==92602== by 0x116B01DB: cling::Interprete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:39101,testability,Simpl,SimpleCompiler,39101,"Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (IncrementalJIT.h:191). ==92602== by 0x1188809F: cling::IncrementalExecutor::ExecutionResult cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)>(llvm::StringRef, void (*&)(void*)) const (IncrementalExecutor.h:287). ==92602== by 0x1188109F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:377). ==92602== by 0x116B01DB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1162). ==92602== by 0x116B1027: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:28,usability,hint,hints,28,"The current valgrind report hints at the jit relocation:. ```. bash-4.2$ ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ valgrind root.exe -l -b -q tutorials/hsimple.C . ==92602== Memcheck, a memory error detector. ==92602== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==92602== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info. ==92602== Command: root.exe -l -b -q tutorials/hsimple.C. ==92602== . Disabling gnu++: clang has no __float128 support on this target! ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12). ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so). ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:206,usability,memor,memory,206,"The current valgrind report hints at the jit relocation:. ```. bash-4.2$ ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ valgrind root.exe -l -b -q tutorials/hsimple.C . ==92602== Memcheck, a memory error detector. ==92602== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==92602== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info. ==92602== Command: root.exe -l -b -q tutorials/hsimple.C. ==92602== . Disabling gnu++: clang has no __float128 support on this target! ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12). ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so). ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:213,usability,error,error,213,"The current valgrind report hints at the jit relocation:. ```. bash-4.2$ ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ valgrind root.exe -l -b -q tutorials/hsimple.C . ==92602== Memcheck, a memory error detector. ==92602== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==92602== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info. ==92602== Command: root.exe -l -b -q tutorials/hsimple.C. ==92602== . Disabling gnu++: clang has no __float128 support on this target! ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12). ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so). ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:391,usability,Command,Command,391,"The current valgrind report hints at the jit relocation:. ```. bash-4.2$ ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ valgrind root.exe -l -b -q tutorials/hsimple.C . ==92602== Memcheck, a memory error detector. ==92602== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==92602== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info. ==92602== Command: root.exe -l -b -q tutorials/hsimple.C. ==92602== . Disabling gnu++: clang has no __float128 support on this target! ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12). ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so). ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:492,usability,support,support,492,"The current valgrind report hints at the jit relocation:. ```. bash-4.2$ ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ valgrind root.exe -l -b -q tutorials/hsimple.C . ==92602== Memcheck, a memory error detector. ==92602== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==92602== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info. ==92602== Command: root.exe -l -b -q tutorials/hsimple.C. ==92602== . Disabling gnu++: clang has no __float128 support on this target! ==92602== Source and destination overlap in memcpy(0x1fff0021f8, 0x1fff0021f8, 12). ==92602== at 0x408BCF4: memcpy (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/vgpreload_memcheck-ppc64le-linux.so). ==92602== by 0x1129C867: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1866,usability,Memor,MemoryBuffer,1866," char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1594). ==92602== by 0x1772C99B: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:1906,usability,Memor,MemoryBuffer,1906,":is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==92602== by 0x1128FF7B: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==92602== by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1594). ==92602== by 0x1772C99B: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2143,usability,Memor,MemoryBuffer,2143,"by 0x115F49F3: void llvm::SmallString<256u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1594). ==92602== by 0x1772C99B: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0F",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:2183,usability,Memor,MemoryBuffer,2183,"6u>::append<char const*>(char const*, char const*) (SmallString.h:75). ==92602== by 0x115F21BB: llvm::SmallString<256u>::operator+=(llvm::StringRef) (SmallString.h:285). ==92602== by 0x1168DAFF: llvm::SmallString<256u>::operator=(llvm::StringRef) (SmallString.h:281). ==92602== by 0x1773BE63: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (VirtualFileSystem.cpp:1311). ==92602== by 0x1773D81B: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (VirtualFileSystem.cpp:1501). ==92602== by 0x1772AF77: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1594). ==92602== by 0x1772C99B: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (VirtualFileSystem.cpp:1796). ==92602== by 0x115B23CF: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) (CIFactory.cpp:733). ==92602== by 0x115B2A7B: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (CIFactory.cpp:754). ==92602== . ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (noaccess). ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:19213,usability,Close,Close,19213," by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== . Processing tutorials/hsimple.C... ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (defined). ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (noaccess). ==92602== Warning: set address range perms: large",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:19289,usability,Close,Close,19289,"char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063). ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530). ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080). ==92602== . ==92602== Conditional jump or move depends on uninitialised value(s). ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132). ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245). ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152). ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33). ==92602== by 0x40E209B: TList::TList() (TList.h:78). ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477). ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215). ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572). ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928). ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240). ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857). ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308). ==92602== . Processing tutorials/hsimple.C... ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (defined). ==92602== Warning: set address range perms: large range [0x20750000, 0x35920000) (noaccess). ==92602== Warning: set address range perms: large range [0x59d50000, 0xba670000) (defined). ==92602== Warning: set address ra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:22941,usability,statu,status,22941,"/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580A65A7: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580E6B4B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580F79D3: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580DFD1B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580DB027: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580DD49B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x58134CF7: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). sched status:. running_tid=1. Thread 1: status = VgTs_Runnable syscall 90 (lwpid 92602). ==92602== at 0x4024310: mmap (in /usr/lib64/ld-2.17.so). ==92602== by 0x4007E9B: _dl_map_object_from_fd (in /usr/lib64/ld-2.17.so). ==92602== by 0x401D5EF: dl_open_worker (in /usr/lib64/ld-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:22975,usability,statu,status,22975,"4le-linux). ==92602== by 0x580A65A7: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580E6B4B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580F79D3: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580DFD1B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580DB027: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x580DD49B: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). ==92602== by 0x58134CF7: ??? (in /cvmfs/cms.cern.ch/slc7_ppc64le_gcc820/external/valgrind/3.15.0/lib/valgrind/memcheck-ppc64le-linux). sched status:. running_tid=1. Thread 1: status = VgTs_Runnable syscall 90 (lwpid 92602). ==92602== at 0x4024310: mmap (in /usr/lib64/ld-2.17.so). ==92602== by 0x4007E9B: _dl_map_object_from_fd (in /usr/lib64/ld-2.17.so). ==92602== by 0x401D5EF: dl_open_worker (in /usr/lib64/ld-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so). ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so). ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so). ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so). ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118). ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:30418,usability,Memor,MemoryManager,30418,"llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::Lega",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:30605,usability,Memor,MemoryManager,30605,"lvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<clin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:30975,usability,Memor,MemoryManager,30975,"s() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::Emission",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:31505,usability,Simpl,SimpleCompiler,31505,"orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:31671,usability,Simpl,SimpleCompiler,31671,"std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:31955,usability,Simpl,SimpleCompiler,31955,"RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:32121,usability,Simpl,SimpleCompiler,32121,"Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) const::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:37398,usability,Memor,MemoryManager,37398,"llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >) (Legacy.h:64). ==92602== by 0x14030A47: llvm::orc::JITSymbolResolverAdapter::lookup(std::set<llvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::Lega",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:37585,usability,Memor,MemoryManager,37585,"lvm::StringRef, std::less<llvm::StringRef>, std::allocator<llvm::StringRef> > const&, std::function<void (llvm::Expected<std::map<llvm::StringRef, llvm::JITEvaluatedSymbol, std::less<llvm::StringRef>, std::allocator<std::pair<llvm::StringRef const, llvm::JITEvaluatedSymbol> > > >)>) (Legacy.cpp:41). ==92602== by 0x14064C67: llvm::RuntimeDyldImpl::resolveExternalSymbols() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<clin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:37955,usability,Memor,MemoryManager,37955,"s() (RuntimeDyld.cpp:1151). ==92602== by 0x1405E543: llvm::RuntimeDyldImpl::resolveRelocations() (RuntimeDyld.cpp:130). ==92602== by 0x14066697: llvm::RuntimeDyld::resolveRelocations() (RuntimeDyld.cpp:1346). ==92602== by 0x140668C7: llvm::RuntimeDyld::finalizeWithMemoryManagerLocking() (RuntimeDyld.cpp:1364). ==92602== by 0x118C800F: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (RTDyldObjectLinkingLayer.h:255). ==92602== by 0x118C8377: llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::Emission",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:38485,usability,Simpl,SimpleCompiler,38485,"orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_trait",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:38651,usability,Simpl,SimpleCompiler,38651,"std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276). ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (IncrementalJIT.h:191). ==92602== by 0x1188809F: cling::IncrementalExecutor::ExecutionResult cling::IncrementalExecutor:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:38935,usability,Simpl,SimpleCompiler,38935,"RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (IncrementalJIT.h:191). ==92602== by 0x1188809F: cling::IncrementalExecutor::ExecutionResult cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)>(llvm::StringRef, void (*&)(void*)) const (IncrementalExecutor.h:287). ==92602== by 0x1188109F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:377). ==92602== by 0x116B01DB: cling::Interprete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:39101,usability,Simpl,SimpleCompiler,39101,"Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68). ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283). ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687). ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297). ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (IncrementalJIT.h:191). ==92602== by 0x1188809F: cling::IncrementalExecutor::ExecutionResult cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)>(llvm::StringRef, void (*&)(void*)) const (IncrementalExecutor.h:287). ==92602== by 0x1188109F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:377). ==92602== by 0x116B01DB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1162). ==92602== by 0x116B1027: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/issues/9297:42908,usability,help,help,42908,"tionResult&, cling::Value*) (MetaParser.cpp:315). ==92602== by 0x11A4333F: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==92602== by 0x11A430EB: cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:96). ==92602== by 0x11A1DC77: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==92602== by 0x11351E8F: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2437). ==92602== by 0x11352BF3: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2581). ==92602== by 0x1135721B: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3511). ==92602== by 0x442744B: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1591). ==92602== by 0x4426A7F: TApplication::ProcessFile(char const*, int*, bool) (TApplication.cxx:1463). ==92602== by 0x4426803: TApplication::ProcessLine(char const*, bool, int*) (TApplication.cxx:1436). ==92602== by 0x40E088B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:783). ==92602== by 0x40DE71B: TRint::Run(bool) (TRint.cxx:434). ==92602== by 0x100011EB: main (rmain.cxx:83). client stack range: [0x1FFEFE0000 0x1FFF00FFFF] client SP: 0x1FFF000B90. valgrind stack range: [0x1002EA0000 0x1002F9FFFF] top usage: 18160 of 1048576. Note: see also the FAQ in the source distribution. It contains workarounds to several common problems. In particular, if Valgrind aborted or crashed after. identifying problems in your program, there's a good chance. that fixing those problems will prevent Valgrind aborting or. crashing, especially if it happened in m_mallocfree.c. If that doesn't help, please report this bug to: www.valgrind.org. In the bug report, send all the above text, the valgrind. version, and what OS and version you are using. Thanks. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9297
https://github.com/root-project/root/pull/9301:19,energy efficiency,CPU,CPU,19,"@vgvassilev . User CPU time, 2nd run of all tests:. test | opt | non-opt. -----|-----|--------. stressGeometry.cxx | 20.10 | 19.36. stressHistogram.cxx | 16.52 | 15.89. stressGraphics.cxx | 57.68 | 16.13. stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:19,performance,CPU,CPU,19,"@vgvassilev . User CPU time, 2nd run of all tests:. test | opt | non-opt. -----|-----|--------. stressGeometry.cxx | 20.10 | 19.36. stressHistogram.cxx | 16.52 | 15.89. stressGraphics.cxx | 57.68 | 16.13. stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:23,performance,time,time,23,"@vgvassilev . User CPU time, 2nd run of all tests:. test | opt | non-opt. -----|-----|--------. stressGeometry.cxx | 20.10 | 19.36. stressHistogram.cxx | 16.52 | 15.89. stressGraphics.cxx | 57.68 | 16.13. stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:44,safety,test,tests,44,"@vgvassilev . User CPU time, 2nd run of all tests:. test | opt | non-opt. -----|-----|--------. stressGeometry.cxx | 20.10 | 19.36. stressHistogram.cxx | 16.52 | 15.89. stressGraphics.cxx | 57.68 | 16.13. stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:52,safety,test,test,52,"@vgvassilev . User CPU time, 2nd run of all tests:. test | opt | non-opt. -----|-----|--------. stressGeometry.cxx | 20.10 | 19.36. stressHistogram.cxx | 16.52 | 15.89. stressGraphics.cxx | 57.68 | 16.13. stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:44,testability,test,tests,44,"@vgvassilev . User CPU time, 2nd run of all tests:. test | opt | non-opt. -----|-----|--------. stressGeometry.cxx | 20.10 | 19.36. stressHistogram.cxx | 16.52 | 15.89. stressGraphics.cxx | 57.68 | 16.13. stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:52,testability,test,test,52,"@vgvassilev . User CPU time, 2nd run of all tests:. test | opt | non-opt. -----|-----|--------. stressGeometry.cxx | 20.10 | 19.36. stressHistogram.cxx | 16.52 | 15.89. stressGraphics.cxx | 57.68 | 16.13. stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:14,usability,User,User,14,"@vgvassilev . User CPU time, 2nd run of all tests:. test | opt | non-opt. -----|-----|--------. stressGeometry.cxx | 20.10 | 19.36. stressHistogram.cxx | 16.52 | 15.89. stressGraphics.cxx | 57.68 | 16.13. stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:26,energy efficiency,CPU,CPU,26,"> @vgvassilev. > . > User CPU time, 2nd run of all tests:. > test 	opt 	non-opt. > stressGeometry.cxx 	20.10 	19.36. > stressHistogram.cxx 	16.52 	15.89. > stressGraphics.cxx 	57.68 	16.13. > . > stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay. The question is how many tutorials and code such as stressGraphics.cxx we have, and more importantly how much of the experiments/users use that style of coding/interfaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:571,integrability,interfac,interfaces,571,"> @vgvassilev. > . > User CPU time, 2nd run of all tests:. > test 	opt 	non-opt. > stressGeometry.cxx 	20.10 	19.36. > stressHistogram.cxx 	16.52 	15.89. > stressGraphics.cxx 	57.68 	16.13. > . > stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay. The question is how many tutorials and code such as stressGraphics.cxx we have, and more importantly how much of the experiments/users use that style of coding/interfaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:571,interoperability,interfac,interfaces,571,"> @vgvassilev. > . > User CPU time, 2nd run of all tests:. > test 	opt 	non-opt. > stressGeometry.cxx 	20.10 	19.36. > stressHistogram.cxx 	16.52 	15.89. > stressGraphics.cxx 	57.68 	16.13. > . > stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay. The question is how many tutorials and code such as stressGraphics.cxx we have, and more importantly how much of the experiments/users use that style of coding/interfaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:571,modifiability,interfac,interfaces,571,"> @vgvassilev. > . > User CPU time, 2nd run of all tests:. > test 	opt 	non-opt. > stressGeometry.cxx 	20.10 	19.36. > stressHistogram.cxx 	16.52 	15.89. > stressGraphics.cxx 	57.68 	16.13. > . > stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay. The question is how many tutorials and code such as stressGraphics.cxx we have, and more importantly how much of the experiments/users use that style of coding/interfaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:26,performance,CPU,CPU,26,"> @vgvassilev. > . > User CPU time, 2nd run of all tests:. > test 	opt 	non-opt. > stressGeometry.cxx 	20.10 	19.36. > stressHistogram.cxx 	16.52 	15.89. > stressGraphics.cxx 	57.68 	16.13. > . > stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay. The question is how many tutorials and code such as stressGraphics.cxx we have, and more importantly how much of the experiments/users use that style of coding/interfaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:30,performance,time,time,30,"> @vgvassilev. > . > User CPU time, 2nd run of all tests:. > test 	opt 	non-opt. > stressGeometry.cxx 	20.10 	19.36. > stressHistogram.cxx 	16.52 	15.89. > stressGraphics.cxx 	57.68 	16.13. > . > stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay. The question is how many tutorials and code such as stressGraphics.cxx we have, and more importantly how much of the experiments/users use that style of coding/interfaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:51,safety,test,tests,51,"> @vgvassilev. > . > User CPU time, 2nd run of all tests:. > test 	opt 	non-opt. > stressGeometry.cxx 	20.10 	19.36. > stressHistogram.cxx 	16.52 	15.89. > stressGraphics.cxx 	57.68 	16.13. > . > stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay. The question is how many tutorials and code such as stressGraphics.cxx we have, and more importantly how much of the experiments/users use that style of coding/interfaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:61,safety,test,test,61,"> @vgvassilev. > . > User CPU time, 2nd run of all tests:. > test 	opt 	non-opt. > stressGeometry.cxx 	20.10 	19.36. > stressHistogram.cxx 	16.52 	15.89. > stressGraphics.cxx 	57.68 	16.13. > . > stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay. The question is how many tutorials and code such as stressGraphics.cxx we have, and more importantly how much of the experiments/users use that style of coding/interfaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:51,testability,test,tests,51,"> @vgvassilev. > . > User CPU time, 2nd run of all tests:. > test 	opt 	non-opt. > stressGeometry.cxx 	20.10 	19.36. > stressHistogram.cxx 	16.52 	15.89. > stressGraphics.cxx 	57.68 	16.13. > . > stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay. The question is how many tutorials and code such as stressGraphics.cxx we have, and more importantly how much of the experiments/users use that style of coding/interfaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:61,testability,test,test,61,"> @vgvassilev. > . > User CPU time, 2nd run of all tests:. > test 	opt 	non-opt. > stressGeometry.cxx 	20.10 	19.36. > stressHistogram.cxx 	16.52 	15.89. > stressGraphics.cxx 	57.68 	16.13. > . > stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay. The question is how many tutorials and code such as stressGraphics.cxx we have, and more importantly how much of the experiments/users use that style of coding/interfaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:21,usability,User,User,21,"> @vgvassilev. > . > User CPU time, 2nd run of all tests:. > test 	opt 	non-opt. > stressGeometry.cxx 	20.10 	19.36. > stressHistogram.cxx 	16.52 	15.89. > stressGraphics.cxx 	57.68 	16.13. > . > stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay. The question is how many tutorials and code such as stressGraphics.cxx we have, and more importantly how much of the experiments/users use that style of coding/interfaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:540,usability,user,users,540,"> @vgvassilev. > . > User CPU time, 2nd run of all tests:. > test 	opt 	non-opt. > stressGeometry.cxx 	20.10 	19.36. > stressHistogram.cxx 	16.52 	15.89. > stressGraphics.cxx 	57.68 	16.13. > . > stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay. The question is how many tutorials and code such as stressGraphics.cxx we have, and more importantly how much of the experiments/users use that style of coding/interfaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:83,availability,slo,slowed,83,"I know the question, but I don't think anyone knows the answer. The code that gets slowed down is vtable-heavy code (at least I think that's the symptom), i.e. ""legacy"" code. We need to motivate people to migrate to today's code, so that's what we should be optimize for. We are not making legacy code impossible, but we are indeed pessimizing it. I'd be happy :-) to have someone with `opt` knowledge figure out which pass it is that blows up. Maybe @hahnjo could give us a hand?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:90,availability,down,down,90,"I know the question, but I don't think anyone knows the answer. The code that gets slowed down is vtable-heavy code (at least I think that's the symptom), i.e. ""legacy"" code. We need to motivate people to migrate to today's code, so that's what we should be optimize for. We are not making legacy code impossible, but we are indeed pessimizing it. I'd be happy :-) to have someone with `opt` knowledge figure out which pass it is that blows up. Maybe @hahnjo could give us a hand?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:258,energy efficiency,optim,optimize,258,"I know the question, but I don't think anyone knows the answer. The code that gets slowed down is vtable-heavy code (at least I think that's the symptom), i.e. ""legacy"" code. We need to motivate people to migrate to today's code, so that's what we should be optimize for. We are not making legacy code impossible, but we are indeed pessimizing it. I'd be happy :-) to have someone with `opt` knowledge figure out which pass it is that blows up. Maybe @hahnjo could give us a hand?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:258,performance,optimiz,optimize,258,"I know the question, but I don't think anyone knows the answer. The code that gets slowed down is vtable-heavy code (at least I think that's the symptom), i.e. ""legacy"" code. We need to motivate people to migrate to today's code, so that's what we should be optimize for. We are not making legacy code impossible, but we are indeed pessimizing it. I'd be happy :-) to have someone with `opt` knowledge figure out which pass it is that blows up. Maybe @hahnjo could give us a hand?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:83,reliability,slo,slowed,83,"I know the question, but I don't think anyone knows the answer. The code that gets slowed down is vtable-heavy code (at least I think that's the symptom), i.e. ""legacy"" code. We need to motivate people to migrate to today's code, so that's what we should be optimize for. We are not making legacy code impossible, but we are indeed pessimizing it. I'd be happy :-) to have someone with `opt` knowledge figure out which pass it is that blows up. Maybe @hahnjo could give us a hand?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:62,security,expos,exposed,62,"@vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue https://github.com/root-project/root/issues/9312 to keep track.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:73,usability,user,users,73,"@vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue https://github.com/root-project/root/issues/9312 to keep track.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:114,usability,feedback,feedback,114,"@vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue https://github.com/root-project/root/issues/9312 to keep track.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:278,performance,perform,performance,278,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:359,safety,test,testing,359,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:64,security,expos,exposed,64,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:298,security,sign,significant,298,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:508,security,sign,significantly,508,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:559,security,control,control,559,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:222,testability,understand,understand,222,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:250,testability,regress,regressed,250,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:359,testability,test,testing,359,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:443,testability,regress,regressed,443,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:559,testability,control,control,559,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:75,usability,user,users,75,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:116,usability,feedback,feedback,116,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9301:278,usability,perform,performance,278,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9301
https://github.com/root-project/root/pull/9307:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:188,deployability,log,log,188,"@lmoneta for future commits, can you please leave an empty line between the subject (first line) and the commit description (starting in line 3)? Having text in the second line makes `git log --oneline` horrible to read because git thinks that the entire commit message is the subject...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:76,integrability,sub,subject,76,"@lmoneta for future commits, can you please leave an empty line between the subject (first line) and the commit description (starting in line 3)? Having text in the second line makes `git log --oneline` horrible to read because git thinks that the entire commit message is the subject...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:262,integrability,messag,message,262,"@lmoneta for future commits, can you please leave an empty line between the subject (first line) and the commit description (starting in line 3)? Having text in the second line makes `git log --oneline` horrible to read because git thinks that the entire commit message is the subject...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:277,integrability,sub,subject,277,"@lmoneta for future commits, can you please leave an empty line between the subject (first line) and the commit description (starting in line 3)? Having text in the second line makes `git log --oneline` horrible to read because git thinks that the entire commit message is the subject...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:262,interoperability,messag,message,262,"@lmoneta for future commits, can you please leave an empty line between the subject (first line) and the commit description (starting in line 3)? Having text in the second line makes `git log --oneline` horrible to read because git thinks that the entire commit message is the subject...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:188,safety,log,log,188,"@lmoneta for future commits, can you please leave an empty line between the subject (first line) and the commit description (starting in line 3)? Having text in the second line makes `git log --oneline` horrible to read because git thinks that the entire commit message is the subject...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:188,security,log,log,188,"@lmoneta for future commits, can you please leave an empty line between the subject (first line) and the commit description (starting in line 3)? Having text in the second line makes `git log --oneline` horrible to read because git thinks that the entire commit message is the subject...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:188,testability,log,log,188,"@lmoneta for future commits, can you please leave an empty line between the subject (first line) and the commit description (starting in line 3)? Having text in the second line makes `git log --oneline` horrible to read because git thinks that the entire commit message is the subject...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:55,deployability,log,log,55,"You are right ! Sorry for this, I have never used `git log --oneline`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:55,safety,log,log,55,"You are right ! Sorry for this, I have never used `git log --oneline`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:55,security,log,log,55,"You are right ! Sorry for this, I have never used `git log --oneline`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/pull/9307:55,testability,log,log,55,"You are right ! Sorry for this, I have never used `git log --oneline`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9307
https://github.com/root-project/root/issues/9310:0,availability,Ping,Ping,0,Ping,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:111,availability,REPLIC,REPLICA,111,"This should be fixed by #10044. For using via Export:. ```cpp. gGeoManager->SetTopNode(gGeoManager->GetVolume(""REPLICA""));. gGeoManager->Export(""test.gdml"", ""test"", ""vgf"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:145,safety,test,test,145,"This should be fixed by #10044. For using via Export:. ```cpp. gGeoManager->SetTopNode(gGeoManager->GetVolume(""REPLICA""));. gGeoManager->Export(""test.gdml"", ""test"", ""vgf"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:158,safety,test,test,158,"This should be fixed by #10044. For using via Export:. ```cpp. gGeoManager->SetTopNode(gGeoManager->GetVolume(""REPLICA""));. gGeoManager->Export(""test.gdml"", ""test"", ""vgf"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:145,testability,test,test,145,"This should be fixed by #10044. For using via Export:. ```cpp. gGeoManager->SetTopNode(gGeoManager->GetVolume(""REPLICA""));. gGeoManager->Export(""test.gdml"", ""test"", ""vgf"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:158,testability,test,test,158,"This should be fixed by #10044. For using via Export:. ```cpp. gGeoManager->SetTopNode(gGeoManager->GetVolume(""REPLICA""));. gGeoManager->Export(""test.gdml"", ""test"", ""vgf"");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:20,safety,test,test,20,Thank you! Should I test from your fork or just wait until the PR goes through?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/issues/9310:20,testability,test,test,20,Thank you! Should I test from your fork or just wait until the PR goes through?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9310
https://github.com/root-project/root/pull/9311:59,availability,operat,operator,59,@sanjibansg I think we can merge the parsing of the Concat operator and add the direct Keras and PyTorch parsing later. Do you have time to fix these conflicts and rebase ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:150,interoperability,conflict,conflicts,150,@sanjibansg I think we can merge the parsing of the Concat operator and add the direct Keras and PyTorch parsing later. Do you have time to fix these conflicts and rebase ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:132,performance,time,time,132,@sanjibansg I think we can merge the parsing of the Concat operator and add the direct Keras and PyTorch parsing later. Do you have time to fix these conflicts and rebase ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:61,availability,operat,operator,61,"> @sanjibansg I think we can merge the parsing of the Concat operator and add the direct Keras and PyTorch parsing later. Do you have time to fix these conflicts and rebase ? Yes surely, I will rebase to fix the conflicts. I think I need to add a test for parsing the ONNX Concat Op with axis=0, I will add that as well soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:152,interoperability,conflict,conflicts,152,"> @sanjibansg I think we can merge the parsing of the Concat operator and add the direct Keras and PyTorch parsing later. Do you have time to fix these conflicts and rebase ? Yes surely, I will rebase to fix the conflicts. I think I need to add a test for parsing the ONNX Concat Op with axis=0, I will add that as well soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:212,interoperability,conflict,conflicts,212,"> @sanjibansg I think we can merge the parsing of the Concat operator and add the direct Keras and PyTorch parsing later. Do you have time to fix these conflicts and rebase ? Yes surely, I will rebase to fix the conflicts. I think I need to add a test for parsing the ONNX Concat Op with axis=0, I will add that as well soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:134,performance,time,time,134,"> @sanjibansg I think we can merge the parsing of the Concat operator and add the direct Keras and PyTorch parsing later. Do you have time to fix these conflicts and rebase ? Yes surely, I will rebase to fix the conflicts. I think I need to add a test for parsing the ONNX Concat Op with axis=0, I will add that as well soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:247,safety,test,test,247,"> @sanjibansg I think we can merge the parsing of the Concat operator and add the direct Keras and PyTorch parsing later. Do you have time to fix these conflicts and rebase ? Yes surely, I will rebase to fix the conflicts. I think I need to add a test for parsing the ONNX Concat Op with axis=0, I will add that as well soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/pull/9311:247,testability,test,test,247,"> @sanjibansg I think we can merge the parsing of the Concat operator and add the direct Keras and PyTorch parsing later. Do you have time to fix these conflicts and rebase ? Yes surely, I will rebase to fix the conflicts. I think I need to add a test for parsing the ONNX Concat Op with axis=0, I will add that as well soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9311
https://github.com/root-project/root/issues/9312:1285,energy efficiency,CPU,CPU,1285,"[This rootbench benchmark](https://github.com/root-project/rootbench/blob/master/root/tree/dataframe/RDataFrameBenchmarks.cxx#L186-L205) that creates an artificially large jitted RDataFrame computation graph sees exploding runtimes with cling + O1. Standalone RDF code that reproduces the problem:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RLogger.hxx>. int main() {. ROOT::RDataFrame root(1);. std::vector<ROOT::RDF::RResultPtr<double>> dfs;. for (auto i = 0u; i < 10000; i++) {. const auto column = ""x"" + std::to_string(i);. auto define = root.Define(column, ""42.f"");. auto filter = define.Filter(column + "" > 0.f"");. auto sum = filter.Sum(column);. dfs.emplace_back(sum);. }. dfs[0].GetValue();. }. ```. Actual generated code (the body of `void foo()` is what RDF passes to `TCling::Calc`, I added the `#include`s and the `using namespace std;` to make the thing compile standalone and the things in `namepsace __rdf` are passed to `TCling::Declare` when RDF jits): . [jitted_code.zip](https://github.com/root-project/root/files/7587367/jitted_code.zip). clang 13 goes from 16s to 2+ minutes when compiling that code without/with O1:. ```. /tmp /usr/bin/time clang++ -c jitted_code.cpp (root-config --cflags | string split "" ""). 15.45user 0.42system 0:16.00elapsed 99%CPU (0avgtext+0avgdata 1104528maxresident)k. 22712inputs+0outputs (161major+338726minor)pagefaults 0swaps. /tmp /usr/bin/time clang++ -O1 -c jitted_code.cpp (root-config --cflags | string split "" ""). 133.75user 0.37system 2:14.38elapsed 99%CPU (0avgtext+0avgdata 1089416maxresident)k. 10280inputs+0outputs (115major+287793minor)pagefaults 0swaps. ```. cling seems to do much worse, going from a few seconds to over 10 minutes if O1 is added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1525,energy efficiency,CPU,CPU,1525,"[This rootbench benchmark](https://github.com/root-project/rootbench/blob/master/root/tree/dataframe/RDataFrameBenchmarks.cxx#L186-L205) that creates an artificially large jitted RDataFrame computation graph sees exploding runtimes with cling + O1. Standalone RDF code that reproduces the problem:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RLogger.hxx>. int main() {. ROOT::RDataFrame root(1);. std::vector<ROOT::RDF::RResultPtr<double>> dfs;. for (auto i = 0u; i < 10000; i++) {. const auto column = ""x"" + std::to_string(i);. auto define = root.Define(column, ""42.f"");. auto filter = define.Filter(column + "" > 0.f"");. auto sum = filter.Sum(column);. dfs.emplace_back(sum);. }. dfs[0].GetValue();. }. ```. Actual generated code (the body of `void foo()` is what RDF passes to `TCling::Calc`, I added the `#include`s and the `using namespace std;` to make the thing compile standalone and the things in `namepsace __rdf` are passed to `TCling::Declare` when RDF jits): . [jitted_code.zip](https://github.com/root-project/root/files/7587367/jitted_code.zip). clang 13 goes from 16s to 2+ minutes when compiling that code without/with O1:. ```. /tmp /usr/bin/time clang++ -c jitted_code.cpp (root-config --cflags | string split "" ""). 15.45user 0.42system 0:16.00elapsed 99%CPU (0avgtext+0avgdata 1104528maxresident)k. 22712inputs+0outputs (161major+338726minor)pagefaults 0swaps. /tmp /usr/bin/time clang++ -O1 -c jitted_code.cpp (root-config --cflags | string split "" ""). 133.75user 0.37system 2:14.38elapsed 99%CPU (0avgtext+0avgdata 1089416maxresident)k. 10280inputs+0outputs (115major+287793minor)pagefaults 0swaps. ```. cling seems to do much worse, going from a few seconds to over 10 minutes if O1 is added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:590,integrability,filter,filter,590,"[This rootbench benchmark](https://github.com/root-project/rootbench/blob/master/root/tree/dataframe/RDataFrameBenchmarks.cxx#L186-L205) that creates an artificially large jitted RDataFrame computation graph sees exploding runtimes with cling + O1. Standalone RDF code that reproduces the problem:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RLogger.hxx>. int main() {. ROOT::RDataFrame root(1);. std::vector<ROOT::RDF::RResultPtr<double>> dfs;. for (auto i = 0u; i < 10000; i++) {. const auto column = ""x"" + std::to_string(i);. auto define = root.Define(column, ""42.f"");. auto filter = define.Filter(column + "" > 0.f"");. auto sum = filter.Sum(column);. dfs.emplace_back(sum);. }. dfs[0].GetValue();. }. ```. Actual generated code (the body of `void foo()` is what RDF passes to `TCling::Calc`, I added the `#include`s and the `using namespace std;` to make the thing compile standalone and the things in `namepsace __rdf` are passed to `TCling::Declare` when RDF jits): . [jitted_code.zip](https://github.com/root-project/root/files/7587367/jitted_code.zip). clang 13 goes from 16s to 2+ minutes when compiling that code without/with O1:. ```. /tmp /usr/bin/time clang++ -c jitted_code.cpp (root-config --cflags | string split "" ""). 15.45user 0.42system 0:16.00elapsed 99%CPU (0avgtext+0avgdata 1104528maxresident)k. 22712inputs+0outputs (161major+338726minor)pagefaults 0swaps. /tmp /usr/bin/time clang++ -O1 -c jitted_code.cpp (root-config --cflags | string split "" ""). 133.75user 0.37system 2:14.38elapsed 99%CPU (0avgtext+0avgdata 1089416maxresident)k. 10280inputs+0outputs (115major+287793minor)pagefaults 0swaps. ```. cling seems to do much worse, going from a few seconds to over 10 minutes if O1 is added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:606,integrability,Filter,Filter,606,"[This rootbench benchmark](https://github.com/root-project/rootbench/blob/master/root/tree/dataframe/RDataFrameBenchmarks.cxx#L186-L205) that creates an artificially large jitted RDataFrame computation graph sees exploding runtimes with cling + O1. Standalone RDF code that reproduces the problem:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RLogger.hxx>. int main() {. ROOT::RDataFrame root(1);. std::vector<ROOT::RDF::RResultPtr<double>> dfs;. for (auto i = 0u; i < 10000; i++) {. const auto column = ""x"" + std::to_string(i);. auto define = root.Define(column, ""42.f"");. auto filter = define.Filter(column + "" > 0.f"");. auto sum = filter.Sum(column);. dfs.emplace_back(sum);. }. dfs[0].GetValue();. }. ```. Actual generated code (the body of `void foo()` is what RDF passes to `TCling::Calc`, I added the `#include`s and the `using namespace std;` to make the thing compile standalone and the things in `namepsace __rdf` are passed to `TCling::Declare` when RDF jits): . [jitted_code.zip](https://github.com/root-project/root/files/7587367/jitted_code.zip). clang 13 goes from 16s to 2+ minutes when compiling that code without/with O1:. ```. /tmp /usr/bin/time clang++ -c jitted_code.cpp (root-config --cflags | string split "" ""). 15.45user 0.42system 0:16.00elapsed 99%CPU (0avgtext+0avgdata 1104528maxresident)k. 22712inputs+0outputs (161major+338726minor)pagefaults 0swaps. /tmp /usr/bin/time clang++ -O1 -c jitted_code.cpp (root-config --cflags | string split "" ""). 133.75user 0.37system 2:14.38elapsed 99%CPU (0avgtext+0avgdata 1089416maxresident)k. 10280inputs+0outputs (115major+287793minor)pagefaults 0swaps. ```. cling seems to do much worse, going from a few seconds to over 10 minutes if O1 is added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:645,integrability,filter,filter,645,"[This rootbench benchmark](https://github.com/root-project/rootbench/blob/master/root/tree/dataframe/RDataFrameBenchmarks.cxx#L186-L205) that creates an artificially large jitted RDataFrame computation graph sees exploding runtimes with cling + O1. Standalone RDF code that reproduces the problem:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RLogger.hxx>. int main() {. ROOT::RDataFrame root(1);. std::vector<ROOT::RDF::RResultPtr<double>> dfs;. for (auto i = 0u; i < 10000; i++) {. const auto column = ""x"" + std::to_string(i);. auto define = root.Define(column, ""42.f"");. auto filter = define.Filter(column + "" > 0.f"");. auto sum = filter.Sum(column);. dfs.emplace_back(sum);. }. dfs[0].GetValue();. }. ```. Actual generated code (the body of `void foo()` is what RDF passes to `TCling::Calc`, I added the `#include`s and the `using namespace std;` to make the thing compile standalone and the things in `namepsace __rdf` are passed to `TCling::Declare` when RDF jits): . [jitted_code.zip](https://github.com/root-project/root/files/7587367/jitted_code.zip). clang 13 goes from 16s to 2+ minutes when compiling that code without/with O1:. ```. /tmp /usr/bin/time clang++ -c jitted_code.cpp (root-config --cflags | string split "" ""). 15.45user 0.42system 0:16.00elapsed 99%CPU (0avgtext+0avgdata 1104528maxresident)k. 22712inputs+0outputs (161major+338726minor)pagefaults 0swaps. /tmp /usr/bin/time clang++ -O1 -c jitted_code.cpp (root-config --cflags | string split "" ""). 133.75user 0.37system 2:14.38elapsed 99%CPU (0avgtext+0avgdata 1089416maxresident)k. 10280inputs+0outputs (115major+287793minor)pagefaults 0swaps. ```. cling seems to do much worse, going from a few seconds to over 10 minutes if O1 is added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1171,performance,time,time,1171,"[This rootbench benchmark](https://github.com/root-project/rootbench/blob/master/root/tree/dataframe/RDataFrameBenchmarks.cxx#L186-L205) that creates an artificially large jitted RDataFrame computation graph sees exploding runtimes with cling + O1. Standalone RDF code that reproduces the problem:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RLogger.hxx>. int main() {. ROOT::RDataFrame root(1);. std::vector<ROOT::RDF::RResultPtr<double>> dfs;. for (auto i = 0u; i < 10000; i++) {. const auto column = ""x"" + std::to_string(i);. auto define = root.Define(column, ""42.f"");. auto filter = define.Filter(column + "" > 0.f"");. auto sum = filter.Sum(column);. dfs.emplace_back(sum);. }. dfs[0].GetValue();. }. ```. Actual generated code (the body of `void foo()` is what RDF passes to `TCling::Calc`, I added the `#include`s and the `using namespace std;` to make the thing compile standalone and the things in `namepsace __rdf` are passed to `TCling::Declare` when RDF jits): . [jitted_code.zip](https://github.com/root-project/root/files/7587367/jitted_code.zip). clang 13 goes from 16s to 2+ minutes when compiling that code without/with O1:. ```. /tmp /usr/bin/time clang++ -c jitted_code.cpp (root-config --cflags | string split "" ""). 15.45user 0.42system 0:16.00elapsed 99%CPU (0avgtext+0avgdata 1104528maxresident)k. 22712inputs+0outputs (161major+338726minor)pagefaults 0swaps. /tmp /usr/bin/time clang++ -O1 -c jitted_code.cpp (root-config --cflags | string split "" ""). 133.75user 0.37system 2:14.38elapsed 99%CPU (0avgtext+0avgdata 1089416maxresident)k. 10280inputs+0outputs (115major+287793minor)pagefaults 0swaps. ```. cling seems to do much worse, going from a few seconds to over 10 minutes if O1 is added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1285,performance,CPU,CPU,1285,"[This rootbench benchmark](https://github.com/root-project/rootbench/blob/master/root/tree/dataframe/RDataFrameBenchmarks.cxx#L186-L205) that creates an artificially large jitted RDataFrame computation graph sees exploding runtimes with cling + O1. Standalone RDF code that reproduces the problem:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RLogger.hxx>. int main() {. ROOT::RDataFrame root(1);. std::vector<ROOT::RDF::RResultPtr<double>> dfs;. for (auto i = 0u; i < 10000; i++) {. const auto column = ""x"" + std::to_string(i);. auto define = root.Define(column, ""42.f"");. auto filter = define.Filter(column + "" > 0.f"");. auto sum = filter.Sum(column);. dfs.emplace_back(sum);. }. dfs[0].GetValue();. }. ```. Actual generated code (the body of `void foo()` is what RDF passes to `TCling::Calc`, I added the `#include`s and the `using namespace std;` to make the thing compile standalone and the things in `namepsace __rdf` are passed to `TCling::Declare` when RDF jits): . [jitted_code.zip](https://github.com/root-project/root/files/7587367/jitted_code.zip). clang 13 goes from 16s to 2+ minutes when compiling that code without/with O1:. ```. /tmp /usr/bin/time clang++ -c jitted_code.cpp (root-config --cflags | string split "" ""). 15.45user 0.42system 0:16.00elapsed 99%CPU (0avgtext+0avgdata 1104528maxresident)k. 22712inputs+0outputs (161major+338726minor)pagefaults 0swaps. /tmp /usr/bin/time clang++ -O1 -c jitted_code.cpp (root-config --cflags | string split "" ""). 133.75user 0.37system 2:14.38elapsed 99%CPU (0avgtext+0avgdata 1089416maxresident)k. 10280inputs+0outputs (115major+287793minor)pagefaults 0swaps. ```. cling seems to do much worse, going from a few seconds to over 10 minutes if O1 is added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1406,performance,time,time,1406,"[This rootbench benchmark](https://github.com/root-project/rootbench/blob/master/root/tree/dataframe/RDataFrameBenchmarks.cxx#L186-L205) that creates an artificially large jitted RDataFrame computation graph sees exploding runtimes with cling + O1. Standalone RDF code that reproduces the problem:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RLogger.hxx>. int main() {. ROOT::RDataFrame root(1);. std::vector<ROOT::RDF::RResultPtr<double>> dfs;. for (auto i = 0u; i < 10000; i++) {. const auto column = ""x"" + std::to_string(i);. auto define = root.Define(column, ""42.f"");. auto filter = define.Filter(column + "" > 0.f"");. auto sum = filter.Sum(column);. dfs.emplace_back(sum);. }. dfs[0].GetValue();. }. ```. Actual generated code (the body of `void foo()` is what RDF passes to `TCling::Calc`, I added the `#include`s and the `using namespace std;` to make the thing compile standalone and the things in `namepsace __rdf` are passed to `TCling::Declare` when RDF jits): . [jitted_code.zip](https://github.com/root-project/root/files/7587367/jitted_code.zip). clang 13 goes from 16s to 2+ minutes when compiling that code without/with O1:. ```. /tmp /usr/bin/time clang++ -c jitted_code.cpp (root-config --cflags | string split "" ""). 15.45user 0.42system 0:16.00elapsed 99%CPU (0avgtext+0avgdata 1104528maxresident)k. 22712inputs+0outputs (161major+338726minor)pagefaults 0swaps. /tmp /usr/bin/time clang++ -O1 -c jitted_code.cpp (root-config --cflags | string split "" ""). 133.75user 0.37system 2:14.38elapsed 99%CPU (0avgtext+0avgdata 1089416maxresident)k. 10280inputs+0outputs (115major+287793minor)pagefaults 0swaps. ```. cling seems to do much worse, going from a few seconds to over 10 minutes if O1 is added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1525,performance,CPU,CPU,1525,"[This rootbench benchmark](https://github.com/root-project/rootbench/blob/master/root/tree/dataframe/RDataFrameBenchmarks.cxx#L186-L205) that creates an artificially large jitted RDataFrame computation graph sees exploding runtimes with cling + O1. Standalone RDF code that reproduces the problem:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RLogger.hxx>. int main() {. ROOT::RDataFrame root(1);. std::vector<ROOT::RDF::RResultPtr<double>> dfs;. for (auto i = 0u; i < 10000; i++) {. const auto column = ""x"" + std::to_string(i);. auto define = root.Define(column, ""42.f"");. auto filter = define.Filter(column + "" > 0.f"");. auto sum = filter.Sum(column);. dfs.emplace_back(sum);. }. dfs[0].GetValue();. }. ```. Actual generated code (the body of `void foo()` is what RDF passes to `TCling::Calc`, I added the `#include`s and the `using namespace std;` to make the thing compile standalone and the things in `namepsace __rdf` are passed to `TCling::Declare` when RDF jits): . [jitted_code.zip](https://github.com/root-project/root/files/7587367/jitted_code.zip). clang 13 goes from 16s to 2+ minutes when compiling that code without/with O1:. ```. /tmp /usr/bin/time clang++ -c jitted_code.cpp (root-config --cflags | string split "" ""). 15.45user 0.42system 0:16.00elapsed 99%CPU (0avgtext+0avgdata 1104528maxresident)k. 22712inputs+0outputs (161major+338726minor)pagefaults 0swaps. /tmp /usr/bin/time clang++ -O1 -c jitted_code.cpp (root-config --cflags | string split "" ""). 133.75user 0.37system 2:14.38elapsed 99%CPU (0avgtext+0avgdata 1089416maxresident)k. 10280inputs+0outputs (115major+287793minor)pagefaults 0swaps. ```. cling seems to do much worse, going from a few seconds to over 10 minutes if O1 is added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:474,availability,down,down,474,"For `stressGraphics.cxx`, the explosion comes from interpreting generated C++ code. I'm attaching the largest instance, which is the last of 50 sub-tests: [sg50.zip](https://github.com/root-project/root/files/7587535/sg50.zip) (similar to Enrico, I added the `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1071,availability,redund,redundant,1071,"+ code. I'm attaching the largest instance, which is the last of 50 sub-tests: [sg50.zip](https://github.com/root-project/root/files/7587535/sg50.zip) (similar to Enrico, I added the `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1434,availability,slo,slots,1434,"-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.106",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1681,availability,redund,redundant,1681,"r. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1776,availability,redund,redundant,1776,"r `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1871,availability,redund,redundant,1871,Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 (,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1966,availability,redund,redundant,1966,DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 (,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2061,availability,redund,redundant,2061,"bine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2156,availability,redund,redundant,2156,"ssembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redunda",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3154,availability,redund,redundant,3154,"undant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine red",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3776,availability,redund,redundant,3776,"5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3871,availability,redund,redundant,3871," 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3966,availability,redund,redundant,3966," 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4061,availability,redund,redundant,4061,O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis. 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4156,availability,redund,redundant,4156,nt instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis. 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1%) 0.1173 ( 0.1%) X86 Byte/Word Instruction Fixup. 0.1104 ( 0.1%) 0.0037 ( 0.4%) 0.1141 ( 0.1%),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4251,availability,redund,redundant,4251,ruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis. 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1%) 0.1173 ( 0.1%) X86 Byte/Word Instruction Fixup. 0.1104 ( 0.1%) 0.0037 ( 0.4%) 0.1141 ( 0.1%) 0.1143 ( 0.1%) Two-Address instruction pass. 0.1024 ( 0.1%) 0.0026 ( 0.3%) 0.1050 ( 0.1%) 0.10,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1071,deployability,redundan,redundant,1071,"+ code. I'm attaching the largest instance, which is the last of 50 sub-tests: [sg50.zip](https://github.com/root-project/root/files/7587535/sg50.zip) (similar to Enrico, I added the `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1428,deployability,stack,stack,1428,"from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1681,deployability,redundan,redundant,1681,"r. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1776,deployability,redundan,redundant,1776,"r `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1871,deployability,redundan,redundant,1871,Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 (,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1966,deployability,redundan,redundant,1966,DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 (,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2061,deployability,redundan,redundant,2061,"bine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2156,deployability,redundan,redundant,2156,"ssembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redunda",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3154,deployability,redundan,redundant,3154,"undant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine red",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3776,deployability,redundan,redundant,3776,"5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3871,deployability,redundan,redundant,3871," 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3966,deployability,redundan,redundant,3966," 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4061,deployability,redundan,redundant,4061,O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis. 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4156,deployability,redundan,redundant,4156,nt instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis. 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1%) 0.1173 ( 0.1%) X86 Byte/Word Instruction Fixup. 0.1104 ( 0.1%) 0.0037 ( 0.4%) 0.1141 ( 0.1%),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4251,deployability,redundan,redundant,4251,ruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis. 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1%) 0.1173 ( 0.1%) X86 Byte/Word Instruction Fixup. 0.1104 ( 0.1%) 0.0037 ( 0.4%) 0.1141 ( 0.1%) 0.1143 ( 0.1%) Two-Address instruction pass. 0.1024 ( 0.1%) 0.0026 ( 0.3%) 0.1050 ( 0.1%) 0.10,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:763,energy efficiency,Alloc,Allocator,763,"For `stressGraphics.cxx`, the explosion comes from interpreting generated C++ code. I'm attaching the largest instance, which is the last of 50 sub-tests: [sg50.zip](https://github.com/root-project/root/files/7587535/sg50.zip) (similar to Enrico, I added the `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:892,energy efficiency,Alloc,Allocator,892,"For `stressGraphics.cxx`, the explosion comes from interpreting generated C++ code. I'm attaching the largest instance, which is the last of 50 sub-tests: [sg50.zip](https://github.com/root-project/root/files/7587535/sg50.zip) (similar to Enrico, I added the `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1251,energy efficiency,Optim,Optimizer,1251,"he `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1342,energy efficiency,Schedul,Scheduler,1342,") takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2454,energy efficiency,Optim,Optimization,2454,"70 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2492,energy efficiency,alloc,allocation,2492,"1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2646,energy efficiency,Alloc,Allocator,2646," 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3438,energy efficiency,Schedul,Scheduler,3438,"1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) Cod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3525,energy efficiency,Alloc,Allocator,3525,"r picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hois",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:144,integrability,sub,sub-tests,144,"For `stressGraphics.cxx`, the explosion comes from interpreting generated C++ code. I'm attaching the largest instance, which is the last of 50 sub-tests: [sg50.zip](https://github.com/root-project/root/files/7587535/sg50.zip) (similar to Enrico, I added the `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2360,integrability,Sub,Subexpression,2360," 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4353,integrability,Sub,Subexpression,4353,8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis. 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1%) 0.1173 ( 0.1%) X86 Byte/Word Instruction Fixup. 0.1104 ( 0.1%) 0.0037 ( 0.4%) 0.1141 ( 0.1%) 0.1143 ( 0.1%) Two-Address instruction pass. 0.1024 ( 0.1%) 0.0026 ( 0.3%) 0.1050 ( 0.1%) 0.1052 ( 0.1%) Live Range Shrink. 0.1010 ( 0.1%) 0.0007 ( 0.1%) 0.1017 ( 0.1%) 0.1018 ( 0.1%) Machine Copy P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1594,modifiability,Variab,Variable,1594,"ion. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3601,modifiability,Variab,Variable,3601,"4 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Va",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:484,performance,time,time,484,"For `stressGraphics.cxx`, the explosion comes from interpreting generated C++ code. I'm attaching the largest instance, which is the last of 50 sub-tests: [sg50.zip](https://github.com/root-project/root/files/7587535/sg50.zip) (similar to Enrico, I added the `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1251,performance,Optimiz,Optimizer,1251,"he `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1342,performance,Schedul,Scheduler,1342,") takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2454,performance,Optimiz,Optimization,2454,"70 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3438,performance,Schedul,Scheduler,3438,"1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) Cod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1071,reliability,redundan,redundant,1071,"+ code. I'm attaching the largest instance, which is the last of 50 sub-tests: [sg50.zip](https://github.com/root-project/root/files/7587535/sg50.zip) (similar to Enrico, I added the `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1434,reliability,slo,slots,1434,"-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.106",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1681,reliability,redundan,redundant,1681,"r. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1776,reliability,redundan,redundant,1776,"r `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1871,reliability,redundan,redundant,1871,Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 (,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1966,reliability,redundan,redundant,1966,DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 (,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2061,reliability,redundan,redundant,2061,"bine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2156,reliability,redundan,redundant,2156,"ssembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redunda",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3154,reliability,redundan,redundant,3154,"undant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine red",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3776,reliability,redundan,redundant,3776,"5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3871,reliability,redundan,redundant,3871," 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3966,reliability,redundan,redundant,3966," 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4061,reliability,redundan,redundant,4061,O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis. 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4156,reliability,redundan,redundant,4156,nt instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis. 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1%) 0.1173 ( 0.1%) X86 Byte/Word Instruction Fixup. 0.1104 ( 0.1%) 0.0037 ( 0.4%) 0.1141 ( 0.1%),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4251,reliability,redundan,redundant,4251,ruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis. 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1%) 0.1173 ( 0.1%) X86 Byte/Word Instruction Fixup. 0.1104 ( 0.1%) 0.0037 ( 0.4%) 0.1141 ( 0.1%) 0.1143 ( 0.1%) Two-Address instruction pass. 0.1024 ( 0.1%) 0.0026 ( 0.3%) 0.1050 ( 0.1%) 0.10,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:148,safety,test,tests,148,"For `stressGraphics.cxx`, the explosion comes from interpreting generated C++ code. I'm attaching the largest instance, which is the last of 50 sub-tests: [sg50.zip](https://github.com/root-project/root/files/7587535/sg50.zip) (similar to Enrico, I added the `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1071,safety,redund,redundant,1071,"+ code. I'm attaching the largest instance, which is the last of 50 sub-tests: [sg50.zip](https://github.com/root-project/root/files/7587535/sg50.zip) (similar to Enrico, I added the `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1681,safety,redund,redundant,1681,"r. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1776,safety,redund,redundant,1776,"r `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1871,safety,redund,redundant,1871,Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 (,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1966,safety,redund,redundant,1966,DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 (,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2061,safety,redund,redundant,2061,"bine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2156,safety,redund,redundant,2156,"ssembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redunda",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3154,safety,redund,redundant,3154,"undant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:. ```. 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator. 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine red",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3776,safety,redund,redundant,3776,"5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3871,safety,redund,redundant,3871," 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3966,safety,redund,redundant,3966," 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4061,safety,redund,redundant,4061,O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis. 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4156,safety,redund,redundant,4156,nt instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis. 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1%) 0.1173 ( 0.1%) X86 Byte/Word Instruction Fixup. 0.1104 ( 0.1%) 0.0037 ( 0.4%) 0.1141 ( 0.1%),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4251,safety,redund,redundant,4251,ruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) Interprocedural Sparse Conditional Constant Propagation. 0.1317 ( 0.1%) 0.0010 ( 0.1%) 0.1327 ( 0.1%) 0.1329 ( 0.1%) Machine Copy Propagation Pass. 0.1281 ( 0.1%) 0.0019 ( 0.2%) 0.1299 ( 0.1%) 0.1301 ( 0.1%) Prologue/Epilogue Insertion & Frame Finalization. 0.1210 ( 0.1%) 0.0016 ( 0.2%) 0.1226 ( 0.1%) 0.1227 ( 0.1%) Live Interval Analysis. 0.1161 ( 0.1%) 0.0011 ( 0.1%) 0.1172 ( 0.1%) 0.1173 ( 0.1%) X86 Byte/Word Instruction Fixup. 0.1104 ( 0.1%) 0.0037 ( 0.4%) 0.1141 ( 0.1%) 0.1143 ( 0.1%) Two-Address instruction pass. 0.1024 ( 0.1%) 0.0026 ( 0.3%) 0.1050 ( 0.1%) 0.10,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1238,security,Control,Control,1238,"ico, I added the `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:148,testability,test,tests,148,"For `stressGraphics.cxx`, the explosion comes from interpreting generated C++ code. I'm attaching the largest instance, which is the last of 50 sub-tests: [sg50.zip](https://github.com/root-project/root/files/7587535/sg50.zip) (similar to Enrico, I added the `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1238,testability,Control,Control,1238,"ico, I added the `#include`s to make it compile standalone). For this single file, Clang 12.0.1 (from C8S) takes 4s with `-O0` and 12s with `-O1`. Looking at `Pass execution timing report` from `-ftime-report` shows, for `sg50.cpp` down to a time of 0.1s:. ```. 1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1501,testability,Simpl,Simple,1501,"1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3680,testability,Simpl,Simple,3680,".4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1501,usability,Simpl,Simple,1501,"1.5001 ( 71.7%) 0.0359 ( 9.5%) 1.5360 ( 62.2%) 1.5395 ( 62.2%) X86 DAG->DAG Instruction Selection. 0.3250 ( 15.5%) 0.3377 ( 89.2%) 0.6627 ( 26.8%) 0.6633 ( 26.8%) X86 Assembly Printer. 0.0760 ( 3.6%) 0.0040 ( 1.0%) 0.0800 ( 3.2%) 0.0801 ( 3.2%) Fast Register Allocator. ```. for `-O0`, while for `-O1`:. ```. 2.1491 ( 23.0%) 0.0050 ( 1.7%) 2.1540 ( 22.4%) 2.1562 ( 22.4%) Greedy Register Allocator. 1.8328 ( 19.6%) 0.0439 ( 14.7%) 1.8767 ( 19.5%) 1.8805 ( 19.5%) X86 DAG->DAG Instruction Selection. 0.5354 ( 5.7%) 0.0000 ( 0.0%) 0.5354 ( 5.6%) 0.5361 ( 5.6%) Combine redundant instructions. 0.2517 ( 2.7%) 0.2238 ( 75.0%) 0.4755 ( 4.9%) 0.4760 ( 4.9%) X86 Assembly Printer. 0.3088 ( 3.3%) 0.0000 ( 0.0%) 0.3088 ( 3.2%) 0.3091 ( 3.2%) Control Flow Optimizer. 0.2958 ( 3.2%) 0.0010 ( 0.3%) 0.2968 ( 3.1%) 0.2972 ( 3.1%) Machine Instruction Scheduler. 0.2617 ( 2.8%) 0.0000 ( 0.0%) 0.2617 ( 2.7%) 0.2620 ( 2.7%) Merge disjoint stack slots. 0.1949 ( 2.1%) 0.0070 ( 2.3%) 0.2019 ( 2.1%) 0.2021 ( 2.1%) Simple Register Coalescing. 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis. 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6. 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7. 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4. 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3. 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5. 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2. 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement. 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination. 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization. ```. -> mostly register allocation a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3680,usability,Simpl,Simple,3680,".4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer. 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection. 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization. 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass. ```. for `-O0`, while for `-O1`:. ```. 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions. 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection. 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer. 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler. 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8013 ( 0.6%) 0.8022 ( 0.6%) Greedy Register Allocator. 0.6279 ( 0.5%) 0.0060 ( 0.7%) 0.6339 ( 0.5%) 0.6345 ( 0.5%) Live Variable Analysis. 0.3958 ( 0.3%) 0.0048 ( 0.5%) 0.4006 ( 0.3%) 0.4010 ( 0.3%) Simple Register Coalescing. 0.2857 ( 0.2%) 0.0020 ( 0.2%) 0.2877 ( 0.2%) 0.2881 ( 0.2%) Combine redundant instructions #3. 0.2847 ( 0.2%) 0.0021 ( 0.2%) 0.2867 ( 0.2%) 0.2871 ( 0.2%) Combine redundant instructions #2. 0.2842 ( 0.2%) 0.0024 ( 0.3%) 0.2866 ( 0.2%) 0.2870 ( 0.2%) Combine redundant instructions #6. 0.2842 ( 0.2%) 0.0015 ( 0.2%) 0.2858 ( 0.2%) 0.2861 ( 0.2%) Combine redundant instructions #5. 0.2837 ( 0.2%) 0.0017 ( 0.2%) 0.2854 ( 0.2%) 0.2857 ( 0.2%) Combine redundant instructions #4. 0.2825 ( 0.2%) 0.0017 ( 0.2%) 0.2842 ( 0.2%) 0.2846 ( 0.2%) Combine redundant instructions #7. 0.2828 ( 0.2%) 0.0012 ( 0.1%) 0.2841 ( 0.2%) 0.2844 ( 0.2%) Machine Common Subexpression Elimination. 0.1977 ( 0.2%) 0.0031 ( 0.3%) 0.2008 ( 0.2%) 0.2010 ( 0.2%) CodeGen Prepare. 0.1788 ( 0.1%) 0.0036 ( 0.4%) 0.1824 ( 0.1%) 0.1826 ( 0.1%) Constant Hoisting. 0.1525 ( 0.1%) 0.0040 ( 0.4%) 0.1565 ( 0.1%) 0.1567 ( 0.1%) Called Value Propagation. 0.1465 ( 0.1%) 0.0070 ( 0.8%) 0.1535 ( 0.1%) 0.1538 ( 0.1%) I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:559,deployability,version,versions,559,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:107,energy efficiency,current,current,107,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:150,energy efficiency,optim,optimization,150,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:764,energy efficiency,optim,optimizations,764,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:883,energy efficiency,optim,optimize,883,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1028,energy efficiency,optim,optimizations,1028,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:559,integrability,version,versions,559,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:559,modifiability,version,versions,559,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:150,performance,optimiz,optimization,150,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:218,performance,perform,perform,218,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:522,performance,perform,performance,522,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:764,performance,optimiz,optimizations,764,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:883,performance,optimiz,optimize,883,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1028,performance,optimiz,optimizations,1028,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:870,reliability,pra,pragma,870,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:537,testability,regress,regressing,537,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:218,usability,perform,perform,218,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:326,usability,confirm,confirm,326,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:508,usability,confirm,confirms,508,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:522,usability,perform,performance,522,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:620,usability,help,help,620,"The commonality between the two cases seems to be that we generate a lot of code in a single function. The current hypothesis is that this makes some optimization (or their required analyses) explode because compilers perform better for a more balanced ratio of number of functions and their lengths. We therefore want to. 1. confirm that this is actually the case by creating a reproducer, ideally without including ROOT headers (but how hard can it be to generate some code...). If that also explodes, and confirms that performance is regressing with newer versions of LLVM, we can send that to `llvm-dev` and ask for help / advice. 2. For RDF graphs, we could try chunking the code into multiple functions when exceeding a certain threshold, because we do want optimizations without things exploding. 3. For the graphics code, we could just re-enable the existing [`#pragma cling optimize(0)`](https://github.com/root-project/root/blob/master/graf2d/gpad/src/TCanvas.cxx#L1891-L1894) because there we don't really care about optimizations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:79,reliability,doe,does,79,"When we discussed I understood cling was doing much worse than clang, but that does not seem to be the case in the end..?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:319,availability,echo,echo,319,"Here's a script to generate a reproducer for the pattern(s) in the RDF code:. <details>. <summary>generate.sh</summary>. . ```sh. #!/bin/sh. N=100. if [ $# -ge 1 ]; then. N=$1. fi. cat <<'EOF'. #include <string_view>. void fn(std::string_view s, const char **ptrs);. void generated() {. EOF. for i in $(seq -w $N); do. echo "" fn(\""x$i\"", new const char *[1] { \""x$i\"" });"". done. echo ""}"". ```. </details>. In short, the combination of temporary `string_view`s and `new`s in a very long function makes the time of `instcombine` explode (for yet unknown reasons). For instance, compiling the output of `generate.sh 10000` with `clang++ 12.0.1` takes 25 seconds at `-O1`, but less than a second at `-O0`. Removing one of the arguments resolves the problem with `instcombine`. To verify, I hacked RDF headers to accept `const char*` instead of `string_view`s. This brings down compilation time of `jitted_code.cpp` with `clang++` from 2 minutes to 14s; LLVM `main` takes 20s (from 14 minutes). However, this only solves a small part of the problem in Cling - the time is reduced by 2 minutes, but still around 11 minutes for something that took seconds at `-O0`. Hopefully Enrico's implementation of chunked code is able to solve this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:380,availability,echo,echo,380,"Here's a script to generate a reproducer for the pattern(s) in the RDF code:. <details>. <summary>generate.sh</summary>. . ```sh. #!/bin/sh. N=100. if [ $# -ge 1 ]; then. N=$1. fi. cat <<'EOF'. #include <string_view>. void fn(std::string_view s, const char **ptrs);. void generated() {. EOF. for i in $(seq -w $N); do. echo "" fn(\""x$i\"", new const char *[1] { \""x$i\"" });"". done. echo ""}"". ```. </details>. In short, the combination of temporary `string_view`s and `new`s in a very long function makes the time of `instcombine` explode (for yet unknown reasons). For instance, compiling the output of `generate.sh 10000` with `clang++ 12.0.1` takes 25 seconds at `-O1`, but less than a second at `-O0`. Removing one of the arguments resolves the problem with `instcombine`. To verify, I hacked RDF headers to accept `const char*` instead of `string_view`s. This brings down compilation time of `jitted_code.cpp` with `clang++` from 2 minutes to 14s; LLVM `main` takes 20s (from 14 minutes). However, this only solves a small part of the problem in Cling - the time is reduced by 2 minutes, but still around 11 minutes for something that took seconds at `-O0`. Hopefully Enrico's implementation of chunked code is able to solve this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:869,availability,down,down,869,"Here's a script to generate a reproducer for the pattern(s) in the RDF code:. <details>. <summary>generate.sh</summary>. . ```sh. #!/bin/sh. N=100. if [ $# -ge 1 ]; then. N=$1. fi. cat <<'EOF'. #include <string_view>. void fn(std::string_view s, const char **ptrs);. void generated() {. EOF. for i in $(seq -w $N); do. echo "" fn(\""x$i\"", new const char *[1] { \""x$i\"" });"". done. echo ""}"". ```. </details>. In short, the combination of temporary `string_view`s and `new`s in a very long function makes the time of `instcombine` explode (for yet unknown reasons). For instance, compiling the output of `generate.sh 10000` with `clang++ 12.0.1` takes 25 seconds at `-O1`, but less than a second at `-O0`. Removing one of the arguments resolves the problem with `instcombine`. To verify, I hacked RDF headers to accept `const char*` instead of `string_view`s. This brings down compilation time of `jitted_code.cpp` with `clang++` from 2 minutes to 14s; LLVM `main` takes 20s (from 14 minutes). However, this only solves a small part of the problem in Cling - the time is reduced by 2 minutes, but still around 11 minutes for something that took seconds at `-O0`. Hopefully Enrico's implementation of chunked code is able to solve this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1068,energy efficiency,reduc,reduced,1068,"Here's a script to generate a reproducer for the pattern(s) in the RDF code:. <details>. <summary>generate.sh</summary>. . ```sh. #!/bin/sh. N=100. if [ $# -ge 1 ]; then. N=$1. fi. cat <<'EOF'. #include <string_view>. void fn(std::string_view s, const char **ptrs);. void generated() {. EOF. for i in $(seq -w $N); do. echo "" fn(\""x$i\"", new const char *[1] { \""x$i\"" });"". done. echo ""}"". ```. </details>. In short, the combination of temporary `string_view`s and `new`s in a very long function makes the time of `instcombine` explode (for yet unknown reasons). For instance, compiling the output of `generate.sh 10000` with `clang++ 12.0.1` takes 25 seconds at `-O1`, but less than a second at `-O0`. Removing one of the arguments resolves the problem with `instcombine`. To verify, I hacked RDF headers to accept `const char*` instead of `string_view`s. This brings down compilation time of `jitted_code.cpp` with `clang++` from 2 minutes to 14s; LLVM `main` takes 20s (from 14 minutes). However, this only solves a small part of the problem in Cling - the time is reduced by 2 minutes, but still around 11 minutes for something that took seconds at `-O0`. Hopefully Enrico's implementation of chunked code is able to solve this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:506,performance,time,time,506,"Here's a script to generate a reproducer for the pattern(s) in the RDF code:. <details>. <summary>generate.sh</summary>. . ```sh. #!/bin/sh. N=100. if [ $# -ge 1 ]; then. N=$1. fi. cat <<'EOF'. #include <string_view>. void fn(std::string_view s, const char **ptrs);. void generated() {. EOF. for i in $(seq -w $N); do. echo "" fn(\""x$i\"", new const char *[1] { \""x$i\"" });"". done. echo ""}"". ```. </details>. In short, the combination of temporary `string_view`s and `new`s in a very long function makes the time of `instcombine` explode (for yet unknown reasons). For instance, compiling the output of `generate.sh 10000` with `clang++ 12.0.1` takes 25 seconds at `-O1`, but less than a second at `-O0`. Removing one of the arguments resolves the problem with `instcombine`. To verify, I hacked RDF headers to accept `const char*` instead of `string_view`s. This brings down compilation time of `jitted_code.cpp` with `clang++` from 2 minutes to 14s; LLVM `main` takes 20s (from 14 minutes). However, this only solves a small part of the problem in Cling - the time is reduced by 2 minutes, but still around 11 minutes for something that took seconds at `-O0`. Hopefully Enrico's implementation of chunked code is able to solve this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:886,performance,time,time,886,"Here's a script to generate a reproducer for the pattern(s) in the RDF code:. <details>. <summary>generate.sh</summary>. . ```sh. #!/bin/sh. N=100. if [ $# -ge 1 ]; then. N=$1. fi. cat <<'EOF'. #include <string_view>. void fn(std::string_view s, const char **ptrs);. void generated() {. EOF. for i in $(seq -w $N); do. echo "" fn(\""x$i\"", new const char *[1] { \""x$i\"" });"". done. echo ""}"". ```. </details>. In short, the combination of temporary `string_view`s and `new`s in a very long function makes the time of `instcombine` explode (for yet unknown reasons). For instance, compiling the output of `generate.sh 10000` with `clang++ 12.0.1` takes 25 seconds at `-O1`, but less than a second at `-O0`. Removing one of the arguments resolves the problem with `instcombine`. To verify, I hacked RDF headers to accept `const char*` instead of `string_view`s. This brings down compilation time of `jitted_code.cpp` with `clang++` from 2 minutes to 14s; LLVM `main` takes 20s (from 14 minutes). However, this only solves a small part of the problem in Cling - the time is reduced by 2 minutes, but still around 11 minutes for something that took seconds at `-O0`. Hopefully Enrico's implementation of chunked code is able to solve this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:1060,performance,time,time,1060,"Here's a script to generate a reproducer for the pattern(s) in the RDF code:. <details>. <summary>generate.sh</summary>. . ```sh. #!/bin/sh. N=100. if [ $# -ge 1 ]; then. N=$1. fi. cat <<'EOF'. #include <string_view>. void fn(std::string_view s, const char **ptrs);. void generated() {. EOF. for i in $(seq -w $N); do. echo "" fn(\""x$i\"", new const char *[1] { \""x$i\"" });"". done. echo ""}"". ```. </details>. In short, the combination of temporary `string_view`s and `new`s in a very long function makes the time of `instcombine` explode (for yet unknown reasons). For instance, compiling the output of `generate.sh 10000` with `clang++ 12.0.1` takes 25 seconds at `-O1`, but less than a second at `-O0`. Removing one of the arguments resolves the problem with `instcombine`. To verify, I hacked RDF headers to accept `const char*` instead of `string_view`s. This brings down compilation time of `jitted_code.cpp` with `clang++` from 2 minutes to 14s; LLVM `main` takes 20s (from 14 minutes). However, this only solves a small part of the problem in Cling - the time is reduced by 2 minutes, but still around 11 minutes for something that took seconds at `-O0`. Hopefully Enrico's implementation of chunked code is able to solve this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:787,security,hack,hacked,787,"Here's a script to generate a reproducer for the pattern(s) in the RDF code:. <details>. <summary>generate.sh</summary>. . ```sh. #!/bin/sh. N=100. if [ $# -ge 1 ]; then. N=$1. fi. cat <<'EOF'. #include <string_view>. void fn(std::string_view s, const char **ptrs);. void generated() {. EOF. for i in $(seq -w $N); do. echo "" fn(\""x$i\"", new const char *[1] { \""x$i\"" });"". done. echo ""}"". ```. </details>. In short, the combination of temporary `string_view`s and `new`s in a very long function makes the time of `instcombine` explode (for yet unknown reasons). For instance, compiling the output of `generate.sh 10000` with `clang++ 12.0.1` takes 25 seconds at `-O1`, but less than a second at `-O0`. Removing one of the arguments resolves the problem with `instcombine`. To verify, I hacked RDF headers to accept `const char*` instead of `string_view`s. This brings down compilation time of `jitted_code.cpp` with `clang++` from 2 minutes to 14s; LLVM `main` takes 20s (from 14 minutes). However, this only solves a small part of the problem in Cling - the time is reduced by 2 minutes, but still around 11 minutes for something that took seconds at `-O0`. Hopefully Enrico's implementation of chunked code is able to solve this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:777,testability,verif,verify,777,"Here's a script to generate a reproducer for the pattern(s) in the RDF code:. <details>. <summary>generate.sh</summary>. . ```sh. #!/bin/sh. N=100. if [ $# -ge 1 ]; then. N=$1. fi. cat <<'EOF'. #include <string_view>. void fn(std::string_view s, const char **ptrs);. void generated() {. EOF. for i in $(seq -w $N); do. echo "" fn(\""x$i\"", new const char *[1] { \""x$i\"" });"". done. echo ""}"". ```. </details>. In short, the combination of temporary `string_view`s and `new`s in a very long function makes the time of `instcombine` explode (for yet unknown reasons). For instance, compiling the output of `generate.sh 10000` with `clang++ 12.0.1` takes 25 seconds at `-O1`, but less than a second at `-O0`. Removing one of the arguments resolves the problem with `instcombine`. To verify, I hacked RDF headers to accept `const char*` instead of `string_view`s. This brings down compilation time of `jitted_code.cpp` with `clang++` from 2 minutes to 14s; LLVM `main` takes 20s (from 14 minutes). However, this only solves a small part of the problem in Cling - the time is reduced by 2 minutes, but still around 11 minutes for something that took seconds at `-O0`. Hopefully Enrico's implementation of chunked code is able to solve this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:238,integrability,sub,substituted,238,"Uh. The `const char**` were introduced because `std::vector<std::string>` made _O0_ compile times explode, see https://github.com/root-project/root/commit/3c3fd99a671cade7ad9bfbd35cd301f4e299759b . Does it help if `string_view`s are also substituted with `const char *`? I'm working on the chunking.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:92,performance,time,times,92,"Uh. The `const char**` were introduced because `std::vector<std::string>` made _O0_ compile times explode, see https://github.com/root-project/root/commit/3c3fd99a671cade7ad9bfbd35cd301f4e299759b . Does it help if `string_view`s are also substituted with `const char *`? I'm working on the chunking.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:198,reliability,Doe,Does,198,"Uh. The `const char**` were introduced because `std::vector<std::string>` made _O0_ compile times explode, see https://github.com/root-project/root/commit/3c3fd99a671cade7ad9bfbd35cd301f4e299759b . Does it help if `string_view`s are also substituted with `const char *`? I'm working on the chunking.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:206,usability,help,help,206,"Uh. The `const char**` were introduced because `std::vector<std::string>` made _O0_ compile times explode, see https://github.com/root-project/root/commit/3c3fd99a671cade7ad9bfbd35cd301f4e299759b . Does it help if `string_view`s are also substituted with `const char *`? I'm working on the chunking.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:42,integrability,sub,substituted,42,"> Does it help if `string_view`s are also substituted with `const char *`? Yes, that's essentially what I did. However, it's a bit inconvenient because the `std::string_view`s travel all the way into the constructor of `RDefineBase`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2,reliability,Doe,Does,2,"> Does it help if `string_view`s are also substituted with `const char *`? Yes, that's essentially what I did. However, it's a bit inconvenient because the `std::string_view`s travel all the way into the constructor of `RDefineBase`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:10,usability,help,help,10,"> Does it help if `string_view`s are also substituted with `const char *`? Yes, that's essentially what I did. However, it's a bit inconvenient because the `std::string_view`s travel all the way into the constructor of `RDefineBase`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:104,availability,down,down,104,"we just need the `const char *` at that level in the callstack, we can build `string_view`s out of them down the stack. I'll do that asap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:71,deployability,build,build,71,"we just need the `const char *` at that level in the callstack, we can build `string_view`s out of them down the stack. I'll do that asap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:113,deployability,stack,stack,113,"we just need the `const char *` at that level in the callstack, we can build `string_view`s out of them down the stack. I'll do that asap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:120,reliability,doe,doesn,120,"No, unfortunately that's not sufficient because of inlining. Which probably also means that the commit you linked above doesn't work anymore...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:42,availability,down,down,42,"With #9342, JIT time for 10k RDF nodes is down from 33.5s to 12.4s, compared to 8.7s with `-O0`. On Grafana, it's 17s before versus 23s now:. ![Bildschirmfoto vom 2021-12-02 16-58-32](https://user-images.githubusercontent.com/1613332/144457487-c34e166b-179c-4a00-86f5-2c8d35a9857a.png). `perf diff` says:. ```. 0.24% +1.26% libCling.so [.] llvm::AttributeList::hasAttribute. 2.27% +1.22% libc-2.28.so [.] __memcmp_avx2_movbe. 1.76% -1.10% [unknown] [k] 0xffffffff9f603885. 0.03% +0.85% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 2.76% -0.84% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. 0.13% +0.78% libCling.so [.] llvm::Value::getValueName. 1.69% -0.63% libCling.so [.] clang::LookupResult::resolveKind. +0.56% libCling.so [.] AddReachableCodeToWorklist. +0.50% libCling.so [.] llvm::InstCombiner::run. +0.49% libCling.so [.] (anonymous namespace)::DeadMachineInstructionElim::runOnMachineFunction. 1.47% -0.49% libCling.so [.] llvm::SelectionDAG::Combine. 0.01% +0.43% libCling.so [.] llvm::PMDataManager::findAnalysisPass. 0.02% +0.39% libc-2.28.so [.] __memchr_avx2. 0.18% +0.37% libCling.so [.] llvm::ConstantUniqueMap<llvm::ConstantExpr>::getOrCreate. +0.36% libCling.so [.] computeKnownBits. +0.35% libCling.so [.] llvm::SparseSolver<llvm::PointerIntPair<llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > >, (anonymous namespace)::CVPLatticeVal, llvm::LatticeKeyInfo<llvm::PointerIntPair<llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > > > >::visitInst. 0.03% +0.35% libCling.so [.] llvm::CallBase::hasFnAttrOnCalledFunction. 1.15% -0.34% libCling.so [.] llvm::FoldingSetBase::FindNodeOrInsertPos. +0.33% libCling.so [.] llvm::removeUnreachableBlocks. +0.32% libCling.so [.] llvm::hash_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3808,availability,Slo,SlotIndexes,3808,":PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::SelectionDAGISel::ComputeLiveOutVRegInfo. +0.17% libCling.so [.] llvm::InstCombiner::visitCallBase. 0.51% -0.16% libCling.so [.] llvm::ScheduleDAGSDNodes::EmitSchedule. +0.16% libCling.so [.] llvm::SlotIndexes::runOnMachineFunction. 0.03% +0.16% libCling.so [.] llvm::Value::getName. 0.53% -0.16% libCling.so [.] clang::NamedDecl::getUnderlyingDecl. 0.02% +0.16% libCling.so [.] llvm::AttributeList::hasFnAttribute. +0.16% libCling.so [.] llvm::AAResults::pointsToConstantMemory. 1.23% -0.16% libc-2.28.so [.] malloc. ```. Most of this makes sense to me:. * optimization passes check function and parameter attributes that analyses put there. * `instcombine` combines IR instructions, instead of SelectionDAG. * and some other optimizations and analyses. I don't see anything obvious to go faster here. I propose we close this after disabling optimizations in the graphics code (@couet are you taking care of this?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2623,deployability,Build,BuildSchedUnits,2623,"erLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > > > >::visitInst. 0.03% +0.35% libCling.so [.] llvm::CallBase::hasFnAttrOnCalledFunction. 1.15% -0.34% libCling.so [.] llvm::FoldingSetBase::FindNodeOrInsertPos. +0.33% libCling.so [.] llvm::removeUnreachableBlocks. +0.32% libCling.so [.] llvm::hash_combine<llvm::MachineOperand::MachineOperandType, unsigned int, unsigned int, bool>. 0.02% +0.32% libCling.so [.] llvm::Use::getImpliedUser. 0.71% -0.31% libCling.so [.] clang::Decl::castFromDeclContext. 1.01% -0.31% libCling.so [.] llvm::hashing::detail::hash_combine_range_impl<unsigned int const>. 0.79% -0.31% libCling.so [.] llvm::SelectionDAG::AssignTopologicalOrder. +0.29% [JIT] tid 277295 [.] 0x00007fbc9e40e37a. 1.13% -0.28% libCling.so [.] clang::Sema::isModuleVisible. +0.27% libCling.so [.] (anonymous namespace)::PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::SelectionDAGISel::Com",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2603,energy efficiency,Schedul,ScheduleDAGSDNodes,2603,"ouping, llvm::PointerLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > > > >::visitInst. 0.03% +0.35% libCling.so [.] llvm::CallBase::hasFnAttrOnCalledFunction. 1.15% -0.34% libCling.so [.] llvm::FoldingSetBase::FindNodeOrInsertPos. +0.33% libCling.so [.] llvm::removeUnreachableBlocks. +0.32% libCling.so [.] llvm::hash_combine<llvm::MachineOperand::MachineOperandType, unsigned int, unsigned int, bool>. 0.02% +0.32% libCling.so [.] llvm::Use::getImpliedUser. 0.71% -0.31% libCling.so [.] clang::Decl::castFromDeclContext. 1.01% -0.31% libCling.so [.] llvm::hashing::detail::hash_combine_range_impl<unsigned int const>. 0.79% -0.31% libCling.so [.] llvm::SelectionDAG::AssignTopologicalOrder. +0.29% [JIT] tid 277295 [.] 0x00007fbc9e40e37a. 1.13% -0.28% libCling.so [.] clang::Sema::isModuleVisible. +0.27% libCling.so [.] (anonymous namespace)::PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::Se",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3745,energy efficiency,Schedul,ScheduleDAGSDNodes,3745,":PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::SelectionDAGISel::ComputeLiveOutVRegInfo. +0.17% libCling.so [.] llvm::InstCombiner::visitCallBase. 0.51% -0.16% libCling.so [.] llvm::ScheduleDAGSDNodes::EmitSchedule. +0.16% libCling.so [.] llvm::SlotIndexes::runOnMachineFunction. 0.03% +0.16% libCling.so [.] llvm::Value::getName. 0.53% -0.16% libCling.so [.] clang::NamedDecl::getUnderlyingDecl. 0.02% +0.16% libCling.so [.] llvm::AttributeList::hasFnAttribute. +0.16% libCling.so [.] llvm::AAResults::pointsToConstantMemory. 1.23% -0.16% libc-2.28.so [.] malloc. ```. Most of this makes sense to me:. * optimization passes check function and parameter attributes that analyses put there. * `instcombine` combines IR instructions, instead of SelectionDAG. * and some other optimizations and analyses. I don't see anything obvious to go faster here. I propose we close this after disabling optimizations in the graphics code (@couet are you taking care of this?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4168,energy efficiency,optim,optimization,4168,":PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::SelectionDAGISel::ComputeLiveOutVRegInfo. +0.17% libCling.so [.] llvm::InstCombiner::visitCallBase. 0.51% -0.16% libCling.so [.] llvm::ScheduleDAGSDNodes::EmitSchedule. +0.16% libCling.so [.] llvm::SlotIndexes::runOnMachineFunction. 0.03% +0.16% libCling.so [.] llvm::Value::getName. 0.53% -0.16% libCling.so [.] clang::NamedDecl::getUnderlyingDecl. 0.02% +0.16% libCling.so [.] llvm::AttributeList::hasFnAttribute. +0.16% libCling.so [.] llvm::AAResults::pointsToConstantMemory. 1.23% -0.16% libc-2.28.so [.] malloc. ```. Most of this makes sense to me:. * optimization passes check function and parameter attributes that analyses put there. * `instcombine` combines IR instructions, instead of SelectionDAG. * and some other optimizations and analyses. I don't see anything obvious to go faster here. I propose we close this after disabling optimizations in the graphics code (@couet are you taking care of this?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4337,energy efficiency,optim,optimizations,4337,":PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::SelectionDAGISel::ComputeLiveOutVRegInfo. +0.17% libCling.so [.] llvm::InstCombiner::visitCallBase. 0.51% -0.16% libCling.so [.] llvm::ScheduleDAGSDNodes::EmitSchedule. +0.16% libCling.so [.] llvm::SlotIndexes::runOnMachineFunction. 0.03% +0.16% libCling.so [.] llvm::Value::getName. 0.53% -0.16% libCling.so [.] clang::NamedDecl::getUnderlyingDecl. 0.02% +0.16% libCling.so [.] llvm::AttributeList::hasFnAttribute. +0.16% libCling.so [.] llvm::AAResults::pointsToConstantMemory. 1.23% -0.16% libc-2.28.so [.] malloc. ```. Most of this makes sense to me:. * optimization passes check function and parameter attributes that analyses put there. * `instcombine` combines IR instructions, instead of SelectionDAG. * and some other optimizations and analyses. I don't see anything obvious to go faster here. I propose we close this after disabling optimizations in the graphics code (@couet are you taking care of this?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4453,energy efficiency,optim,optimizations,4453,":PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::SelectionDAGISel::ComputeLiveOutVRegInfo. +0.17% libCling.so [.] llvm::InstCombiner::visitCallBase. 0.51% -0.16% libCling.so [.] llvm::ScheduleDAGSDNodes::EmitSchedule. +0.16% libCling.so [.] llvm::SlotIndexes::runOnMachineFunction. 0.03% +0.16% libCling.so [.] llvm::Value::getName. 0.53% -0.16% libCling.so [.] clang::NamedDecl::getUnderlyingDecl. 0.02% +0.16% libCling.so [.] llvm::AttributeList::hasFnAttribute. +0.16% libCling.so [.] llvm::AAResults::pointsToConstantMemory. 1.23% -0.16% libc-2.28.so [.] malloc. ```. Most of this makes sense to me:. * optimization passes check function and parameter attributes that analyses put there. * `instcombine` combines IR instructions, instead of SelectionDAG. * and some other optimizations and analyses. I don't see anything obvious to go faster here. I propose we close this after disabling optimizations in the graphics code (@couet are you taking care of this?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4207,modifiability,paramet,parameter,4207,":PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::SelectionDAGISel::ComputeLiveOutVRegInfo. +0.17% libCling.so [.] llvm::InstCombiner::visitCallBase. 0.51% -0.16% libCling.so [.] llvm::ScheduleDAGSDNodes::EmitSchedule. +0.16% libCling.so [.] llvm::SlotIndexes::runOnMachineFunction. 0.03% +0.16% libCling.so [.] llvm::Value::getName. 0.53% -0.16% libCling.so [.] clang::NamedDecl::getUnderlyingDecl. 0.02% +0.16% libCling.so [.] llvm::AttributeList::hasFnAttribute. +0.16% libCling.so [.] llvm::AAResults::pointsToConstantMemory. 1.23% -0.16% libc-2.28.so [.] malloc. ```. Most of this makes sense to me:. * optimization passes check function and parameter attributes that analyses put there. * `instcombine` combines IR instructions, instead of SelectionDAG. * and some other optimizations and analyses. I don't see anything obvious to go faster here. I propose we close this after disabling optimizations in the graphics code (@couet are you taking care of this?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:16,performance,time,time,16,"With #9342, JIT time for 10k RDF nodes is down from 33.5s to 12.4s, compared to 8.7s with `-O0`. On Grafana, it's 17s before versus 23s now:. ![Bildschirmfoto vom 2021-12-02 16-58-32](https://user-images.githubusercontent.com/1613332/144457487-c34e166b-179c-4a00-86f5-2c8d35a9857a.png). `perf diff` says:. ```. 0.24% +1.26% libCling.so [.] llvm::AttributeList::hasAttribute. 2.27% +1.22% libc-2.28.so [.] __memcmp_avx2_movbe. 1.76% -1.10% [unknown] [k] 0xffffffff9f603885. 0.03% +0.85% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 2.76% -0.84% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. 0.13% +0.78% libCling.so [.] llvm::Value::getValueName. 1.69% -0.63% libCling.so [.] clang::LookupResult::resolveKind. +0.56% libCling.so [.] AddReachableCodeToWorklist. +0.50% libCling.so [.] llvm::InstCombiner::run. +0.49% libCling.so [.] (anonymous namespace)::DeadMachineInstructionElim::runOnMachineFunction. 1.47% -0.49% libCling.so [.] llvm::SelectionDAG::Combine. 0.01% +0.43% libCling.so [.] llvm::PMDataManager::findAnalysisPass. 0.02% +0.39% libc-2.28.so [.] __memchr_avx2. 0.18% +0.37% libCling.so [.] llvm::ConstantUniqueMap<llvm::ConstantExpr>::getOrCreate. +0.36% libCling.so [.] computeKnownBits. +0.35% libCling.so [.] llvm::SparseSolver<llvm::PointerIntPair<llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > >, (anonymous namespace)::CVPLatticeVal, llvm::LatticeKeyInfo<llvm::PointerIntPair<llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > > > >::visitInst. 0.03% +0.35% libCling.so [.] llvm::CallBase::hasFnAttrOnCalledFunction. 1.15% -0.34% libCling.so [.] llvm::FoldingSetBase::FindNodeOrInsertPos. +0.33% libCling.so [.] llvm::removeUnreachableBlocks. +0.32% libCling.so [.] llvm::hash_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2603,performance,Schedul,ScheduleDAGSDNodes,2603,"ouping, llvm::PointerLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > > > >::visitInst. 0.03% +0.35% libCling.so [.] llvm::CallBase::hasFnAttrOnCalledFunction. 1.15% -0.34% libCling.so [.] llvm::FoldingSetBase::FindNodeOrInsertPos. +0.33% libCling.so [.] llvm::removeUnreachableBlocks. +0.32% libCling.so [.] llvm::hash_combine<llvm::MachineOperand::MachineOperandType, unsigned int, unsigned int, bool>. 0.02% +0.32% libCling.so [.] llvm::Use::getImpliedUser. 0.71% -0.31% libCling.so [.] clang::Decl::castFromDeclContext. 1.01% -0.31% libCling.so [.] llvm::hashing::detail::hash_combine_range_impl<unsigned int const>. 0.79% -0.31% libCling.so [.] llvm::SelectionDAG::AssignTopologicalOrder. +0.29% [JIT] tid 277295 [.] 0x00007fbc9e40e37a. 1.13% -0.28% libCling.so [.] clang::Sema::isModuleVisible. +0.27% libCling.so [.] (anonymous namespace)::PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::Se",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3745,performance,Schedul,ScheduleDAGSDNodes,3745,":PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::SelectionDAGISel::ComputeLiveOutVRegInfo. +0.17% libCling.so [.] llvm::InstCombiner::visitCallBase. 0.51% -0.16% libCling.so [.] llvm::ScheduleDAGSDNodes::EmitSchedule. +0.16% libCling.so [.] llvm::SlotIndexes::runOnMachineFunction. 0.03% +0.16% libCling.so [.] llvm::Value::getName. 0.53% -0.16% libCling.so [.] clang::NamedDecl::getUnderlyingDecl. 0.02% +0.16% libCling.so [.] llvm::AttributeList::hasFnAttribute. +0.16% libCling.so [.] llvm::AAResults::pointsToConstantMemory. 1.23% -0.16% libc-2.28.so [.] malloc. ```. Most of this makes sense to me:. * optimization passes check function and parameter attributes that analyses put there. * `instcombine` combines IR instructions, instead of SelectionDAG. * and some other optimizations and analyses. I don't see anything obvious to go faster here. I propose we close this after disabling optimizations in the graphics code (@couet are you taking care of this?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4168,performance,optimiz,optimization,4168,":PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::SelectionDAGISel::ComputeLiveOutVRegInfo. +0.17% libCling.so [.] llvm::InstCombiner::visitCallBase. 0.51% -0.16% libCling.so [.] llvm::ScheduleDAGSDNodes::EmitSchedule. +0.16% libCling.so [.] llvm::SlotIndexes::runOnMachineFunction. 0.03% +0.16% libCling.so [.] llvm::Value::getName. 0.53% -0.16% libCling.so [.] clang::NamedDecl::getUnderlyingDecl. 0.02% +0.16% libCling.so [.] llvm::AttributeList::hasFnAttribute. +0.16% libCling.so [.] llvm::AAResults::pointsToConstantMemory. 1.23% -0.16% libc-2.28.so [.] malloc. ```. Most of this makes sense to me:. * optimization passes check function and parameter attributes that analyses put there. * `instcombine` combines IR instructions, instead of SelectionDAG. * and some other optimizations and analyses. I don't see anything obvious to go faster here. I propose we close this after disabling optimizations in the graphics code (@couet are you taking care of this?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4337,performance,optimiz,optimizations,4337,":PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::SelectionDAGISel::ComputeLiveOutVRegInfo. +0.17% libCling.so [.] llvm::InstCombiner::visitCallBase. 0.51% -0.16% libCling.so [.] llvm::ScheduleDAGSDNodes::EmitSchedule. +0.16% libCling.so [.] llvm::SlotIndexes::runOnMachineFunction. 0.03% +0.16% libCling.so [.] llvm::Value::getName. 0.53% -0.16% libCling.so [.] clang::NamedDecl::getUnderlyingDecl. 0.02% +0.16% libCling.so [.] llvm::AttributeList::hasFnAttribute. +0.16% libCling.so [.] llvm::AAResults::pointsToConstantMemory. 1.23% -0.16% libc-2.28.so [.] malloc. ```. Most of this makes sense to me:. * optimization passes check function and parameter attributes that analyses put there. * `instcombine` combines IR instructions, instead of SelectionDAG. * and some other optimizations and analyses. I don't see anything obvious to go faster here. I propose we close this after disabling optimizations in the graphics code (@couet are you taking care of this?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4453,performance,optimiz,optimizations,4453,":PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::SelectionDAGISel::ComputeLiveOutVRegInfo. +0.17% libCling.so [.] llvm::InstCombiner::visitCallBase. 0.51% -0.16% libCling.so [.] llvm::ScheduleDAGSDNodes::EmitSchedule. +0.16% libCling.so [.] llvm::SlotIndexes::runOnMachineFunction. 0.03% +0.16% libCling.so [.] llvm::Value::getName. 0.53% -0.16% libCling.so [.] clang::NamedDecl::getUnderlyingDecl. 0.02% +0.16% libCling.so [.] llvm::AttributeList::hasFnAttribute. +0.16% libCling.so [.] llvm::AAResults::pointsToConstantMemory. 1.23% -0.16% libc-2.28.so [.] malloc. ```. Most of this makes sense to me:. * optimization passes check function and parameter attributes that analyses put there. * `instcombine` combines IR instructions, instead of SelectionDAG. * and some other optimizations and analyses. I don't see anything obvious to go faster here. I propose we close this after disabling optimizations in the graphics code (@couet are you taking care of this?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3808,reliability,Slo,SlotIndexes,3808,":PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::SelectionDAGISel::ComputeLiveOutVRegInfo. +0.17% libCling.so [.] llvm::InstCombiner::visitCallBase. 0.51% -0.16% libCling.so [.] llvm::ScheduleDAGSDNodes::EmitSchedule. +0.16% libCling.so [.] llvm::SlotIndexes::runOnMachineFunction. 0.03% +0.16% libCling.so [.] llvm::Value::getName. 0.53% -0.16% libCling.so [.] clang::NamedDecl::getUnderlyingDecl. 0.02% +0.16% libCling.so [.] llvm::AttributeList::hasFnAttribute. +0.16% libCling.so [.] llvm::AAResults::pointsToConstantMemory. 1.23% -0.16% libc-2.28.so [.] malloc. ```. Most of this makes sense to me:. * optimization passes check function and parameter attributes that analyses put there. * `instcombine` combines IR instructions, instead of SelectionDAG. * and some other optimizations and analyses. I don't see anything obvious to go faster here. I propose we close this after disabling optimizations in the graphics code (@couet are you taking care of this?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:2239,security,hash,hashing,2239,"libCling.so [.] llvm::SparseSolver<llvm::PointerIntPair<llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > >, (anonymous namespace)::CVPLatticeVal, llvm::LatticeKeyInfo<llvm::PointerIntPair<llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > > > >::visitInst. 0.03% +0.35% libCling.so [.] llvm::CallBase::hasFnAttrOnCalledFunction. 1.15% -0.34% libCling.so [.] llvm::FoldingSetBase::FindNodeOrInsertPos. +0.33% libCling.so [.] llvm::removeUnreachableBlocks. +0.32% libCling.so [.] llvm::hash_combine<llvm::MachineOperand::MachineOperandType, unsigned int, unsigned int, bool>. 0.02% +0.32% libCling.so [.] llvm::Use::getImpliedUser. 0.71% -0.31% libCling.so [.] clang::Decl::castFromDeclContext. 1.01% -0.31% libCling.so [.] llvm::hashing::detail::hash_combine_range_impl<unsigned int const>. 0.79% -0.31% libCling.so [.] llvm::SelectionDAG::AssignTopologicalOrder. +0.29% [JIT] tid 277295 [.] 0x00007fbc9e40e37a. 1.13% -0.28% libCling.so [.] clang::Sema::isModuleVisible. +0.27% libCling.so [.] (anonymous namespace)::PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Va",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:3119,security,hash,hashing,3119,::getImpliedUser. 0.71% -0.31% libCling.so [.] clang::Decl::castFromDeclContext. 1.01% -0.31% libCling.so [.] llvm::hashing::detail::hash_combine_range_impl<unsigned int const>. 0.79% -0.31% libCling.so [.] llvm::SelectionDAG::AssignTopologicalOrder. +0.29% [JIT] tid 277295 [.] 0x00007fbc9e40e37a. 1.13% -0.28% libCling.so [.] clang::Sema::isModuleVisible. +0.27% libCling.so [.] (anonymous namespace)::PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::SelectionDAGISel::ComputeLiveOutVRegInfo. +0.17% libCling.so [.] llvm::InstCombiner::visitCallBase. 0.51% -0.16% libCling.so [.] llvm::ScheduleDAGSDNodes::EmitSchedule. +0.16% libCling.so [.] llvm::SlotIndexes::runOnMachineFunction. 0.03% +0.16% libCling.so [.] llvm::Value::getName. 0.53% -0.16% libCling.so [.] clang::NamedDecl::getUnderlyingDecl. 0.02% +0.16% libCling.so [.] llvm::AttributeList::hasFnAttribute. +0.16% libCling.so [.] llvm::AAResults::pointsToConstantMemory. 1.23% -0.16% libc-2.28.so [.] mal,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:192,usability,user,user-images,192,"With #9342, JIT time for 10k RDF nodes is down from 33.5s to 12.4s, compared to 8.7s with `-O0`. On Grafana, it's 17s before versus 23s now:. ![Bildschirmfoto vom 2021-12-02 16-58-32](https://user-images.githubusercontent.com/1613332/144457487-c34e166b-179c-4a00-86f5-2c8d35a9857a.png). `perf diff` says:. ```. 0.24% +1.26% libCling.so [.] llvm::AttributeList::hasAttribute. 2.27% +1.22% libc-2.28.so [.] __memcmp_avx2_movbe. 1.76% -1.10% [unknown] [k] 0xffffffff9f603885. 0.03% +0.85% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 2.76% -0.84% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. 0.13% +0.78% libCling.so [.] llvm::Value::getValueName. 1.69% -0.63% libCling.so [.] clang::LookupResult::resolveKind. +0.56% libCling.so [.] AddReachableCodeToWorklist. +0.50% libCling.so [.] llvm::InstCombiner::run. +0.49% libCling.so [.] (anonymous namespace)::DeadMachineInstructionElim::runOnMachineFunction. 1.47% -0.49% libCling.so [.] llvm::SelectionDAG::Combine. 0.01% +0.43% libCling.so [.] llvm::PMDataManager::findAnalysisPass. 0.02% +0.39% libc-2.28.so [.] __memchr_avx2. 0.18% +0.37% libCling.so [.] llvm::ConstantUniqueMap<llvm::ConstantExpr>::getOrCreate. +0.36% libCling.so [.] computeKnownBits. +0.35% libCling.so [.] llvm::SparseSolver<llvm::PointerIntPair<llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > >, (anonymous namespace)::CVPLatticeVal, llvm::LatticeKeyInfo<llvm::PointerIntPair<llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > > > >::visitInst. 0.03% +0.35% libCling.so [.] llvm::CallBase::hasFnAttrOnCalledFunction. 1.15% -0.34% libCling.so [.] llvm::FoldingSetBase::FindNodeOrInsertPos. +0.33% libCling.so [.] llvm::removeUnreachableBlocks. +0.32% libCling.so [.] llvm::hash_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:4426,usability,close,close,4426,":PeepholeOptimizer::runOnMachineFunction. 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits. 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList. 0.74% -0.24% libCling.so [.] AddNodeIDNode. 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon. +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock. +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs. +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs. 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72. 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short. 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString. +0.20% libCling.so [.] llvm::Value::stripPointerCasts. +0.19% libCling.so [.] llvm::PointerMayBeCaptured. +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst. +0.18% libCling.so [.] getCalledFunction. +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE. 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace. +0.17% libCling.so [.] llvm::SelectionDAGISel::ComputeLiveOutVRegInfo. +0.17% libCling.so [.] llvm::InstCombiner::visitCallBase. 0.51% -0.16% libCling.so [.] llvm::ScheduleDAGSDNodes::EmitSchedule. +0.16% libCling.so [.] llvm::SlotIndexes::runOnMachineFunction. 0.03% +0.16% libCling.so [.] llvm::Value::getName. 0.53% -0.16% libCling.so [.] clang::NamedDecl::getUnderlyingDecl. 0.02% +0.16% libCling.so [.] llvm::AttributeList::hasFnAttribute. +0.16% libCling.so [.] llvm::AAResults::pointsToConstantMemory. 1.23% -0.16% libc-2.28.so [.] malloc. ```. Most of this makes sense to me:. * optimization passes check function and parameter attributes that analyses put there. * `instcombine` combines IR instructions, instead of SelectionDAG. * and some other optimizations and analyses. I don't see anything obvious to go faster here. I propose we close this after disabling optimizations in the graphics code (@couet are you taking care of this?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:42,energy efficiency,optim,optimizations,42,> I propose we close this after disabling optimizations in the graphics code. see #9467,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:42,performance,optimiz,optimizations,42,> I propose we close this after disabling optimizations in the graphics code. see #9467,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/issues/9312:15,usability,close,close,15,> I propose we close this after disabling optimizations in the graphics code. see #9467,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9312
https://github.com/root-project/root/pull/9313:23,deployability,build,build,23,"Can anyone trigger the build and/or merge the pull request as @jblomer approved the changes. - @couet ,@jblomer ,@eguiraud ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:34,deployability,build,build,34,"Hi @psairammohan ,. I started the build but I think we need the RNTuple devs, @jalopezg-r00t or @jblomer , to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:90,availability,servic,services,90,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:330,availability,servic,services,330,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:482,availability,failur,failures,482,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:90,deployability,servic,services,90,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:142,deployability,build,build,142,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:330,deployability,servic,services,330,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:382,deployability,build,build,382,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:482,deployability,fail,failures,482,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:90,integrability,servic,services,90,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:330,integrability,servic,services,330,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:90,modifiability,servic,services,90,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:330,modifiability,servic,services,330,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:482,performance,failur,failures,482,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:482,reliability,fail,failures,482,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:27,safety,test,test,27,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:155,safety,test,testReport,155,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:188,safety,test,test,188,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:269,safety,test,test,269,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:395,safety,test,testReport,395,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:428,safety,test,test,428,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:27,testability,test,test,27,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:155,testability,test,testReport,155,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:188,testability,test,test,188,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:269,testability,test,test,269,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:395,testability,test,testReport,395,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9313:428,testability,test,test,428,> * [projectroot.tree.tree.test.gtest_tree_tree_test_entrylist_addsublist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_addsublist/). > . > * [projectroot.tree.tree.test.gtest_tree_tree_test_chain_setentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131742/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_chain_setentrylist/). These failures are totally unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9313
https://github.com/root-project/root/pull/9314:26,deployability,patch,patch,26,"From Timur:. _I think the patch is fine, though I’d probably use kCGNullDirectDisplay (https://developer.apple.com/documentation/coregraphics/kcgnulldirectdisplay?language=objc) and is that 0 after all._",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9314
https://github.com/root-project/root/pull/9314:129,energy efficiency,core,coregraphics,129,"From Timur:. _I think the patch is fine, though I’d probably use kCGNullDirectDisplay (https://developer.apple.com/documentation/coregraphics/kcgnulldirectdisplay?language=objc) and is that 0 after all._",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9314
https://github.com/root-project/root/pull/9314:26,safety,patch,patch,26,"From Timur:. _I think the patch is fine, though I’d probably use kCGNullDirectDisplay (https://developer.apple.com/documentation/coregraphics/kcgnulldirectdisplay?language=objc) and is that 0 after all._",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9314
https://github.com/root-project/root/pull/9314:26,security,patch,patch,26,"From Timur:. _I think the patch is fine, though I’d probably use kCGNullDirectDisplay (https://developer.apple.com/documentation/coregraphics/kcgnulldirectdisplay?language=objc) and is that 0 after all._",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9314
https://github.com/root-project/root/pull/9314:115,usability,document,documentation,115,"From Timur:. _I think the patch is fine, though I’d probably use kCGNullDirectDisplay (https://developer.apple.com/documentation/coregraphics/kcgnulldirectdisplay?language=objc) and is that 0 after all._",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9314
https://github.com/root-project/root/pull/9317:45,deployability,patch,patch,45,"BTW, what's missing (it says almost finished patch set in the PR description)? - I could work on that, if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:45,safety,patch,patch,45,"BTW, what's missing (it says almost finished patch set in the PR description)? - I could work on that, if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:45,security,patch,patch,45,"BTW, what's missing (it says almost finished patch set in the PR description)? - I could work on that, if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/pull/9317:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9317
https://github.com/root-project/root/issues/9325:155,energy efficiency,draw,draw,155,"Yes you can zoom in with `SetRangeUser` . That's the goal of this method. To ""zoom out"" you need to define first a Frame with the limits you need and then draw the graph in it. ```. gPad->DrawFrame(...); . graph->Draw(""L""); // no option ""A"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9325
https://github.com/root-project/root/issues/9325:188,energy efficiency,Draw,DrawFrame,188,"Yes you can zoom in with `SetRangeUser` . That's the goal of this method. To ""zoom out"" you need to define first a Frame with the limits you need and then draw the graph in it. ```. gPad->DrawFrame(...); . graph->Draw(""L""); // no option ""A"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9325
https://github.com/root-project/root/issues/9325:213,energy efficiency,Draw,Draw,213,"Yes you can zoom in with `SetRangeUser` . That's the goal of this method. To ""zoom out"" you need to define first a Frame with the limits you need and then draw the graph in it. ```. gPad->DrawFrame(...); . graph->Draw(""L""); // no option ""A"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9325
https://github.com/root-project/root/issues/9325:43,usability,close,closed,43,That solves the issue. I think this can be closed now. Thanks for the quick response.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9325
https://github.com/root-project/root/pull/9327:11,deployability,build,build,11,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dminuit2_omp=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:25,performance,perform,performance-,25,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dminuit2_omp=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:25,usability,perform,performance-,25,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dminuit2_omp=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:0,availability,Failur,Failures,0,"Failures are expected because OpenMP cannot be enabled when using ROOT fitting. It requires a full thread safe implementation of the objective function, and this is not done to cache some quantities such as parameter values or normalization integrals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:0,deployability,Fail,Failures,0,"Failures are expected because OpenMP cannot be enabled when using ROOT fitting. It requires a full thread safe implementation of the objective function, and this is not done to cache some quantities such as parameter values or normalization integrals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:241,deployability,integr,integrals,241,"Failures are expected because OpenMP cannot be enabled when using ROOT fitting. It requires a full thread safe implementation of the objective function, and this is not done to cache some quantities such as parameter values or normalization integrals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:241,integrability,integr,integrals,241,"Failures are expected because OpenMP cannot be enabled when using ROOT fitting. It requires a full thread safe implementation of the objective function, and this is not done to cache some quantities such as parameter values or normalization integrals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:241,interoperability,integr,integrals,241,"Failures are expected because OpenMP cannot be enabled when using ROOT fitting. It requires a full thread safe implementation of the objective function, and this is not done to cache some quantities such as parameter values or normalization integrals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:207,modifiability,paramet,parameter,207,"Failures are expected because OpenMP cannot be enabled when using ROOT fitting. It requires a full thread safe implementation of the objective function, and this is not done to cache some quantities such as parameter values or normalization integrals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:241,modifiability,integr,integrals,241,"Failures are expected because OpenMP cannot be enabled when using ROOT fitting. It requires a full thread safe implementation of the objective function, and this is not done to cache some quantities such as parameter values or normalization integrals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:0,performance,Failur,Failures,0,"Failures are expected because OpenMP cannot be enabled when using ROOT fitting. It requires a full thread safe implementation of the objective function, and this is not done to cache some quantities such as parameter values or normalization integrals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:177,performance,cach,cache,177,"Failures are expected because OpenMP cannot be enabled when using ROOT fitting. It requires a full thread safe implementation of the objective function, and this is not done to cache some quantities such as parameter values or normalization integrals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:0,reliability,Fail,Failures,0,"Failures are expected because OpenMP cannot be enabled when using ROOT fitting. It requires a full thread safe implementation of the objective function, and this is not done to cache some quantities such as parameter values or normalization integrals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:241,reliability,integr,integrals,241,"Failures are expected because OpenMP cannot be enabled when using ROOT fitting. It requires a full thread safe implementation of the objective function, and this is not done to cache some quantities such as parameter values or normalization integrals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:106,safety,safe,safe,106,"Failures are expected because OpenMP cannot be enabled when using ROOT fitting. It requires a full thread safe implementation of the objective function, and this is not done to cache some quantities such as parameter values or normalization integrals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:241,security,integr,integrals,241,"Failures are expected because OpenMP cannot be enabled when using ROOT fitting. It requires a full thread safe implementation of the objective function, and this is not done to cache some quantities such as parameter values or normalization integrals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9327:241,testability,integr,integrals,241,"Failures are expected because OpenMP cannot be enabled when using ROOT fitting. It requires a full thread safe implementation of the objective function, and this is not done to cache some quantities such as parameter values or normalization integrals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9327
https://github.com/root-project/root/pull/9328:47,availability,state,statements,47,"> we only need to make sure that we never have statements spanning more than one line. we control the generation of that code, so that should not happen/tests will break noisily and we can fix them if it happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:47,integrability,state,statements,47,"> we only need to make sure that we never have statements spanning more than one line. we control the generation of that code, so that should not happen/tests will break noisily and we can fix them if it happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:153,safety,test,tests,153,"> we only need to make sure that we never have statements spanning more than one line. we control the generation of that code, so that should not happen/tests will break noisily and we can fix them if it happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:90,security,control,control,90,"> we only need to make sure that we never have statements spanning more than one line. we control the generation of that code, so that should not happen/tests will break noisily and we can fix them if it happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:90,testability,control,control,90,"> we only need to make sure that we never have statements spanning more than one line. we control the generation of that code, so that should not happen/tests will break noisily and we can fix them if it happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:153,testability,test,tests,153,"> we only need to make sure that we never have statements spanning more than one line. we control the generation of that code, so that should not happen/tests will break noisily and we can fix them if it happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:49,availability,state,statements,49,"> > we only need to make sure that we never have statements spanning more than one line. > . > we control the generation of that code, so that should not happen/tests will break noisily and we can fix them if it happens. Yes, they will fail *if* they exceed the threshold of 1000 lines :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:236,deployability,fail,fail,236,"> > we only need to make sure that we never have statements spanning more than one line. > . > we control the generation of that code, so that should not happen/tests will break noisily and we can fix them if it happens. Yes, they will fail *if* they exceed the threshold of 1000 lines :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:49,integrability,state,statements,49,"> > we only need to make sure that we never have statements spanning more than one line. > . > we control the generation of that code, so that should not happen/tests will break noisily and we can fix them if it happens. Yes, they will fail *if* they exceed the threshold of 1000 lines :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:236,reliability,fail,fail,236,"> > we only need to make sure that we never have statements spanning more than one line. > . > we control the generation of that code, so that should not happen/tests will break noisily and we can fix them if it happens. Yes, they will fail *if* they exceed the threshold of 1000 lines :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:161,safety,test,tests,161,"> > we only need to make sure that we never have statements spanning more than one line. > . > we control the generation of that code, so that should not happen/tests will break noisily and we can fix them if it happens. Yes, they will fail *if* they exceed the threshold of 1000 lines :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:98,security,control,control,98,"> > we only need to make sure that we never have statements spanning more than one line. > . > we control the generation of that code, so that should not happen/tests will break noisily and we can fix them if it happens. Yes, they will fail *if* they exceed the threshold of 1000 lines :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:98,testability,control,control,98,"> > we only need to make sure that we never have statements spanning more than one line. > . > we control the generation of that code, so that should not happen/tests will break noisily and we can fix them if it happens. Yes, they will fail *if* they exceed the threshold of 1000 lines :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9328:161,testability,test,tests,161,"> > we only need to make sure that we never have statements spanning more than one line. > . > we control the generation of that code, so that should not happen/tests will break noisily and we can fix them if it happens. Yes, they will fail *if* they exceed the threshold of 1000 lines :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9328
https://github.com/root-project/root/pull/9329:192,energy efficiency,alloc,allocations,192,"@eguiraud this is another idea I had to work around the problem of long functions mixing `std::string_view` and `new`. In my preliminary tests, this improves performance in general (less heap allocations) so it might be worth it in addition to #9328. If that makes sense, I'd like to investigate `std::initializer_list` instead of arrays with a dummy element, but this seems to work for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:149,performance,improves perform,improves performance,149,"@eguiraud this is another idea I had to work around the problem of long functions mixing `std::string_view` and `new`. In my preliminary tests, this improves performance in general (less heap allocations) so it might be worth it in addition to #9328. If that makes sense, I'd like to investigate `std::initializer_list` instead of arrays with a dummy element, but this seems to work for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:137,safety,test,tests,137,"@eguiraud this is another idea I had to work around the problem of long functions mixing `std::string_view` and `new`. In my preliminary tests, this improves performance in general (less heap allocations) so it might be worth it in addition to #9328. If that makes sense, I'd like to investigate `std::initializer_list` instead of arrays with a dummy element, but this seems to work for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:137,testability,test,tests,137,"@eguiraud this is another idea I had to work around the problem of long functions mixing `std::string_view` and `new`. In my preliminary tests, this improves performance in general (less heap allocations) so it might be worth it in addition to #9328. If that makes sense, I'd like to investigate `std::initializer_list` instead of arrays with a dummy element, but this seems to work for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:158,usability,perform,performance,158,"@eguiraud this is another idea I had to work around the problem of long functions mixing `std::string_view` and `new`. In my preliminary tests, this improves performance in general (less heap allocations) so it might be worth it in addition to #9328. If that makes sense, I'd like to investigate `std::initializer_list` instead of arrays with a dummy element, but this seems to work for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:37,deployability,stack,stack,37,"thanks! my only doubt is whether the stack allocations can blow up and cause a stack smash, but i did not have time to think about it well, just a drive-by thought.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:79,deployability,stack,stack,79,"thanks! my only doubt is whether the stack allocations can blow up and cause a stack smash, but i did not have time to think about it well, just a drive-by thought.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:43,energy efficiency,alloc,allocations,43,"thanks! my only doubt is whether the stack allocations can blow up and cause a stack smash, but i did not have time to think about it well, just a drive-by thought.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:111,performance,time,time,111,"thanks! my only doubt is whether the stack allocations can blow up and cause a stack smash, but i did not have time to think about it well, just a drive-by thought.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:39,deployability,stack,stack,39,"> thanks! my only doubt is whether the stack allocations can blow up and cause a stack smash, but i did not have time to think about it well, just a drive-by thought. In principle, the compiler should be able to allocate stack that is large enough for the largest array of names that is ever needed because the memory is only passed to the call and can be reused afterwards. We should probably check if that's a potential problem at `-O0` (I cannot recall), but on the other hand this potential issues is reduced by #9328 compiling smaller functions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:81,deployability,stack,stack,81,"> thanks! my only doubt is whether the stack allocations can blow up and cause a stack smash, but i did not have time to think about it well, just a drive-by thought. In principle, the compiler should be able to allocate stack that is large enough for the largest array of names that is ever needed because the memory is only passed to the call and can be reused afterwards. We should probably check if that's a potential problem at `-O0` (I cannot recall), but on the other hand this potential issues is reduced by #9328 compiling smaller functions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:221,deployability,stack,stack,221,"> thanks! my only doubt is whether the stack allocations can blow up and cause a stack smash, but i did not have time to think about it well, just a drive-by thought. In principle, the compiler should be able to allocate stack that is large enough for the largest array of names that is ever needed because the memory is only passed to the call and can be reused afterwards. We should probably check if that's a potential problem at `-O0` (I cannot recall), but on the other hand this potential issues is reduced by #9328 compiling smaller functions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:45,energy efficiency,alloc,allocations,45,"> thanks! my only doubt is whether the stack allocations can blow up and cause a stack smash, but i did not have time to think about it well, just a drive-by thought. In principle, the compiler should be able to allocate stack that is large enough for the largest array of names that is ever needed because the memory is only passed to the call and can be reused afterwards. We should probably check if that's a potential problem at `-O0` (I cannot recall), but on the other hand this potential issues is reduced by #9328 compiling smaller functions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:212,energy efficiency,alloc,allocate,212,"> thanks! my only doubt is whether the stack allocations can blow up and cause a stack smash, but i did not have time to think about it well, just a drive-by thought. In principle, the compiler should be able to allocate stack that is large enough for the largest array of names that is ever needed because the memory is only passed to the call and can be reused afterwards. We should probably check if that's a potential problem at `-O0` (I cannot recall), but on the other hand this potential issues is reduced by #9328 compiling smaller functions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:505,energy efficiency,reduc,reduced,505,"> thanks! my only doubt is whether the stack allocations can blow up and cause a stack smash, but i did not have time to think about it well, just a drive-by thought. In principle, the compiler should be able to allocate stack that is large enough for the largest array of names that is ever needed because the memory is only passed to the call and can be reused afterwards. We should probably check if that's a potential problem at `-O0` (I cannot recall), but on the other hand this potential issues is reduced by #9328 compiling smaller functions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:356,modifiability,reu,reused,356,"> thanks! my only doubt is whether the stack allocations can blow up and cause a stack smash, but i did not have time to think about it well, just a drive-by thought. In principle, the compiler should be able to allocate stack that is large enough for the largest array of names that is ever needed because the memory is only passed to the call and can be reused afterwards. We should probably check if that's a potential problem at `-O0` (I cannot recall), but on the other hand this potential issues is reduced by #9328 compiling smaller functions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:113,performance,time,time,113,"> thanks! my only doubt is whether the stack allocations can blow up and cause a stack smash, but i did not have time to think about it well, just a drive-by thought. In principle, the compiler should be able to allocate stack that is large enough for the largest array of names that is ever needed because the memory is only passed to the call and can be reused afterwards. We should probably check if that's a potential problem at `-O0` (I cannot recall), but on the other hand this potential issues is reduced by #9328 compiling smaller functions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:311,performance,memor,memory,311,"> thanks! my only doubt is whether the stack allocations can blow up and cause a stack smash, but i did not have time to think about it well, just a drive-by thought. In principle, the compiler should be able to allocate stack that is large enough for the largest array of names that is ever needed because the memory is only passed to the call and can be reused afterwards. We should probably check if that's a potential problem at `-O0` (I cannot recall), but on the other hand this potential issues is reduced by #9328 compiling smaller functions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:311,usability,memor,memory,311,"> thanks! my only doubt is whether the stack allocations can blow up and cause a stack smash, but i did not have time to think about it well, just a drive-by thought. In principle, the compiler should be able to allocate stack that is large enough for the largest array of names that is ever needed because the memory is only passed to the call and can be reused afterwards. We should probably check if that's a potential problem at `-O0` (I cannot recall), but on the other hand this potential issues is reduced by #9328 compiling smaller functions...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:50,usability,confirm,confirm,50,"As per our discussion, on my side we only need to confirm that everything works fine if the list of column names have, say, O(1k) sizes. And we also want to confirm that this is not a pessimization for the O0 case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:157,usability,confirm,confirm,157,"As per our discussion, on my side we only need to confirm that everything works fine if the list of column names have, say, O(1k) sizes. And we also want to confirm that this is not a pessimization for the O0 case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:96,availability,slo,slower,96,"Okay, here's the version with `std::initializer_list`, which I find quite clean and neat but is slower than `master` (after #9342 with `-mllvm -optimize-regalloc=0`):. | | `master` | `std::initializer_list` | `std::initializer_list &&` (is that allowed?!) |. | --- | --- | --- | --- |. | `-O0` | 8.9s | 9.0s | 8.3s |. | `-O1` | 12.5s | 13.5s | 17s |. So not sure if the change is really worth it, and haven't checked stack usage either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:17,deployability,version,version,17,"Okay, here's the version with `std::initializer_list`, which I find quite clean and neat but is slower than `master` (after #9342 with `-mllvm -optimize-regalloc=0`):. | | `master` | `std::initializer_list` | `std::initializer_list &&` (is that allowed?!) |. | --- | --- | --- | --- |. | `-O0` | 8.9s | 9.0s | 8.3s |. | `-O1` | 12.5s | 13.5s | 17s |. So not sure if the change is really worth it, and haven't checked stack usage either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:417,deployability,stack,stack,417,"Okay, here's the version with `std::initializer_list`, which I find quite clean and neat but is slower than `master` (after #9342 with `-mllvm -optimize-regalloc=0`):. | | `master` | `std::initializer_list` | `std::initializer_list &&` (is that allowed?!) |. | --- | --- | --- | --- |. | `-O0` | 8.9s | 9.0s | 8.3s |. | `-O1` | 12.5s | 13.5s | 17s |. So not sure if the change is really worth it, and haven't checked stack usage either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:144,energy efficiency,optim,optimize-regalloc,144,"Okay, here's the version with `std::initializer_list`, which I find quite clean and neat but is slower than `master` (after #9342 with `-mllvm -optimize-regalloc=0`):. | | `master` | `std::initializer_list` | `std::initializer_list &&` (is that allowed?!) |. | --- | --- | --- | --- |. | `-O0` | 8.9s | 9.0s | 8.3s |. | `-O1` | 12.5s | 13.5s | 17s |. So not sure if the change is really worth it, and haven't checked stack usage either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:17,integrability,version,version,17,"Okay, here's the version with `std::initializer_list`, which I find quite clean and neat but is slower than `master` (after #9342 with `-mllvm -optimize-regalloc=0`):. | | `master` | `std::initializer_list` | `std::initializer_list &&` (is that allowed?!) |. | --- | --- | --- | --- |. | `-O0` | 8.9s | 9.0s | 8.3s |. | `-O1` | 12.5s | 13.5s | 17s |. So not sure if the change is really worth it, and haven't checked stack usage either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:17,modifiability,version,version,17,"Okay, here's the version with `std::initializer_list`, which I find quite clean and neat but is slower than `master` (after #9342 with `-mllvm -optimize-regalloc=0`):. | | `master` | `std::initializer_list` | `std::initializer_list &&` (is that allowed?!) |. | --- | --- | --- | --- |. | `-O0` | 8.9s | 9.0s | 8.3s |. | `-O1` | 12.5s | 13.5s | 17s |. So not sure if the change is really worth it, and haven't checked stack usage either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:144,performance,optimiz,optimize-regalloc,144,"Okay, here's the version with `std::initializer_list`, which I find quite clean and neat but is slower than `master` (after #9342 with `-mllvm -optimize-regalloc=0`):. | | `master` | `std::initializer_list` | `std::initializer_list &&` (is that allowed?!) |. | --- | --- | --- | --- |. | `-O0` | 8.9s | 9.0s | 8.3s |. | `-O1` | 12.5s | 13.5s | 17s |. So not sure if the change is really worth it, and haven't checked stack usage either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:96,reliability,slo,slower,96,"Okay, here's the version with `std::initializer_list`, which I find quite clean and neat but is slower than `master` (after #9342 with `-mllvm -optimize-regalloc=0`):. | | `master` | `std::initializer_list` | `std::initializer_list &&` (is that allowed?!) |. | --- | --- | --- | --- |. | `-O0` | 8.9s | 9.0s | 8.3s |. | `-O1` | 12.5s | 13.5s | 17s |. So not sure if the change is really worth it, and haven't checked stack usage either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:1293,deployability,Stack,StackColoring,1293," 16u>, llvm::DenseSet<llvm::AllocaInst*, llvm::DenseMapInfo<llvm::AllocaInst*> > >::TestAndEraseFromSet<llvm::SROA::runImpl(llvm::Function&, llvm::DominatorTree&, llvm::AssumptionCache&)::{lambda(llvm::AllocaInst*)#1}> > >. 0.66% +0.42% [unknown] [k] 0xffffffff9f603885. 1.64% -0.30% libCling.so [.] llvm::SmallPtrSetImplBase::FindBucketFor. +0.26% [JIT] tid 343249 [.] 0x00007f30bea1743e. 0.05% +0.25% libCling.so [.] llvm::SROA::runImpl. 3.49% -0.24% libc-2.28.so [.] __memcmp_avx2_movbe. 0.01% +0.19% libCling.so [.] llvm::MachineRegisterInfo::defusechain_iterator<true, false, true, true, false, false>::defusechain_iterator. 0.34% +0.18% libCling.so [.] llvm::Use::getImpliedUser. 0.97% -0.17% libCling.so [.] llvm::SelectionDAG::Combine. 0.85% -0.17% libCling.so [.] clang::Sema::isModuleVisible. 1.50% +0.17% libCling.so [.] llvm::AttributeList::hasAttribute. 1.92% -0.15% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. +0.15% libCling.so [.] (anonymous namespace)::StackColoring::runOnMachineFunction. 0.49% -0.15% libCling.so [.] llvm::StringMapImpl::LookupBucketFor. 0.45% +0.15% libc-2.28.so [.] unlink_chunk.isra.2. 0.88% -0.15% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 0.50% +0.13% libCling.so [.] llvm::InstCombiner::run. 0.36% +0.12% libCling.so [.] computeKnownBits. 0.39% -0.12% libCling.so [.] (anonymous namespace)::RegAllocFast::runOnMachineFunction. 0.20% +0.12% libCling.so [.] llvm::DataLayout::getAlignment. 0.01% +0.12% libCling.so [.] llvm::Instruction::mayThrow. 0.33% +0.12% libCling.so [.] llvm::removeUnreachableBlocks. 0.91% -0.11% libCling.so [.] llvm::Value::getValueName. +0.11% libCling.so [.] llvm::LiveRange::isLiveAtIndexes. 0.44% -0.11% libCling.so [.] llvm::DAGTypeLegalizer::run. 0.49% -0.11% libCling.so [.] (anonymous namespace)::DeadMachineInstructionElim::runOnMachineFunction. 0.19% +0.11% libCling.so [.] llvm::PointerMayBeCaptured. 0.55% +0.11% libCling.so [.] llvm::ConstantUniqueMap<llvm::ConstantExpr>::getOrCreat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:20,energy efficiency,current,current,20,"`perf diff` between current `master` and this PR:. ```. +0.63% libCling.so [.] (anonymous namespace)::OptimizeLEAPass::removeRedundantLEAs. +0.62% libCling.so [.] std::__remove_if<llvm::AllocaInst**, __gnu_cxx::__ops::_Iter_pred<llvm::SetVector<llvm::AllocaInst*, llvm::SmallVector<llvm::AllocaInst*, 16u>, llvm::DenseSet<llvm::AllocaInst*, llvm::DenseMapInfo<llvm::AllocaInst*> > >::TestAndEraseFromSet<llvm::SROA::runImpl(llvm::Function&, llvm::DominatorTree&, llvm::AssumptionCache&)::{lambda(llvm::AllocaInst*)#1}> > >. 0.66% +0.42% [unknown] [k] 0xffffffff9f603885. 1.64% -0.30% libCling.so [.] llvm::SmallPtrSetImplBase::FindBucketFor. +0.26% [JIT] tid 343249 [.] 0x00007f30bea1743e. 0.05% +0.25% libCling.so [.] llvm::SROA::runImpl. 3.49% -0.24% libc-2.28.so [.] __memcmp_avx2_movbe. 0.01% +0.19% libCling.so [.] llvm::MachineRegisterInfo::defusechain_iterator<true, false, true, true, false, false>::defusechain_iterator. 0.34% +0.18% libCling.so [.] llvm::Use::getImpliedUser. 0.97% -0.17% libCling.so [.] llvm::SelectionDAG::Combine. 0.85% -0.17% libCling.so [.] clang::Sema::isModuleVisible. 1.50% +0.17% libCling.so [.] llvm::AttributeList::hasAttribute. 1.92% -0.15% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. +0.15% libCling.so [.] (anonymous namespace)::StackColoring::runOnMachineFunction. 0.49% -0.15% libCling.so [.] llvm::StringMapImpl::LookupBucketFor. 0.45% +0.15% libc-2.28.so [.] unlink_chunk.isra.2. 0.88% -0.15% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 0.50% +0.13% libCling.so [.] llvm::InstCombiner::run. 0.36% +0.12% libCling.so [.] computeKnownBits. 0.39% -0.12% libCling.so [.] (anonymous namespace)::RegAllocFast::runOnMachineFunction. 0.20% +0.12% libCling.so [.] llvm::DataLayout::getAlignment. 0.01% +0.12% libCling.so [.] llvm::Instruction::mayThrow. 0.33% +0.12% libCling.so [.] llvm::removeUnreachableBlocks. 0.91% -0.11% libCling.so [.] llvm::Value::getValueName. +0.11% libCling.so [.] llvm::LiveRange::isLiveAtIndexes. 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:102,energy efficiency,Optim,OptimizeLEAPass,102,"`perf diff` between current `master` and this PR:. ```. +0.63% libCling.so [.] (anonymous namespace)::OptimizeLEAPass::removeRedundantLEAs. +0.62% libCling.so [.] std::__remove_if<llvm::AllocaInst**, __gnu_cxx::__ops::_Iter_pred<llvm::SetVector<llvm::AllocaInst*, llvm::SmallVector<llvm::AllocaInst*, 16u>, llvm::DenseSet<llvm::AllocaInst*, llvm::DenseMapInfo<llvm::AllocaInst*> > >::TestAndEraseFromSet<llvm::SROA::runImpl(llvm::Function&, llvm::DominatorTree&, llvm::AssumptionCache&)::{lambda(llvm::AllocaInst*)#1}> > >. 0.66% +0.42% [unknown] [k] 0xffffffff9f603885. 1.64% -0.30% libCling.so [.] llvm::SmallPtrSetImplBase::FindBucketFor. +0.26% [JIT] tid 343249 [.] 0x00007f30bea1743e. 0.05% +0.25% libCling.so [.] llvm::SROA::runImpl. 3.49% -0.24% libc-2.28.so [.] __memcmp_avx2_movbe. 0.01% +0.19% libCling.so [.] llvm::MachineRegisterInfo::defusechain_iterator<true, false, true, true, false, false>::defusechain_iterator. 0.34% +0.18% libCling.so [.] llvm::Use::getImpliedUser. 0.97% -0.17% libCling.so [.] llvm::SelectionDAG::Combine. 0.85% -0.17% libCling.so [.] clang::Sema::isModuleVisible. 1.50% +0.17% libCling.so [.] llvm::AttributeList::hasAttribute. 1.92% -0.15% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. +0.15% libCling.so [.] (anonymous namespace)::StackColoring::runOnMachineFunction. 0.49% -0.15% libCling.so [.] llvm::StringMapImpl::LookupBucketFor. 0.45% +0.15% libc-2.28.so [.] unlink_chunk.isra.2. 0.88% -0.15% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 0.50% +0.13% libCling.so [.] llvm::InstCombiner::run. 0.36% +0.12% libCling.so [.] computeKnownBits. 0.39% -0.12% libCling.so [.] (anonymous namespace)::RegAllocFast::runOnMachineFunction. 0.20% +0.12% libCling.so [.] llvm::DataLayout::getAlignment. 0.01% +0.12% libCling.so [.] llvm::Instruction::mayThrow. 0.33% +0.12% libCling.so [.] llvm::removeUnreachableBlocks. 0.91% -0.11% libCling.so [.] llvm::Value::getValueName. +0.11% libCling.so [.] llvm::LiveRange::isLiveAtIndexes. 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:186,energy efficiency,Alloc,AllocaInst,186,"`perf diff` between current `master` and this PR:. ```. +0.63% libCling.so [.] (anonymous namespace)::OptimizeLEAPass::removeRedundantLEAs. +0.62% libCling.so [.] std::__remove_if<llvm::AllocaInst**, __gnu_cxx::__ops::_Iter_pred<llvm::SetVector<llvm::AllocaInst*, llvm::SmallVector<llvm::AllocaInst*, 16u>, llvm::DenseSet<llvm::AllocaInst*, llvm::DenseMapInfo<llvm::AllocaInst*> > >::TestAndEraseFromSet<llvm::SROA::runImpl(llvm::Function&, llvm::DominatorTree&, llvm::AssumptionCache&)::{lambda(llvm::AllocaInst*)#1}> > >. 0.66% +0.42% [unknown] [k] 0xffffffff9f603885. 1.64% -0.30% libCling.so [.] llvm::SmallPtrSetImplBase::FindBucketFor. +0.26% [JIT] tid 343249 [.] 0x00007f30bea1743e. 0.05% +0.25% libCling.so [.] llvm::SROA::runImpl. 3.49% -0.24% libc-2.28.so [.] __memcmp_avx2_movbe. 0.01% +0.19% libCling.so [.] llvm::MachineRegisterInfo::defusechain_iterator<true, false, true, true, false, false>::defusechain_iterator. 0.34% +0.18% libCling.so [.] llvm::Use::getImpliedUser. 0.97% -0.17% libCling.so [.] llvm::SelectionDAG::Combine. 0.85% -0.17% libCling.so [.] clang::Sema::isModuleVisible. 1.50% +0.17% libCling.so [.] llvm::AttributeList::hasAttribute. 1.92% -0.15% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. +0.15% libCling.so [.] (anonymous namespace)::StackColoring::runOnMachineFunction. 0.49% -0.15% libCling.so [.] llvm::StringMapImpl::LookupBucketFor. 0.45% +0.15% libc-2.28.so [.] unlink_chunk.isra.2. 0.88% -0.15% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 0.50% +0.13% libCling.so [.] llvm::InstCombiner::run. 0.36% +0.12% libCling.so [.] computeKnownBits. 0.39% -0.12% libCling.so [.] (anonymous namespace)::RegAllocFast::runOnMachineFunction. 0.20% +0.12% libCling.so [.] llvm::DataLayout::getAlignment. 0.01% +0.12% libCling.so [.] llvm::Instruction::mayThrow. 0.33% +0.12% libCling.so [.] llvm::removeUnreachableBlocks. 0.91% -0.11% libCling.so [.] llvm::Value::getValueName. +0.11% libCling.so [.] llvm::LiveRange::isLiveAtIndexes. 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:251,energy efficiency,Alloc,AllocaInst,251,"`perf diff` between current `master` and this PR:. ```. +0.63% libCling.so [.] (anonymous namespace)::OptimizeLEAPass::removeRedundantLEAs. +0.62% libCling.so [.] std::__remove_if<llvm::AllocaInst**, __gnu_cxx::__ops::_Iter_pred<llvm::SetVector<llvm::AllocaInst*, llvm::SmallVector<llvm::AllocaInst*, 16u>, llvm::DenseSet<llvm::AllocaInst*, llvm::DenseMapInfo<llvm::AllocaInst*> > >::TestAndEraseFromSet<llvm::SROA::runImpl(llvm::Function&, llvm::DominatorTree&, llvm::AssumptionCache&)::{lambda(llvm::AllocaInst*)#1}> > >. 0.66% +0.42% [unknown] [k] 0xffffffff9f603885. 1.64% -0.30% libCling.so [.] llvm::SmallPtrSetImplBase::FindBucketFor. +0.26% [JIT] tid 343249 [.] 0x00007f30bea1743e. 0.05% +0.25% libCling.so [.] llvm::SROA::runImpl. 3.49% -0.24% libc-2.28.so [.] __memcmp_avx2_movbe. 0.01% +0.19% libCling.so [.] llvm::MachineRegisterInfo::defusechain_iterator<true, false, true, true, false, false>::defusechain_iterator. 0.34% +0.18% libCling.so [.] llvm::Use::getImpliedUser. 0.97% -0.17% libCling.so [.] llvm::SelectionDAG::Combine. 0.85% -0.17% libCling.so [.] clang::Sema::isModuleVisible. 1.50% +0.17% libCling.so [.] llvm::AttributeList::hasAttribute. 1.92% -0.15% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. +0.15% libCling.so [.] (anonymous namespace)::StackColoring::runOnMachineFunction. 0.49% -0.15% libCling.so [.] llvm::StringMapImpl::LookupBucketFor. 0.45% +0.15% libc-2.28.so [.] unlink_chunk.isra.2. 0.88% -0.15% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 0.50% +0.13% libCling.so [.] llvm::InstCombiner::run. 0.36% +0.12% libCling.so [.] computeKnownBits. 0.39% -0.12% libCling.so [.] (anonymous namespace)::RegAllocFast::runOnMachineFunction. 0.20% +0.12% libCling.so [.] llvm::DataLayout::getAlignment. 0.01% +0.12% libCling.so [.] llvm::Instruction::mayThrow. 0.33% +0.12% libCling.so [.] llvm::removeUnreachableBlocks. 0.91% -0.11% libCling.so [.] llvm::Value::getValueName. +0.11% libCling.so [.] llvm::LiveRange::isLiveAtIndexes. 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:288,energy efficiency,Alloc,AllocaInst,288,"`perf diff` between current `master` and this PR:. ```. +0.63% libCling.so [.] (anonymous namespace)::OptimizeLEAPass::removeRedundantLEAs. +0.62% libCling.so [.] std::__remove_if<llvm::AllocaInst**, __gnu_cxx::__ops::_Iter_pred<llvm::SetVector<llvm::AllocaInst*, llvm::SmallVector<llvm::AllocaInst*, 16u>, llvm::DenseSet<llvm::AllocaInst*, llvm::DenseMapInfo<llvm::AllocaInst*> > >::TestAndEraseFromSet<llvm::SROA::runImpl(llvm::Function&, llvm::DominatorTree&, llvm::AssumptionCache&)::{lambda(llvm::AllocaInst*)#1}> > >. 0.66% +0.42% [unknown] [k] 0xffffffff9f603885. 1.64% -0.30% libCling.so [.] llvm::SmallPtrSetImplBase::FindBucketFor. +0.26% [JIT] tid 343249 [.] 0x00007f30bea1743e. 0.05% +0.25% libCling.so [.] llvm::SROA::runImpl. 3.49% -0.24% libc-2.28.so [.] __memcmp_avx2_movbe. 0.01% +0.19% libCling.so [.] llvm::MachineRegisterInfo::defusechain_iterator<true, false, true, true, false, false>::defusechain_iterator. 0.34% +0.18% libCling.so [.] llvm::Use::getImpliedUser. 0.97% -0.17% libCling.so [.] llvm::SelectionDAG::Combine. 0.85% -0.17% libCling.so [.] clang::Sema::isModuleVisible. 1.50% +0.17% libCling.so [.] llvm::AttributeList::hasAttribute. 1.92% -0.15% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. +0.15% libCling.so [.] (anonymous namespace)::StackColoring::runOnMachineFunction. 0.49% -0.15% libCling.so [.] llvm::StringMapImpl::LookupBucketFor. 0.45% +0.15% libc-2.28.so [.] unlink_chunk.isra.2. 0.88% -0.15% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 0.50% +0.13% libCling.so [.] llvm::InstCombiner::run. 0.36% +0.12% libCling.so [.] computeKnownBits. 0.39% -0.12% libCling.so [.] (anonymous namespace)::RegAllocFast::runOnMachineFunction. 0.20% +0.12% libCling.so [.] llvm::DataLayout::getAlignment. 0.01% +0.12% libCling.so [.] llvm::Instruction::mayThrow. 0.33% +0.12% libCling.so [.] llvm::removeUnreachableBlocks. 0.91% -0.11% libCling.so [.] llvm::Value::getValueName. +0.11% libCling.so [.] llvm::LiveRange::isLiveAtIndexes. 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:328,energy efficiency,Alloc,AllocaInst,328,"`perf diff` between current `master` and this PR:. ```. +0.63% libCling.so [.] (anonymous namespace)::OptimizeLEAPass::removeRedundantLEAs. +0.62% libCling.so [.] std::__remove_if<llvm::AllocaInst**, __gnu_cxx::__ops::_Iter_pred<llvm::SetVector<llvm::AllocaInst*, llvm::SmallVector<llvm::AllocaInst*, 16u>, llvm::DenseSet<llvm::AllocaInst*, llvm::DenseMapInfo<llvm::AllocaInst*> > >::TestAndEraseFromSet<llvm::SROA::runImpl(llvm::Function&, llvm::DominatorTree&, llvm::AssumptionCache&)::{lambda(llvm::AllocaInst*)#1}> > >. 0.66% +0.42% [unknown] [k] 0xffffffff9f603885. 1.64% -0.30% libCling.so [.] llvm::SmallPtrSetImplBase::FindBucketFor. +0.26% [JIT] tid 343249 [.] 0x00007f30bea1743e. 0.05% +0.25% libCling.so [.] llvm::SROA::runImpl. 3.49% -0.24% libc-2.28.so [.] __memcmp_avx2_movbe. 0.01% +0.19% libCling.so [.] llvm::MachineRegisterInfo::defusechain_iterator<true, false, true, true, false, false>::defusechain_iterator. 0.34% +0.18% libCling.so [.] llvm::Use::getImpliedUser. 0.97% -0.17% libCling.so [.] llvm::SelectionDAG::Combine. 0.85% -0.17% libCling.so [.] clang::Sema::isModuleVisible. 1.50% +0.17% libCling.so [.] llvm::AttributeList::hasAttribute. 1.92% -0.15% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. +0.15% libCling.so [.] (anonymous namespace)::StackColoring::runOnMachineFunction. 0.49% -0.15% libCling.so [.] llvm::StringMapImpl::LookupBucketFor. 0.45% +0.15% libc-2.28.so [.] unlink_chunk.isra.2. 0.88% -0.15% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 0.50% +0.13% libCling.so [.] llvm::InstCombiner::run. 0.36% +0.12% libCling.so [.] computeKnownBits. 0.39% -0.12% libCling.so [.] (anonymous namespace)::RegAllocFast::runOnMachineFunction. 0.20% +0.12% libCling.so [.] llvm::DataLayout::getAlignment. 0.01% +0.12% libCling.so [.] llvm::Instruction::mayThrow. 0.33% +0.12% libCling.so [.] llvm::removeUnreachableBlocks. 0.91% -0.11% libCling.so [.] llvm::Value::getValueName. +0.11% libCling.so [.] llvm::LiveRange::isLiveAtIndexes. 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:366,energy efficiency,Alloc,AllocaInst,366,"`perf diff` between current `master` and this PR:. ```. +0.63% libCling.so [.] (anonymous namespace)::OptimizeLEAPass::removeRedundantLEAs. +0.62% libCling.so [.] std::__remove_if<llvm::AllocaInst**, __gnu_cxx::__ops::_Iter_pred<llvm::SetVector<llvm::AllocaInst*, llvm::SmallVector<llvm::AllocaInst*, 16u>, llvm::DenseSet<llvm::AllocaInst*, llvm::DenseMapInfo<llvm::AllocaInst*> > >::TestAndEraseFromSet<llvm::SROA::runImpl(llvm::Function&, llvm::DominatorTree&, llvm::AssumptionCache&)::{lambda(llvm::AllocaInst*)#1}> > >. 0.66% +0.42% [unknown] [k] 0xffffffff9f603885. 1.64% -0.30% libCling.so [.] llvm::SmallPtrSetImplBase::FindBucketFor. +0.26% [JIT] tid 343249 [.] 0x00007f30bea1743e. 0.05% +0.25% libCling.so [.] llvm::SROA::runImpl. 3.49% -0.24% libc-2.28.so [.] __memcmp_avx2_movbe. 0.01% +0.19% libCling.so [.] llvm::MachineRegisterInfo::defusechain_iterator<true, false, true, true, false, false>::defusechain_iterator. 0.34% +0.18% libCling.so [.] llvm::Use::getImpliedUser. 0.97% -0.17% libCling.so [.] llvm::SelectionDAG::Combine. 0.85% -0.17% libCling.so [.] clang::Sema::isModuleVisible. 1.50% +0.17% libCling.so [.] llvm::AttributeList::hasAttribute. 1.92% -0.15% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. +0.15% libCling.so [.] (anonymous namespace)::StackColoring::runOnMachineFunction. 0.49% -0.15% libCling.so [.] llvm::StringMapImpl::LookupBucketFor. 0.45% +0.15% libc-2.28.so [.] unlink_chunk.isra.2. 0.88% -0.15% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 0.50% +0.13% libCling.so [.] llvm::InstCombiner::run. 0.36% +0.12% libCling.so [.] computeKnownBits. 0.39% -0.12% libCling.so [.] (anonymous namespace)::RegAllocFast::runOnMachineFunction. 0.20% +0.12% libCling.so [.] llvm::DataLayout::getAlignment. 0.01% +0.12% libCling.so [.] llvm::Instruction::mayThrow. 0.33% +0.12% libCling.so [.] llvm::removeUnreachableBlocks. 0.91% -0.11% libCling.so [.] llvm::Value::getValueName. +0.11% libCling.so [.] llvm::LiveRange::isLiveAtIndexes. 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:502,energy efficiency,Alloc,AllocaInst,502,"`perf diff` between current `master` and this PR:. ```. +0.63% libCling.so [.] (anonymous namespace)::OptimizeLEAPass::removeRedundantLEAs. +0.62% libCling.so [.] std::__remove_if<llvm::AllocaInst**, __gnu_cxx::__ops::_Iter_pred<llvm::SetVector<llvm::AllocaInst*, llvm::SmallVector<llvm::AllocaInst*, 16u>, llvm::DenseSet<llvm::AllocaInst*, llvm::DenseMapInfo<llvm::AllocaInst*> > >::TestAndEraseFromSet<llvm::SROA::runImpl(llvm::Function&, llvm::DominatorTree&, llvm::AssumptionCache&)::{lambda(llvm::AllocaInst*)#1}> > >. 0.66% +0.42% [unknown] [k] 0xffffffff9f603885. 1.64% -0.30% libCling.so [.] llvm::SmallPtrSetImplBase::FindBucketFor. +0.26% [JIT] tid 343249 [.] 0x00007f30bea1743e. 0.05% +0.25% libCling.so [.] llvm::SROA::runImpl. 3.49% -0.24% libc-2.28.so [.] __memcmp_avx2_movbe. 0.01% +0.19% libCling.so [.] llvm::MachineRegisterInfo::defusechain_iterator<true, false, true, true, false, false>::defusechain_iterator. 0.34% +0.18% libCling.so [.] llvm::Use::getImpliedUser. 0.97% -0.17% libCling.so [.] llvm::SelectionDAG::Combine. 0.85% -0.17% libCling.so [.] clang::Sema::isModuleVisible. 1.50% +0.17% libCling.so [.] llvm::AttributeList::hasAttribute. 1.92% -0.15% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. +0.15% libCling.so [.] (anonymous namespace)::StackColoring::runOnMachineFunction. 0.49% -0.15% libCling.so [.] llvm::StringMapImpl::LookupBucketFor. 0.45% +0.15% libc-2.28.so [.] unlink_chunk.isra.2. 0.88% -0.15% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 0.50% +0.13% libCling.so [.] llvm::InstCombiner::run. 0.36% +0.12% libCling.so [.] computeKnownBits. 0.39% -0.12% libCling.so [.] (anonymous namespace)::RegAllocFast::runOnMachineFunction. 0.20% +0.12% libCling.so [.] llvm::DataLayout::getAlignment. 0.01% +0.12% libCling.so [.] llvm::Instruction::mayThrow. 0.33% +0.12% libCling.so [.] llvm::removeUnreachableBlocks. 0.91% -0.11% libCling.so [.] llvm::Value::getValueName. +0.11% libCling.so [.] llvm::LiveRange::isLiveAtIndexes. 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:2641,energy efficiency,optim,optimizations,2641," 0.05% +0.25% libCling.so [.] llvm::SROA::runImpl. 3.49% -0.24% libc-2.28.so [.] __memcmp_avx2_movbe. 0.01% +0.19% libCling.so [.] llvm::MachineRegisterInfo::defusechain_iterator<true, false, true, true, false, false>::defusechain_iterator. 0.34% +0.18% libCling.so [.] llvm::Use::getImpliedUser. 0.97% -0.17% libCling.so [.] llvm::SelectionDAG::Combine. 0.85% -0.17% libCling.so [.] clang::Sema::isModuleVisible. 1.50% +0.17% libCling.so [.] llvm::AttributeList::hasAttribute. 1.92% -0.15% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. +0.15% libCling.so [.] (anonymous namespace)::StackColoring::runOnMachineFunction. 0.49% -0.15% libCling.so [.] llvm::StringMapImpl::LookupBucketFor. 0.45% +0.15% libc-2.28.so [.] unlink_chunk.isra.2. 0.88% -0.15% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 0.50% +0.13% libCling.so [.] llvm::InstCombiner::run. 0.36% +0.12% libCling.so [.] computeKnownBits. 0.39% -0.12% libCling.so [.] (anonymous namespace)::RegAllocFast::runOnMachineFunction. 0.20% +0.12% libCling.so [.] llvm::DataLayout::getAlignment. 0.01% +0.12% libCling.so [.] llvm::Instruction::mayThrow. 0.33% +0.12% libCling.so [.] llvm::removeUnreachableBlocks. 0.91% -0.11% libCling.so [.] llvm::Value::getValueName. +0.11% libCling.so [.] llvm::LiveRange::isLiveAtIndexes. 0.44% -0.11% libCling.so [.] llvm::DAGTypeLegalizer::run. 0.49% -0.11% libCling.so [.] (anonymous namespace)::DeadMachineInstructionElim::runOnMachineFunction. 0.19% +0.11% libCling.so [.] llvm::PointerMayBeCaptured. 0.55% +0.11% libCling.so [.] llvm::ConstantUniqueMap<llvm::ConstantExpr>::getOrCreate. 1.14% +0.11% libc-2.28.so [.] _int_malloc. 0.48% -0.10% libCling.so [.] llvm::SelectionDAG::AssignTopologicalOrder. 1.15% -0.10% libCling.so [.] llvm::Attribute::hasAttribute. 0.12% +0.10% libCling.so [.] llvm::wouldInstructionBeTriviallyDead. 1.06% -0.10% libCling.so [.] clang::LookupResult::resolveKind. ```. My interpretation is that optimizations are doing more, for little gain...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:102,performance,Optimiz,OptimizeLEAPass,102,"`perf diff` between current `master` and this PR:. ```. +0.63% libCling.so [.] (anonymous namespace)::OptimizeLEAPass::removeRedundantLEAs. +0.62% libCling.so [.] std::__remove_if<llvm::AllocaInst**, __gnu_cxx::__ops::_Iter_pred<llvm::SetVector<llvm::AllocaInst*, llvm::SmallVector<llvm::AllocaInst*, 16u>, llvm::DenseSet<llvm::AllocaInst*, llvm::DenseMapInfo<llvm::AllocaInst*> > >::TestAndEraseFromSet<llvm::SROA::runImpl(llvm::Function&, llvm::DominatorTree&, llvm::AssumptionCache&)::{lambda(llvm::AllocaInst*)#1}> > >. 0.66% +0.42% [unknown] [k] 0xffffffff9f603885. 1.64% -0.30% libCling.so [.] llvm::SmallPtrSetImplBase::FindBucketFor. +0.26% [JIT] tid 343249 [.] 0x00007f30bea1743e. 0.05% +0.25% libCling.so [.] llvm::SROA::runImpl. 3.49% -0.24% libc-2.28.so [.] __memcmp_avx2_movbe. 0.01% +0.19% libCling.so [.] llvm::MachineRegisterInfo::defusechain_iterator<true, false, true, true, false, false>::defusechain_iterator. 0.34% +0.18% libCling.so [.] llvm::Use::getImpliedUser. 0.97% -0.17% libCling.so [.] llvm::SelectionDAG::Combine. 0.85% -0.17% libCling.so [.] clang::Sema::isModuleVisible. 1.50% +0.17% libCling.so [.] llvm::AttributeList::hasAttribute. 1.92% -0.15% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. +0.15% libCling.so [.] (anonymous namespace)::StackColoring::runOnMachineFunction. 0.49% -0.15% libCling.so [.] llvm::StringMapImpl::LookupBucketFor. 0.45% +0.15% libc-2.28.so [.] unlink_chunk.isra.2. 0.88% -0.15% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 0.50% +0.13% libCling.so [.] llvm::InstCombiner::run. 0.36% +0.12% libCling.so [.] computeKnownBits. 0.39% -0.12% libCling.so [.] (anonymous namespace)::RegAllocFast::runOnMachineFunction. 0.20% +0.12% libCling.so [.] llvm::DataLayout::getAlignment. 0.01% +0.12% libCling.so [.] llvm::Instruction::mayThrow. 0.33% +0.12% libCling.so [.] llvm::removeUnreachableBlocks. 0.91% -0.11% libCling.so [.] llvm::Value::getValueName. +0.11% libCling.so [.] llvm::LiveRange::isLiveAtIndexes. 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:2641,performance,optimiz,optimizations,2641," 0.05% +0.25% libCling.so [.] llvm::SROA::runImpl. 3.49% -0.24% libc-2.28.so [.] __memcmp_avx2_movbe. 0.01% +0.19% libCling.so [.] llvm::MachineRegisterInfo::defusechain_iterator<true, false, true, true, false, false>::defusechain_iterator. 0.34% +0.18% libCling.so [.] llvm::Use::getImpliedUser. 0.97% -0.17% libCling.so [.] llvm::SelectionDAG::Combine. 0.85% -0.17% libCling.so [.] clang::Sema::isModuleVisible. 1.50% +0.17% libCling.so [.] llvm::AttributeList::hasAttribute. 1.92% -0.15% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. +0.15% libCling.so [.] (anonymous namespace)::StackColoring::runOnMachineFunction. 0.49% -0.15% libCling.so [.] llvm::StringMapImpl::LookupBucketFor. 0.45% +0.15% libc-2.28.so [.] unlink_chunk.isra.2. 0.88% -0.15% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 0.50% +0.13% libCling.so [.] llvm::InstCombiner::run. 0.36% +0.12% libCling.so [.] computeKnownBits. 0.39% -0.12% libCling.so [.] (anonymous namespace)::RegAllocFast::runOnMachineFunction. 0.20% +0.12% libCling.so [.] llvm::DataLayout::getAlignment. 0.01% +0.12% libCling.so [.] llvm::Instruction::mayThrow. 0.33% +0.12% libCling.so [.] llvm::removeUnreachableBlocks. 0.91% -0.11% libCling.so [.] llvm::Value::getValueName. +0.11% libCling.so [.] llvm::LiveRange::isLiveAtIndexes. 0.44% -0.11% libCling.so [.] llvm::DAGTypeLegalizer::run. 0.49% -0.11% libCling.so [.] (anonymous namespace)::DeadMachineInstructionElim::runOnMachineFunction. 0.19% +0.11% libCling.so [.] llvm::PointerMayBeCaptured. 0.55% +0.11% libCling.so [.] llvm::ConstantUniqueMap<llvm::ConstantExpr>::getOrCreate. 1.14% +0.11% libc-2.28.so [.] _int_malloc. 0.48% -0.10% libCling.so [.] llvm::SelectionDAG::AssignTopologicalOrder. 1.15% -0.10% libCling.so [.] llvm::Attribute::hasAttribute. 0.12% +0.10% libCling.so [.] llvm::wouldInstructionBeTriviallyDead. 1.06% -0.10% libCling.so [.] clang::LookupResult::resolveKind. ```. My interpretation is that optimizations are doing more, for little gain...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:384,safety,Test,TestAndEraseFromSet,384,"`perf diff` between current `master` and this PR:. ```. +0.63% libCling.so [.] (anonymous namespace)::OptimizeLEAPass::removeRedundantLEAs. +0.62% libCling.so [.] std::__remove_if<llvm::AllocaInst**, __gnu_cxx::__ops::_Iter_pred<llvm::SetVector<llvm::AllocaInst*, llvm::SmallVector<llvm::AllocaInst*, 16u>, llvm::DenseSet<llvm::AllocaInst*, llvm::DenseMapInfo<llvm::AllocaInst*> > >::TestAndEraseFromSet<llvm::SROA::runImpl(llvm::Function&, llvm::DominatorTree&, llvm::AssumptionCache&)::{lambda(llvm::AllocaInst*)#1}> > >. 0.66% +0.42% [unknown] [k] 0xffffffff9f603885. 1.64% -0.30% libCling.so [.] llvm::SmallPtrSetImplBase::FindBucketFor. +0.26% [JIT] tid 343249 [.] 0x00007f30bea1743e. 0.05% +0.25% libCling.so [.] llvm::SROA::runImpl. 3.49% -0.24% libc-2.28.so [.] __memcmp_avx2_movbe. 0.01% +0.19% libCling.so [.] llvm::MachineRegisterInfo::defusechain_iterator<true, false, true, true, false, false>::defusechain_iterator. 0.34% +0.18% libCling.so [.] llvm::Use::getImpliedUser. 0.97% -0.17% libCling.so [.] llvm::SelectionDAG::Combine. 0.85% -0.17% libCling.so [.] clang::Sema::isModuleVisible. 1.50% +0.17% libCling.so [.] llvm::AttributeList::hasAttribute. 1.92% -0.15% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. +0.15% libCling.so [.] (anonymous namespace)::StackColoring::runOnMachineFunction. 0.49% -0.15% libCling.so [.] llvm::StringMapImpl::LookupBucketFor. 0.45% +0.15% libc-2.28.so [.] unlink_chunk.isra.2. 0.88% -0.15% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 0.50% +0.13% libCling.so [.] llvm::InstCombiner::run. 0.36% +0.12% libCling.so [.] computeKnownBits. 0.39% -0.12% libCling.so [.] (anonymous namespace)::RegAllocFast::runOnMachineFunction. 0.20% +0.12% libCling.so [.] llvm::DataLayout::getAlignment. 0.01% +0.12% libCling.so [.] llvm::Instruction::mayThrow. 0.33% +0.12% libCling.so [.] llvm::removeUnreachableBlocks. 0.91% -0.11% libCling.so [.] llvm::Value::getValueName. +0.11% libCling.so [.] llvm::LiveRange::isLiveAtIndexes. 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:384,testability,Test,TestAndEraseFromSet,384,"`perf diff` between current `master` and this PR:. ```. +0.63% libCling.so [.] (anonymous namespace)::OptimizeLEAPass::removeRedundantLEAs. +0.62% libCling.so [.] std::__remove_if<llvm::AllocaInst**, __gnu_cxx::__ops::_Iter_pred<llvm::SetVector<llvm::AllocaInst*, llvm::SmallVector<llvm::AllocaInst*, 16u>, llvm::DenseSet<llvm::AllocaInst*, llvm::DenseMapInfo<llvm::AllocaInst*> > >::TestAndEraseFromSet<llvm::SROA::runImpl(llvm::Function&, llvm::DominatorTree&, llvm::AssumptionCache&)::{lambda(llvm::AllocaInst*)#1}> > >. 0.66% +0.42% [unknown] [k] 0xffffffff9f603885. 1.64% -0.30% libCling.so [.] llvm::SmallPtrSetImplBase::FindBucketFor. +0.26% [JIT] tid 343249 [.] 0x00007f30bea1743e. 0.05% +0.25% libCling.so [.] llvm::SROA::runImpl. 3.49% -0.24% libc-2.28.so [.] __memcmp_avx2_movbe. 0.01% +0.19% libCling.so [.] llvm::MachineRegisterInfo::defusechain_iterator<true, false, true, true, false, false>::defusechain_iterator. 0.34% +0.18% libCling.so [.] llvm::Use::getImpliedUser. 0.97% -0.17% libCling.so [.] llvm::SelectionDAG::Combine. 0.85% -0.17% libCling.so [.] clang::Sema::isModuleVisible. 1.50% +0.17% libCling.so [.] llvm::AttributeList::hasAttribute. 1.92% -0.15% libCling.so [.] (anonymous namespace)::DAGCombiner::AddToWorklist. +0.15% libCling.so [.] (anonymous namespace)::StackColoring::runOnMachineFunction. 0.49% -0.15% libCling.so [.] llvm::StringMapImpl::LookupBucketFor. 0.45% +0.15% libc-2.28.so [.] unlink_chunk.isra.2. 0.88% -0.15% libCling.so [.] llvm::TargetLibraryInfoImpl::getLibFunc. 0.50% +0.13% libCling.so [.] llvm::InstCombiner::run. 0.36% +0.12% libCling.so [.] computeKnownBits. 0.39% -0.12% libCling.so [.] (anonymous namespace)::RegAllocFast::runOnMachineFunction. 0.20% +0.12% libCling.so [.] llvm::DataLayout::getAlignment. 0.01% +0.12% libCling.so [.] llvm::Instruction::mayThrow. 0.33% +0.12% libCling.so [.] llvm::removeUnreachableBlocks. 0.91% -0.11% libCling.so [.] llvm::Value::getValueName. +0.11% libCling.so [.] llvm::LiveRange::isLiveAtIndexes. 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/pull/9329:106,energy efficiency,current,current,106,"I can reproduce the numbers of https://github.com/root-project/root/pull/9329#issuecomment-984670318 with current `master`, so I'm closing this PR as it's not an improvement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9329
https://github.com/root-project/root/issues/9330:196,deployability,version,version,196,I just tried. It is fine for me. A new black canvas is opened and as soon as the mouse is moved on top of the 2Dplot the projection appears in the newly created canvas. I am using the ROOT master version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:196,integrability,version,version,196,I just tried. It is fine for me. A new black canvas is opened and as soon as the mouse is moved on top of the 2Dplot the projection appears in the newly created canvas. I am using the ROOT master version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:196,modifiability,version,version,196,I just tried. It is fine for me. A new black canvas is opened and as soon as the mouse is moved on top of the 2Dplot the projection appears in the newly created canvas. I am using the ROOT master version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:81,usability,mous,mouse,81,I just tried. It is fine for me. A new black canvas is opened and as soon as the mouse is moved on top of the 2Dplot the projection appears in the newly created canvas. I am using the ROOT master version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:9,deployability,instal,install,9,"I cannot install the master easily, but I installed 6.24.06 instead and this TBrowser bug has gone. Yay!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9330:42,deployability,instal,installed,42,"I cannot install the master easily, but I installed 6.24.06 instead and this TBrowser bug has gone. Yay!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9330
https://github.com/root-project/root/issues/9331:74,integrability,buffer,buffer,74,"Yes. The ""Serialized"" part in the function name indicates that the return buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is that doing the swapping at the usage site will avoid one scan through the buffer and ""may"" results in better performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:222,integrability,buffer,buffer,222,"Yes. The ""Serialized"" part in the function name indicates that the return buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is that doing the swapping at the usage site will avoid one scan through the buffer and ""may"" results in better performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:91,modifiability,deco,decompressed,91,"Yes. The ""Serialized"" part in the function name indicates that the return buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is that doing the swapping at the usage site will avoid one scan through the buffer and ""may"" results in better performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:257,performance,perform,performance,257,"Yes. The ""Serialized"" part in the function name indicates that the return buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is that doing the swapping at the usage site will avoid one scan through the buffer and ""may"" results in better performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:195,safety,avoid,avoid,195,"Yes. The ""Serialized"" part in the function name indicates that the return buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is that doing the swapping at the usage site will avoid one scan through the buffer and ""may"" results in better performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:48,usability,indicat,indicates,48,"Yes. The ""Serialized"" part in the function name indicates that the return buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is that doing the swapping at the usage site will avoid one scan through the buffer and ""may"" results in better performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:257,usability,perform,performance,257,"Yes. The ""Serialized"" part in the function name indicates that the return buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is that doing the swapping at the usage site will avoid one scan through the buffer and ""may"" results in better performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:232,integrability,buffer,buffer,232,"ok, i think i finally understand what you meant in the other thread. Ciao,. Giulio. On Wed, Nov 24 2021 at 4:47 PM, Philippe Canal ***@***.***>. wrote:. > Yes. The ""Serialized"" part in the function name indicates that the return. > buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is. > that doing the swapping at the usage site will avoid one scan through the. > buffer and ""may"" results in better performance. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/9331#issuecomment-977999652>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAACSMDFIVEHPPGQQWM32BTUNUCIBANCNFSM5IWMPLXQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:386,integrability,buffer,buffer,386,"ok, i think i finally understand what you meant in the other thread. Ciao,. Giulio. On Wed, Nov 24 2021 at 4:47 PM, Philippe Canal ***@***.***>. wrote:. > Yes. The ""Serialized"" part in the function name indicates that the return. > buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is. > that doing the swapping at the usage site will avoid one scan through the. > buffer and ""may"" results in better performance. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/9331#issuecomment-977999652>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAACSMDFIVEHPPGQQWM32BTUNUCIBANCNFSM5IWMPLXQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:249,modifiability,deco,decompressed,249,"ok, i think i finally understand what you meant in the other thread. Ciao,. Giulio. On Wed, Nov 24 2021 at 4:47 PM, Philippe Canal ***@***.***>. wrote:. > Yes. The ""Serialized"" part in the function name indicates that the return. > buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is. > that doing the swapping at the usage site will avoid one scan through the. > buffer and ""may"" results in better performance. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/9331#issuecomment-977999652>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAACSMDFIVEHPPGQQWM32BTUNUCIBANCNFSM5IWMPLXQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:421,performance,perform,performance,421,"ok, i think i finally understand what you meant in the other thread. Ciao,. Giulio. On Wed, Nov 24 2021 at 4:47 PM, Philippe Canal ***@***.***>. wrote:. > Yes. The ""Serialized"" part in the function name indicates that the return. > buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is. > that doing the swapping at the usage site will avoid one scan through the. > buffer and ""may"" results in better performance. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/9331#issuecomment-977999652>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAACSMDFIVEHPPGQQWM32BTUNUCIBANCNFSM5IWMPLXQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:356,safety,avoid,avoid,356,"ok, i think i finally understand what you meant in the other thread. Ciao,. Giulio. On Wed, Nov 24 2021 at 4:47 PM, Philippe Canal ***@***.***>. wrote:. > Yes. The ""Serialized"" part in the function name indicates that the return. > buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is. > that doing the swapping at the usage site will avoid one scan through the. > buffer and ""may"" results in better performance. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/9331#issuecomment-977999652>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAACSMDFIVEHPPGQQWM32BTUNUCIBANCNFSM5IWMPLXQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:479,security,auth,authored,479,"ok, i think i finally understand what you meant in the other thread. Ciao,. Giulio. On Wed, Nov 24 2021 at 4:47 PM, Philippe Canal ***@***.***>. wrote:. > Yes. The ""Serialized"" part in the function name indicates that the return. > buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is. > that doing the swapping at the usage site will avoid one scan through the. > buffer and ""may"" results in better performance. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/9331#issuecomment-977999652>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAACSMDFIVEHPPGQQWM32BTUNUCIBANCNFSM5IWMPLXQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:695,security,auth,auth,695,"ok, i think i finally understand what you meant in the other thread. Ciao,. Giulio. On Wed, Nov 24 2021 at 4:47 PM, Philippe Canal ***@***.***>. wrote:. > Yes. The ""Serialized"" part in the function name indicates that the return. > buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is. > that doing the swapping at the usage site will avoid one scan through the. > buffer and ""may"" results in better performance. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/9331#issuecomment-977999652>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAACSMDFIVEHPPGQQWM32BTUNUCIBANCNFSM5IWMPLXQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:22,testability,understand,understand,22,"ok, i think i finally understand what you meant in the other thread. Ciao,. Giulio. On Wed, Nov 24 2021 at 4:47 PM, Philippe Canal ***@***.***>. wrote:. > Yes. The ""Serialized"" part in the function name indicates that the return. > buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is. > that doing the swapping at the usage site will avoid one scan through the. > buffer and ""may"" results in better performance. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/9331#issuecomment-977999652>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAACSMDFIVEHPPGQQWM32BTUNUCIBANCNFSM5IWMPLXQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:203,usability,indicat,indicates,203,"ok, i think i finally understand what you meant in the other thread. Ciao,. Giulio. On Wed, Nov 24 2021 at 4:47 PM, Philippe Canal ***@***.***>. wrote:. > Yes. The ""Serialized"" part in the function name indicates that the return. > buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is. > that doing the swapping at the usage site will avoid one scan through the. > buffer and ""may"" results in better performance. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/9331#issuecomment-977999652>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAACSMDFIVEHPPGQQWM32BTUNUCIBANCNFSM5IWMPLXQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/issues/9331:421,usability,perform,performance,421,"ok, i think i finally understand what you meant in the other thread. Ciao,. Giulio. On Wed, Nov 24 2021 at 4:47 PM, Philippe Canal ***@***.***>. wrote:. > Yes. The ""Serialized"" part in the function name indicates that the return. > buffer is ""only"" decompressed but is other-wise ""as-on-file"". The idea is. > that doing the swapping at the usage site will avoid one scan through the. > buffer and ""may"" results in better performance. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/9331#issuecomment-977999652>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAACSMDFIVEHPPGQQWM32BTUNUCIBANCNFSM5IWMPLXQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9331
https://github.com/root-project/root/pull/9333:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9333
https://github.com/root-project/root/pull/9333:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9333
https://github.com/root-project/root/pull/9333:29,availability,operat,operators,29,Looks good to me for the new operators. Thank you very much Lorenzo for adding these ones.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9333
https://github.com/root-project/root/pull/9333:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9333
https://github.com/root-project/root/pull/9333:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9333
https://github.com/root-project/root/issues/9334:67,integrability,Event,Event,67,Fix by @sponce here https://gitlab.cern.ch/lhcb/LHCb/-/blob/master/Event/EventPacker/src/lib/ZSTDCompression.h?ref_type=heads,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9334
https://github.com/root-project/root/issues/9334:73,integrability,Event,EventPacker,73,Fix by @sponce here https://gitlab.cern.ch/lhcb/LHCb/-/blob/master/Event/EventPacker/src/lib/ZSTDCompression.h?ref_type=heads,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9334
https://github.com/root-project/root/issues/9335:44,availability,error,error,44,"Thank you for the comment. Yes there was an error in the code above, it is fixed now. . It is also correct that adding `g.SetSumErrorsMode(TGraphMultiErrors::kSquareSum);` fixes the problem. It is then a question of documentation. I will keep the issue open, but changing its title",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:44,performance,error,error,44,"Thank you for the comment. Yes there was an error in the code above, it is fixed now. . It is also correct that adding `g.SetSumErrorsMode(TGraphMultiErrors::kSquareSum);` fixes the problem. It is then a question of documentation. I will keep the issue open, but changing its title",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:44,safety,error,error,44,"Thank you for the comment. Yes there was an error in the code above, it is fixed now. . It is also correct that adding `g.SetSumErrorsMode(TGraphMultiErrors::kSquareSum);` fixes the problem. It is then a question of documentation. I will keep the issue open, but changing its title",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:44,usability,error,error,44,"Thank you for the comment. Yes there was an error in the code above, it is fixed now. . It is also correct that adding `g.SetSumErrorsMode(TGraphMultiErrors::kSquareSum);` fixes the problem. It is then a question of documentation. I will keep the issue open, but changing its title",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/issues/9335:216,usability,document,documentation,216,"Thank you for the comment. Yes there was an error in the code above, it is fixed now. . It is also correct that adding `g.SetSumErrorsMode(TGraphMultiErrors::kSquareSum);` fixes the problem. It is then a question of documentation. I will keep the issue open, but changing its title",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9335
https://github.com/root-project/root/pull/9338:5,deployability,patch,patch,5,This patch was written by Wouter.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:5,safety,patch,patch,5,This patch was written by Wouter.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:5,security,patch,patch,5,This patch was written by Wouter.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/pull/9338:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9338
https://github.com/root-project/root/issues/9339:33,deployability,contain,contains,33,"In this context, ""Folder"" means ""contains other (T)Objects"", so all `TCollection` return `true` for `IsFolder`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9339
https://github.com/root-project/root/issues/9339:8,testability,context,context,8,"In this context, ""Folder"" means ""contains other (T)Objects"", so all `TCollection` return `true` for `IsFolder`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9339
https://github.com/root-project/root/issues/9339:114,modifiability,Inherit,InheritsFrom,114,"For a `TKey` you can use:. ```. key->TestBit(TKey::kIsDirectoryFile);. ```. For a TObject you can use:. ```. obj->InheritsFrom(TDirectory::Class);. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9339
https://github.com/root-project/root/issues/9339:37,safety,Test,TestBit,37,"For a `TKey` you can use:. ```. key->TestBit(TKey::kIsDirectoryFile);. ```. For a TObject you can use:. ```. obj->InheritsFrom(TDirectory::Class);. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9339
https://github.com/root-project/root/issues/9339:37,testability,Test,TestBit,37,"For a `TKey` you can use:. ```. key->TestBit(TKey::kIsDirectoryFile);. ```. For a TObject you can use:. ```. obj->InheritsFrom(TDirectory::Class);. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9339
https://github.com/root-project/root/issues/9339:13,integrability,interfac,interface,13,"Yes, those 2 interface are accessible/similar in python.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9339
https://github.com/root-project/root/issues/9339:13,interoperability,interfac,interface,13,"Yes, those 2 interface are accessible/similar in python.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9339
https://github.com/root-project/root/issues/9339:13,modifiability,interfac,interface,13,"Yes, those 2 interface are accessible/similar in python.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9339
https://github.com/root-project/root/issues/9339:27,security,access,accessible,27,"Yes, those 2 interface are accessible/similar in python.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9339
https://github.com/root-project/root/pull/9340:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9340
https://github.com/root-project/root/pull/9342:62,energy efficiency,optim,optimize-regalloc,62,"Here are some numbers:. | Test | `-O0` | `-O1` | `-O1 -mllvm -optimize-regalloc=0` |. | --- | --- | --- | --- |. | large RDF graph, 10k nodes | 8.7s | 33.5s | 12.4s |. | compiled `df102` (real/user) | 22s / 46s | 23s / 42s | 22s / 38s |. | compiled `df103`, no IMT | 3.8s | 4.3s | 4.2s |. | `df104` (real/user) | 16s / 1m4s | 17s / 49s | 17s / 54s |. Please note that all numbers are quite noisy due to network etc., but the directions look ok AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:62,performance,optimiz,optimize-regalloc,62,"Here are some numbers:. | Test | `-O0` | `-O1` | `-O1 -mllvm -optimize-regalloc=0` |. | --- | --- | --- | --- |. | large RDF graph, 10k nodes | 8.7s | 33.5s | 12.4s |. | compiled `df102` (real/user) | 22s / 46s | 23s / 42s | 22s / 38s |. | compiled `df103`, no IMT | 3.8s | 4.3s | 4.2s |. | `df104` (real/user) | 16s / 1m4s | 17s / 49s | 17s / 54s |. Please note that all numbers are quite noisy due to network etc., but the directions look ok AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:403,performance,network,network,403,"Here are some numbers:. | Test | `-O0` | `-O1` | `-O1 -mllvm -optimize-regalloc=0` |. | --- | --- | --- | --- |. | large RDF graph, 10k nodes | 8.7s | 33.5s | 12.4s |. | compiled `df102` (real/user) | 22s / 46s | 23s / 42s | 22s / 38s |. | compiled `df103`, no IMT | 3.8s | 4.3s | 4.2s |. | `df104` (real/user) | 16s / 1m4s | 17s / 49s | 17s / 54s |. Please note that all numbers are quite noisy due to network etc., but the directions look ok AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:26,safety,Test,Test,26,"Here are some numbers:. | Test | `-O0` | `-O1` | `-O1 -mllvm -optimize-regalloc=0` |. | --- | --- | --- | --- |. | large RDF graph, 10k nodes | 8.7s | 33.5s | 12.4s |. | compiled `df102` (real/user) | 22s / 46s | 23s / 42s | 22s / 38s |. | compiled `df103`, no IMT | 3.8s | 4.3s | 4.2s |. | `df104` (real/user) | 16s / 1m4s | 17s / 49s | 17s / 54s |. Please note that all numbers are quite noisy due to network etc., but the directions look ok AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:403,security,network,network,403,"Here are some numbers:. | Test | `-O0` | `-O1` | `-O1 -mllvm -optimize-regalloc=0` |. | --- | --- | --- | --- |. | large RDF graph, 10k nodes | 8.7s | 33.5s | 12.4s |. | compiled `df102` (real/user) | 22s / 46s | 23s / 42s | 22s / 38s |. | compiled `df103`, no IMT | 3.8s | 4.3s | 4.2s |. | `df104` (real/user) | 16s / 1m4s | 17s / 49s | 17s / 54s |. Please note that all numbers are quite noisy due to network etc., but the directions look ok AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:26,testability,Test,Test,26,"Here are some numbers:. | Test | `-O0` | `-O1` | `-O1 -mllvm -optimize-regalloc=0` |. | --- | --- | --- | --- |. | large RDF graph, 10k nodes | 8.7s | 33.5s | 12.4s |. | compiled `df102` (real/user) | 22s / 46s | 23s / 42s | 22s / 38s |. | compiled `df103`, no IMT | 3.8s | 4.3s | 4.2s |. | `df104` (real/user) | 16s / 1m4s | 17s / 49s | 17s / 54s |. Please note that all numbers are quite noisy due to network etc., but the directions look ok AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:193,usability,user,user,193,"Here are some numbers:. | Test | `-O0` | `-O1` | `-O1 -mllvm -optimize-regalloc=0` |. | --- | --- | --- | --- |. | large RDF graph, 10k nodes | 8.7s | 33.5s | 12.4s |. | compiled `df102` (real/user) | 22s / 46s | 23s / 42s | 22s / 38s |. | compiled `df103`, no IMT | 3.8s | 4.3s | 4.2s |. | `df104` (real/user) | 16s / 1m4s | 17s / 49s | 17s / 54s |. Please note that all numbers are quite noisy due to network etc., but the directions look ok AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:305,usability,user,user,305,"Here are some numbers:. | Test | `-O0` | `-O1` | `-O1 -mllvm -optimize-regalloc=0` |. | --- | --- | --- | --- |. | large RDF graph, 10k nodes | 8.7s | 33.5s | 12.4s |. | compiled `df102` (real/user) | 22s / 46s | 23s / 42s | 22s / 38s |. | compiled `df103`, no IMT | 3.8s | 4.3s | 4.2s |. | `df104` (real/user) | 16s / 1m4s | 17s / 49s | 17s / 54s |. Please note that all numbers are quite noisy due to network etc., but the directions look ok AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:11,deployability,build,build,11,"@phsft-bot build just on ROOT-performance-centos8-multicore/default, mac1015/python3, windows10/cxx14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:30,performance,perform,performance-,30,"@phsft-bot build just on ROOT-performance-centos8-multicore/default, mac1015/python3, windows10/cxx14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:30,usability,perform,performance-,30,"@phsft-bot build just on ROOT-performance-centos8-multicore/default, mac1015/python3, windows10/cxx14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:51,availability,down,down,51,"Btw, this also helps `stressGraphics` quite a bit, down to 33s from 43s - compared to 19s at `-O0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:15,usability,help,helps,15,"Btw, this also helps `stressGraphics` quite a bit, down to 33s from 43s - compared to 19s at `-O0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:36,availability,failur,failure,36,can ignore the `dataframe_snapshot` failure...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:36,deployability,fail,failure,36,can ignore the `dataframe_snapshot` failure...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:36,performance,failur,failure,36,can ignore the `dataframe_snapshot` failure...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:36,reliability,fail,failure,36,can ignore the `dataframe_snapshot` failure...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:12,availability,failur,failures,12,"The Jenkins failures are either pre-existing or problems with the node configurations (some of which have been fixed in the mean time), so this should be good to go. @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:12,deployability,fail,failures,12,"The Jenkins failures are either pre-existing or problems with the node configurations (some of which have been fixed in the mean time), so this should be good to go. @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:71,deployability,configurat,configurations,71,"The Jenkins failures are either pre-existing or problems with the node configurations (some of which have been fixed in the mean time), so this should be good to go. @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:71,integrability,configur,configurations,71,"The Jenkins failures are either pre-existing or problems with the node configurations (some of which have been fixed in the mean time), so this should be good to go. @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:71,modifiability,configur,configurations,71,"The Jenkins failures are either pre-existing or problems with the node configurations (some of which have been fixed in the mean time), so this should be good to go. @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:12,performance,failur,failures,12,"The Jenkins failures are either pre-existing or problems with the node configurations (some of which have been fixed in the mean time), so this should be good to go. @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:129,performance,time,time,129,"The Jenkins failures are either pre-existing or problems with the node configurations (some of which have been fixed in the mean time), so this should be good to go. @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:12,reliability,fail,failures,12,"The Jenkins failures are either pre-existing or problems with the node configurations (some of which have been fixed in the mean time), so this should be good to go. @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9342:71,security,configur,configurations,71,"The Jenkins failures are either pre-existing or problems with the node configurations (some of which have been fixed in the mean time), so this should be good to go. @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9342
https://github.com/root-project/root/pull/9344:5,availability,failur,failures,5,"Test failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:5,deployability,fail,failures,5,"Test failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:5,performance,failur,failures,5,"Test failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:5,reliability,fail,failures,5,"Test failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:0,safety,Test,Test,0,"Test failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9344:0,testability,Test,Test,0,"Test failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9344
https://github.com/root-project/root/pull/9346:43,safety,review,review,43,"Hi @hageboeck, thank you very much for the review! I have addressed you comments in one fixup commit for each original commit. The comments that were change requests were marked as resolved, the ones that are questions were answered and left open.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:43,testability,review,review,43,"Hi @hageboeck, thank you very much for the review! I have addressed you comments in one fixup commit for each original commit. The comments that were change requests were marked as resolved, the ones that are questions were answered and left open.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:67,usability,document,documentation,67,"Hi @hageboeck, I have now addressed your recent comments about the documentation (see https://github.com/root-project/root/pull/9346#discussion_r758205061).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:15,reliability,alert,alerts,15,"About the LGTM alerts:. * The `matplotlib` import seems unused, but it's necessary. In some environments, matplotlib needs to be imported before pandas plotting functions can be used. * The BaseException thing will be fixed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:15,safety,aler,alerts,15,"About the LGTM alerts:. * The `matplotlib` import seems unused, but it's necessary. In some environments, matplotlib needs to be imported before pandas plotting functions can be used. * The BaseException thing will be fixed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:52,availability,error,error,52,Final force push was just to fix the trivial syntax error also found by the LGTM bot: https://github.com/root-project/root/pull/9346#issuecomment-981608436,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:52,performance,error,error,52,Final force push was just to fix the trivial syntax error also found by the LGTM bot: https://github.com/root-project/root/pull/9346#issuecomment-981608436,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:52,safety,error,error,52,Final force push was just to fix the trivial syntax error also found by the LGTM bot: https://github.com/root-project/root/pull/9346#issuecomment-981608436,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/pull/9346:52,usability,error,error,52,Final force push was just to fix the trivial syntax error also found by the LGTM bot: https://github.com/root-project/root/pull/9346#issuecomment-981608436,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9346
https://github.com/root-project/root/issues/9347:32,interoperability,conflict,conflict,32,@wmyyy It looks like there is a conflict with `C:/Strawberry/perl/bin/pkg-config.bat` (which is not needed). Can you remove `C:\Strawberry\perl\bin\` from the `PATH` and try again?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:17,availability,error,error,17,"@wmyyy BTW, this error comes from the `CMakeLists.txt` of `FREETYE`, not from ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:17,performance,error,error,17,"@wmyyy BTW, this error comes from the `CMakeLists.txt` of `FREETYE`, not from ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:17,safety,error,error,17,"@wmyyy BTW, this error comes from the `CMakeLists.txt` of `FREETYE`, not from ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:17,usability,error,error,17,"@wmyyy BTW, this error comes from the `CMakeLists.txt` of `FREETYE`, not from ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:94,deployability,build,build,94,"@bellenot I have tried to remove C:\Strawberry\perl\bin\ from the PATH, ROOT can successfully build now. Thanks a lot for your helping!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/issues/9347:127,usability,help,helping,127,"@bellenot I have tried to remove C:\Strawberry\perl\bin\ from the PATH, ROOT can successfully build now. Thanks a lot for your helping!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9347
https://github.com/root-project/root/pull/9348:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9348
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build on windows10/cxx14 with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build on windows10/cxx14 with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build on windows10/cxx14 with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:28,deployability,updat,update,28,"@guitargeek @lmoneta Status update since yesterday's meeting:. - I added a README.md. - I fixed building without `roofit_multiprocess` (the problem was bigger than just Windows). - One thing that bugged me during yesterday's meeting was the `zmq.hpp` file that was back in the include directory. Indeed, it turned out it was still being ""installed"" (just copied with a manual command from CMake). I have now disabled this and fixed the include directories. Maybe this will also solve this remaining leaking symbols, but this will have to be thoroughly checked later on. I will rebase this into a separate commit in this PR, since it fixes the cppzmq builtin and is independent of `RooFit` per se. With that (and pending the final CI check that I just activated above): ready for review! If no issues emerge, I will rebase the commits and it is ready to merge, from my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:96,deployability,build,building,96,"@guitargeek @lmoneta Status update since yesterday's meeting:. - I added a README.md. - I fixed building without `roofit_multiprocess` (the problem was bigger than just Windows). - One thing that bugged me during yesterday's meeting was the `zmq.hpp` file that was back in the include directory. Indeed, it turned out it was still being ""installed"" (just copied with a manual command from CMake). I have now disabled this and fixed the include directories. Maybe this will also solve this remaining leaking symbols, but this will have to be thoroughly checked later on. I will rebase this into a separate commit in this PR, since it fixes the cppzmq builtin and is independent of `RooFit` per se. With that (and pending the final CI check that I just activated above): ready for review! If no issues emerge, I will rebase the commits and it is ready to merge, from my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:338,deployability,instal,installed,338,"@guitargeek @lmoneta Status update since yesterday's meeting:. - I added a README.md. - I fixed building without `roofit_multiprocess` (the problem was bigger than just Windows). - One thing that bugged me during yesterday's meeting was the `zmq.hpp` file that was back in the include directory. Indeed, it turned out it was still being ""installed"" (just copied with a manual command from CMake). I have now disabled this and fixed the include directories. Maybe this will also solve this remaining leaking symbols, but this will have to be thoroughly checked later on. I will rebase this into a separate commit in this PR, since it fixes the cppzmq builtin and is independent of `RooFit` per se. With that (and pending the final CI check that I just activated above): ready for review! If no issues emerge, I will rebase the commits and it is ready to merge, from my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:28,safety,updat,update,28,"@guitargeek @lmoneta Status update since yesterday's meeting:. - I added a README.md. - I fixed building without `roofit_multiprocess` (the problem was bigger than just Windows). - One thing that bugged me during yesterday's meeting was the `zmq.hpp` file that was back in the include directory. Indeed, it turned out it was still being ""installed"" (just copied with a manual command from CMake). I have now disabled this and fixed the include directories. Maybe this will also solve this remaining leaking symbols, but this will have to be thoroughly checked later on. I will rebase this into a separate commit in this PR, since it fixes the cppzmq builtin and is independent of `RooFit` per se. With that (and pending the final CI check that I just activated above): ready for review! If no issues emerge, I will rebase the commits and it is ready to merge, from my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:779,safety,review,review,779,"@guitargeek @lmoneta Status update since yesterday's meeting:. - I added a README.md. - I fixed building without `roofit_multiprocess` (the problem was bigger than just Windows). - One thing that bugged me during yesterday's meeting was the `zmq.hpp` file that was back in the include directory. Indeed, it turned out it was still being ""installed"" (just copied with a manual command from CMake). I have now disabled this and fixed the include directories. Maybe this will also solve this remaining leaking symbols, but this will have to be thoroughly checked later on. I will rebase this into a separate commit in this PR, since it fixes the cppzmq builtin and is independent of `RooFit` per se. With that (and pending the final CI check that I just activated above): ready for review! If no issues emerge, I will rebase the commits and it is ready to merge, from my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:28,security,updat,update,28,"@guitargeek @lmoneta Status update since yesterday's meeting:. - I added a README.md. - I fixed building without `roofit_multiprocess` (the problem was bigger than just Windows). - One thing that bugged me during yesterday's meeting was the `zmq.hpp` file that was back in the include directory. Indeed, it turned out it was still being ""installed"" (just copied with a manual command from CMake). I have now disabled this and fixed the include directories. Maybe this will also solve this remaining leaking symbols, but this will have to be thoroughly checked later on. I will rebase this into a separate commit in this PR, since it fixes the cppzmq builtin and is independent of `RooFit` per se. With that (and pending the final CI check that I just activated above): ready for review! If no issues emerge, I will rebase the commits and it is ready to merge, from my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:779,testability,review,review,779,"@guitargeek @lmoneta Status update since yesterday's meeting:. - I added a README.md. - I fixed building without `roofit_multiprocess` (the problem was bigger than just Windows). - One thing that bugged me during yesterday's meeting was the `zmq.hpp` file that was back in the include directory. Indeed, it turned out it was still being ""installed"" (just copied with a manual command from CMake). I have now disabled this and fixed the include directories. Maybe this will also solve this remaining leaking symbols, but this will have to be thoroughly checked later on. I will rebase this into a separate commit in this PR, since it fixes the cppzmq builtin and is independent of `RooFit` per se. With that (and pending the final CI check that I just activated above): ready for review! If no issues emerge, I will rebase the commits and it is ready to merge, from my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:21,usability,Statu,Status,21,"@guitargeek @lmoneta Status update since yesterday's meeting:. - I added a README.md. - I fixed building without `roofit_multiprocess` (the problem was bigger than just Windows). - One thing that bugged me during yesterday's meeting was the `zmq.hpp` file that was back in the include directory. Indeed, it turned out it was still being ""installed"" (just copied with a manual command from CMake). I have now disabled this and fixed the include directories. Maybe this will also solve this remaining leaking symbols, but this will have to be thoroughly checked later on. I will rebase this into a separate commit in this PR, since it fixes the cppzmq builtin and is independent of `RooFit` per se. With that (and pending the final CI check that I just activated above): ready for review! If no issues emerge, I will rebase the commits and it is ready to merge, from my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:376,usability,command,command,376,"@guitargeek @lmoneta Status update since yesterday's meeting:. - I added a README.md. - I fixed building without `roofit_multiprocess` (the problem was bigger than just Windows). - One thing that bugged me during yesterday's meeting was the `zmq.hpp` file that was back in the include directory. Indeed, it turned out it was still being ""installed"" (just copied with a manual command from CMake). I have now disabled this and fixed the include directories. Maybe this will also solve this remaining leaking symbols, but this will have to be thoroughly checked later on. I will rebase this into a separate commit in this PR, since it fixes the cppzmq builtin and is independent of `RooFit` per se. With that (and pending the final CI check that I just activated above): ready for review! If no issues emerge, I will rebase the commits and it is ready to merge, from my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:8,deployability,updat,update,8,"Another update in addition to the one from this morning:. - I now also turned off `roofit_multiprocess` by default, as requested by @amadio. - There was one remaining issue with the cppzmq builtin that caused the centos8 build to fail. This has now also been fixed. So, all done, ready for review and (after rebasing into neat commits) merge!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:221,deployability,build,build,221,"Another update in addition to the one from this morning:. - I now also turned off `roofit_multiprocess` by default, as requested by @amadio. - There was one remaining issue with the cppzmq builtin that caused the centos8 build to fail. This has now also been fixed. So, all done, ready for review and (after rebasing into neat commits) merge!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:230,deployability,fail,fail,230,"Another update in addition to the one from this morning:. - I now also turned off `roofit_multiprocess` by default, as requested by @amadio. - There was one remaining issue with the cppzmq builtin that caused the centos8 build to fail. This has now also been fixed. So, all done, ready for review and (after rebasing into neat commits) merge!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:230,reliability,fail,fail,230,"Another update in addition to the one from this morning:. - I now also turned off `roofit_multiprocess` by default, as requested by @amadio. - There was one remaining issue with the cppzmq builtin that caused the centos8 build to fail. This has now also been fixed. So, all done, ready for review and (after rebasing into neat commits) merge!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:8,safety,updat,update,8,"Another update in addition to the one from this morning:. - I now also turned off `roofit_multiprocess` by default, as requested by @amadio. - There was one remaining issue with the cppzmq builtin that caused the centos8 build to fail. This has now also been fixed. So, all done, ready for review and (after rebasing into neat commits) merge!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:290,safety,review,review,290,"Another update in addition to the one from this morning:. - I now also turned off `roofit_multiprocess` by default, as requested by @amadio. - There was one remaining issue with the cppzmq builtin that caused the centos8 build to fail. This has now also been fixed. So, all done, ready for review and (after rebasing into neat commits) merge!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:8,security,updat,update,8,"Another update in addition to the one from this morning:. - I now also turned off `roofit_multiprocess` by default, as requested by @amadio. - There was one remaining issue with the cppzmq builtin that caused the centos8 build to fail. This has now also been fixed. So, all done, ready for review and (after rebasing into neat commits) merge!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:290,testability,review,review,290,"Another update in addition to the one from this morning:. - I now also turned off `roofit_multiprocess` by default, as requested by @amadio. - There was one remaining issue with the cppzmq builtin that caused the centos8 build to fail. This has now also been fixed. So, all done, ready for review and (after rebasing into neat commits) merge!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:33,energy efficiency,current,current,33,"Please do a proper rebase on the current master, I think this is mixing a lot of earlier changes from previous pull requests and polluting the diff, so it's very hard to review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:170,safety,review,review,170,"Please do a proper rebase on the current master, I think this is mixing a lot of earlier changes from previous pull requests and polluting the diff, so it's very hard to review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:170,testability,review,review,170,"Please do a proper rebase on the current master, I think this is mixing a lot of earlier changes from previous pull requests and polluting the diff, so it's very hard to review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:285,deployability,instal,installation,285,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:321,deployability,instal,installed,321,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:643,deployability,build,building,643,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:899,deployability,build,building,899,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:391,energy efficiency,optim,optimization,391,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:243,interoperability,socket,socket,243,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:829,modifiability,variab,variables,829,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:30,performance,content,content,30,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:391,performance,optimiz,optimization,391,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:462,performance,improves perform,improves performance,462,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:962,safety,review,review,962,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1071,safety,Test,TestStatistics,1071,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:243,security,soc,socket,243,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:71,testability,understand,understand,71,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:962,testability,review,review,962,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:1071,testability,Test,TestStatistics,1071,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:471,usability,perform,performance,471,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket. - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs. - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in. - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio. - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700. - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ. - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion). - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:73,deployability,updat,updated,73,@amadio (and other reviewers): I split up the last commit a bit more and updated the [rebase commit overview in the comment above](https://github.com/root-project/root/pull/9349#issuecomment-984509014).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:19,safety,review,reviewers,19,@amadio (and other reviewers): I split up the last commit a bit more and updated the [rebase commit overview in the comment above](https://github.com/root-project/root/pull/9349#issuecomment-984509014).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:73,safety,updat,updated,73,@amadio (and other reviewers): I split up the last commit a bit more and updated the [rebase commit overview in the comment above](https://github.com/root-project/root/pull/9349#issuecomment-984509014).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:73,security,updat,updated,73,@amadio (and other reviewers): I split up the last commit a bit more and updated the [rebase commit overview in the comment above](https://github.com/root-project/root/pull/9349#issuecomment-984509014).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:19,testability,review,reviewers,19,@amadio (and other reviewers): I split up the last commit a bit more and updated the [rebase commit overview in the comment above](https://github.com/root-project/root/pull/9349#issuecomment-984509014).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:77,availability,servic,services,77,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:385,availability,Error,Error,385,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:743,availability,state,statements,743,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:16,deployability,build,build,16,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:22,deployability,log,logs,22,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:55,deployability,build,build,55,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:77,deployability,servic,services,77,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:129,deployability,build,build,129,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:259,deployability,configurat,configuration,259,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:287,deployability,fail,fails,287,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:351,deployability,log,log,351,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:400,deployability,modul,modules,400,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:532,deployability,Stack,Stack,532,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:619,deployability,build,builds,619,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:689,deployability,configurat,configuration,689,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:77,integrability,servic,services,77,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:259,integrability,configur,configuration,259,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:355,integrability,messag,message,355,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:436,integrability,messag,message,436,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:689,integrability,configur,configuration,689,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:743,integrability,state,statements,743,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:355,interoperability,messag,message,355,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:436,interoperability,messag,message,436,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:77,modifiability,servic,services,77,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:259,modifiability,configur,configuration,259,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:400,modifiability,modul,modules,400,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:689,modifiability,configur,configuration,689,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:385,performance,Error,Error,385,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:287,reliability,fail,fails,287,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:22,safety,log,logs,22,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:351,safety,log,log,351,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:385,safety,Error,Error,385,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:400,safety,modul,modules,400,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:22,security,log,logs,22,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:259,security,configur,configuration,259,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:351,security,log,log,351,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:689,security,configur,configuration,689,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:22,testability,log,logs,22,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:351,testability,log,log,351,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:385,usability,Error,Error,385,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:496,usability,support,supported,496,"As seen in the [build logs for the most recent Windows build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131507/console) ([this thread comment](https://github.com/root-project/root/pull/9349#issuecomment-984563179)), the Windows configuration now correctly fails when trying to manually set `roofit_multiprocess=ON` with log message:. ```. 13:01:05 CMake Error at cmake/modules/RootBuildOptions.cmake:353 (message):. 13:01:05 >>> Option 'roofit_multiprocess' is not supported on Windows. 13:01:05 Call Stack (most recent call first):. 13:01:05 CMakeLists.txt:157 (include). ```. The other builds run as previously (they are not affected by the changes in the configuration, which only takes out `WIN32` from `if` statements). I will now fixup rebase the two commits into the 8 main commits of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:109,availability,failur,failure,109,"Building successfully with flags `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` (Windows failure is as expected, since we set it to error when activating `roofit_multiprocess`):. <img width=""1013"" alt=""Schermafbeelding 2021-12-02 om 19 43 32"" src=""https://user-images.githubusercontent.com/6146598/144483512-a27c7ef9-09ea-4abd-a318-5ce36d6430cd.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:152,availability,error,error,152,"Building successfully with flags `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` (Windows failure is as expected, since we set it to error when activating `roofit_multiprocess`):. <img width=""1013"" alt=""Schermafbeelding 2021-12-02 om 19 43 32"" src=""https://user-images.githubusercontent.com/6146598/144483512-a27c7ef9-09ea-4abd-a318-5ce36d6430cd.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:0,deployability,Build,Building,0,"Building successfully with flags `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` (Windows failure is as expected, since we set it to error when activating `roofit_multiprocess`):. <img width=""1013"" alt=""Schermafbeelding 2021-12-02 om 19 43 32"" src=""https://user-images.githubusercontent.com/6146598/144483512-a27c7ef9-09ea-4abd-a318-5ce36d6430cd.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:109,deployability,fail,failure,109,"Building successfully with flags `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` (Windows failure is as expected, since we set it to error when activating `roofit_multiprocess`):. <img width=""1013"" alt=""Schermafbeelding 2021-12-02 om 19 43 32"" src=""https://user-images.githubusercontent.com/6146598/144483512-a27c7ef9-09ea-4abd-a318-5ce36d6430cd.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:109,performance,failur,failure,109,"Building successfully with flags `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` (Windows failure is as expected, since we set it to error when activating `roofit_multiprocess`):. <img width=""1013"" alt=""Schermafbeelding 2021-12-02 om 19 43 32"" src=""https://user-images.githubusercontent.com/6146598/144483512-a27c7ef9-09ea-4abd-a318-5ce36d6430cd.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:152,performance,error,error,152,"Building successfully with flags `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` (Windows failure is as expected, since we set it to error when activating `roofit_multiprocess`):. <img width=""1013"" alt=""Schermafbeelding 2021-12-02 om 19 43 32"" src=""https://user-images.githubusercontent.com/6146598/144483512-a27c7ef9-09ea-4abd-a318-5ce36d6430cd.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:109,reliability,fail,failure,109,"Building successfully with flags `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` (Windows failure is as expected, since we set it to error when activating `roofit_multiprocess`):. <img width=""1013"" alt=""Schermafbeelding 2021-12-02 om 19 43 32"" src=""https://user-images.githubusercontent.com/6146598/144483512-a27c7ef9-09ea-4abd-a318-5ce36d6430cd.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:152,safety,error,error,152,"Building successfully with flags `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` (Windows failure is as expected, since we set it to error when activating `roofit_multiprocess`):. <img width=""1013"" alt=""Schermafbeelding 2021-12-02 om 19 43 32"" src=""https://user-images.githubusercontent.com/6146598/144483512-a27c7ef9-09ea-4abd-a318-5ce36d6430cd.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:152,usability,error,error,152,"Building successfully with flags `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` (Windows failure is as expected, since we set it to error when activating `roofit_multiprocess`):. <img width=""1013"" alt=""Schermafbeelding 2021-12-02 om 19 43 32"" src=""https://user-images.githubusercontent.com/6146598/144483512-a27c7ef9-09ea-4abd-a318-5ce36d6430cd.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:276,usability,user,user-images,276,"Building successfully with flags `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` (Windows failure is as expected, since we set it to error when activating `roofit_multiprocess`):. <img width=""1013"" alt=""Schermafbeelding 2021-12-02 om 19 43 32"" src=""https://user-images.githubusercontent.com/6146598/144483512-a27c7ef9-09ea-4abd-a318-5ce36d6430cd.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9349:11,deployability,build,build,11,@phsft-bot build with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9349
https://github.com/root-project/root/pull/9351:11,deployability,build,build,11,@phsft-bot build just on mac1015/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9351
https://github.com/root-project/root/pull/9352:72,availability,sli,slides,72,"Thanks, I was just about to put the link to the tutorials into the ACAT slides :D. Does the Python translation also need to be updated?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:127,deployability,updat,updated,127,"Thanks, I was just about to put the link to the tutorials into the ACAT slides :D. Does the Python translation also need to be updated?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:99,integrability,translat,translation,99,"Thanks, I was just about to put the link to the tutorials into the ACAT slides :D. Does the Python translation also need to be updated?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:99,interoperability,translat,translation,99,"Thanks, I was just about to put the link to the tutorials into the ACAT slides :D. Does the Python translation also need to be updated?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:72,reliability,sli,slides,72,"Thanks, I was just about to put the link to the tutorials into the ACAT slides :D. Does the Python translation also need to be updated?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:83,reliability,Doe,Does,83,"Thanks, I was just about to put the link to the tutorials into the ACAT slides :D. Does the Python translation also need to be updated?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:127,safety,updat,updated,127,"Thanks, I was just about to put the link to the tutorials into the ACAT slides :D. Does the Python translation also need to be updated?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:127,security,updat,updated,127,"Thanks, I was just about to put the link to the tutorials into the ACAT slides :D. Does the Python translation also need to be updated?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:46,deployability,updat,updated,46,"> Does the Python translation also need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:18,integrability,translat,translation,18,"> Does the Python translation also need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:18,interoperability,translat,translation,18,"> Does the Python translation also need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:76,performance,time,time,76,"> Does the Python translation also need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:2,reliability,Doe,Does,2,"> Does the Python translation also need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:46,safety,updat,updated,46,"> Does the Python translation also need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:46,security,updat,updated,46,"> Does the Python translation also need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:92,security,access,accesses,92,"> Does the Python translation also need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:128,testability,context,context,128,"> Does the Python translation also need to be updated? Yes, if you have the time. - It also accesses the global RNGs from an MT context. - The printing is also done in a loop, and could theoretically go into a function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:84,deployability,version,version,84,"@guitargeek I suggest you approve, and I merge. We can open a ticket for the Python version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:84,integrability,version,version,84,"@guitargeek I suggest you approve, and I merge. We can open a ticket for the Python version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/pull/9352:84,modifiability,version,version,84,"@guitargeek I suggest you approve, and I merge. We can open a ticket for the Python version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9352
https://github.com/root-project/root/issues/9354:577,availability,error,error,577,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:989,availability,down,down,989,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1177,availability,Error,Error,1177,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1240,availability,error,error,1240,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:232,deployability,Fail,Failed,232,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:280,deployability,build,build,280,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:584,deployability,Fail,Failed,584,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:690,deployability,build,build,690,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:734,deployability,Releas,Release,734,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:841,deployability,FAIL,FAILED,841,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1076,deployability,FAIL,FAILED,1076,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1110,deployability,FAIL,FAILED,1110,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1158,deployability,FAIL,FAILED,1158,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1197,deployability,build,build,1197,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:535,energy efficiency,core,core,535,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:652,energy efficiency,Load,LoadPCM,652,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1229,integrability,messag,message,1229,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1229,interoperability,messag,message,1229,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:577,performance,error,error,577,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:652,performance,Load,LoadPCM,652,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1177,performance,Error,Error,1177,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1240,performance,error,error,1240,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:232,reliability,Fail,Failed,232,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:584,reliability,Fail,Failed,584,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:612,reliability,diagno,diagnostic,612,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:779,reliability,doe,does,779,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:841,reliability,FAIL,FAILED,841,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1076,reliability,FAIL,FAILED,1076,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1110,reliability,FAIL,FAILED,1110,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1158,reliability,FAIL,FAILED,1158,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:118,safety,Test,Test,118,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:372,safety,test,test,372,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:384,safety,test,test,384,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:416,safety,test,test,416,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:456,safety,test,test,456,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:540,safety,test,testsupport,540,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:556,safety,Test,TestSupport,556,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:577,safety,error,error,577,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:822,safety,Test,TestSupport,822,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:909,safety,test,test,909,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:967,safety,test,test,967,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1010,safety,test,test,1010,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1022,safety,test,test,1022,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1067,safety,test,tests,1067,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1087,safety,test,test,1087,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1165,safety,TEST,TEST,1165,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1177,safety,Error,Error,1177,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1240,safety,error,error,1240,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:118,testability,Test,Test,118,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:372,testability,test,test,372,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:384,testability,test,test,384,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:416,testability,test,test,416,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:456,testability,test,test,456,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:540,testability,test,testsupport,540,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:556,testability,Test,TestSupport,556,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:612,testability,diagno,diagnostic,612,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:822,testability,Test,TestSupport,822,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:909,testability,test,test,909,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:967,testability,test,test,967,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1010,testability,test,test,1010,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1022,testability,test,test,1022,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1067,testability,test,tests,1067,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1087,testability,test,test,1087,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1165,testability,TEST,TEST,1165,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:495,usability,Custom,CustomReadRuleWithSpace,495,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:577,usability,error,error,577,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:860,usability,Custom,CustomReadRuleWithSpace,860,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1129,usability,Custom,CustomReadRuleWithSpace,1129,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1177,usability,Error,Error,1177,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1240,usability,error,error,1240,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:. ```. 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec. Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. [==========] Running 1 test from 1 test suite. [----------] Global test environment set-up. [----------] 1 test from ReadRules. [ RUN ] ReadRules.CustomReadRuleWithSpace. C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed. Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'. Suppress those using ROOT/TestSupport.hxx. [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms). [----------] 1 test from ReadRules (883 ms total). . [----------] Global test environment tear-down. [==========] 1 test from 1 test suite ran. (883 ms total). [ PASSED ] 0 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] ReadRules.CustomReadRuleWithSpace. . 1 FAILED TEST. CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):. error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1929,availability,Error,Error,1929,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2275,availability,down,down,2275,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:46,deployability,build,build,46,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:130,deployability,Updat,UpdateCTestConfiguration,130,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:173,deployability,build,build,173,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:251,deployability,build,build,251,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:341,deployability,Updat,UpdateCTestConfiguration,341,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:384,deployability,build,build,384,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:462,deployability,build,build,462,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:535,deployability,build,build,535,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:790,deployability,Updat,Updating,790,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:881,deployability,depend,dependency,881,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:915,deployability,depend,dependency,915,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1116,deployability,build,build,1116,"egression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1236,deployability,build,build,1236,"C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [-----",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1319,deployability,build,build,1319,"gular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test sui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1363,deployability,build,build,1363,"from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1448,deployability,build,build,1448,":/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh144",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1640,deployability,build,build,1640,"ng-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1975,deployability,build,build,1975,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2619,deployability,fail,failed,2619,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:12,energy efficiency,current,current,12,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1946,energy efficiency,Load,LoadPCM,1946,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:881,integrability,depend,dependency,881,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:915,integrability,depend,dependency,915,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:881,modifiability,depend,dependency,881,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:915,modifiability,depend,dependency,915,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1530,modifiability,variab,variables,1530,"build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1572,performance,time,timeout,1572,"list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1929,performance,Error,Error,1929,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1946,performance,Load,LoadPCM,1946,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2647,performance,time,time,2647,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2090,reliability,doe,does,2090,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2619,reliability,fail,failed,2619,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:130,safety,Updat,UpdateCTestConfiguration,130,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:341,safety,Updat,UpdateCTestConfiguration,341,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:510,safety,Test,Test,510,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:584,safety,test,tests,584,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:598,safety,test,test,598,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:604,safety,test,test-tcollex,604,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:625,safety,test,test,625,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:672,safety,test,test,672,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:712,safety,test,test,712,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:783,safety,test,tests,783,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:790,safety,Updat,Updating,790,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:799,safety,test,test,799,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:831,safety,test,tests,831,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:876,safety,test,test,876,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:881,safety,depend,dependency,881,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:910,safety,test,test,910,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:915,safety,depend,dependency,915,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:937,safety,test,test,937,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1044,safety,Test,Test,1044,"build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1567,safety,Test,Test,1567,"ting a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1572,safety,timeout,timeout,1572,"list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1757,safety,test,test,1757," constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1769,safety,test,test,1769,"g a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM sh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1807,safety,test,test,1807,"for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1853,safety,test,test,1853,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1929,safety,Error,Error,1929,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2184,safety,test,test,2184,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2253,safety,test,test,2253,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2302,safety,test,test,2302,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2314,safety,test,test,2314,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2365,safety,test,test,2365,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2375,safety,Test,Test,2375,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2499,safety,test,tests,2499,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2597,safety,test,tests,2597,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2613,safety,test,tests,2613,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2642,safety,Test,Test,2642,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2743,safety,compl,complaining,2743,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2799,safety,test,test,2799,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:130,security,Updat,UpdateCTestConfiguration,130,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:341,security,Updat,UpdateCTestConfiguration,341,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:790,security,Updat,Updating,790,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2743,security,compl,complaining,2743,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:303,testability,coverag,coverage,303,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:510,testability,Test,Test,510,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:584,testability,test,tests,584,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:598,testability,test,test,598,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:604,testability,test,test-tcollex,604,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:625,testability,test,test,625,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:672,testability,test,test,672,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:712,testability,test,test,712,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:783,testability,test,tests,783,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:799,testability,test,test,799,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:831,testability,test,tests,831,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:876,testability,test,test,876,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:881,testability,depend,dependency,881,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:910,testability,test,test,910,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:915,testability,depend,dependency,915,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:937,testability,test,test,937,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1044,testability,Test,Test,1044,"build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1567,testability,Test,Test,1567,"ting a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1757,testability,test,test,1757," constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1769,testability,test,test,1769,"g a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM sh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1807,testability,test,test,1807,"for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1853,testability,test,test,1853,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2184,testability,test,test,2184,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2253,testability,test,test,2253,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2302,testability,test,test,2302,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2314,testability,test,test,2314,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2365,testability,test,test,2365,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2375,testability,Test,Test,2375,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2499,testability,test,tests,2499,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2597,testability,test,tests,2597,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2613,testability,test,tests,2613,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2642,testability,Test,Test,2642,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2799,testability,test,test,2799,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:20,usability,statu,status,20,"Here is the current status:. ```. C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1049,usability,command,command,1049,"64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Add coverage exclude regular expressions. UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl. Test project C:/root-dev/build/x64/relwithdebinfo. Constructing a list of tests. Ignore test: test-tcollex. Ignore test: roottest-cling-parsing-semicolon. Ignore test: roottest-root-rint-TabCom. Ignore test: roottest-root-rint-BackslashNewline. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1898,usability,Custom,CustomReadRuleWithSpace,1898,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:1929,usability,Error,Error,1929,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2129,usability,Custom,CustomReadRuleWithSpace,2129,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9354:2737,usability,stop,stops,2737,"requirements. Checking test dependency graph... Checking test dependency graph end. test 2338. Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake"". 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462. 2338: Environment variables:. 2338: ROOT_HIST=0. 2338: Test timeout computed to be: 1500. 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc. 2338: [==========] Running 1 test from 1 test suite. 2338: [----------] Global test environment set-up. 2338: [----------] 1 test from ReadRules. 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace. 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebinfo\roottest\root\tree\readrules\gh-14462\RelWithDebInfo\gh14462regressionDict_rdict.pcm file does not exist. 2338: [ OK ] ReadRules.CustomReadRuleWithSpace (317 ms). 2338: [----------] 1 test from ReadRules (317 ms total). 2338:. 2338: [----------] Global test environment tear-down. 2338: [==========] 1 test from 1 test suite ran. (317 ms total). 2338: [ PASSED ] 1 test. 1/1 Test #2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression ... Passed 0.41 sec. The following tests passed:. gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 0.92 sec. ```. But it's correct. When moving the PCM at the right place, it stops complaining (i.e. the PCM should be copied/moved to the test binary output directory. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9354
https://github.com/root-project/root/issues/9362:33,energy efficiency,draw,drawing,33,Another problem with candle plot drawing is so-called `kMedianNotched`. . For low_stat histograms they make output:. ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). Additional fix will be provided to the PR to get:. ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:140,usability,user,user-images,140,Another problem with candle plot drawing is so-called `kMedianNotched`. . For low_stat histograms they make output:. ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). Additional fix will be provided to the PR to get:. ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:310,usability,user,user-images,310,Another problem with candle plot drawing is so-called `kMedianNotched`. . For low_stat histograms they make output:. ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). Additional fix will be provided to the PR to get:. ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:14,security,auth,author,14,I emailed the author of the code: georg.troska@uni-dortmund.de,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:879,availability,error,error,879,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:456,deployability,patch,patching,456,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:961,deployability,patch,patch,961,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:35,energy efficiency,draw,drawing,35,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:892,energy efficiency,draw,drawn,892,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:879,performance,error,error,879,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:1115,performance,time,time,1115,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:456,safety,patch,patching,456,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:591,safety,except,except,591,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:879,safety,error,error,879,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:961,safety,patch,patch,961,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:456,security,patch,patching,456,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:961,security,patch,patch,961,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:146,usability,user,user-images,146,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:328,usability,user,user-images,328,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:762,usability,indicat,indicate,762,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:775,usability,user,user,775,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/issues/9362:879,usability,error,error,879,"> Another problem with candle plot drawing is so-called `kMedianNotched`. For low_stat histograms they make output:. > . > ![candle_bad2](https://user-images.githubusercontent.com/4936580/144408739-c4f9f694-c674-4b36-95dc-c9b6b43646b0.png). > . > Additional fix will be provided to the PR to get:. > . > ![candle4_good](https://user-images.githubusercontent.com/4936580/144409065-a64ec073-f342-4a15-b931-fd7042d0853b.png). @linev . Dear Sergey, thanks for patching... The low statistics stuff at the notched candles were actually meant seriously! I used the definition of the candle-charts (except the default candle1, because it was there before) from a definition made by cornerstone. Here the candles (here they are called box-plots) show this crazy shape to indicate the user: ""you should use more statistics"". I would highly recommend to keep this crazy look (otherwise the error is not drawn correctly). @couet . 1. Some years ago I wrote a fully working patch for the editor, so that one can change candle-settings very well. Can't we put it in? 2. There was an open bug when using zoom, did someone had the time to fix it? Thanks. Georg.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9362
https://github.com/root-project/root/pull/9363:0,availability,ping,ping,0,ping @georgtroska,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9363
https://github.com/root-project/root/pull/9363:105,interoperability,specif,specify,105,"> what was the original problem regarding the horizontal candle? It is decoding of the options. . If one specify options `candley(100000000)`, `kHorizontal` will be add twice to `fOption`, leading to wrong settings",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9363
https://github.com/root-project/root/pull/9363:71,modifiability,deco,decoding,71,"> what was the original problem regarding the horizontal candle? It is decoding of the options. . If one specify options `candley(100000000)`, `kHorizontal` will be add twice to `fOption`, leading to wrong settings",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9363
https://github.com/root-project/root/issues/9364:166,availability,avail,available,166,"This problem has been already reported in https://sft.its.cern.ch/jira/browse/ROOT-8085. We need to have a new implementation of TH1::GetQuantiles, extending what is available in `TMath::Quantiles` for weighted data set.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9364
https://github.com/root-project/root/issues/9364:148,modifiability,exten,extending,148,"This problem has been already reported in https://sft.its.cern.ch/jira/browse/ROOT-8085. We need to have a new implementation of TH1::GetQuantiles, extending what is available in `TMath::Quantiles` for weighted data set.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9364
https://github.com/root-project/root/issues/9364:166,reliability,availab,available,166,"This problem has been already reported in https://sft.its.cern.ch/jira/browse/ROOT-8085. We need to have a new implementation of TH1::GetQuantiles, extending what is available in `TMath::Quantiles` for weighted data set.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9364
https://github.com/root-project/root/issues/9364:166,safety,avail,available,166,"This problem has been already reported in https://sft.its.cern.ch/jira/browse/ROOT-8085. We need to have a new implementation of TH1::GetQuantiles, extending what is available in `TMath::Quantiles` for weighted data set.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9364
https://github.com/root-project/root/issues/9364:166,security,availab,available,166,"This problem has been already reported in https://sft.its.cern.ch/jira/browse/ROOT-8085. We need to have a new implementation of TH1::GetQuantiles, extending what is available in `TMath::Quantiles` for weighted data set.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9364
https://github.com/root-project/root/issues/9364:52,testability,simpl,simple,52,"Yes, it is same problem. Actually, solution is very simple and I implement it with JSROOT. . One can copy it to the C++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9364
https://github.com/root-project/root/issues/9364:52,usability,simpl,simple,52,"Yes, it is same problem. Actually, solution is very simple and I implement it with JSROOT. . One can copy it to the C++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9364
https://github.com/root-project/root/issues/9364:23,usability,close,close,23,"Duplicates JIRA issue, close here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9364
https://github.com/root-project/root/issues/9366:93,availability,error,errors,93,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:445,deployability,depend,depends,445,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:652,deployability,continu,continuing,652,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:309,integrability,schema,schema,309,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:445,integrability,depend,depends,445,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:445,modifiability,depend,depends,445,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:93,performance,error,errors,93,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:528,performance,I/O,I/O,528,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:240,reliability,doe,does,240,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:603,reliability,diagno,diagnose,603,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:93,safety,error,errors,93,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:445,safety,depend,depends,445,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:630,safety,except,exception,630,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:445,testability,depend,depends,445,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:603,testability,diagno,diagnose,603,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:93,usability,error,errors,93,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:758,usability,minim,minimal,758,"As a first quick reply, along the lines of our private discussion on the forum: if there are errors like those you mention printed on screen during the processing, indeed you can expect the output to not be all ok. In particular RDataFrame does not deal well with disappearing/reappearing branches. The TTree schema is expected to be constant across the whole dataset being processed. I am not 100% what the effect will be in this case, it also depends on how TTreeReader, TChain and TTree (which RDataFrame uses internally for I/O) react in these cases. With that said RDataFrame should do its best to diagnose this and throw an exception rather than continuing the processing until the end. Please provide a recipe to reproduce the problem (e.g. dataset + minimal code) so we can debug further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:53,usability,minim,minimal,53,"Hi @ShirinGolpayeganiCern , can you please provide a minimal reproducer for the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:248,availability,error,error,248,"> Hi @ShirinGolpayeganiCern , can you please provide a minimal reproducer for the issue? Hi again and happy holidays,. I unfortunately have never used root to create ttrees, i only use the provided data for analysis. One easy way to reproduce this error, is to use tchain to read from various events and ttrees of root files, and the importance is that some contain some branches while others dont. And then take snapshot from the whole thing. I now know for sure it is a bug, because as soon as i saved some columns only , the error disappeared and the results were back to normal .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:528,availability,error,error,528,"> Hi @ShirinGolpayeganiCern , can you please provide a minimal reproducer for the issue? Hi again and happy holidays,. I unfortunately have never used root to create ttrees, i only use the provided data for analysis. One easy way to reproduce this error, is to use tchain to read from various events and ttrees of root files, and the importance is that some contain some branches while others dont. And then take snapshot from the whole thing. I now know for sure it is a bug, because as soon as i saved some columns only , the error disappeared and the results were back to normal .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:358,deployability,contain,contain,358,"> Hi @ShirinGolpayeganiCern , can you please provide a minimal reproducer for the issue? Hi again and happy holidays,. I unfortunately have never used root to create ttrees, i only use the provided data for analysis. One easy way to reproduce this error, is to use tchain to read from various events and ttrees of root files, and the importance is that some contain some branches while others dont. And then take snapshot from the whole thing. I now know for sure it is a bug, because as soon as i saved some columns only , the error disappeared and the results were back to normal .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:293,integrability,event,events,293,"> Hi @ShirinGolpayeganiCern , can you please provide a minimal reproducer for the issue? Hi again and happy holidays,. I unfortunately have never used root to create ttrees, i only use the provided data for analysis. One easy way to reproduce this error, is to use tchain to read from various events and ttrees of root files, and the importance is that some contain some branches while others dont. And then take snapshot from the whole thing. I now know for sure it is a bug, because as soon as i saved some columns only , the error disappeared and the results were back to normal .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:248,performance,error,error,248,"> Hi @ShirinGolpayeganiCern , can you please provide a minimal reproducer for the issue? Hi again and happy holidays,. I unfortunately have never used root to create ttrees, i only use the provided data for analysis. One easy way to reproduce this error, is to use tchain to read from various events and ttrees of root files, and the importance is that some contain some branches while others dont. And then take snapshot from the whole thing. I now know for sure it is a bug, because as soon as i saved some columns only , the error disappeared and the results were back to normal .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:528,performance,error,error,528,"> Hi @ShirinGolpayeganiCern , can you please provide a minimal reproducer for the issue? Hi again and happy holidays,. I unfortunately have never used root to create ttrees, i only use the provided data for analysis. One easy way to reproduce this error, is to use tchain to read from various events and ttrees of root files, and the importance is that some contain some branches while others dont. And then take snapshot from the whole thing. I now know for sure it is a bug, because as soon as i saved some columns only , the error disappeared and the results were back to normal .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:248,safety,error,error,248,"> Hi @ShirinGolpayeganiCern , can you please provide a minimal reproducer for the issue? Hi again and happy holidays,. I unfortunately have never used root to create ttrees, i only use the provided data for analysis. One easy way to reproduce this error, is to use tchain to read from various events and ttrees of root files, and the importance is that some contain some branches while others dont. And then take snapshot from the whole thing. I now know for sure it is a bug, because as soon as i saved some columns only , the error disappeared and the results were back to normal .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:528,safety,error,error,528,"> Hi @ShirinGolpayeganiCern , can you please provide a minimal reproducer for the issue? Hi again and happy holidays,. I unfortunately have never used root to create ttrees, i only use the provided data for analysis. One easy way to reproduce this error, is to use tchain to read from various events and ttrees of root files, and the importance is that some contain some branches while others dont. And then take snapshot from the whole thing. I now know for sure it is a bug, because as soon as i saved some columns only , the error disappeared and the results were back to normal .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:55,usability,minim,minimal,55,"> Hi @ShirinGolpayeganiCern , can you please provide a minimal reproducer for the issue? Hi again and happy holidays,. I unfortunately have never used root to create ttrees, i only use the provided data for analysis. One easy way to reproduce this error, is to use tchain to read from various events and ttrees of root files, and the importance is that some contain some branches while others dont. And then take snapshot from the whole thing. I now know for sure it is a bug, because as soon as i saved some columns only , the error disappeared and the results were back to normal .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:248,usability,error,error,248,"> Hi @ShirinGolpayeganiCern , can you please provide a minimal reproducer for the issue? Hi again and happy holidays,. I unfortunately have never used root to create ttrees, i only use the provided data for analysis. One easy way to reproduce this error, is to use tchain to read from various events and ttrees of root files, and the importance is that some contain some branches while others dont. And then take snapshot from the whole thing. I now know for sure it is a bug, because as soon as i saved some columns only , the error disappeared and the results were back to normal .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:528,usability,error,error,528,"> Hi @ShirinGolpayeganiCern , can you please provide a minimal reproducer for the issue? Hi again and happy holidays,. I unfortunately have never used root to create ttrees, i only use the provided data for analysis. One easy way to reproduce this error, is to use tchain to read from various events and ttrees of root files, and the importance is that some contain some branches while others dont. And then take snapshot from the whole thing. I now know for sure it is a bug, because as soon as i saved some columns only , the error disappeared and the results were back to normal .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:37,reliability,doe,does,37,"Hi,. as I mentioned above RDataFrame does not support disappearing/reappearing branches, so I don't doubt that the behavior in this case is broken/incorrect/surprising. I would like to improve the diagnostics for your case (your point number 2.), but for that I would need a reproducer. Otherwise this falls under the umbrella of #8704 . Regarding points 1. and 3., that should already be the case: if you don't read or write the branches that disappear/reappear, there should be no problem -- and it's possible to do so by passing the list of columns to write explicitly to Snapshot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:197,reliability,diagno,diagnostics,197,"Hi,. as I mentioned above RDataFrame does not support disappearing/reappearing branches, so I don't doubt that the behavior in this case is broken/incorrect/surprising. I would like to improve the diagnostics for your case (your point number 2.), but for that I would need a reproducer. Otherwise this falls under the umbrella of #8704 . Regarding points 1. and 3., that should already be the case: if you don't read or write the branches that disappear/reappear, there should be no problem -- and it's possible to do so by passing the list of columns to write explicitly to Snapshot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:197,testability,diagno,diagnostics,197,"Hi,. as I mentioned above RDataFrame does not support disappearing/reappearing branches, so I don't doubt that the behavior in this case is broken/incorrect/surprising. I would like to improve the diagnostics for your case (your point number 2.), but for that I would need a reproducer. Otherwise this falls under the umbrella of #8704 . Regarding points 1. and 3., that should already be the case: if you don't read or write the branches that disappear/reappear, there should be no problem -- and it's possible to do so by passing the list of columns to write explicitly to Snapshot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:46,usability,support,support,46,"Hi,. as I mentioned above RDataFrame does not support disappearing/reappearing branches, so I don't doubt that the behavior in this case is broken/incorrect/surprising. I would like to improve the diagnostics for your case (your point number 2.), but for that I would need a reproducer. Otherwise this falls under the umbrella of #8704 . Regarding points 1. and 3., that should already be the case: if you don't read or write the branches that disappear/reappear, there should be no problem -- and it's possible to do so by passing the list of columns to write explicitly to Snapshot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:115,usability,behavi,behavior,115,"Hi,. as I mentioned above RDataFrame does not support disappearing/reappearing branches, so I don't doubt that the behavior in this case is broken/incorrect/surprising. I would like to improve the diagnostics for your case (your point number 2.), but for that I would need a reproducer. Otherwise this falls under the umbrella of #8704 . Regarding points 1. and 3., that should already be the case: if you don't read or write the branches that disappear/reappear, there should be no problem -- and it's possible to do so by passing the list of columns to write explicitly to Snapshot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:541,availability,error,error,541,"Hey again,. I think it is a big problem, because I and some colleagues are using the snapshot method to save the root files so later one we will plot from them, however, if many events are not recorded accordingly, our root files are also be wring, this issue costed me a few months and many people don't even recognize they are missing events since they have not used alternative methods to save and plot. Many people wont be using the column list to save all the columns because we save many columns,. And it is appreciated if there is an error stating the consequences at least. I have told you the name of the datasets I have used earlier and the problematic ones, however, as I said, I have never used root to create data. I honestly thought that creating some .txt or .csv file to be saved as nto root files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:178,integrability,event,events,178,"Hey again,. I think it is a big problem, because I and some colleagues are using the snapshot method to save the root files so later one we will plot from them, however, if many events are not recorded accordingly, our root files are also be wring, this issue costed me a few months and many people don't even recognize they are missing events since they have not used alternative methods to save and plot. Many people wont be using the column list to save all the columns because we save many columns,. And it is appreciated if there is an error stating the consequences at least. I have told you the name of the datasets I have used earlier and the problematic ones, however, as I said, I have never used root to create data. I honestly thought that creating some .txt or .csv file to be saved as nto root files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:337,integrability,event,events,337,"Hey again,. I think it is a big problem, because I and some colleagues are using the snapshot method to save the root files so later one we will plot from them, however, if many events are not recorded accordingly, our root files are also be wring, this issue costed me a few months and many people don't even recognize they are missing events since they have not used alternative methods to save and plot. Many people wont be using the column list to save all the columns because we save many columns,. And it is appreciated if there is an error stating the consequences at least. I have told you the name of the datasets I have used earlier and the problematic ones, however, as I said, I have never used root to create data. I honestly thought that creating some .txt or .csv file to be saved as nto root files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:541,performance,error,error,541,"Hey again,. I think it is a big problem, because I and some colleagues are using the snapshot method to save the root files so later one we will plot from them, however, if many events are not recorded accordingly, our root files are also be wring, this issue costed me a few months and many people don't even recognize they are missing events since they have not used alternative methods to save and plot. Many people wont be using the column list to save all the columns because we save many columns,. And it is appreciated if there is an error stating the consequences at least. I have told you the name of the datasets I have used earlier and the problematic ones, however, as I said, I have never used root to create data. I honestly thought that creating some .txt or .csv file to be saved as nto root files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:541,safety,error,error,541,"Hey again,. I think it is a big problem, because I and some colleagues are using the snapshot method to save the root files so later one we will plot from them, however, if many events are not recorded accordingly, our root files are also be wring, this issue costed me a few months and many people don't even recognize they are missing events since they have not used alternative methods to save and plot. Many people wont be using the column list to save all the columns because we save many columns,. And it is appreciated if there is an error stating the consequences at least. I have told you the name of the datasets I have used earlier and the problematic ones, however, as I said, I have never used root to create data. I honestly thought that creating some .txt or .csv file to be saved as nto root files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:541,usability,error,error,541,"Hey again,. I think it is a big problem, because I and some colleagues are using the snapshot method to save the root files so later one we will plot from them, however, if many events are not recorded accordingly, our root files are also be wring, this issue costed me a few months and many people don't even recognize they are missing events since they have not used alternative methods to save and plot. Many people wont be using the column list to save all the columns because we save many columns,. And it is appreciated if there is an error stating the consequences at least. I have told you the name of the datasets I have used earlier and the problematic ones, however, as I said, I have never used root to create data. I honestly thought that creating some .txt or .csv file to be saved as nto root files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:91,performance,time,time,91,"To be saved as root files and later read again as rdf and saved as snapshot shouldnt be so time taking for a root programmer. I really want to help but I don't know how, since you don't have access to the data I have used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:191,security,access,access,191,"To be saved as root files and later read again as rdf and saved as snapshot shouldnt be so time taking for a root programmer. I really want to help but I don't know how, since you don't have access to the data I have used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:143,usability,help,help,143,"To be saved as root files and later read again as rdf and saved as snapshot shouldnt be so time taking for a root programmer. I really want to help but I don't know how, since you don't have access to the data I have used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:53,availability,error,errors,53,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:82,availability,error,error,82,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:203,availability,error,error,203,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:857,availability,Error,Error,857,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:987,availability,avail,available,987,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1087,availability,error,error,1087,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1450,availability,error,error,1450,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1456,integrability,messag,messages,1456,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1456,interoperability,messag,messages,1456,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:53,performance,error,errors,53,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:82,performance,error,error,82,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:203,performance,error,error,203,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:857,performance,Error,Error,857,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1087,performance,error,error,1087,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1450,performance,error,error,1450,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:914,reliability,doe,does,914,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:987,reliability,availab,available,987,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1247,reliability,doe,does,1247,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:53,safety,error,errors,53,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:82,safety,error,error,82,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:203,safety,error,error,203,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:857,safety,Error,Error,857,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:987,safety,avail,available,987,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1087,safety,error,error,1087,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1450,safety,error,error,1450,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1473,safety,except,exception,1473,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:987,security,availab,available,987,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1204,security,sign,signal,1204,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:53,usability,error,errors,53,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:82,usability,error,error,82,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:88,usability,statu,status,88,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:203,usability,error,error,203,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:857,usability,Error,Error,857,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1087,usability,error,error,1087,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1148,usability,statu,status,1148,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1256,usability,support,support,1256,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1450,usability,error,error,1450,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:1514,usability,help,help,1514,"Hi @ShirinGolpayeganiCern ,. RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you? I tried to reproduce the problem but I get a noisy error:. ```cpp. #include <ROOT/RDataFrame.hxx>. int main() {. {. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10). .Define(""x"", [] { return 1; }). .Define(""y"", [] { return 1; }). .Snapshot(""t"", ""f3.root"");. }. ROOT::EnableImplicitMT();. ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});. df.Snapshot(""t"", ""fmerged.root"");. }. ```. yields:. ```. ~/S/w/gh9366 rootcompile repro.cpp && ./repro. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. fish: Job 1, './repro' terminated by signal SIGABRT (Abort). ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:15,availability,error,error,15,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:166,availability,state,stated,166,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:269,availability,error,error,269,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:21,integrability,messag,message,21,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:166,integrability,state,stated,166,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:21,interoperability,messag,message,21,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:15,performance,error,error,15,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:269,performance,error,error,269,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:15,safety,error,error,15,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:76,safety,except,exception,76,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:269,safety,error,error,269,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:405,security,access,access,405,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:15,usability,error,error,15,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:269,usability,error,error,269,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:296,usability,help,help,296,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:446,usability,help,help,446,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error.... I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly? Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:175,availability,error,errors,175,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:108,deployability,version,version,108,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:227,deployability,version,versions,227,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:511,deployability,version,version,511,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:108,integrability,version,version,108,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:193,integrability,event,event,193,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:227,integrability,version,versions,227,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:511,integrability,version,version,511,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:286,interoperability,share,share,286,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:657,interoperability,specif,specify,657,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:108,modifiability,version,version,108,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:227,modifiability,version,versions,227,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:511,modifiability,version,version,511,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:175,performance,error,errors,175,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:42,reliability,diagno,diagnosed,42,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:7,safety,except,exception,7,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:175,safety,error,errors,175,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:257,safety,except,exception,257,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:441,safety,except,exception,441,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:42,testability,diagno,diagnosed,42,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:175,usability,error,errors,175,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:584,usability,support,support,584,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:651,usability,user,users,651,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)? In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:47,availability,error,error,47,"Ah no, my bad sorry, the exception-throwing-on-error is not even in 6.24, it's only in the development branch (and soon will be in v6.26). So what you see is expected (but starting from the next ROOT version you'll also get an exception and a non-zero exit code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:200,deployability,version,version,200,"Ah no, my bad sorry, the exception-throwing-on-error is not even in 6.24, it's only in the development branch (and soon will be in v6.26). So what you see is expected (but starting from the next ROOT version you'll also get an exception and a non-zero exit code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:200,integrability,version,version,200,"Ah no, my bad sorry, the exception-throwing-on-error is not even in 6.24, it's only in the development branch (and soon will be in v6.26). So what you see is expected (but starting from the next ROOT version you'll also get an exception and a non-zero exit code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:200,modifiability,version,version,200,"Ah no, my bad sorry, the exception-throwing-on-error is not even in 6.24, it's only in the development branch (and soon will be in v6.26). So what you see is expected (but starting from the next ROOT version you'll also get an exception and a non-zero exit code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:47,performance,error,error,47,"Ah no, my bad sorry, the exception-throwing-on-error is not even in 6.24, it's only in the development branch (and soon will be in v6.26). So what you see is expected (but starting from the next ROOT version you'll also get an exception and a non-zero exit code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:25,safety,except,exception-throwing-on-error,25,"Ah no, my bad sorry, the exception-throwing-on-error is not even in 6.24, it's only in the development branch (and soon will be in v6.26). So what you see is expected (but starting from the next ROOT version you'll also get an exception and a non-zero exit code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:227,safety,except,exception,227,"Ah no, my bad sorry, the exception-throwing-on-error is not even in 6.24, it's only in the development branch (and soon will be in v6.26). So what you see is expected (but starting from the next ROOT version you'll also get an exception and a non-zero exit code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:47,usability,error,error,47,"Ah no, my bad sorry, the exception-throwing-on-error is not even in 6.24, it's only in the development branch (and soon will be in v6.26). So what you see is expected (but starting from the next ROOT version you'll also get an exception and a non-zero exit code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:40,deployability,version,version,40,So I guess this issue is solved in next version then 🙈,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:40,integrability,version,version,40,So I guess this issue is solved in next version then 🙈,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:40,modifiability,version,version,40,So I guess this issue is solved in next version then 🙈,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:96,availability,error,error,96,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:12,deployability,version,version,12,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:34,deployability,releas,released,34,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:154,deployability,version,version,154,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:118,energy efficiency,current,currently,118,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:12,integrability,version,version,12,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:102,integrability,messag,message,102,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:154,integrability,version,version,154,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:536,integrability,sub,subset,536,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:102,interoperability,messag,message,102,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:12,modifiability,version,version,12,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:154,modifiability,version,version,154,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:96,performance,error,error,96,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:62,safety,except,exception,62,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:96,safety,error,error,96,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:96,usability,error,error,96,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:162,usability,user,users,162,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:271,usability,user,users,271,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:101,availability,error,error,101,"Hi again,. I have only used a subset for now, I will tell other colleagues too,. Thanks for the nice error handling, hopefully no one is gonna have similar experience regarding this matter in future. Thanks for the hard work again,. Best regards. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:30,integrability,sub,subset,30,"Hi again,. I have only used a subset for now, I will tell other colleagues too,. Thanks for the nice error handling, hopefully no one is gonna have similar experience regarding this matter in future. Thanks for the hard work again,. Best regards. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:101,performance,error,error,101,"Hi again,. I have only used a subset for now, I will tell other colleagues too,. Thanks for the nice error handling, hopefully no one is gonna have similar experience regarding this matter in future. Thanks for the hard work again,. Best regards. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:101,safety,error,error,101,"Hi again,. I have only used a subset for now, I will tell other colleagues too,. Thanks for the nice error handling, hopefully no one is gonna have similar experience regarding this matter in future. Thanks for the hard work again,. Best regards. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:101,usability,error,error,101,"Hi again,. I have only used a subset for now, I will tell other colleagues too,. Thanks for the nice error handling, hopefully no one is gonna have similar experience regarding this matter in future. Thanks for the hard work again,. Best regards. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/issues/9366:156,usability,experien,experience,156,"Hi again,. I have only used a subset for now, I will tell other colleagues too,. Thanks for the nice error handling, hopefully no one is gonna have similar experience regarding this matter in future. Thanks for the hard work again,. Best regards. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9366
https://github.com/root-project/root/pull/9367:83,deployability,automat,automatically,83,"> This is just for testing. In this case make it a draft PR. Like this, it doesn't automatically ask for reviewers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9367
https://github.com/root-project/root/pull/9367:75,reliability,doe,doesn,75,"> This is just for testing. In this case make it a draft PR. Like this, it doesn't automatically ask for reviewers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9367
https://github.com/root-project/root/pull/9367:19,safety,test,testing,19,"> This is just for testing. In this case make it a draft PR. Like this, it doesn't automatically ask for reviewers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9367
https://github.com/root-project/root/pull/9367:105,safety,review,reviewers,105,"> This is just for testing. In this case make it a draft PR. Like this, it doesn't automatically ask for reviewers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9367
https://github.com/root-project/root/pull/9367:19,testability,test,testing,19,"> This is just for testing. In this case make it a draft PR. Like this, it doesn't automatically ask for reviewers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9367
https://github.com/root-project/root/pull/9367:83,testability,automat,automatically,83,"> This is just for testing. In this case make it a draft PR. Like this, it doesn't automatically ask for reviewers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9367
https://github.com/root-project/root/pull/9367:105,testability,review,reviewers,105,"> This is just for testing. In this case make it a draft PR. Like this, it doesn't automatically ask for reviewers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9367
https://github.com/root-project/root/pull/9368:8,usability,close,close,8,"You can close this PR, we are already taking care of it: https://github.com/root-project/root/pull/9349/files#diff-03f30bc721fb7eb65916ce4552fb544751ad9dfde16e608227267692c0bc16a4. Whenever you see such warnings in an actively developed part of ROOT you can assume that somebody else will take care of it :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9368
https://github.com/root-project/root/pull/9369:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu18.04/default with flags -Dtmva-sofie=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9369
https://github.com/root-project/root/issues/9370:49,deployability,version,version,49,"@Axel-Naumann, do we still support that compiler version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:49,integrability,version,version,49,"@Axel-Naumann, do we still support that compiler version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:49,modifiability,version,version,49,"@Axel-Naumann, do we still support that compiler version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:27,usability,support,support,27,"@Axel-Naumann, do we still support that compiler version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:135,deployability,version,versions,135,We don't (as we require C++14 these days). And thus @egpbos is correct when stating:. > CMake should not configure successfully on GCC versions below 5 when configuring with -Dtesting=ON.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:105,integrability,configur,configure,105,We don't (as we require C++14 these days). And thus @egpbos is correct when stating:. > CMake should not configure successfully on GCC versions below 5 when configuring with -Dtesting=ON.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:135,integrability,version,versions,135,We don't (as we require C++14 these days). And thus @egpbos is correct when stating:. > CMake should not configure successfully on GCC versions below 5 when configuring with -Dtesting=ON.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:157,integrability,configur,configuring,157,We don't (as we require C++14 these days). And thus @egpbos is correct when stating:. > CMake should not configure successfully on GCC versions below 5 when configuring with -Dtesting=ON.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:105,modifiability,configur,configure,105,We don't (as we require C++14 these days). And thus @egpbos is correct when stating:. > CMake should not configure successfully on GCC versions below 5 when configuring with -Dtesting=ON.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:135,modifiability,version,versions,135,We don't (as we require C++14 these days). And thus @egpbos is correct when stating:. > CMake should not configure successfully on GCC versions below 5 when configuring with -Dtesting=ON.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:157,modifiability,configur,configuring,157,We don't (as we require C++14 these days). And thus @egpbos is correct when stating:. > CMake should not configure successfully on GCC versions below 5 when configuring with -Dtesting=ON.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:105,security,configur,configure,105,We don't (as we require C++14 these days). And thus @egpbos is correct when stating:. > CMake should not configure successfully on GCC versions below 5 when configuring with -Dtesting=ON.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:157,security,configur,configuring,157,We don't (as we require C++14 these days). And thus @egpbos is correct when stating:. > CMake should not configure successfully on GCC versions below 5 when configuring with -Dtesting=ON.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:30,deployability,depend,dependencies,30,4.8 is still mentioned in the dependencies here: https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:67,deployability,instal,install,67,4.8 is still mentioned in the dependencies here: https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:75,deployability,depend,dependencies,75,4.8 is still mentioned in the dependencies here: https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:30,integrability,depend,dependencies,30,4.8 is still mentioned in the dependencies here: https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:75,integrability,depend,dependencies,75,4.8 is still mentioned in the dependencies here: https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:30,modifiability,depend,dependencies,30,4.8 is still mentioned in the dependencies here: https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:75,modifiability,depend,dependencies,75,4.8 is still mentioned in the dependencies here: https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:30,safety,depend,dependencies,30,4.8 is still mentioned in the dependencies here: https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:75,safety,depend,dependencies,75,4.8 is still mentioned in the dependencies here: https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:30,testability,depend,dependencies,30,4.8 is still mentioned in the dependencies here: https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:75,testability,depend,dependencies,75,4.8 is still mentioned in the dependencies here: https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:109,deployability,instal,install,109,We have successfully waited out the issue! ROOT 6.28 already doesn't support 4.8 anymore:. https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:117,deployability,depend,dependencies,117,We have successfully waited out the issue! ROOT 6.28 already doesn't support 4.8 anymore:. https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:117,integrability,depend,dependencies,117,We have successfully waited out the issue! ROOT 6.28 already doesn't support 4.8 anymore:. https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:117,modifiability,depend,dependencies,117,We have successfully waited out the issue! ROOT 6.28 already doesn't support 4.8 anymore:. https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:61,reliability,doe,doesn,61,We have successfully waited out the issue! ROOT 6.28 already doesn't support 4.8 anymore:. https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:117,safety,depend,dependencies,117,We have successfully waited out the issue! ROOT 6.28 already doesn't support 4.8 anymore:. https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:117,testability,depend,dependencies,117,We have successfully waited out the issue! ROOT 6.28 already doesn't support 4.8 anymore:. https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9370:69,usability,support,support,69,We have successfully waited out the issue! ROOT 6.28 already doesn't support 4.8 anymore:. https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9370
https://github.com/root-project/root/issues/9371:97,deployability,depend,dependent,97,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:166,deployability,depend,dependent,166,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:199,energy efficiency,current,currently,199,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
https://github.com/root-project/root/issues/9371:97,integrability,depend,dependent,97,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9371
